name: go-mod-ci

on:
  push:
    branches:
      - master
      - main
      - dev
    tags:
      - 'v*'

env:
  RELEASE_ZIP_FILE_NAME: ux

jobs:
  test-and-build-on-multiple-os:
    name: Test and Build on multiple OS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        include:
          - os: windows-latest
            binary_ext: .exe
    #          - os: ubuntu-latest
    #            binary_ext: ''
    #          - os: macos-latest
    #            binary_ext: ''

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.0-rc.1'

      # 安装平台特定的依赖
      - name: Install C library dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt install gcc pkg-config libwayland-dev libx11-dev libx11-xcb-dev libxkbcommon-x11-dev \
            libgles2-mesa-dev libegl1-mesa-dev libffi-dev libxcursor-dev libvulkan-dev

      - name: Install C library dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install pkg-config vulkan-headers

      - name: Go mod tidy
        run: go mod tidy

      - name: Run tests and checks
        run: |
          go run golang.org/x/tools/gopls/internal/analysis/modernize/cmd/modernize@latest -diff ./...
          go run golang.org/x/tools/gopls/internal/analysis/modernize/cmd/modernize@latest -fix ./...

      - name: Build binary
        run: |
          # 使用矩阵变量构建二进制文件名
          go build .

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: HyperDbg.exe
          path: HyperDbg.exe

  package-and-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test-and-build-on-multiple-os
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.0-rc.1'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.0'

      - name: Install GitHub Changelog Generator
        run: gem install github_changelog_generator

      - name: Generate Changelog
        run: github_changelog_generator --user ${{ github.repository_owner }} --project ${{ github.event.repository.name }} --token ${{ secrets.GITHUB_TOKEN }}

      - name: Create source code archive
        run: zip -r ${{ env.RELEASE_ZIP_FILE_NAME }}-${{ github.ref_name }}.zip . -x '.git/**'

      #      - name: Download all binaries
      #        uses: actions/download-artifact@v4
      #        with:
      #          path: binaries

      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            ${{ env.RELEASE_ZIP_FILE_NAME }}-${{ github.ref_name }}.zip
            HyperDbg.exe
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.tk }}