// Code generated by gengo. DO NOT EDIT.
package HPRDBGCTRL

import (
	"unsafe"
	"github.com/can1357/gengo/gengort"
)

const GengoLibraryName = "HPRDBGCTRL"

var GengoLibrary = gengort.NewLibrary(GengoLibraryName)

type _Int128T = any
type _Uint128T = any
type __NSConstantString = any
type SizeT = uint64
type _BuiltinMsVaList = *byte
type _BuiltinVaList = *byte

var __imp_HyperDbgVmxSupportDetection gengort.PreloadProc

//  Gengo init function.
func init() {
	__imp_HyperDbgVmxSupportDetection = GengoLibrary.ImportNow("HyperDbgVmxSupportDetection")
	__imp_HyperDbgReadVendorString = GengoLibrary.ImportNow("HyperDbgReadVendorString")
	__imp_HyperDbgLoadVmm = GengoLibrary.ImportNow("HyperDbgLoadVmm")
	__imp_HyperDbgUnloadVmm = GengoLibrary.ImportNow("HyperDbgUnloadVmm")
	__imp_HyperDbgInstallVmmDriver = GengoLibrary.ImportNow("HyperDbgInstallVmmDriver")
	__imp_HyperDbgUninstallVmmDriver = GengoLibrary.ImportNow("HyperDbgUninstallVmmDriver")
	__imp_HyperDbgStopVmmDriver = GengoLibrary.ImportNow("HyperDbgStopVmmDriver")
	__imp_HyperDbgInterpreter = GengoLibrary.ImportNow("HyperDbgInterpreter")
	__imp_HyperDbgShowSignature = GengoLibrary.ImportNow("HyperDbgShowSignature")
	__imp_HyperDbgSetTextMessageCallback = GengoLibrary.ImportNow("HyperDbgSetTextMessageCallback")
	__imp_HyperDbgScriptReadFileAndExecuteCommandline = GengoLibrary.ImportNow("HyperDbgScriptReadFileAndExecuteCommandline")
	__imp_HyperDbgContinuePreviousCommand = GengoLibrary.ImportNow("HyperDbgContinuePreviousCommand")
	__imp_HyperDbgCheckMultilineCommand = GengoLibrary.ImportNow("HyperDbgCheckMultilineCommand")
}
func HyperDbgVmxSupportDetection() int32 {
	__res := gengort.CCall0(__imp_HyperDbgVmxSupportDetection.Addr())
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_HyperDbgReadVendorString gengort.PreloadProc

func HyperDbgReadVendorString( *byte) {
	gengort.CCall1(__imp_HyperDbgReadVendorString.Addr(), gengort.MarshallSyscall())
}

var __imp_HyperDbgLoadVmm gengort.PreloadProc

func HyperDbgLoadVmm() int32 {
	__res := gengort.CCall0(__imp_HyperDbgLoadVmm.Addr())
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_HyperDbgUnloadVmm gengort.PreloadProc

func HyperDbgUnloadVmm() int32 {
	__res := gengort.CCall0(__imp_HyperDbgUnloadVmm.Addr())
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_HyperDbgInstallVmmDriver gengort.PreloadProc

func HyperDbgInstallVmmDriver() int32 {
	__res := gengort.CCall0(__imp_HyperDbgInstallVmmDriver.Addr())
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_HyperDbgUninstallVmmDriver gengort.PreloadProc

func HyperDbgUninstallVmmDriver() int32 {
	__res := gengort.CCall0(__imp_HyperDbgUninstallVmmDriver.Addr())
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_HyperDbgStopVmmDriver gengort.PreloadProc

func HyperDbgStopVmmDriver() int32 {
	__res := gengort.CCall0(__imp_HyperDbgStopVmmDriver.Addr())
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_HyperDbgInterpreter gengort.PreloadProc

func HyperDbgInterpreter(Command *byte) int32 {
	__res := gengort.CCall1(__imp_HyperDbgInterpreter.Addr(), gengort.MarshallSyscall(Command))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_HyperDbgShowSignature gengort.PreloadProc

func HyperDbgShowSignature() { gengort.CCall0(__imp_HyperDbgShowSignature.Addr()) }

var __imp_HyperDbgSetTextMessageCallback gengort.PreloadProc

func HyperDbgSetTextMessageCallback(handler int32) {
	gengort.CCall1(__imp_HyperDbgSetTextMessageCallback.Addr(), gengort.MarshallSyscall(handler))
}

var __imp_HyperDbgScriptReadFileAndExecuteCommandline gengort.PreloadProc

func HyperDbgScriptReadFileAndExecuteCommandline(argc int32, argv **byte) int32 {
	__res := gengort.CCall2(__imp_HyperDbgScriptReadFileAndExecuteCommandline.Addr(), gengort.MarshallSyscall(argc), gengort.MarshallSyscall(argv))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_HyperDbgContinuePreviousCommand gengort.PreloadProc

func HyperDbgContinuePreviousCommand() int32 {
	__res := gengort.CCall0(__imp_HyperDbgContinuePreviousCommand.Addr())
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_HyperDbgCheckMultilineCommand gengort.PreloadProc

func HyperDbgCheckMultilineCommand(CurrentCommand *byte, Reset int32) int32 {
	__res := gengort.CCall2(__imp_HyperDbgCheckMultilineCommand.Addr(), gengort.MarshallSyscall(CurrentCommand), gengort.MarshallSyscall(Reset))
	return gengort.UnmarshallSyscall[int32](__res)
}
