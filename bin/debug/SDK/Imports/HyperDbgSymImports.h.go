// Code generated by gengo. DO NOT EDIT.
package HPRDBGCTRL

import (
	"unsafe"
	"github.com/can1357/gengo/gengort"
)

const GengoLibraryName = "HPRDBGCTRL"

var GengoLibrary = gengort.NewLibrary(GengoLibraryName)

type _Int128T = any
type _Uint128T = any
type __NSConstantString = any
type SizeT = uint64
type _BuiltinMsVaList = *byte
type _BuiltinVaList = *byte

var __imp_SymSetTextMessageCallback gengort.PreloadProc

//  Gengo init function.
func init() {
	__imp_SymSetTextMessageCallback = GengoLibrary.ImportNow("SymSetTextMessageCallback")
	__imp_SymbolAbortLoading = GengoLibrary.ImportNow("SymbolAbortLoading")
	__imp_SymConvertNameToAddress = GengoLibrary.ImportNow("SymConvertNameToAddress")
	__imp_SymLoadFileSymbol = GengoLibrary.ImportNow("SymLoadFileSymbol")
	__imp_SymUnloadAllSymbols = GengoLibrary.ImportNow("SymUnloadAllSymbols")
	__imp_SymUnloadModuleSymbol = GengoLibrary.ImportNow("SymUnloadModuleSymbol")
	__imp_SymSearchSymbolForMask = GengoLibrary.ImportNow("SymSearchSymbolForMask")
	__imp_SymGetFieldOffset = GengoLibrary.ImportNow("SymGetFieldOffset")
	__imp_SymGetDataTypeSize = GengoLibrary.ImportNow("SymGetDataTypeSize")
	__imp_SymCreateSymbolTableForDisassembler = GengoLibrary.ImportNow("SymCreateSymbolTableForDisassembler")
	__imp_SymConvertFileToPdbPath = GengoLibrary.ImportNow("SymConvertFileToPdbPath")
	__imp_SymConvertFileToPdbFileAndGuidAndAgeDetails = GengoLibrary.ImportNow("SymConvertFileToPdbFileAndGuidAndAgeDetails")
	__imp_SymbolInitLoad = GengoLibrary.ImportNow("SymbolInitLoad")
	__imp_SymShowDataBasedOnSymbolTypes = GengoLibrary.ImportNow("SymShowDataBasedOnSymbolTypes")
	__imp_SymQuerySizeof = GengoLibrary.ImportNow("SymQuerySizeof")
	__imp_SymCastingQueryForFiledsAndTypes = GengoLibrary.ImportNow("SymCastingQueryForFiledsAndTypes")
}
func SymSetTextMessageCallback(Handler int32) int32 {
	__res := gengort.CCall1(__imp_SymSetTextMessageCallback.Addr(), gengort.MarshallSyscall(Handler))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymbolAbortLoading gengort.PreloadProc

func SymbolAbortLoading() int32 {
	__res := gengort.CCall0(__imp_SymbolAbortLoading.Addr())
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymConvertNameToAddress gengort.PreloadProc

func SymConvertNameToAddress(FunctionOrVariableName *byte, WasFound int32) int32 {
	__res := gengort.CCall2(__imp_SymConvertNameToAddress.Addr(), gengort.MarshallSyscall(FunctionOrVariableName), gengort.MarshallSyscall(WasFound))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymLoadFileSymbol gengort.PreloadProc

func SymLoadFileSymbol(BaseAddress int32, PdbFileName *byte, CustomModuleName *byte) int32 {
	__res := gengort.CCall3(__imp_SymLoadFileSymbol.Addr(), gengort.MarshallSyscall(BaseAddress), gengort.MarshallSyscall(PdbFileName), gengort.MarshallSyscall(CustomModuleName))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymUnloadAllSymbols gengort.PreloadProc

func SymUnloadAllSymbols() int32 {
	__res := gengort.CCall0(__imp_SymUnloadAllSymbols.Addr())
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymUnloadModuleSymbol gengort.PreloadProc

func SymUnloadModuleSymbol(ModuleName *byte) int32 {
	__res := gengort.CCall1(__imp_SymUnloadModuleSymbol.Addr(), gengort.MarshallSyscall(ModuleName))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymSearchSymbolForMask gengort.PreloadProc

func SymSearchSymbolForMask(SearchMask *byte) int32 {
	__res := gengort.CCall1(__imp_SymSearchSymbolForMask.Addr(), gengort.MarshallSyscall(SearchMask))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymGetFieldOffset gengort.PreloadProc

func SymGetFieldOffset(TypeName *int32, FieldName *int32, FieldOffset *int32) int32 {
	__res := gengort.CCall3(__imp_SymGetFieldOffset.Addr(), gengort.MarshallSyscall(TypeName), gengort.MarshallSyscall(FieldName), gengort.MarshallSyscall(FieldOffset))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymGetDataTypeSize gengort.PreloadProc

func SymGetDataTypeSize(TypeName *int32, TypeSize *int32) int32 {
	__res := gengort.CCall2(__imp_SymGetDataTypeSize.Addr(), gengort.MarshallSyscall(TypeName), gengort.MarshallSyscall(TypeSize))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymCreateSymbolTableForDisassembler gengort.PreloadProc

func SymCreateSymbolTableForDisassembler(CallbackFunction unsafe.Pointer) int32 {
	__res := gengort.CCall1(__imp_SymCreateSymbolTableForDisassembler.Addr(), gengort.MarshallSyscall(CallbackFunction))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymConvertFileToPdbPath gengort.PreloadProc

func SymConvertFileToPdbPath(LocalFilePath *byte, ResultPath *byte) int32 {
	__res := gengort.CCall2(__imp_SymConvertFileToPdbPath.Addr(), gengort.MarshallSyscall(LocalFilePath), gengort.MarshallSyscall(ResultPath))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymConvertFileToPdbFileAndGuidAndAgeDetails gengort.PreloadProc

func SymConvertFileToPdbFileAndGuidAndAgeDetails(LocalFilePath *byte, PdbFilePath *byte, GuidAndAgeDetails *byte, Is32BitModule int32) int32 {
	__res := gengort.CCall4(__imp_SymConvertFileToPdbFileAndGuidAndAgeDetails.Addr(), gengort.MarshallSyscall(LocalFilePath), gengort.MarshallSyscall(PdbFilePath), gengort.MarshallSyscall(GuidAndAgeDetails), gengort.MarshallSyscall(Is32BitModule))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymbolInitLoad gengort.PreloadProc

func SymbolInitLoad(BufferToStoreDetails int32, StoredLength int32, DownloadIfAvailable int32, SymbolPath *byte, IsSilentLoad int32) int32 {
	__res := gengort.CCall5(__imp_SymbolInitLoad.Addr(), gengort.MarshallSyscall(BufferToStoreDetails), gengort.MarshallSyscall(StoredLength), gengort.MarshallSyscall(DownloadIfAvailable), gengort.MarshallSyscall(SymbolPath), gengort.MarshallSyscall(IsSilentLoad))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymShowDataBasedOnSymbolTypes gengort.PreloadProc

func SymShowDataBasedOnSymbolTypes(TypeName *byte, Address int32, IsStruct int32, BufferAddress int32, AdditionalParameters *byte) int32 {
	__res := gengort.CCall5(__imp_SymShowDataBasedOnSymbolTypes.Addr(), gengort.MarshallSyscall(TypeName), gengort.MarshallSyscall(Address), gengort.MarshallSyscall(IsStruct), gengort.MarshallSyscall(BufferAddress), gengort.MarshallSyscall(AdditionalParameters))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymQuerySizeof gengort.PreloadProc

func SymQuerySizeof(StructNameOrTypeName *int32, UINT32 int32) int32 {
	__res := gengort.CCall2(__imp_SymQuerySizeof.Addr(), gengort.MarshallSyscall(StructNameOrTypeName), gengort.MarshallSyscall(UINT32))
	return gengort.UnmarshallSyscall[int32](__res)
}

var __imp_SymCastingQueryForFiledsAndTypes gengort.PreloadProc

func SymCastingQueryForFiledsAndTypes(StructName *int32, FiledOfStructName *int32, PBOOLEAN int32) int32 {
	__res := gengort.CCall3(__imp_SymCastingQueryForFiledsAndTypes.Addr(), gengort.MarshallSyscall(StructName), gengort.MarshallSyscall(FiledOfStructName), gengort.MarshallSyscall(PBOOLEAN))
	return gengort.UnmarshallSyscall[int32](__res)
}
