// Code generated by gengo. DO NOT EDIT.
package HPRDBGCTRL

import (
	"unsafe"
	"github.com/can1357/gengo/gengort"
)

const GengoLibraryName = "HPRDBGCTRL"

var GengoLibrary = gengort.NewLibrary(GengoLibraryName)

// @brief different modes of reconstruct requests
type ReversingMachineReconstructMemoryMode int32

const (
	REVERSING_MACHINE_RECONSTRUCT_MEMORY_MODE_UNKNOWN     ReversingMachineReconstructMemoryMode = 0
	REVERSING_MACHINE_RECONSTRUCT_MEMORY_MODE_USER_MODE   ReversingMachineReconstructMemoryMode = 1
	REVERSING_MACHINE_RECONSTRUCT_MEMORY_MODE_KERNEL_MODE ReversingMachineReconstructMemoryMode = 2
)

// @brief different types of reconstruct requests
type ReversingMachineReconstructMemoryType int32

const (
	REVERSING_MACHINE_RECONSTRUCT_MEMORY_TYPE_UNKNOWN     ReversingMachineReconstructMemoryType = 0
	REVERSING_MACHINE_RECONSTRUCT_MEMORY_TYPE_RECONSTRUCT ReversingMachineReconstructMemoryType = 1
	REVERSING_MACHINE_RECONSTRUCT_MEMORY_TYPE_PATTERN     ReversingMachineReconstructMemoryType = 2
)

// @brief different types of prealloc requests
type DebuggerPreallocCommandType int32

const (
	DEBUGGER_PREALLOC_COMMAND_TYPE_THREAD_INTERCEPTION DebuggerPreallocCommandType = 0
	DEBUGGER_PREALLOC_COMMAND_TYPE_MONITOR             DebuggerPreallocCommandType = 1
	DEBUGGER_PREALLOC_COMMAND_TYPE_EPTHOOK             DebuggerPreallocCommandType = 2
	DEBUGGER_PREALLOC_COMMAND_TYPE_EPTHOOK2            DebuggerPreallocCommandType = 3
	DEBUGGER_PREALLOC_COMMAND_TYPE_REGULAR_EVENT       DebuggerPreallocCommandType = 4
	DEBUGGER_PREALLOC_COMMAND_TYPE_BIG_EVENT           DebuggerPreallocCommandType = 5
	DEBUGGER_PREALLOC_COMMAND_TYPE_REGULAR_SAFE_BUFFER DebuggerPreallocCommandType = 6
	DEBUGGER_PREALLOC_COMMAND_TYPE_BIG_SAFE_BUFFER     DebuggerPreallocCommandType = 7
)

// @brief different types of preactivate requests
type DebuggerPreactivateCommandType int32

const DEBUGGER_PREACTIVATE_COMMAND_TYPE_MODE DebuggerPreactivateCommandType = 0

// @brief different types of reading memory
type DebuggerReadReadingType int32

const (
	READ_FROM_KERNEL   DebuggerReadReadingType = 0
	READ_FROM_VMX_ROOT DebuggerReadReadingType = 1
)

// @brief different type of addresses
type DebuggerReadMemoryType int32

const (
	DEBUGGER_READ_PHYSICAL_ADDRESS DebuggerReadMemoryType = 0
	DEBUGGER_READ_VIRTUAL_ADDRESS  DebuggerReadMemoryType = 1
)

// @brief the way that debugger should show
// the details of memory or disassemble them
type DebuggerShowMemoryStyle int32

const (
	DEBUGGER_SHOW_COMMAND_DT            DebuggerShowMemoryStyle = 1
	DEBUGGER_SHOW_COMMAND_DISASSEMBLE64 DebuggerShowMemoryStyle = 2
	DEBUGGER_SHOW_COMMAND_DISASSEMBLE32 DebuggerShowMemoryStyle = 3
	DEBUGGER_SHOW_COMMAND_DB            DebuggerShowMemoryStyle = 4
	DEBUGGER_SHOW_COMMAND_DC            DebuggerShowMemoryStyle = 5
	DEBUGGER_SHOW_COMMAND_DQ            DebuggerShowMemoryStyle = 6
	DEBUGGER_SHOW_COMMAND_DD            DebuggerShowMemoryStyle = 7
	DEBUGGER_SHOW_COMMAND_DUMP          DebuggerShowMemoryStyle = 8
)

// @brief test query used for test purposed
type DebuggerTestQueryState int32

const (
	TEST_QUERY_HALTING_CORE_STATUS                                          DebuggerTestQueryState = 1
	TEST_QUERY_PREALLOCATED_POOL_STATE                                      DebuggerTestQueryState = 2
	TEST_QUERY_TRAP_STATE                                                   DebuggerTestQueryState = 3
	TEST_BREAKPOINT_TURN_OFF_BPS                                            DebuggerTestQueryState = 4
	TEST_BREAKPOINT_TURN_ON_BPS                                             DebuggerTestQueryState = 5
	TEST_BREAKPOINT_TURN_OFF_BPS_AND_EVENTS_FOR_COMMANDS_IN_REMOTE_COMPUTER DebuggerTestQueryState = 6
	TEST_BREAKPOINT_TURN_ON_BPS_AND_EVENTS_FOR_COMMANDS_IN_REMOTE_COMPUTER  DebuggerTestQueryState = 7
	TEST_SETTING_TARGET_TASKS_ON_HALTED_CORES_SYNCHRONOUS                   DebuggerTestQueryState = 8
	TEST_SETTING_TARGET_TASKS_ON_HALTED_CORES_ASYNCHRONOUS                  DebuggerTestQueryState = 9
	TEST_SETTING_TARGET_TASKS_ON_TARGET_HALTED_CORES                        DebuggerTestQueryState = 10
	TEST_BREAKPOINT_TURN_OFF_DBS                                            DebuggerTestQueryState = 11
	TEST_BREAKPOINT_TURN_ON_DBS                                             DebuggerTestQueryState = 12
)

// @brief different types of actions on MSRs
type DebuggerMsrActionType int32

const (
	DEBUGGER_MSR_READ  DebuggerMsrActionType = 0
	DEBUGGER_MSR_WRITE DebuggerMsrActionType = 1
)

// @brief different type of addresses for editing memory
type DebuggerEditMemoryType int32

const (
	EDIT_PHYSICAL_MEMORY DebuggerEditMemoryType = 0
	EDIT_VIRTUAL_MEMORY  DebuggerEditMemoryType = 1
)

// @brief size of editing memory
type DebuggerEditMemoryByteSize int32

const (
	EDIT_BYTE  DebuggerEditMemoryByteSize = 0
	EDIT_DWORD DebuggerEditMemoryByteSize = 1
	EDIT_QWORD DebuggerEditMemoryByteSize = 2
)

// @brief different types of address for searching on memory
type DebuggerSearchMemoryType int32

const (
	SEARCH_PHYSICAL_MEMORY              DebuggerSearchMemoryType = 0
	SEARCH_VIRTUAL_MEMORY               DebuggerSearchMemoryType = 1
	SEARCH_PHYSICAL_FROM_VIRTUAL_MEMORY DebuggerSearchMemoryType = 2
)

// @brief different sizes on searching memory
type DebuggerSearchMemoryByteSize int32

const (
	SEARCH_BYTE  DebuggerSearchMemoryByteSize = 0
	SEARCH_DWORD DebuggerSearchMemoryByteSize = 1
	SEARCH_QWORD DebuggerSearchMemoryByteSize = 2
)

// @brief different actions of switchings
type DebuggerAttachDetachUserModeProcessActionType int32

const (
	DEBUGGER_ATTACH_DETACH_USER_MODE_PROCESS_ACTION_ATTACH                                  DebuggerAttachDetachUserModeProcessActionType = 0
	DEBUGGER_ATTACH_DETACH_USER_MODE_PROCESS_ACTION_DETACH                                  DebuggerAttachDetachUserModeProcessActionType = 1
	DEBUGGER_ATTACH_DETACH_USER_MODE_PROCESS_ACTION_REMOVE_HOOKS                            DebuggerAttachDetachUserModeProcessActionType = 2
	DEBUGGER_ATTACH_DETACH_USER_MODE_PROCESS_ACTION_KILL_PROCESS                            DebuggerAttachDetachUserModeProcessActionType = 3
	DEBUGGER_ATTACH_DETACH_USER_MODE_PROCESS_ACTION_PAUSE_PROCESS                           DebuggerAttachDetachUserModeProcessActionType = 4
	DEBUGGER_ATTACH_DETACH_USER_MODE_PROCESS_ACTION_SWITCH_BY_PROCESS_OR_THREAD             DebuggerAttachDetachUserModeProcessActionType = 5
	DEBUGGER_ATTACH_DETACH_USER_MODE_PROCESS_ACTION_QUERY_COUNT_OF_ACTIVE_DEBUGGING_THREADS DebuggerAttachDetachUserModeProcessActionType = 6
)

// @brief different type of process or thread queries
type DebuggerQueryActiveProcessesOrThreadsTypes int32

const (
	DEBUGGER_QUERY_ACTIVE_PROCESSES_OR_THREADS_QUERY_PROCESS_COUNT   DebuggerQueryActiveProcessesOrThreadsTypes = 1
	DEBUGGER_QUERY_ACTIVE_PROCESSES_OR_THREADS_QUERY_THREAD_COUNT    DebuggerQueryActiveProcessesOrThreadsTypes = 2
	DEBUGGER_QUERY_ACTIVE_PROCESSES_OR_THREADS_QUERY_PROCESS_LIST    DebuggerQueryActiveProcessesOrThreadsTypes = 3
	DEBUGGER_QUERY_ACTIVE_PROCESSES_OR_THREADS_QUERY_THREAD_LIST     DebuggerQueryActiveProcessesOrThreadsTypes = 4
	DEBUGGER_QUERY_ACTIVE_PROCESSES_OR_THREADS_QUERY_CURRENT_PROCESS DebuggerQueryActiveProcessesOrThreadsTypes = 5
	DEBUGGER_QUERY_ACTIVE_PROCESSES_OR_THREADS_QUERY_CURRENT_THREAD  DebuggerQueryActiveProcessesOrThreadsTypes = 6
)

// @brief different actions on showing or querying list of process or threads
type DebuggerQueryActiveProcessesOrThreadsActions int32

const (
	DEBUGGER_QUERY_ACTIVE_PROCESSES_OR_THREADS_ACTION_SHOW_INSTANTLY     DebuggerQueryActiveProcessesOrThreadsActions = 1
	DEBUGGER_QUERY_ACTIVE_PROCESSES_OR_THREADS_ACTION_QUERY_COUNT        DebuggerQueryActiveProcessesOrThreadsActions = 2
	DEBUGGER_QUERY_ACTIVE_PROCESSES_OR_THREADS_ACTION_QUERY_SAVE_DETAILS DebuggerQueryActiveProcessesOrThreadsActions = 3
)

// @brief callstack showing method
type DebuggerCallstackDisplayMethod int32

const (
	DEBUGGER_CALLSTACK_DISPLAY_METHOD_WITHOUT_PARAMS DebuggerCallstackDisplayMethod = 0
	DEBUGGER_CALLSTACK_DISPLAY_METHOD_WITH_PARAMS    DebuggerCallstackDisplayMethod = 1
)

// @brief User-mode debugging actions
type DebuggerUdCommandActionType int32

const (
	DEBUGGER_UD_COMMAND_ACTION_TYPE_NONE         DebuggerUdCommandActionType = 0
	DEBUGGER_UD_COMMAND_ACTION_TYPE_PAUSE        DebuggerUdCommandActionType = 1
	DEBUGGER_UD_COMMAND_ACTION_TYPE_CONTINUE     DebuggerUdCommandActionType = 2
	DEBUGGER_UD_COMMAND_ACTION_TYPE_REGULAR_STEP DebuggerUdCommandActionType = 3
)

// @brief Debugger process switch and process details
type DebuggeeDetailsAndSwitchProcessType int32

const (
	DEBUGGEE_DETAILS_AND_SWITCH_PROCESS_GET_PROCESS_DETAILS DebuggeeDetailsAndSwitchProcessType = 0
	DEBUGGEE_DETAILS_AND_SWITCH_PROCESS_GET_PROCESS_LIST    DebuggeeDetailsAndSwitchProcessType = 1
	DEBUGGEE_DETAILS_AND_SWITCH_PROCESS_PERFORM_SWITCH      DebuggeeDetailsAndSwitchProcessType = 2
)

// @brief Debugger thread switch and thread details
type DebuggeeDetailsAndSwitchThreadType int32

const (
	DEBUGGEE_DETAILS_AND_SWITCH_THREAD_PERFORM_SWITCH     DebuggeeDetailsAndSwitchThreadType = 0
	DEBUGGEE_DETAILS_AND_SWITCH_THREAD_GET_THREAD_DETAILS DebuggeeDetailsAndSwitchThreadType = 1
	DEBUGGEE_DETAILS_AND_SWITCH_THREAD_GET_THREAD_LIST    DebuggeeDetailsAndSwitchThreadType = 2
)

// @brief stepping and tracking types
type DebuggerRemoteSteppingRequest int32

const (
	DEBUGGER_REMOTE_STEPPING_REQUEST_STEP_IN                              DebuggerRemoteSteppingRequest = 0
	DEBUGGER_REMOTE_STEPPING_REQUEST_INSTRUMENTATION_STEP_IN              DebuggerRemoteSteppingRequest = 1
	DEBUGGER_REMOTE_STEPPING_REQUEST_INSTRUMENTATION_STEP_IN_FOR_TRACKING DebuggerRemoteSteppingRequest = 2
	DEBUGGER_REMOTE_STEPPING_REQUEST_STEP_OVER                            DebuggerRemoteSteppingRequest = 3
	DEBUGGER_REMOTE_STEPPING_REQUEST_STEP_OVER_FOR_GU                     DebuggerRemoteSteppingRequest = 4
	DEBUGGER_REMOTE_STEPPING_REQUEST_STEP_OVER_FOR_GU_LAST_INSTRUCTION    DebuggerRemoteSteppingRequest = 5
)

// @brief breakpoint modification types
type DebuggeeBreakpointModificationRequest int32

const (
	DEBUGGEE_BREAKPOINT_MODIFICATION_REQUEST_LIST_BREAKPOINTS DebuggeeBreakpointModificationRequest = 0
	DEBUGGEE_BREAKPOINT_MODIFICATION_REQUEST_ENABLE           DebuggeeBreakpointModificationRequest = 1
	DEBUGGEE_BREAKPOINT_MODIFICATION_REQUEST_DISABLE          DebuggeeBreakpointModificationRequest = 2
	DEBUGGEE_BREAKPOINT_MODIFICATION_REQUEST_CLEAR            DebuggeeBreakpointModificationRequest = 3
)

// @brief Whether a jump is taken or not taken
type DebuggerConditionalJumpStatus int32

const (
	DEBUGGER_CONDITIONAL_JUMP_STATUS_ERROR                DebuggerConditionalJumpStatus = 0
	DEBUGGER_CONDITIONAL_JUMP_STATUS_NOT_CONDITIONAL_JUMP DebuggerConditionalJumpStatus = 1
	DEBUGGER_CONDITIONAL_JUMP_STATUS_JUMP_IS_TAKEN        DebuggerConditionalJumpStatus = 2
	DEBUGGER_CONDITIONAL_JUMP_STATUS_JUMP_IS_NOT_TAKEN    DebuggerConditionalJumpStatus = 3
)

type DebuggerReadPageTableEntriesDetails struct {
	VirtualAddress      int32
	ProcessId           int32
	Pml4eVirtualAddress int32
	Pml4eValue          int32
	PdpteVirtualAddress int32
	PdpteValue          int32
	PdeVirtualAddress   int32
	PdeValue            int32
	PteVirtualAddress   int32
	PteValue            int32
	KernelStatus        int32
}
type DebuggerVa2paAndPa2vaCommands struct {
	VirtualAddress     int32
	PhysicalAddress    int32
	ProcessId          int32
	IsVirtual2Physical int32
	KernelStatus       int32
}
type DebuggerPageInRequest struct {
	VirtualAddressFrom int32
	VirtualAddressTo   int32
	ProcessId          int32
	PageFaultErrorCode int32
	KernelStatus       int32
}
type ReversingMachineReconstructMemoryRequest struct {
	ProcessId    int32
	Size         int32
	Mode         ReversingMachineReconstructMemoryMode
	Type         ReversingMachineReconstructMemoryType
	KernelStatus int32
}
type DebuggerDtCommandOptions struct {
	TypeName             *byte
	SizeOfTypeName       int32
	Address              int32
	IsStruct             int32
	BufferAddress        int32
	TargetPid            int32
	AdditionalParameters *byte
}
type DebuggerPreallocCommand struct {
	Type         DebuggerPreallocCommandType
	Count        int32
	KernelStatus int32
}
type DebuggerPreactivateCommand struct {
	Type         DebuggerPreactivateCommandType
	KernelStatus int32
}
type DebuggerReadMemory struct {
	Pid            int32
	Address        int32
	Size           int32
	IsForDisasm    int32
	Is32BitAddress int32
	MemoryType     DebuggerReadMemoryType
	ReadingType    DebuggerReadReadingType
	DtDetails      PdebuggerDtCommandOptions
	Style          DebuggerShowMemoryStyle
	ReturnLength   int32
	KernelStatus   int32
}
type DebuggerFlushLoggingBuffers struct {
	KernelStatus                               int32
	CountOfMessagesThatSetAsReadFromVmxRoot    int32
	CountOfMessagesThatSetAsReadFromVmxNonRoot int32
}
type DebuggerDebuggerTestQueryBuffer struct {
	RequestType  DebuggerTestQueryState
	Context      int32
	KernelStatus int32
}
type DebuggerPerformKernelTests struct {
	KernelStatus int32
}
type DebuggerSendCommandExecutionFinishedSignal struct {
	KernelStatus int32
}
type DebuggeeSendGeneralPacketFromDebuggeeToDebugger struct {
	RequestedAction       int32
	LengthOfBuffer        int32
	PauseDebuggeeWhenSent int32
	KernelResult          int32
}
type DebuggerSendUsermodeMessagesToDebugger struct {
	KernelStatus int32
	Length       int32
}
type DebuggerReadAndWriteOnMsr struct {
	Msr        int32
	CoreNumber int32
	ActionType DebuggerMsrActionType
	Value      int32
}
type DebuggerEditMemory struct {
	Result             int32
	Address            int32
	ProcessId          int32
	MemoryType         DebuggerEditMemoryType
	ByteSize           DebuggerEditMemoryByteSize
	CountOf64Chunks    int32
	FinalStructureSize int32
	KernelStatus       int32
}
type DebuggerSearchMemory struct {
	Address            int32
	Length             int32
	ProcessId          int32
	MemoryType         DebuggerSearchMemoryType
	ByteSize           DebuggerSearchMemoryByteSize
	CountOf64Chunks    int32
	FinalStructureSize int32
}
type DebuggerHideAndTransparentDebuggerMode struct {
	IsHide                               int32
	CpuidAverage                         int32
	CpuidStandardDeviation               int32
	CpuidMedian                          int32
	RdtscAverage                         int32
	RdtscStandardDeviation               int32
	RdtscMedian                          int32
	TrueIfProcessIdAndFalseIfProcessName int32
	ProcId                               int32
	LengthOfProcessName                  int32
	KernelStatus                         int32
}
type DebuggerPrepareDebuggee struct {
	PortAddress         int32
	Baudrate            int32
	NtoskrnlBaseAddress int32
	Result              int32
	OsName              int32
}
type DebuggeeChangeCorePacket struct {
	NewCore int32
	Result  int32
}
type DebuggerAttachDetachUserModeProcess struct {
	IsStartingNewProcess                      int32
	ProcessId                                 int32
	ThreadId                                  int32
	CheckCallbackAtFirstInstruction           int32
	Is32Bit                                   int32
	IsPaused                                  int32
	Action                                    DebuggerAttachDetachUserModeProcessActionType
	CountOfActiveDebuggingThreadsAndProcesses int32
	Token                                     int32
	Result                                    int32
}
type DebuggeeProcessListNeededDetails struct {
	PsActiveProcessHead      int32
	ImageFileNameOffset      int32
	UniquePidOffset          int32
	ActiveProcessLinksOffset int32
}
type DebuggeeThreadListNeededDetails struct {
	ThreadListHeadOffset     int32
	ThreadListEntryOffset    int32
	CidOffset                int32
	PsActiveProcessHead      int32
	ActiveProcessLinksOffset int32
	Process                  int32
}
type DebuggeeProcessListDetailsEntry struct {
	Eprocess      int32
	ProcessId     int32
	Cr3           int32
	ImageFileName [16]int32
}
type DebuggeeThreadListDetailsEntry struct {
	Eprocess      int32
	Ethread       int32
	ProcessId     int32
	ThreadId      int32
	ImageFileName [16]int32
}
type DebuggerQueryActiveProcessesOrThreads struct {
	ProcessListNeededDetails DebuggeeProcessListNeededDetails
	ThreadListNeededDetails  DebuggeeThreadListNeededDetails
	QueryType                DebuggerQueryActiveProcessesOrThreadsTypes
	QueryAction              DebuggerQueryActiveProcessesOrThreadsActions
	Count                    int32
	Result                   int32
}
type DebuggerSingleCallstackFrame struct {
	IsStackAddressValid   int32
	IsValidAddress        int32
	IsExecutable          int32
	Value                 int32
	InstructionBytesOnRip int32
}
type DebuggerCallstackRequest struct {
	Is32Bit       int32
	KernelStatus  int32
	DisplayMethod DebuggerCallstackDisplayMethod
	Size          int32
	FrameCount    int32
	BaseAddress   int32
	BufferSize    int32
}
type UsermodeDebuggingThreadOrProcessStateDetails struct {
	ProcessId int32
	ThreadId  int32
	IsProcess int32
}
type DebuggerEventActionRunScriptConfiguration struct {
	ScriptBuffer                int32
	ScriptLength                int32
	ScriptPointer               int32
	OptionalRequestedBufferSize int32
}
type DebuggerEventRequestBuffer struct {
	EnabledRequestBuffer int32
	RequestBufferSize    int32
	RequstBufferAddress  int32
}
type DebuggerEventRequestCustomCode struct {
	CustomCodeBufferSize        int32
	CustomCodeBufferAddress     int32
	OptionalRequestedBufferSize int32
}
type DebuggerUdCommandAction struct {
	ActionType     DebuggerUdCommandActionType
	OptionalParam1 int32
	OptionalParam2 int32
	OptionalParam3 int32
	OptionalParam4 int32
}
type DebuggerUdCommandPacket struct {
	UdAction                    DebuggerUdCommandAction
	ProcessDebuggingDetailToken int32
	TargetThreadId              int32
	ApplyToAllPausedThreads     int32
	Result                      int32
}
type DebuggeeDetailsAndSwitchProcessPacket struct {
	ActionType            DebuggeeDetailsAndSwitchProcessType
	ProcessId             int32
	Process               int32
	IsSwitchByClkIntr     int32
	ProcessName           [16]int32
	ProcessListSymDetails DebuggeeProcessListNeededDetails
	Result                int32
}
type DebuggeeDetailsAndSwitchThreadPacket struct {
	ActionType            DebuggeeDetailsAndSwitchThreadType
	ThreadId              int32
	ProcessId             int32
	Thread                int32
	Process               int32
	CheckByClockInterrupt int32
	ProcessName           [16]int32
	ThreadListSymDetails  DebuggeeThreadListNeededDetails
	Result                int32
}
type DebuggeeStepPacket struct {
	StepType                  DebuggerRemoteSteppingRequest
	IsCurrentInstructionACall int32
	CallLength                int32
}
type DebuggeeFormatsPacket struct {
	Value  int32
	Result int32
}
type DebuggeeSymbolRequestPacket struct {
	ProcessId int32
}
type DebuggeeBpPacket struct {
	Address           int32
	Pid               int32
	Tid               int32
	Core              int32
	RemoveAfterHit    int32
	CheckForCallbacks int32
	Result            int32
}
type DebuggeeBpListOrModifyPacket struct {
	BreakpointId int32
	Request      DebuggeeBreakpointModificationRequest
	Result       int32
}
type DebuggeeScriptPacket struct {
	ScriptBufferSize    int32
	ScriptBufferPointer int32
	IsFormat            int32
	Result              int32
}
type DebuggeeResultOfSearchPacket struct {
	CountOfResults int32
	Result         int32
}
type DebuggeeRegisterReadDescription struct {
	RegisterID   int32
	Value        int32
	KernelStatus int32
}
type _Int128T = any
type _Uint128T = any
type __NSConstantString = any
type SizeT = uint64
type _BuiltinMsVaList = *byte
type _BuiltinVaList = *byte

// @brief request for !pte command
type PdebuggerReadPageTableEntriesDetails = *DebuggerReadPageTableEntriesDetails

// @brief requests for !va2pa and !pa2va commands
type PdebuggerVa2paAndPa2vaCommands = *DebuggerVa2paAndPa2vaCommands

// @brief requests for the '.pagein' command
type PdebuggerPageInRequest = *DebuggerPageInRequest

// @brief requests for !rev command
type PreversingMachineReconstructMemoryRequest = *ReversingMachineReconstructMemoryRequest

// @brief requests options for dt and struct command
type PdebuggerDtCommandOptions = *DebuggerDtCommandOptions

// @brief requests for the 'prealloc' command
type PdebuggerPreallocCommand = *DebuggerPreallocCommand

// @brief requests for the 'preactivate' command
type PdebuggerPreactivateCommand = *DebuggerPreactivateCommand

// @brief request for reading virtual and physical memory
type PdebuggerReadMemory = *DebuggerReadMemory

// @brief request for flushing buffers
type PdebuggerFlushLoggingBuffers = *DebuggerFlushLoggingBuffers

// @brief request for test query buffers
type PdebuggerDebuggerTestQueryBuffer = *DebuggerDebuggerTestQueryBuffer

// @brief request performing kernel tests
type PdebuggerPerformKernelTests = *DebuggerPerformKernelTests

// @brief request for send a signal that command execution finished
type PdebuggerSendCommandExecutionFinishedSignal = *DebuggerSendCommandExecutionFinishedSignal

// @brief request for send general packets from debuggee to debugger
type PdebuggeeSendGeneralPacketFromDebuggeeToDebugger = *DebuggeeSendGeneralPacketFromDebuggeeToDebugger

// @brief request for send a user-mode message to debugger
type PdebuggerSendUsermodeMessagesToDebugger = *DebuggerSendUsermodeMessagesToDebugger

// @brief request to read or write on MSRs
type PdebuggerReadAndWriteOnMsr = *DebuggerReadAndWriteOnMsr

// @brief request for edit virtual and physical memory
type PdebuggerEditMemory = *DebuggerEditMemory

// @brief request for searching memory
type PdebuggerSearchMemory = *DebuggerSearchMemory

// @brief request for enable or disable transparent-mode
type PdebuggerHideAndTransparentDebuggerMode = *DebuggerHideAndTransparentDebuggerMode

// @brief request to make this computer to a debuggee
type PdebuggerPrepareDebuggee = *DebuggerPrepareDebuggee

// @brief The structure of changing core packet in HyperDbg
type PdebuggeeChangeCorePacket = *DebuggeeChangeCorePacket

// @brief request for attaching user-mode process
type PdebuggerAttachDetachUserModeProcess = *DebuggerAttachDetachUserModeProcess

// @brief The structure of needed information to get the details
// of the process from nt!_EPROCESS and location of needed variables
type PdebuggeeProcessListNeededDetails = *DebuggeeProcessListNeededDetails

// @brief The structure of needed information to get the details
// of the thread from nt!_ETHREAD and location of needed variables
type PdebuggeeThreadListNeededDetails = *DebuggeeThreadListNeededDetails

// @brief The structure showing list of processes (details of each
// entry)
type PdebuggeeProcessListDetailsEntry = *DebuggeeProcessListDetailsEntry

// @brief The structure showing list of threads (details of each
// entry)
type PdebuggeeThreadListDetailsEntry = *DebuggeeThreadListDetailsEntry

// @brief request for query count of active processes and threads
type PdebuggerQueryActiveProcessesOrThreads = *DebuggerQueryActiveProcessesOrThreads

// @brief The structure for saving the callstack frame of one parameter
type PdebuggerSingleCallstackFrame = *DebuggerSingleCallstackFrame

// @brief request for callstack frames
type PdebuggerCallstackRequest = *DebuggerCallstackRequest
type PusermodeDebuggingThreadOrProcessStateDetails = *UsermodeDebuggingThreadOrProcessStateDetails

// @brief Used for run the script
type PdebuggerEventActionRunScriptConfiguration = *DebuggerEventActionRunScriptConfiguration

// @brief used in the case of requesting a "request buffer"
type PdebuggerEventRequestBuffer = *DebuggerEventRequestBuffer

// @brief used in the case of custom code requests to the debugger
type PdebuggerEventRequestCustomCode = *DebuggerEventRequestCustomCode

// @brief Description of user-mode debugging actions
type PdebuggerUdCommandAction = *DebuggerUdCommandAction

// @brief The structure of command packet in uHyperDbg
type PdebuggerUdCommandPacket = *DebuggerUdCommandPacket

// @brief The structure of changing process and show process
// packet in HyperDbg
type PdebuggeeDetailsAndSwitchProcessPacket = *DebuggeeDetailsAndSwitchProcessPacket

// @brief The structure of changing thead and show thread
// packet in HyperDbg
type PdebuggeeDetailsAndSwitchThreadPacket = *DebuggeeDetailsAndSwitchThreadPacket

// @brief The structure of stepping packet in HyperDbg
type PdebuggeeStepPacket = *DebuggeeStepPacket

// @brief The structure of .formats result packet in HyperDbg
type PdebuggeeFormatsPacket = *DebuggeeFormatsPacket

// @brief The structure of .sym reload packet in HyperDbg
type PdebuggeeSymbolRequestPacket = *DebuggeeSymbolRequestPacket

// @brief The structure of bp command packet in HyperDbg
type PdebuggeeBpPacket = *DebuggeeBpPacket

// @brief The structure of breakpoint modification requests packet in HyperDbg
type PdebuggeeBpListOrModifyPacket = *DebuggeeBpListOrModifyPacket

// @brief The structure of script packet in HyperDbg
type PdebuggeeScriptPacket = *DebuggeeScriptPacket

// @brief The structure of result of search packet in HyperDbg
type PdebuggeeResultOfSearchPacket = *DebuggeeResultOfSearchPacket

// @brief Register Descriptor Structure to use in r command.
type PdebuggeeRegisterReadDescription = *DebuggeeRegisterReadDescription

//  Gengo init function.
func init() {
	gengort.Validate((*DebuggerReadPageTableEntriesDetails)(nil), 0x2c, 0x4, "VirtualAddress", 0x0, "ProcessId", 0x4, "Pml4eVirtualAddress", 0x8, "Pml4eValue", 0xc, "PdpteVirtualAddress", 0x10, "PdpteValue", 0x14, "PdeVirtualAddress", 0x18, "PdeValue", 0x1c, "PteVirtualAddress", 0x20, "PteValue", 0x24, "KernelStatus", 0x28)
	gengort.Validate((*DebuggerVa2paAndPa2vaCommands)(nil), 0x14, 0x4, "VirtualAddress", 0x0, "PhysicalAddress", 0x4, "ProcessId", 0x8, "IsVirtual2Physical", 0xc, "KernelStatus", 0x10)
	gengort.Validate((*DebuggerPageInRequest)(nil), 0x14, 0x4, "VirtualAddressFrom", 0x0, "VirtualAddressTo", 0x4, "ProcessId", 0x8, "PageFaultErrorCode", 0xc, "KernelStatus", 0x10)
	gengort.Validate((*ReversingMachineReconstructMemoryRequest)(nil), 0x14, 0x4, "ProcessId", 0x0, "Size", 0x4, "Mode", 0x8, "Type", 0xc, "KernelStatus", 0x10)
	gengort.Validate((*DebuggerDtCommandOptions)(nil), 0x28, 0x8, "TypeName", 0x0, "SizeOfTypeName", 0x8, "Address", 0xc, "IsStruct", 0x10, "BufferAddress", 0x14, "TargetPid", 0x18, "AdditionalParameters", 0x20)
	gengort.Validate((*DebuggerPreallocCommand)(nil), 0xc, 0x4, "Type", 0x0, "Count", 0x4, "KernelStatus", 0x8)
	gengort.Validate((*DebuggerPreactivateCommand)(nil), 0x8, 0x4, "Type", 0x0, "KernelStatus", 0x4)
	gengort.Validate((*DebuggerReadMemory)(nil), 0x38, 0x8, "Pid", 0x0, "Address", 0x4, "Size", 0x8, "IsForDisasm", 0xc, "Is32BitAddress", 0x10, "MemoryType", 0x14, "ReadingType", 0x18, "DtDetails", 0x20, "Style", 0x28, "ReturnLength", 0x2c, "KernelStatus", 0x30)
	gengort.Validate((*DebuggerFlushLoggingBuffers)(nil), 0xc, 0x4, "KernelStatus", 0x0, "CountOfMessagesThatSetAsReadFromVmxRoot", 0x4, "CountOfMessagesThatSetAsReadFromVmxNonRoot", 0x8)
	gengort.Validate((*DebuggerDebuggerTestQueryBuffer)(nil), 0xc, 0x4, "RequestType", 0x0, "Context", 0x4, "KernelStatus", 0x8)
	gengort.Validate((*DebuggerPerformKernelTests)(nil), 0x4, 0x4, "KernelStatus", 0x0)
	gengort.Validate((*DebuggerSendCommandExecutionFinishedSignal)(nil), 0x4, 0x4, "KernelStatus", 0x0)
	gengort.Validate((*DebuggeeSendGeneralPacketFromDebuggeeToDebugger)(nil), 0x10, 0x4, "RequestedAction", 0x0, "LengthOfBuffer", 0x4, "PauseDebuggeeWhenSent", 0x8, "KernelResult", 0xc)
	gengort.Validate((*DebuggerSendUsermodeMessagesToDebugger)(nil), 0x8, 0x4, "KernelStatus", 0x0, "Length", 0x4)
	gengort.Validate((*DebuggerReadAndWriteOnMsr)(nil), 0x10, 0x4, "Msr", 0x0, "CoreNumber", 0x4, "ActionType", 0x8, "Value", 0xc)
	gengort.Validate((*DebuggerEditMemory)(nil), 0x20, 0x4, "Result", 0x0, "Address", 0x4, "ProcessId", 0x8, "MemoryType", 0xc, "ByteSize", 0x10, "CountOf64Chunks", 0x14, "FinalStructureSize", 0x18, "KernelStatus", 0x1c)
	gengort.Validate((*DebuggerSearchMemory)(nil), 0x1c, 0x4, "Address", 0x0, "Length", 0x4, "ProcessId", 0x8, "MemoryType", 0xc, "ByteSize", 0x10, "CountOf64Chunks", 0x14, "FinalStructureSize", 0x18)
	gengort.Validate((*DebuggerHideAndTransparentDebuggerMode)(nil), 0x2c, 0x4, "IsHide", 0x0, "CpuidAverage", 0x4, "CpuidStandardDeviation", 0x8, "CpuidMedian", 0xc, "RdtscAverage", 0x10, "RdtscStandardDeviation", 0x14, "RdtscMedian", 0x18, "TrueIfProcessIdAndFalseIfProcessName", 0x1c, "ProcId", 0x20, "LengthOfProcessName", 0x24, "KernelStatus", 0x28)
	gengort.Validate((*DebuggerPrepareDebuggee)(nil), 0x14, 0x4, "PortAddress", 0x0, "Baudrate", 0x4, "NtoskrnlBaseAddress", 0x8, "Result", 0xc, "OsName", 0x10)
	gengort.Validate((*DebuggeeChangeCorePacket)(nil), 0x8, 0x4, "NewCore", 0x0, "Result", 0x4)
	gengort.Validate((*DebuggerAttachDetachUserModeProcess)(nil), 0x28, 0x4, "IsStartingNewProcess", 0x0, "ProcessId", 0x4, "ThreadId", 0x8, "CheckCallbackAtFirstInstruction", 0xc, "Is32Bit", 0x10, "IsPaused", 0x14, "Action", 0x18, "CountOfActiveDebuggingThreadsAndProcesses", 0x1c, "Token", 0x20, "Result", 0x24)
	gengort.Validate((*DebuggeeProcessListNeededDetails)(nil), 0x10, 0x4, "PsActiveProcessHead", 0x0, "ImageFileNameOffset", 0x4, "UniquePidOffset", 0x8, "ActiveProcessLinksOffset", 0xc)
	gengort.Validate((*DebuggeeThreadListNeededDetails)(nil), 0x18, 0x4, "ThreadListHeadOffset", 0x0, "ThreadListEntryOffset", 0x4, "CidOffset", 0x8, "PsActiveProcessHead", 0xc, "ActiveProcessLinksOffset", 0x10, "Process", 0x14)
	gengort.Validate((*DebuggeeProcessListDetailsEntry)(nil), 0x4c, 0x4, "Eprocess", 0x0, "ProcessId", 0x4, "Cr3", 0x8, "ImageFileName", 0xc)
	gengort.Validate((*DebuggeeThreadListDetailsEntry)(nil), 0x50, 0x4, "Eprocess", 0x0, "Ethread", 0x4, "ProcessId", 0x8, "ThreadId", 0xc, "ImageFileName", 0x10)
	gengort.Validate((*DebuggerQueryActiveProcessesOrThreads)(nil), 0x14, 0x4, "ProcessListNeededDetails", 0x0, "ThreadListNeededDetails", 0x1, "QueryType", 0x4, "QueryAction", 0x8, "Count", 0xc, "Result", 0x10)
	gengort.Validate((*DebuggerSingleCallstackFrame)(nil), 0x14, 0x4, "IsStackAddressValid", 0x0, "IsValidAddress", 0x4, "IsExecutable", 0x8, "Value", 0xc, "InstructionBytesOnRip", 0x10)
	gengort.Validate((*DebuggerCallstackRequest)(nil), 0x1c, 0x4, "Is32Bit", 0x0, "KernelStatus", 0x4, "DisplayMethod", 0x8, "Size", 0xc, "FrameCount", 0x10, "BaseAddress", 0x14, "BufferSize", 0x18)
	gengort.Validate((*UsermodeDebuggingThreadOrProcessStateDetails)(nil), 0xc, 0x4, "ProcessId", 0x0, "ThreadId", 0x4, "IsProcess", 0x8)
	gengort.Validate((*DebuggerEventActionRunScriptConfiguration)(nil), 0x10, 0x4, "ScriptBuffer", 0x0, "ScriptLength", 0x4, "ScriptPointer", 0x8, "OptionalRequestedBufferSize", 0xc)
	gengort.Validate((*DebuggerEventRequestBuffer)(nil), 0xc, 0x4, "EnabledRequestBuffer", 0x0, "RequestBufferSize", 0x4, "RequstBufferAddress", 0x8)
	gengort.Validate((*DebuggerEventRequestCustomCode)(nil), 0xc, 0x4, "CustomCodeBufferSize", 0x0, "CustomCodeBufferAddress", 0x4, "OptionalRequestedBufferSize", 0x8)
	gengort.Validate((*DebuggerUdCommandAction)(nil), 0x14, 0x4, "ActionType", 0x0, "OptionalParam1", 0x4, "OptionalParam2", 0x8, "OptionalParam3", 0xc, "OptionalParam4", 0x10)
	gengort.Validate((*DebuggerUdCommandPacket)(nil), 0x14, 0x4, "UdAction", 0x0, "ProcessDebuggingDetailToken", 0x4, "TargetThreadId", 0x8, "ApplyToAllPausedThreads", 0xc, "Result", 0x10)
	gengort.Validate((*DebuggeeDetailsAndSwitchProcessPacket)(nil), 0x58, 0x4, "ActionType", 0x0, "ProcessId", 0x4, "Process", 0x8, "IsSwitchByClkIntr", 0xc, "ProcessName", 0x10, "ProcessListSymDetails", 0x50, "Result", 0x54)
	gengort.Validate((*DebuggeeDetailsAndSwitchThreadPacket)(nil), 0x60, 0x4, "ActionType", 0x0, "ThreadId", 0x4, "ProcessId", 0x8, "Thread", 0xc, "Process", 0x10, "CheckByClockInterrupt", 0x14, "ProcessName", 0x18, "ThreadListSymDetails", 0x58, "Result", 0x5c)
	gengort.Validate((*DebuggeeStepPacket)(nil), 0xc, 0x4, "StepType", 0x0, "IsCurrentInstructionACall", 0x4, "CallLength", 0x8)
	gengort.Validate((*DebuggeeFormatsPacket)(nil), 0x8, 0x4, "Value", 0x0, "Result", 0x4)
	gengort.Validate((*DebuggeeSymbolRequestPacket)(nil), 0x4, 0x4, "ProcessId", 0x0)
	gengort.Validate((*DebuggeeBpPacket)(nil), 0x1c, 0x4, "Address", 0x0, "Pid", 0x4, "Tid", 0x8, "Core", 0xc, "RemoveAfterHit", 0x10, "CheckForCallbacks", 0x14, "Result", 0x18)
	gengort.Validate((*DebuggeeBpListOrModifyPacket)(nil), 0xc, 0x4, "BreakpointId", 0x0, "Request", 0x4, "Result", 0x8)
	gengort.Validate((*DebuggeeScriptPacket)(nil), 0x10, 0x4, "ScriptBufferSize", 0x0, "ScriptBufferPointer", 0x4, "IsFormat", 0x8, "Result", 0xc)
	gengort.Validate((*DebuggeeResultOfSearchPacket)(nil), 0x8, 0x4, "CountOfResults", 0x0, "Result", 0x4)
	gengort.Validate((*DebuggeeRegisterReadDescription)(nil), 0xc, 0x4, "RegisterID", 0x0, "Value", 0x4, "KernelStatus", 0x8)
}
