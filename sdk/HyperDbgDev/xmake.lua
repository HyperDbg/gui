add_rules("mode.debug", "mode.release")

target("zycore")
set_kind("static")
add_files("hyperdbg/dependencies/zydis/dependencies/zycore/src/*.c")
add_includedirs("hyperdbg/dependencies/zydis/dependencies/zycore/include/", { public = true })
add_includedirs("hyperdbg/include/", { public = true })
add_defines("ZYCORE_STATIC_DEFINE")

target("zydis")
set_kind("static")
add_includedirs("hyperdbg/include/", { public = true })
add_headerfiles("hyperdbg/dependencies/zydis/include/**.h")
add_files("hyperdbg/dependencies/zydis/src/**.c")
add_includedirs("hyperdbg/dependencies/zydis/src/", { public = true })
add_includedirs("hyperdbg/dependencies/zydis/include/", { public = true })
add_includedirs("hyperdbg/include/", { public = true })
add_defines( "ZYDIS_STATIC_DEFINE")
add_deps("zycore")

target("pdbex")
set_kind("static")
set_languages("c++20")
add_headerfiles("hyperdbg/dependencies/pdbex/Source//**.h")
add_files("hyperdbg/dependencies/pdbex/Source//**.cpp")
add_includedirs("hyperdbg/dependencies/pdbex/Source/", { public = true })
add_includedirs("C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\DIA SDK\\include/", { public = true })

target("symbol-parser")
set_kind("static")
add_headerfiles("hyperdbg/symbol-parser/header/**.h")
add_files("hyperdbg/symbol-parser/code/**.cpp")
add_includedirs("hyperdbg/symbol-parser/header/", { public = true })
add_includedirs("hyperdbg/symbol-parser/", { public = true })
add_includedirs("hyperdbg/dependencies/", { public = true })
add_includedirs("hyperdbg/include/", { public = true })
add_deps("pdbex")
add_links("user32")

target("script-engine")
set_kind("static")
add_headerfiles("hyperdbg/script-engine/header/**.h")
add_files("hyperdbg/script-engine/code/**.c")
add_includedirs("hyperdbg/script-engine/header/", { public = true })
add_includedirs("hyperdbg/script-engine/", { public = true })
add_includedirs("hyperdbg/dependencies/", { public = true })
add_includedirs("hyperdbg/include/", { public = true })
add_deps("symbol-parser")

target("hprdbgctrl")
set_kind("static")
add_headerfiles("hyperdbg/hprdbgctrl/header/*.h")
add_files("hyperdbg/hprdbgctrl/code/**.cpp")
add_includedirs("hyperdbg/hprdbgctrl/", { public = true })
add_includedirs("hyperdbg/hprdbgctrl/header/", { public = true })
add_includedirs("hyperdbg/dependencies/", { public = true })
add_includedirs("hyperdbg/dependencies/phnt/", { public = true })
add_includedirs("hyperdbg/include/", { public = true })
add_deps("zydis", "script-engine")

target("hyperdbg-test")
set_kind("binary")
add_headerfiles("hyperdbg/hyperdbg-test/header/**.h")
add_files("hyperdbg/hyperdbg-test/code/**.cpp")
add_files("hyperdbg/hyperdbg-test/code/**.asm")
add_includedirs("hyperdbg/hyperdbg-test/header/", { public = true })
add_includedirs("hyperdbg/hyperdbg-test/", { public = true })
add_includedirs("hyperdbg/dependencies/", { public = true })
add_includedirs("hyperdbg/include/", { public = true })
add_deps("hprdbgctrl")

--target("hyperdbg-cli")
--set_kind("binary")
--add_deps("hprdbgctrl")
--add_files("hyperdbg/hyperdbg-cli/**.cpp")
--add_includedirs("hyperdbg/include/", { public = true })
--add_includedirs("hyperdbg/dependencies/", { public = true })

target("kdserial")
add_rules("wdk.static", "wdk.env.kmdf")
add_headerfiles("hyperdbg/kdserial/**.h")
add_files("hyperdbg/kdserial/**.c")
add_includedirs("hyperdbg/kdserial/", { public = true })
add_defines("MANIFEST=NO", "MAP", "FAcs")

target("hprdbghv")
add_rules("wdk.driver", "wdk.env.kmdf")
add_headerfiles("hyperdbg/hprdbghv/header/**.h")
add_files("hyperdbg/hprdbghv/code/**.c", { rule = "wdk.tracewpp" })
add_files("hyperdbg/script-eval/code/**.c", { rule = "wdk.tracewpp" })
add_files("hyperdbg/hprdbghv/code/**.asm")
add_includedirs("hyperdbg/hprdbghv/header/", { public = true })
add_includedirs("hyperdbg/script-eval/header/", { public = true })
add_includedirs("hyperdbg/script-eval/", { public = true })
add_includedirs("hyperdbg/hprdbghv/", { public = true })
add_includedirs("hyperdbg/dependencies/", { public = true })
add_includedirs("hyperdbg/include/", { public = true })
add_defines("MANIFEST=NO", "MAP", "FAcs")
add_deps("kdserial")
