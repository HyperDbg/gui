1
 if (@rsp << @rdi << @r13 ^ @r9 << @r13 >> @rdx >> @rdi ^ @r12 ^ @rbp & @r9 ; $proc + 0x12 & $teb << 0y1001 ^ @r11 << @r13 >> @rax >> @r8 ^ 0n17 >> +@r11)  { test_statement(0x1916); } elsif ((@rdi) ^ @rdx >> $buffer | $thread ^ -@rdx ^ (@rdx) | $ip & @r12 == (@rdi) ^ @rdx >> $buffer | $thread ^ -@rdx ^ (@rdx) | $ip & @r12) { test_statement(0xF71); } elsif ($teb >> @rbx >= $proc & 0y1011 & @rsp | @r12 ^ $buffer ^ 6 | 17 | @rdx | $teb) { test_statement(0x2590); } else { test_statement(0x2398); }
$error$
$end$
2
 if (@rsp + @rax << $buffer >> -@r13 << ~~@r11 >> @r13 & $teb << 0x4 >> @rbp & $proc >> 0n2 | @rbp << @r11 >> $thread & @r9 >> $proc | @rsp >> @r11 < @rsp + @rax << $buffer >> -@r13 << ~~@r11 >> @r13 & $teb << 0x4 >> @rbp & $proc >> 0n2 | @rbp << @r11 >> $thread & @r9 >> $proc | @rsp >> @r11)  { test_statement(0x238B); } elsif (@r8 << 0xA & @rbx >> 0xE ^ 0x4 >> ~@r13 | $thread >> @rbp | 0n12 & 0n14 > @r9 << @rax >> @rdi ^ $teb & 0n1 | @r13) { test_statement(0xDF); } elsif (@r12 ^ 0x0 & +@rbp ; 1 >> @r12 & @r9) { test_statement(0x25C6); } elsif ((13) ^ $thread ^ @r12 | (@rsi) == 3) { test_statement(0x14AA); } else { test_statement(0x18A3); }
$error$
$end$
3
 if (@r9 + @r9 << @rbx << ~@r11 >> 13 << +$ip | @rdx >> $thread ^ 0y10000 & $teb & @r12 ^ @r12 | @rbx | $proc & @rsp ^ @rbx ^ @rsi(0n14 >> +22 << @rdi | @r12 >> $ip | $proc)  { test_statement(0x2660); } elsif (@rax << @rbx >> @r8 & @rbp ; @rdi << ~@r9 ^ @r9 ^ @rsp | $proc >> @r13 & @r13 & @r8) { test_statement(0x448); } elsif (@r12 & $proc & 0x9 > @rsp & $buffer | @rbp & @rdi) { test_statement(0x1424); }
$error$
$end$
4
 if (@rbp + $ip ^ @rdi(@rdi + (~@rsp) << ~@r8 >> (@r9) << @rsi >> @r8)  { test_statement(0x2255); } elsif (@rsi >> +@r13 >> @r11 & @r11 >> @rdx | @rax & $teb & 0y10011 | 22 & @rax ^ @rbp ^ @rdi | @r8((@rsi >> +@r13 >> @r11 & @r11 >> @rdx | @rax & $teb & 0y10011 | 22 & @rax ^ @rbp ^ @rdi | @r8) { test_statement(0x1959); } elsif ($buffer >> @rdi & 0n18 & (@rax) | $ip & @rax ^ 0x0 | @rsp $buffer >> @rdi & 0n18 & (@rax) | $ip & @rax ^ 0x0 | @rsp) { test_statement(0x231D); } else { test_statement(0x7D9); }
$error$
$end$
5
 if (0n5 >> @rsp << 23 & $ip >> @rdx & +@r10 >> @r11 $teb >> @rbx << (@r10) ^ @r8 << -@rsi >> @rdx ^ ~$buffer >> @r10 & @r10 & ~@rbp)  { test_statement(0x1D70); }
$error$
$end$
7
 if (@rbx + @rbp & @rdi >> @rbx ^ @rdi << @rdx >> @r12 >> @r10 ^ @r9 >> +@rdx & @r11 & @rbx ^ $buffer | @rsi >< @r8 << @r12 >> -$ip | @rbp & @r11)  { test_statement(0x3C8); } else { test_statement(0x15C1); }
$error$
$end$
8
 if ($proc + @rsp >> 0y10010 ^ 0x3 > $proc + @rsp >> 0y10010 ^ 0x3)  { test_statement(0x408); } elsif (@r11 << @r8 >> +@r13 & @rsp ^ 4 ^ $teb ^ $buffer ^ 20 | @rbx >> @rax & $thread >< 0x12 & @r13 >> @r12) { test_statement(0x2F1); }
$error$
$end$
9
 if ($buffer + $teb & @rdx & $thread >> 0x7 ^ 14 << @rsp >> $ip ^ ~$thread >> 0n8 ^ 0y110 ^ @r10)@r10 | 0x10 >> ($proc) ^ $ip & @rdi ^ 0x8 & 0y1010 | 0x3 >> @rsp & @rax & @rax ^ @r13)  { test_statement(0x1576); } elsif (@rbp & @r13 & @r12 & @r9))4 ^ @r8 & ~@rdx & @r11 ^ @rax) { test_statement(0x214C); } else { test_statement(0x2302); }
$error$
$end$
10
 if (@rbx & @r12 << 0y1110 != @rbp + 0x12 & $proc << @r11 ^ ($thread) >> $teb & @rdx & 0n4 & @rdi)  { test_statement(0x1A94); } elsif (@rdx >> +@rsp >> 0y10010 & @r11 & @rsp == 0 & 0y10 >> $proc) { test_statement(0xED2); }
$error$
$end$
11
 if (@rsi >> @rsp >> -@rbp & @r12 << @r11 >> @r10 ^ @rsi ^ $proc >> -$ip ^ @rbx & 0y1101 ; 10 + @r12 << @rax & @rax << 21 >> $proc >> @r8 | @rsi << $teb)  { test_statement(0xEF); } else { test_statement(0x1F7F); }
$error$
$end$
12
 if (@r10 + @rbx ; $proc + @rax << @r10 << 15 >> 0y10010 >> @r8 ^ @rbp << @r13 >> ~+@r13 | @rbp << @rbp >> 0n18 ^ @rdi ^ ~@rax ^ $ip)  { test_statement(0xF18); } elsif (@rdx << $teb & @r13 ^ @rbx | @r10 ^ -$teb & $proc ^ @r11 == @rdx << $teb & @r13 ^ @rbx | @r10 ^ -$teb & $proc ^ @r11) { test_statement(0x39); } elsif (@rsi ^ @rax & -@r10 | $proc ^ (@r12) ^ @rdx | @rbp ^ @rdi | @rbp | 0n13((0n11 >> @rdx & 0n10 & @rsp ^ $proc ^ @r11 ^ $proc) { test_statement(0x1B72); } else { test_statement(0xA1C); }
$error$
$end$
13
 if (@rbp + @r13 << 0y10011 >> @rbp & $ip << @rdi & @rdx >> $teb ; 0y1011 + @r9 ^ $thread >> ~@r11 >> @rbx & $thread >> 0y1101)  { test_statement(0x177C); } else { test_statement(0x55); }
$error$
$end$
14
 if (@r9 $buffer + $proc ^ @r12 << @rdx | @r13 << @r12 ^ 0n2 & 0x8 & @r13)  { test_statement(0xDE2); }
$error$
$end$
15
 if ($thread + +0y111 >> @r8 << @r12 | $proc >> @r9 ^ @rbx >> @rsi | @rdi >> @rsi | @rdi >< $thread + +0y111 >> @r8 << @r12 | $proc >> @r9 ^ @rbx >> @rsi | @rdi >> @rsi | @rdi)  { test_statement(0x810); }
$error$
$end$
16
 if (@rbx + @rax << 0n15 << @rsi((@rbx + @rax << 0n15 << @rsi)  { test_statement(0x15FF); } else { test_statement(0xE9D); }
$error$
$end$
17
 if (@r10 + $thread & @r11 >> +@r9 >> @r11 & @rsp | $buffer << +@r8 >> $proc >> @rbp | (0x7) >> $ip | @rsp | $ip | @rbx | @r9 != @rbx + (@r10) << @r9 << 0y1001 & $proc & @rbp >> @r10 | @rdx ^ @rsp >> $teb ^ @rsp & @rdi)  { test_statement(0x155F); } else { test_statement(0x6B5); }
$error$
$end$
18
 if ((@rax) + @rax << +@r12 >> @r8 >> @rax)@r13 + $thread << 0n0 << 0n15 & @r10 << (-@rbx) ^ $ip << ~~1 >> @rsp & $proc >> @r11 & @rsi ^ 0y10011)  { test_statement(0x110F); }
$error$
$end$
19
 if (0n0 & +$ip >> @r13 >> 16((0n0 & +$ip >> @r13 >> 16)  { test_statement(0xC74); }
$error$
$end$
20
 if (0n9 & @rdi >> @r10 & $teb | @rbp << 0y10000 & @rsi ^ @r12 & @rdi((0n9 & @rdi >> @r10 & $teb | @rbp << 0y10000 & @rsi ^ @r12 & @rdi)  { test_statement(0x1495); } else { test_statement(0x914); }
$error$
$end$
21
 if (@rbp << 12 >> @r9 >> @r9 & $proc >> 0xA & @r13 & (@rbp) & @r10 ^ $ip >> +0y111 ^ 0x12 >> @r13 & @r12 | $teb << $buffer >> @rdi >> 0x3 & @r9 >> $buffer & 0xF ^ 0x12 | @rdx >> ~$proc | @rdx ^ $proc | @rbp ^ $buffer < @rbp << 12 >> @r9 >> @r9 & $proc >> 0xA & @r13 & (@rbp) & @r10 ^ $ip >> +0y111 ^ 0x12 >> @r13 & @r12 | $teb << $buffer >> @rdi >> 0x3 & @r9 >> $buffer & 0xF ^ 0x12 | @rdx >> ~$proc | @rdx ^ $proc | @rbp ^ $buffer)  { test_statement(0x1DB2); } elsif ($thread << @rdx >> @r10 >> @r12 & 0n14 >> 0n7 & $teb & (0x2) ^ @rax >> @rsi & @rdx ^ ~~0xD | @r9 & +$thread ^ @r13 & @rax ^ @r8(($thread << @rdx >> @r10 >> @r12 & 0n14 >> 0n7 & $teb & (0x2) ^ @rax >> @rsi & @rdx ^ ~~0xD | @r9 & +$thread ^ @r13 & @rax ^ @r8) { test_statement(0x1F32); } else { test_statement(0x1A4); }
$error$
$end$
22
 if (@r8 & @r10 << $buffer & 0x9 & ~0y1000 ^ 0y10010 << $ip >> @r11 & @rdi & @rbp | @rdx >> @r11 >> (0n0) & $thread >> $teb & @rsp | @r11 >> @r12 & $teb ^ @rsp ^ $teb | ~0y1111 & @r9 ^ 0y10001 ^ @rsi <> @r8 & @r10 << $buffer & 0x9 & ~0y1000 ^ 0y10010 << $ip >> @r11 & @rdi & @rbp | @rdx >> @r11 >> (0n0) & $thread >> $teb & @rsp | @r11 >> @r12 & $teb ^ @rsp ^ $teb | ~0y1111 & @r9 ^ 0y10001 ^ @rsi)  { test_statement(0xAC0); } elsif ((-@r8) << -@rbx >> @rdi & +@r12 >> 20 & @rdi @rsp >> @rsp & $buffer >> 0n19) { test_statement(0xAB3); } else { test_statement(0x168); }
$error$
$end$
23
 if ($thread + +@r10 >> +0n6 >> @rax >> @rdx ^ @rbp << @rdx & @rdi >> $ip & @r8 & @r11 >= 20 ^ @rdx >> @r11 >> 16)  { test_statement(0x1B17); } elsif (@rdi >> 0n11 & (@r9) >> @rbp & ((0y10011)) & 12 ^ 0x5 >> @rdx ^ @rbx & $teb((@rdi >> 0n11 & (@r9) >> @rbp & ((0y10011)) & 12 ^ 0x5 >> @rdx ^ @rbx & $teb) { test_statement(0x892); } else { test_statement(0x1D89); }
$error$
$end$
24
 if (@rsi >> 0n5 >> 0n6 & @rsp >> @r8 & @r10 ^ @rsi >> @rax ^ $teb & @rbx & @rbp > $ip << $thread << $proc & @rsp << -0n9 >> @rsp | @rbp & @r8 >> +@rsp ^ @rsi ^ 0x6 & @r11 ^ ~@r10 ^ 0y10 | @r12 >> $proc & 0n13 & $teb)  { test_statement(0x22D3); } elsif (~@rbp << @r10 >> @rbx | $ip & (13) & @rax >= +22 << $proc & 0x7 >> $thread & @r11 & 0y10011 ^ @rdx ^ +@rbp | @r12 ^ @rsi & @r11 | @rdx | @r12 | $thread) { test_statement(0x198E); }
$error$
$end$
25
 if (0xD << @rbp << @rdi >> $buffer & $proc & @rdx & @r10 ^ @r13 << $proc & $buffer & $proc | @r9 << @rdx >> @rsp >> 0y1011)0xD << @rbp << @rdi >> $buffer & $proc & @rdx & @r10 ^ @r13 << $proc & $buffer & $proc | @r9 << @rdx >> @rsp >> 0y1011)  { test_statement(0x1E7B); } else { test_statement(0x219E); }
$error$
$end$
26
 if ($buffer + $thread << ~0n6 << $teb >> ~@rsi << 0y110 ^ -+$thread >> @r13 >> @rax & 22 & -+$thread ^ $proc >> @rdi & $buffer & @r9 ^ @rdi & $teb ^ $teb != $buffer >> @r12 << @rax & 0n11 ^ @rbx & $proc & 0x12 & @r11 ^ -0n1 & (@rdx))  { test_statement(0x20A0); } else { test_statement(0x608); }
$error$
$end$
27
 if (@rbx << 0 << $ip ^ @rbp << ($teb) & 0n10 >> ~0n7 | 0xB << +@r11 | $teb ^ $ip ^ $thread == $proc >> @rdi >> +@r11 >> $teb & @rdx << 21 >> @rsi & 1 >> 0x4 ^ 0x7 >> @r9 >> @rsi | @rsp >> @r12 >> @r10 ^ $proc)  { test_statement(0x1177); } elsif (((@rbp)) << @rdi & $buffer ^ @rbp >> ($ip) < @r13 >> @r13 ^ @r8 ^ ~$thread & 0n9 | @rbx & 0x8 & @rax ^ @r8) { test_statement(0x20AD); } elsif (($ip) >> @r9 & @r11 & @rsi ^ @rdx & @rax | (0x3) & 0y1 | @rax ^ @rsi((($ip) >> @r9 & @r11 & @rsi ^ @rdx & @rax | (0x3) & 0y1 | @rax ^ @rsi) { test_statement(0x25F8); }
$error$
$end$
28
 if ($teb + @r8 << $thread @rsp + @rbx >> 16 << @r10 | @r11 >> @r10 >> -@r12 & $thread >> 0xC)  { test_statement(0x20F); } elsif (@rbx << $thread >> @r8 | @r10 | @r11 > 0x9 << @rsp >> @r9 & 0x0 >> @rax ^ +@r12 >> @r10 & @rax ^ ~22 | 0x9 >> -@rbp | @rsi & +@rsi) { test_statement(0x1957); } elsif (@r9 >> @rbp & $thread & @rdx == @rdx >> @r13 ^ ~@r11) { test_statement(0xB18); } elsif (0n13 ^ $teb ^ @rbx | 0n16 ^ 0n1 > 0n13 ^ $teb ^ @rbx | 0n16 ^ 0n1) { test_statement(0x1161); } elsif (@rsi | @rsi | @rbx >< @r13) { test_statement(0x2FF); } elsif (0x8 > 0x8) { test_statement(0x2599); } elsif (0xF)~~@rsp) { test_statement(0x16C); }
$error$
$end$
29
 if (@r9 + ~@rdx >> @r8 >> $teb & @r9 << +$teb <> @r9 + ~@rdx >> @r8 >> $teb & @r9 << +$teb)  { test_statement(0x184B); } elsif (@r9 & @r8 >> 22 ^ @rdi >> ~$proc & @r10 ^ @rsi ^ $teb ^ @rdi | 10 >> @r12 <> @r13 ^ $thread & 3 & 0y1110 | @rsp >> $teb | @rbp & 0y111 | $teb ^ -(@rsi)) { test_statement(0x25F9); } elsif ($thread | @rbp <> 2 ^ @rax & @rsi ^ @rbx ^ @rax) { test_statement(0x12FD); }
$error$
$end$
30
 if (0y1010 & @rbp >> +@r12 >> @rdi & @rsi >> 0n8 & @rbx & 23 | 0y0 >> @r12 ^ $thread >> @r11 & @r9 & $ip >= $proc + @r10 << @r12 | @r8 >> @rsp >> @rdi & 23 >> @rdi ^ @r10 & @r10 & $thread | @rsp | $teb ^ @rax)  { test_statement(0xA6); } else { test_statement(0x1723); }
$error$
$end$
31
 if (@rdx + $proc << @r9 << @rax >> $buffer >> @rax >> +@rbx & 0y110 << $teb((@rbp + ~$proc << @r10 << +@r8)  { test_statement(0x1254); } elsif (@r9 ^ @rsp & @r10 & @r13 ^ @rbp ^ @r11 ^ @r12 ; ~$teb >> @rdx >> @r11 ^ @r10 >> ~@rbp & @r13 & $teb | ((@rsi)) >> $thread & @r13 ^ $teb & 22 ^ ~@rbx | $buffer) { test_statement(0xA18); } else { test_statement(0x2665); }
$error$
$end$
32
 if (@rdx << 0x8 << @r8 >> @r8 << @r13 >> @r9 >> @rbx ^ @r11 << @r8 & 0n15 | @r9 << @r9 >> 0y1010 & $ip >> $proc & @rdi ^ @r12 ^ 1 != @rdx << 0x8 << @r8 >> @r8 << @r13 >> @r9 >> @rbx ^ @r11 << @r8 & 0n15 | @r9 << @r9 >> 0y1010 & $ip >> $proc & @rdi ^ @r12 ^ 1)  { test_statement(0x4EE); }
$error$
$end$
33
 if (0xB + 12 & +0xB << $ip & $proc >> @rbp >= 0xB + 12 & +0xB << $ip & $proc >> @rbp)  { test_statement(0x164F); } elsif (3 | @r10 & $thread ^ 0y10001 & ~@r12 ^ 0x5 ^ @r12 < 3 | @r10 & $thread ^ 0y10001 & ~@r12 ^ 0x5 ^ @r12) { test_statement(0x2333); }
$error$
$end$
34
 if (@r12 >> 16 >> (@rbx) >< @r12 >> 16 >> (@rbx))  { test_statement(0x1E3D); } elsif (+$ip >> @r9 & @r10 >> @rdi & ~+@rsp ^ @rax >> @r8 ^ +@rbx & $thread ^ 0y10001 ^ @rsp | @rbp >> -+@rsi | $thread ^ 0n17 | @rsi ^ 0y10010 | @r13 | @rbx ! @rdx) { test_statement(0x21AB); } elsif (@rdx >> 0x11 ^ $buffer & @rdi <> $proc ^ @r10 & @rsp ^ @r12 | (@r9) ^ $ip ^ @r9 | $ip) { test_statement(0x16CB); }
$error$
$end$
35
 if (@rsi + @rdi << @r11 << ~@rsi & @r8 = @rsi + @rdi << @r11 << ~@rsi & @r8)  { test_statement(0xCE1); } elsif ((@rdi) << $buffer & $buffer >> +@r9 & @r10 & $proc ! @rsp << -@r9 >> $buffer & @r11 ^ $thread >> @rax & $ip ^ $proc ^ @r12 ^ @r10) { test_statement(0x15F2); } elsif (@r12 & $teb & @rbx | @r10 ^ @rbx))~$teb ^ 0x6 ^ @rbp | @r12 | -@r8 ^ @rbx) { test_statement(0x2086); } else { test_statement(0x879); }
$error$
$end$
36
 if ($thread + @rdx << @r13 << @rdx >> @rbx & $proc << (@rbp) ^ ~0x11 | @rbx >> $ip & $buffer & @r8 | @rsp >> 6 & $proc & -@r12 = @r9 << @rdi << @r10 >> @rax >> @rdx & $thread << @r12 | @rsi << @r8 >> @r11 >> 0n14 ^ @rax)  { test_statement(0x2238); } elsif ($proc << @r12 >> @r13 ^ -23 >> @r9 ^ @r8 & $buffer ^ @rbx $proc << @r12 >> @r13 ^ -23 >> @r9 ^ @r8 & $buffer ^ @rbx) { test_statement(0x74A); }
$error$
$end$
37
 if (@r8 & 0xD << +@rbx = @r8 & 0xD << +@rbx)  { test_statement(0x19E9); } elsif (@rax >> @rsi & 0x5 & @rdi & @r8 ^ 0y11 >> @r12 & @rdi ; @rax >> @rsi & 0x5 & @rdi & @r8 ^ 0y11 >> @r12 & @rdi) { test_statement(0xA65); } elsif (-$teb >> -(@r13) | @rbx & @r12 | @rdx ^ $thread | @r12 | $proc((@rdi >> @rsi & 0n9 & 6) { test_statement(0x170A); } elsif (@rbx & @rax <= 0x7 & 0y110 | @r12) { test_statement(0x4BC); }
$error$
$end$
38
 if (@rsp << @r9 << $buffer & $thread << @r13 & 2 | @rdi >> @r9 & @r10 ^ 13 >> @r11 & 12 ^ @r11 & @rsp | @r8 & $teb <> @rsp << @r9 << $buffer & $thread << @r13 & 2 | @rdi >> @r9 & @r10 ^ 13 >> @r11 & 12 ^ @r11 & @rsp | @r8 & $teb)  { test_statement(0x1A37); } elsif (@rdi << 0n12 & @rdi >> @rsi & (@r13) & @rdi | +@r10 & @r8 & 0x2 ^ @r9 | @r11 | @rsp > @rbp << $proc >> @rsp | @rax ^ @rsp & $thread | (@r13)) { test_statement(0x83D); }
$error$
$end$
39
 if (0n16 + 2 ^ ($thread) << @r8 >> 0xA ^ 0n15 >> @r9 | 0n8 >> ~@r11 & @r10 <= @rsi + 0n10 >> (@r8) >> ($proc) ^ 0x10 ^ @r9 >> -@rbp ^ -@r11 ^ $teb ^ @r10 | $thread)  { test_statement(0x1208); } elsif (@rbp << @rdx >> @rax >< @rbp << @rdx >> @rax) { test_statement(0x3E6); } elsif (@rax ^ -@r13 | @r11 & @r10 | -(@rdi) ^ @rsi | (@rbp) > @rax ^ -@r13 | @r11 & @r10 | -(@rdi) ^ @rsi | (@rbp)) { test_statement(0x271); }
$error$
$end$
40
 if (+$teb + $buffer << 0y1001 >> 0y1011 >> (@rdi) | -$buffer << $thread | @r8 | -23 ^ $proc ^ 0y10000 ! +$teb + $buffer << 0y1001 >> 0y1011 >> (@rdi) | -$buffer << $thread | @r8 | -23 ^ $proc ^ 0y10000)  { test_statement(0x228E); }
$error$
$end$
41
 if (0y1010 + @rdx >> $thread >> @rbx >> $teb & @r10 & @r11))$proc + $thread << $teb >> 0x7 << @rsp | @rbp >> @rax ^ @r9 >> 0n2 ^ @rbx & $teb | @rbx ^ $proc & @r8 | +$teb & $ip ^ $proc ^ 0x9 | @rbp ^ @rbx)  { test_statement(0x747); } else { test_statement(0x1008); }
$error$
$end$
42
 if (~@rdx + 0y100 << @r8 << @rdi | 0 >> @r13 ^ 0y10000 & @rdi & @rsp ! @rsi + @r8 ^ @r8 << ~0n15 >> $thread | @rax & @r9 >> 0y101 & 0n2)  { test_statement(0xFA9); } else { test_statement(0x1297); }
$error$
$end$
43
 if (@rax << $thread & 0n19 << @r9 >> @r9 | +$teb ^ 0x5 & @rdx ^ @rsp & @r13 <> @rax << $thread & 0n19 << @r9 >> @r9 | +$teb ^ 0x5 & @rdx ^ @rsp & @r13)  { test_statement(0x28B); }
$error$
$end$
44
 if (@rbx + 0n1 << $teb >> @rdx << @r12 & -@rsi << 0x7 >> @r13 >> @r10 & ($thread) & -$thread & @rdi >< $thread)  { test_statement(0x8A4); } else { test_statement(0xFCF); }
$error$
$end$
45
 if (0x6 + @rax << @rdi >> @r13 & (@r8) & $thread >> $ip >= $thread >> 0x13 >> $proc >> @r11 & $buffer >> $buffer & $proc >> 0x7)  { test_statement(0x10D7); } elsif (0y10000 & @r10 ^ @rsp & @rdx < @rbx << 11 >> @rbp & @r12 >> $ip ^ @rbp ^ @rbx | @rsi >> @rsp | 13 ^ $ip ^ $ip | -@r13 | 0y100 | +@rdi) { test_statement(0x238); }
$error$
$end$
46
 if (@rsp + @rbp >> -0x10 & @rax << @r11 >> @rbx >> $buffer | @r13 >> ~@rbp ^ 0n6 & @rdx & 0n12 ^ $thread ^ $ip ^ @rsp | @rsi >> $teb & @rbp & @rbp | $ip & $ip > @rsp + @rbp >> -0x10 & @rax << @r11 >> @rbx >> $buffer | @r13 >> ~@rbp ^ 0n6 & @rdx & 0n12 ^ $thread ^ $ip ^ @rsp | @rsi >> $teb & @rbp & @rbp | $ip & $ip)  { test_statement(0x209E); }
$error$
$end$
47
 if (@r8 + @r11 >> @rsi >> -(@rbx) | @r9 << @r9 >> @r13 >> 0y10000 | @rbx & @r9 & @r9(@r10 >> @r11 << @rdx & @rax << @rax >> $buffer & 0xD ^ $thread & 0n16 & 0y111 & +@r10 ^ $thread & -@rbp & @rsp)  { test_statement(0x1D85); } elsif ($teb << +@r10 >> @r11 & ~@r9 & (@rsp) | 0xF & -@rbx & 0x11 ^ ~(0y101) ^ $ip | 1 ^ $proc | @rbp ^ @r9 | @r9 >< $teb << +@r10 >> @r11 & ~@r9 & (@rsp) | 0xF & -@rbx & 0x11 ^ ~(0y101) ^ $ip | 1 ^ $proc | @rbp ^ @r9 | @r9) { test_statement(0x97D); } else { test_statement(0x434); }
$error$
$end$
48
 if (0y1111 + @rsp >> 0y10001 << @rdx >> @rbx >> @rsp ^ @rbp & @rsp >> $proc ^ @rax >> @r8 ^ @r8 & @r10 == @rsp ^ ~@rax << 0y10010 & 6 >> $ip & @rsi & $thread ^ @rax ^ (@rbx) & @r12 ^ @r12 | -@rsp << @rax >> @rdx)  { test_statement(0x25D1); }
$error$
$end$
49
 if ($teb + 0n6 >> 12 >> $buffer >> @r13 | @rsi & +@rbp >= @rdx | $ip << @r9 & 0x9 >> 0x2 & $teb)  { test_statement(0x19BC); } elsif (@rax >> @rax & @rsi ^ @rbp & @rdx & $buffer >= @rax << @rdi & @r9 >> @rsp ^ +0y1010 >> @r11 & $proc) { test_statement(0x14F3); } elsif (@rsi | @rbx | $thread ^ 0y110 | @rdi))@r13 >> @rsi & @r9 & 21 | 0n1 ^ @r13 ^ 0x13) { test_statement(0xE1E); } elsif ($teb & @rsp ^ @rsi = ~-$buffer) { test_statement(0xF8D); } else { test_statement(0x2709); }
$error$
$end$
50
 if (0x7 + ~2 << $thread << $teb >> $teb << @rdx >> ~@r9 & @r12 << -@r13 | @r8 << @r10 & @rsi >> +$thread & @r10 & @r8 ^ 0n3 >> 0y1100 | $ip ^ @rsp | @rdx & @r13 != @rsi >> @r11 << @rdx >> @rdi >> @rdi & @rax << @r12 >> 0y1110)  { test_statement(0x23EA); } elsif (0x9 << @rbx ^ @r10 & @r11 0x9 << @rbx ^ @r10 & @r11) { test_statement(0x1C44); } elsif ($teb ^ @rsi ^ 0xF(@rsp & (~@rbx) ^ @r12 & $proc ^ (@r8)) { test_statement(0x311); } elsif (@rdi ^ @rax))$buffer & $buffer ^ $ip ^ @r12 | @rdx | 0x2 | $ip) { test_statement(0x1E36); } else { test_statement(0x1F33); }
$error$
$end$
51
 if (@r12 << @rsi << @r13 & 0n3 << @r8 >> @r9 >> @rdx ^ @rsi << @rbp >> @rsp ^ 0n5 & $proc <= @r12 << $teb << @r8 >> ~-$proc | (@r8) << @r8 >> @r11 >> @rdx ^ @r9 ^ @rsp & (@r11))  { test_statement(0x22CC); } else { test_statement(0x8B6); }
$error$
$end$
52
 if (@rsi >> @r11 ^ @r9 << @rax & @r8 >> (0xE) & @r10 | @rbp << @r11 >> -@rax >> @rsi ^ 0n14 >> 0y1000 & @r11 = @rsi >> @r11 ^ @r9 << @rax & @r8 >> (0xE) & @r10 | @rbp << @r11 >> -@rax >> @rsi ^ 0n14 >> 0y1000 & @r11)  { test_statement(0xFFE); } elsif (+$buffer & $teb | $buffer >> @r10 & 0y1001 & @r11 | $ip | @r12 ^ 4 <= +$buffer & $teb | $buffer >> @r10 & 0y1001 & @r11 | $ip | @r12 ^ 4) { test_statement(0x869); }
$error$
$end$
53
 if (@rsi + @rdi << $proc << @r13 >> -$ip ^ $teb & @rdx & @rdi ; @rsi + @rdi << $proc << @r13 >> -$ip ^ $teb & @rdx & @rdi)  { test_statement(0x1D2F); }
$error$
$end$
54
 if (@rax + $thread << +~0n9(@r8 + $thread << $teb & @rbp << ($ip) >> @rsi >> @rbx | +$ip << @r13 >> $thread & 0y100 & @r13 ^ @rbx ^ $proc & $ip | $proc >> @r9 & $proc)  { test_statement(0x246A); } elsif (0y10 >> $teb & @r8 & @r10 ^ @rbx >> +@rdx & @r9 | $teb & @rdx & 0x10 ^ $proc | @rbx ^ ~(@rsp) ^ 0x10 | +@r10 ^ @rsi | @r13 >< 0y10 >> $teb & @r8 & @r10 ^ @rbx >> +@rdx & @r9 | $teb & @rdx & 0x10 ^ $proc | @rbx ^ ~(@rsp) ^ 0x10 | +@r10 ^ @rsi | @r13) { test_statement(0x19C7); } else { test_statement(0x16A9); }
$error$
$end$
55
 if (@r11 & $buffer << @rbx >> $thread ^ @rax >> ~@r10 >> 0y1111 & @rdi >> ~$proc | @r13 << $proc | -@rax & @r8 ^ @rsp ^ @rdx ^ @r12 | $teb ^ @rsp)@r11 & $buffer << @rbx >> $thread ^ @rax >> ~@r10 >> 0y1111 & @rdi >> ~$proc | @r13 << $proc | -@rax & @r8 ^ @rsp ^ @rdx ^ @r12 | $teb ^ @rsp)  { test_statement(0x23D1); } else { test_statement(0xAD7); }
$error$
$end$
56
 if (+$thread + 4 << 0n4 << $teb >> @r8 >> @rsi)@rbx >> @rax ^ 0n15 << @r9 >> @r8 >> ($ip) & $buffer ^ @r8 >> @r9 & 0n16 ^ @rdx)  { test_statement(0x1BBC); } elsif (+@rsp << @rdi & @r8 >> -~@r10 | 0n10 >> 0n8 ^ @rax & @r10 ; -@rdx << +@r9 >> ($thread) >> (@rbx) & +~@r11 & +~$proc ^ @r11 ^ @rsp) { test_statement(0x359); } elsif (0y1100 >< @rax >> @r10 ^ (@rdi) & $thread) { test_statement(0xB51); }
$error$
$end$
57
 if (+$teb >> @rax ^ 0n19 & @r13 ^ 0xF >> ~@rdx ^ -@rdx & 0xE | @r12 ^ @rdx >> 20 & @rdi ^ @r10 > +$teb >> @rax ^ 0n19 & @r13 ^ 0xF >> ~@rdx ^ -@rdx & 0xE | @r12 ^ @rdx >> 20 & @rdi ^ @r10)  { test_statement(0x9E7); } else { test_statement(0x1708); }
$error$
$end$
58
 if (-@rax + @r11 & $thread & @r11 >> 6 ^ @rsi >> @r9 >> @rsi @rax + 0y101 & ~+@rsp | @rdx ^ 0n15 | @r9 >> ~@rbx ^ @rbx & +~$teb | 22 & @rdi ^ @r9 | $teb)  { test_statement(0x56C); } elsif ($teb << +@rax >> 0x12 >> @r11 & 12 >> 0x0 & (@r10) & 0x1(@rdi << 0y10010) { test_statement(0x1F94); } elsif (@r12 | +@r13 & 5))@r12 | +@r13 & 5) { test_statement(0x5F3); } else { test_statement(0x5A7); }
$error$
$end$
59
 if (@rbx >> 16 >> $buffer | $ip >> -@r11 >> $thread & ~@rax >> $teb | 0n13 >> @r8 & $thread | -+-@rsi & @rbp ^ @rbp ^ $teb | @r11 >< @rbx >> 16 >> $buffer | $ip >> -@r11 >> $thread & ~@rax >> $teb | 0n13 >> @r8 & $thread | -+-@rsi & @rbp ^ @rbp ^ $teb | @r11)  { test_statement(0x2CA); }
$error$
$end$
60
 if (@rbx << $proc & 0x6 ^ $thread & $buffer ^ 0y10000 >> @rbp & $teb & 0y1110 >< @rbx << $proc & 0x6 ^ $thread & $buffer ^ 0y10000 >> @rbp & $teb & 0y1110)  { test_statement(0x2674); } elsif (0n17 >> ~@rsp >> @r8 & $ip >> $proc & @r9(($buffer ^ $thread >> 6 & @r8 & @r10 ^ @r9 ^ @r9 | @r11 & $ip ^ 0x3 | ~$buffer) { test_statement(0x205C); }
$error$
$end$
61
 if (@rsi + $teb((@r12 + ($teb) >> +@r8 >> @r13 & @rax >> 0x8 >> $ip & $teb >> $ip & @rdx & 0y1110 | @r8 >> @r13 >> @rsi & @r10 | @r8 & 0n4 & 0n7 | $teb ^ @r8)  { test_statement(0x804); } elsif (@rdx <> -@r11 >> ~@rbx | 2 >> +@r12 ^ @rbp ^ @r10 ^ @r10 | $ip & @rsi ^ @r10 ^ -@rbx | $buffer | @rbx) { test_statement(0x1F4); } elsif (@r10 >> @rbp & +$buffer & $thread ^ @rdx & @rsp ^ @rbp ^ 0x2 >< @r11 >> $buffer & @r10) { test_statement(0x2315); } else { test_statement(0x1C79); }
$error$
$end$
62
 if (@rbx + 20 & @r10 ^ 0n10 >> 0n2 & 0n15 & @rax(@rsi << 0n1 >> 0x5 << @rsi | @rax << $ip & 15 ^ ~@r9 >> $ip ^ @r11 ^ (@r12) ^ @r9)  { test_statement(0x21D5); } elsif (@rax >> ~-@r12 >> $teb)@rbp << 0xC >> $buffer >> -@r12 & (@rsp) >> $buffer & @rsp | @rsi >> $ip) { test_statement(0xCFE); } elsif (@r8 >> @rsi & +(@rbx) & $buffer ^ @rbx ^ @rsp ^ 5 >< ~-$teb >> @r9) { test_statement(0xC35); }
$error$
$end$
63
 if (@r11 & $proc << $ip >> @rsp ^ -+@r10 & $proc >> @rdx & -0n16 & @rdi | $teb >> @r12 & @r9 & @rbp & $proc | $thread >> 6 | @rbx & 0n12 | -$buffer | @r8 | $proc >< @r11 & $proc << $ip >> @rsp ^ -+@r10 & $proc >> @rdx & -0n16 & @rdi | $teb >> @r12 & @r9 & @rbp & $proc | $thread >> 6 | @rbx & 0n12 | -$buffer | @r8 | $proc)  { test_statement(0xF9F); } else { test_statement(0x1E25); }
$error$
$end$
64
 if (@r10 + $proc >> @rbx ^ @r8 ^ @rdx & $buffer < @r10 + $proc >> @rbx ^ @r8 ^ @rdx & $buffer)  { test_statement(0x269); }
$error$
$end$
65
 if (@r12 + @rax >> 0xB << +$thread >> +@rsi & @rdx << @rax != @r12 + @rax >> 0xB << +$thread >> +@rsi & @rdx << @rax)  { test_statement(0x15C3); } elsif (0n14 << 0 ^ @r11 >> @rbx & 0y100 >< 23 << @rdx ^ @r12 ^ 0n13 ^ $teb) { test_statement(0x2303); } elsif (@rsi >> @r13 ^ +@rsp ^ 0x12))@r11 ^ 3 ^ @rdx ^ @rsp) { test_statement(0xD44); } elsif ($teb & @r11 ^ 0y1011 ^ 0x0 | $teb ^ @rsi ; @r8 & @r8) { test_statement(0x516); } elsif (@rsi ^ @rsi(-0y1111 ^ @r9 | $ip | @r12) { test_statement(0x1F6B); } elsif (@r11 | 4 > @r10 | @rsp) { test_statement(0x1CFD); }
$error$
$end$
66
 if ((0y10000) + @rdi << $teb ^ $teb << $thread & @rbx >= @r13 + @rsi >> @rax ^ @r9 & @rsi >> @r11 & @r11 & @rbp ^ @rbx >> $teb & @rax | @rbx << @r12 >> ~@r13 >> 3 | @rdx >> $thread)  { test_statement(0x12FB); }
$error$
$end$
67
 if ($thread + $ip >> (@rdi) << $buffer ^ @r10 >> @r13 >> $thread | 0n10 << (@rsi) & 0x9 >> @r13 & @rax & @r11 ^ 0n8 & 0n2 & $teb | @rax >> @r10 & +@r9 ^ @r13 & @rsp > @rsp & -0y10000 << $teb ^ -$ip >> @r9 & $teb >> ~0n3 & @r10 & @rax)  { test_statement(0xC14); } elsif (@rbx << $ip | -@rsp & @rax <= @rbx << $ip | -@rsp & @rax) { test_statement(0x3F9); }
$error$
$end$
68
 if (@rbp & @r10 << @rbp >> @rsp >> ~@rsp ^ @r9 << @rsi >> @rax & $proc | 0x5 << @r13 >> @rdi >> @r10 & --$proc >> @r8 & @r11 & 0y11 ^ @rax | @r9 | @rax & 0xA ^ @r12 | @rax ^ @rdx > @r9 >> 0y0 >> @r11 >> @rbx ^ $teb ^ (0n7) >> @r13 & $ip & @r10)  { test_statement(0x540); } elsif (+@r11 >> @rax ^ @rax ^ $thread > +@r11 >> @rax ^ @rax ^ $thread) { test_statement(0x1603); } else { test_statement(0x1D32); }
$error$
$end$
69
 if (0n12 & $thread >> @r8 >> 7 ; 0x10 + @rbp << +@r8 << +@rdi >> @r11)  { test_statement(0xAFE); }
$error$
$end$
70
 if (0x3 + $proc >> @r12 >> $proc >> @r12 & @rbx << @r11 >> +@rsi >> -$ip | 0x2 >> @rbp >> @r9 & @rdx >> $buffer & -0y1111 | 0n12 >> @rax ^ +~+$buffer & @r12 ^ @r13 ^ @rdi | @rbx & 0x11 ^ $teb ^ 12 | @rax ^ -~~0n12 ; 0x3 + $proc >> @r12 >> $proc >> @r12 & @rbx << @r11 >> +@rsi >> -$ip | 0x2 >> @rbp >> @r9 & @rdx >> $buffer & -0y1111 | 0n12 >> @rax ^ +~+$buffer & @r12 ^ @r13 ^ @rdi | @rbx & 0x11 ^ $teb ^ 12 | @rax ^ -~~0n12)  { test_statement(0xF); }
$error$
$end$
71
 if (0x13 & $teb >> @r11 >> @rdi ^ $thread >> @rsi(@rdx + @rsi << @r11 >> $ip & @r13 >> 0x10 >> @r13 & @rdi >> @r8 & @rbx & 0n3)  { test_statement(0xBA4); }
$error$
$end$
72
 if (-@rdi + 13 >> ~@rsp << @r8 ^ ~$teb << ~(@rsp) >> @r10 >> $ip & 0xB >> @rdi ^ $thread >> @rsp & @rdx & @r8 | $teb >> $ip & 0n3 & $proc & @rsp | (@r13) >> @r11 ^ (@rdi) & @rdi ^ 0y110))-@rdi + 13 >> ~@rsp << @r8 ^ ~$teb << ~(@rsp) >> @r10 >> $ip & 0xB >> @rdi ^ $thread >> @rsp & @rdx & @r8 | $teb >> $ip & 0n3 & $proc & @rsp | (@r13) >> @r11 ^ (@rdi) & @rdi ^ 0y110)  { test_statement(0x137D); } elsif (~@rbx << 0y101 >> 0y1111 & @r8 >> 0xC & (@rbx) & $thread ^ @rdx >> @r9 ! @r10) { test_statement(0x248E); } else { test_statement(0x2391); }
$error$
$end$
73
 if ($thread + @r9 >> 0y1100 >> @rax))$buffer << +23 << @rdx)  { test_statement(0xFB8); } elsif (@rdi | $teb >> @r8 | @rsi ^ $ip | @r11((@rsp << 6 >> $teb ^ @rdx) { test_statement(0x1EC2); } else { test_statement(0x188D); }
$error$
$end$
74
 if (0y10 << @rsi << @rax >> +$ip << @r8 & 0xB ^ @rdi >> @rdi | -@rbp >> $buffer >> $buffer & @rbp & +@rsp & 0n19 <= 0y10 << @rsi << @rax >> +$ip << @r8 & 0xB ^ @rdi >> @rdi | -@rbp >> $buffer >> $buffer & @rbp & +@rsp & 0n19)  { test_statement(0x3C3); } elsif (+$teb << @r11 >> @rsi >> @r13 & @r12 >> @r8 ^ @rdi >> $ip & $buffer & @rdi | @rdi >> +(@r11) ^ @r10 & @r12 >= @rsi & +@rsi >> $thread & @r12 & $thread) { test_statement(0x17D0); }
$error$
$end$
75
 if (@rsp + @r11 >> @r11 & @r11 << @r12 & ~0y10 >> @rsi | @rdx >> 0n9 & $thread ^ @rsp & @r8 ^ (@r12) & $buffer ^ @rdi | @r9 & @rdi & @rdi ^ $teb ^ @r13 < @r11 << @r9 << @rdi >> (@rbx) << @rbx >> @rax & -@rdx)  { test_statement(0x16C2); } elsif ($thread << ~$buffer & $buffer >> @rsp(0 >> @r10 >> @r8 ^ (-$teb) & -@rbp | @rbx >> @r12 & 14 & @r11 | 2 ^ @r8 ^ $ip) { test_statement(0x1363); }
$error$
$end$
76
 if ($ip + $ip << 0x12 << $thread))@rbx + @r11 & $buffer << $ip >> $teb | @rsp << @r13 & @rbx >> ~-+0xC ^ @r9 & $ip ^ 0y1010 & @rdx ^ $ip ^ @rax)  { test_statement(0x197F); }
$error$
$end$
77
 if ($thread & +@r11 & @rax >> @r11 ^ ~@rdi >> @rax <> @r12 + 11)  { test_statement(0x526); } elsif (@rdi << @rsp >> @r8 >> ++@rax & 0n14 ^ 0n11 | @r9 >> -~~@rbp & @r9 & 0n11 ^ @rsi | @r13 & @rsp ^ 0x11 | 0y110 | +~@r9((@rdx & 0y11 >> @rsi) { test_statement(0x65A); }
$error$
$end$
78
 if (@r8 + -+0xB >> @r12 >> 0n5 >> @r13))-0y1011 + @rbx << @rsp | @r10 << @rsi >> @r8 ^ @r13 & @rsp & $buffer ^ 0y101 ^ @r11)  { test_statement(0x1021); }
$error$
$end$
79
 if (@r8 + @r10 << +0y1010 << ~@r8 & $ip & 0n7 >> @rdx & ++@rax > @rsp + @rbx & $buffer << @rdx | @r8 << $proc >> ~@r8 >> @r8)  { test_statement(0x22A1); } elsif (+$teb << @r9 >< @rax << ~0n0 | @r8 >> -@r12 & @rax | @r9 & $teb | ~@r13 ^ @rsi) { test_statement(0x21A9); } else { test_statement(0x971); }
$error$
$end$
80
 if (-@r12 & @rdi >> @r13 >> @rbx & +@r8 >> $proc | 0x5 >> $thread ^ @r11 >> @rsi < @rbx & @rax << 11 >> @rsp >> 20 | @r11 & @r11 & @rdx & @r9 ^ @r9 >> @r13 & @r13 | @rax ^ $thread | @rsp ^ @r13)  { test_statement(0x1E77); } elsif (@rdi != $buffer << @rsi ^ @rsp ^ @r8 & @r8 | $buffer >> @rdi & @rdi ^ @r10 ^ @r12) { test_statement(0x26D0); }
$error$
$end$
81
 if (@r11 + @rax << @r9 << @rdi >> @r9 & $teb << @rbp == 0xD >> +$teb << $buffer >> @rbx >> $buffer & $proc & @r8)  { test_statement(0xB1D); }
$error$
$end$
82
 if ((~0y10011) + @r11 >> @r9 << @r8 & ~0y10000 ^ @rbx & $proc & $teb | @r10 >> @r10 >> @rax ^ 0y1111 & @r8 | @rbp >> $thread & ~$buffer ; -$teb + @r13 ^ ~@r11 ^ @r11 & 0n16 & @r12 ^ $proc)  { test_statement(0x67E); } elsif (($teb) >> @rdi & $buffer ^ @r13 >> 0n8 & @rdi ^ @rbx ^ 0x3 ^ -$proc < ~-$thread << ~-@rsp >> @rsi & @rdi >> @r9 & -@rdi & +@rax) { test_statement(0x1EB4); } else { test_statement(0x1086); }
$error$
$end$
83
 if (@r13 << @r9 < @r13 << @r9)  { test_statement(0x1D6); } elsif (@rbx << @r10 = @rdi & 12 & @r10 | $proc >> 22 ^ @r11) { test_statement(0x100C); }
$error$
$end$
84
 if ((0n6) >> @rdi << @rsi >> ~(@rax) | 0y1101 >> @rax >> $ip & 0x11 ^ @r12 ^ @r8 ^ $proc >< (0n6) >> @rdi << @rsi >> ~(@rax) | 0y1101 >> @rax >> $ip & 0x11 ^ @r12 ^ @r8 ^ $proc)  { test_statement(0x1D42); } elsif (0x5 << -0x1 >> $thread >> @rdx & @r13 & -@r11 ^ $buffer >> @rdi = 0n3 & @rbx >> ~$buffer | (~$thread) | $ip & 4) { test_statement(0x1D7B); } else { test_statement(0x256C); }
$error$
$end$
85
 if (@rsp + ~@rdx << @r8 << @r13 ! @rsp + ~@rdx << @r8 << @r13)  { test_statement(0x167A); } else { test_statement(0x8BE); }
$error$
$end$
86
 if (@r9 + $ip << +@rax >> @rsi << @rbp & $thread >> 0n9 ^ $ip << @r9 & 2 & 0y10011 & (@rsp) ^ @r11 >> @rsi & @rbx & @r8 ^ @rbp & @rax > $proc << $proc)  { test_statement(0x1F40); } elsif (@rdx >> ~$thread & @rdx >> $ip & @r13 & @r9 ^ 0xF >> @r13 ^ @r11 & @r13 < @rdi << @r9 >> $ip >> @r9 ^ 0n0 >> 0y1 ^ @r8 | @rsp >> @r12 & @r13 & @r9 | $proc | @r8) { test_statement(0x236B); }
$error$
$end$
88
 if (@r9 + @r13 << (0x8) >> 0y101 >> (@rdx) >> $teb ^ @r9 << ((@r9)) & @r13 >> $proc((@rsp) ^ 0x1 & 0y1100 | @rsp << 2 >> +($thread))  { test_statement(0x90A); } elsif (@r8 >> @rsi & 3 & -@r10 & $buffer == $ip >> @r12 & @r8 >> $teb & 0x13 & $buffer | @r12 >> (@r10) ^ 14 & $teb | -@r10 | $thread ^ @r8 | @rsi | @rsp) { test_statement(0x14F4); } elsif ($buffer >> @r13 & 21 & $ip ^ @rbx ^ 0n16 ^ 0y10001 | @r13 & $teb ^ 0y10011 | @rdx | @r12))$buffer >> @r13 & 21 & $ip ^ @rbx ^ 0n16 ^ 0y10001 | @r13 & $teb ^ 0y10011 | @rdx | @r12) { test_statement(0x266D); } elsif ((15) ^ 0n18 | $proc ^ @rsi | @r11 < @rbx ^ @r9 | @r10 ^ @rdx) { test_statement(0x10F6); } elsif (@rsi | 0xC))$ip ^ @r10 | @r11) { test_statement(0x2565); } elsif (0n2 != $thread | @rdi) { test_statement(0x370); } else { test_statement(0xC95); }
$error$
$end$
89
 if ($buffer + @rsi << ~@rdi << 0xB((@rdi + 0y11 << 0x6 & 0n13 >> @rdx & $proc & @rbp & $buffer)  { test_statement(0x7FB); } else { test_statement(0x1233); }
$error$
$end$
90
 if (@rsi ^ @r10 << -0y1111 >> @rbx ^ @rsp >> @rbp & @rax ^ @r10 | @r8 << @rbx >> +~@rsp >> @rbx & @rdx >> @r9 | ~@r8 >> ~$teb ^ 0y10010 | @r10 & -~@rbp ^ @r8))0x1 + @rsp << @rdi << 0xA & 0x0 << @rdx & @r11 >> @rsp & -@r11)  { test_statement(0x2407); } elsif (@rbx << ~0n5 >> -++@rsp >> @r10 ^ 0y1011 >> -@rdx ^ +@rdx >< 0n2 & @r8 >> @rax & 0n3) { test_statement(0x1810); } elsif (@r11 ^ $ip & @r10 ^ -(+@r11) ^ 0x1 != $proc & @r8 ^ @rdi | @rax | @r13 | $ip) { test_statement(0x1872); } else { test_statement(0xE87); }
$error$
$end$
91
 if (0x4 + @r10 << $teb << ~+$buffer >> @r11 | @r9 & @rbp ^ 21 | $proc >> @rbp ^ -@r12 ^ $ip ^ -$buffer((@rbx >> +@rsi >> -0y101 >> @rbx | $ip >> @r9 >> $thread)  { test_statement(0x88A); }
$error$
$end$
92
 if (@r9 + 0x4 << @rdx | (0y100) << @rsp & @rbx & @rbp & @rsp ^ 0y101 >> @r11 & @r8 | $teb & 0x12 ^ @rdx & @rbp))@r8 + @r12 >> $buffer & @rdx ^ (@rax) << $thread & +~-$teb ^ @rax & @r8 | @rdx & 0xE >> @r12 | +@r11 >> @r10 ^ $thread ^ 0n17 ^ $buffer)  { test_statement(0x1CE7); } else { test_statement(0x1985); }
$error$
$end$
93
 if (@rdx >> @r8 << @rbp >> @rax >> @rbp((13 + @rbp << @rsi << (@rbx) ^ @r10 << @rbx >> $teb & 0n6 & 0x4 | 0y10010 << 0x10 ^ ~@r13 ^ +0y0 ^ -@rbx | @rbx ^ 0y1110 ^ 0y0 ^ $proc)  { test_statement(0x1E85); }
$error$
$end$
94
 if (@rax & $teb << ~$thread & $teb ^ @rsp ^ @rsi & @r10 | 0y1 ^ @rax >> 21 & 0y100 & $ip ^ @rsp & @r10 | $proc >> @r8 & $proc ^ @r8 & $teb ^ @rsi | @rbx(($buffer << @rdx >> 0y1 << @r13 >> $thread >> @rax ^ @rbx << 0y1000 & 0 ^ -@r12 >> @r10 & $thread & @r12)  { test_statement(0x918); } elsif (0x5 >> $ip >> $buffer & (13) & $proc ^ @rdi ^ @rax & ~@rdx ^ ((@r13)) ^ @rax != 11 << @r8 >> -$proc ^ 1 ^ 12 & 0xB | @rdi >> +$buffer ^ @rdx ^ @r13) { test_statement(0x96F); } elsif ($ip >> $buffer & $proc ^ +@r10 & @rax ^ 0xE ^ 0xC < $ip >> $buffer & $proc ^ +@r10 & @rax ^ 0xE ^ 0xC) { test_statement(0xDA9); }
$error$
$end$
95
 if ((-@rbx) + 0n12 << @rdx ^ 0y1011 >= (-@rbx) + 0n12 << @rdx ^ 0y1011)  { test_statement(0x10B6); } else { test_statement(0x634); }
$error$
$end$
96
 if (@r12 << @rsp | 0n6 << @rbx & $teb >> $buffer & -0xC ^ @r12 ^ +@rdx | (+@rsi) & @r10 != @r10 & $teb << @rsi >> @r8 | 0n9 >> @rax >> @rdx & @rsi >> $teb & +@r8 ^ @r9 & $teb | 0y1110 & +@rbp & 0n14)  { test_statement(0xC1B); } elsif (+@rbp >> $buffer >> (@r12) ^ @rsp >> ~@rbp & 0x7 ^ @rbp))+@rbp >> $buffer >> (@r12) ^ @rsp >> ~@rbp & 0x7 ^ @rbp) { test_statement(0xB76); } elsif (0xA & 0x13 ^ @rdx | @rax & @rdx ^ @r13 ^ 0y1010 <= @rdx ^ -@r13 | (0x4) & 0y1000 | @rsp | $proc) { test_statement(0x157C); } elsif (@r8 & @rsp)(@rsi) | @rsi ^ @rdx | @r8 | 2) { test_statement(0x16); }
$error$
$end$
97
 if (0x7 << @r8 & $thread ^ $teb << $teb ^ @rdx ^ $proc & @r13 ^ 10 | 0n7 >> @rax >> $ip & 0n6 >> -@r12 0n11 & @r11 >> @rbx >> @rsp ^ @rbx & @rax >> 0xF & @r9 & @r13)  { test_statement(0xDBB); } elsif (0n9 << 0y10000 ^ @rdx >> $proc & @r10 & @r13 | ($buffer)($ip << @rbp >> @rdi >> @r12 ^ @r11 >> @r11) { test_statement(0x6A5); }
$error$
$end$
98
 if (@r9 << @rbp << @r11 >> @rbp & 0xD | @r8 >> @rbx >> @rdx | $teb & $thread & @r8 ^ @rax((0n2 + 0x11 << @rdx & 6 & @rsp >> 13 & $ip | 0y1111 >> $ip >> 0y11 ^ @rbx & (@rbp))  { test_statement(0xB17); } elsif ($ip << ~~@r11 >> 0x8 >> @rax & @rbp ^ $thread ^ @r12 ^ @rbx | 0n3 >> @r13 ^ @rsi & 0x0 ^ ~@rbx ^ $ip != $ip << ~~@r11 >> 0x8 >> @rax & @rbp ^ $thread ^ @r12 ^ @rbx | 0n3 >> @r13 ^ @rsi & 0x0 ^ ~@rbx ^ $ip) { test_statement(0x199F); } else { test_statement(0x26BA); }
$error$
$end$
99
 if (@r13 << 0n18 & $teb | @r13 & @r8 & @r12 & 0x5 ^ @r12 >> @rdi & @rbx ^ @r9 & +0n4 | 0y1 >> -@r8 & @r8 ^ @r10 & @rsp)~$buffer >> @r11 << $thread | @r8 << +$proc >> 0xA ^ @r11 >> @r10 & @r12 & 0x1 ^ @r13 & @r11)  { test_statement(0x2208); } elsif ($buffer >> @r13 >> @r10 & @rax >> @rbx <> $buffer >> @r13 >> @r10 & @rax >> @rbx) { test_statement(0x22A5); } elsif (@rbx >> @r9 < @r9 >> $thread & ~$teb & ($proc)) { test_statement(0x1B91); } elsif (@rdi & -0n11 | @rbp ^ @rdi ! @r10 & (@r13)) { test_statement(0xC4E); } elsif (-@rbx | @r11 | @rdi > @r11) { test_statement(0x411); } elsif ($buffer | @rsp ; 16) { test_statement(0x172A); } else { test_statement(0x1651); }
$error$
$end$
100
 if (-0n18 + 0y1111 >> 0n5 | 0n0 << 0y10001(@r10 << @rdi)  { test_statement(0x530); }
$error$
$end$
101
 if (+-@rdx + 0n11 << $thread >> @r12 | @r9 >> @r13 & ++0x0 >> -@rdi & @rbx ^ @r12 >> @rdx >= @rsp >> @rdx ^ 0x4 & $teb & ~@rsi | $thread >> @rax ^ $proc & @r10 & (0n19) ^ @rbp | 0x5)  { test_statement(0x176D); } else { test_statement(0x1276); }
$error$
$end$
102
 if (@r10 & $thread >> $ip >> @r10 & $buffer & -$ip & 6 ^ @r11 >> @r12 & @r8 >> 0y10011 ^ $proc >> @rdi)+@r13 + @rsi)  { test_statement(0x23DD); } else { test_statement(0x2095); }
$error$
$end$
103
 if (0y1011 + @r9 << @r9 & $thread << @rdx & @rdi >> +@rsp ^ 0x6 << $proc >> 7 >> @r9 & 0xA & @r12 | $proc & @rbx & @rax & 17 ^ (@rsi) >> @rbp & @rax & @rsp(@r10 >> @r13 >> 0n13 >> 0n5)  { test_statement(0xD8C); } elsif (@r10 >> @rbp >> @r12 & @rbx ^ @r11 >> (@r8) ^ @r11 & 0n8 ^ 0n8(@r10 >> @rbp >> @r12 & @rbx ^ @r11 >> (@r8) ^ @r11 & 0n8 ^ 0n8) { test_statement(0x2611); }
$error$
$end$
104
 if (0n5 >> (0y1001) << @rsp >> @r8 >> +@r11 == 0n13 + @rax & ~$proc << @rsp >> @rsp & $thread >> $thread ^ @rsp >> @rax >> 0n13 & $buffer >> @r10 | $thread >> @r12 >> @rsi)  { test_statement(0x1DF5); } else { test_statement(0x2007); }
$error$
$end$
105
 if (@r12 + $ip >> 0n13 ^ ~$teb ^ @r12 ^ @r9 & $buffer | @rdx ^ -0y10001 & 0xD & @r9 ^ ~$teb & @rax ^ $thread ^ 17 | @rbx >> @rbx & @rbp & @r10 @r12 + $ip >> 0n13 ^ ~$teb ^ @r12 ^ @r9 & $buffer | @rdx ^ -0y10001 & 0xD & @r9 ^ ~$teb & @rax ^ $thread ^ 17 | @rbx >> @rbx & @rbp & @r10)  { test_statement(0x1497); }
$error$
$end$
106
 if (+@r11 & @r12 << @rdi >> @r13 & @r10 & 0y1110 & $teb | @rsi << @rbp ^ @rsi > (0y10011) << @rbp)  { test_statement(0x13E8); } else { test_statement(0x220F); }
$error$
$end$
107
 if (@r9 + -14 >> $thread >> @rdi >> $ip | 15 << 0n19 & 23 ^ @rsi & @rax((@r9 + -14 >> $thread >> @rdi >> $ip | 15 << 0n19 & 23 ^ @rsi & @rax)  { test_statement(0x25A8); }
$error$
$end$
108
 if ($teb + @r12 << $proc << -+@rsp | @r10 << @r13 >> 10 >> @r9 ^ +$proc & 0n1 & @r10 | +@rsi >> @rsp | @rsi & $ip | @rsp ^ -0y0 | @rsp | @rdi = $ip + @rdi << $proc << $ip ^ @rbx ^ @r12 >> @rdi)  { test_statement(0x1C12); } elsif (@r12 & $ip >> -$ip ^ ~@rdx & +12(@r12 & $ip >> -$ip ^ ~@rdx & +12) { test_statement(0x1E98); } else { test_statement(0x232E); }
$error$
$end$
109
 if (@r9 >> @rax >> @rsp & +0y10010 << -$teb & @rbx >> 0n18 & 0n11 & @r9 ^ @r8 & @r11 >> 12 & $proc & 0y111 <> $proc + @rdi << $buffer << $ip | @rbx & 23 & $proc & @r11 | @rsi ^ $thread & -@r11 ^ @rsi | ~$ip & @rsp)  { test_statement(0x22E9); } elsif (@r9 << @rax & @r12 >> @r8 ^ @rsp ^ $buffer | @r12 >> 0y1001 & @r8 $ip | @r9 >> @rsi ^ -$buffer & @r9 | @r11 | 12) { test_statement(0x114B); } elsif (@r11 >> @rbx | @rax & @r8 | 0n1 <> @r11 >> 0x3 ^ @r11 & 0y100) { test_statement(0x374); } elsif (@rsi & @r8 | $proc ^ @r9 | 0n6)@rbx & $thread ^ @rsi | @rdi) { test_statement(0x1160); } elsif ($buffer ^ @r11 | 0x1(($ip ^ 0n12 | 0xA | 0n14) { test_statement(0x2362); }
$error$
$end$
110
 if (@rbx + @rsp << @rsi | 0xE >> @rsi >> @rbp | 0x4 & @rax & ~$teb ^ +11 & $ip ^ 0xA | $teb & @rbp < 0x13 >> ~0x11)  { test_statement(0x6CF); } elsif (@r12 & ~@rbx >> $thread & @r11 ^ 0x7 & 0n17 | ~@r13 >> @rdx & @rsi & 0x6 ^ @r10 & ~(@rax) != $proc << @rsi ^ +@rbp >> @r12) { test_statement(0x4AD); }
$error$
$end$
111
 if (@r13 >> @r8 << (@rdi) >> 0y101 & @r9 & $teb & @r12 ^ (@r9) | @rdx >> $buffer != $buffer << $thread & 0x13 ^ @rsp << @r12 >> @rdx >> +0y1011 & 0x1 ^ @rbp ^ $teb ^ @rsp | @rsi << @r8 >> 7)  { test_statement(0x159C); } else { test_statement(0x1A9); }
$error$
$end$
112
 if (~$buffer >> (@r9) << @r11 < $teb >> @rsi >> $teb & (-@rax) ^ @rdx << -$thread & $buffer)  { test_statement(0x105E); } elsif (@rdx(+0x4) { test_statement(0x1E3E); } elsif (@rdi & @rbp & ($buffer) ^ @rsp | @rsi & 0x9 ; $thread | -@rax & @rbp ^ @r11) { test_statement(0x374); } elsif (~@rbp ^ +0))0y100 & @r9 ^ @r13 | @r8 | @r8) { test_statement(0x25C); } else { test_statement(0x7B0); }
$error$
$end$
113
 if (@rsi ^ $ip >> @r12 >> 0x6 ^ ~$proc))$proc + $proc << +0x6 >> 0y110)  { test_statement(0x4F9); } elsif (@r10 << $thread >> 0x7 ^ ~~$ip ^ @rdx ^ 0x10 ^ $ip)@r10 << $thread >> 0x7 ^ ~~$ip ^ @rdx ^ 0x10 ^ $ip) { test_statement(0x224D); } elsif (@r10 & @r10 & @r12 ^ (@r10) <= 0x4) { test_statement(0x1AC6); } elsif (@r10 | @r9 ^ -0n15 != @r11 | @r11 ^ @r10) { test_statement(0x13A7); } else { test_statement(0x15F4); }
$error$
$end$
115
 if ($thread << @r12 << @r10 >> @rsi >> @rbx & @rsi << -$ip >> ($thread) >> @r13 & +0y1101 ^ $thread << @r13 >< +@rsp + $teb << 21 | @rdi << @r10 ^ @rdi & $teb & $buffer ^ @rbx & @r9 ^ $proc | $ip | $buffer & ~$ip ^ ((@rax)) | @r8 ^ @r11 | @rsi)  { test_statement(0xDA3); } else { test_statement(0x339); }
$error$
$end$
116
 if (@rbp + 0x0 << 0x6 >> @r13 ^ @rdi & @rdx & 0xE ^ 0x12 & $proc | @rbx | @rsp ^ @r11 & @rsp ^ $proc == @r12 + +$proc ^ @rax << $teb | $teb << 0x2 & @rdi >> $proc | @rdx >> @rsi & @r10 & $ip ^ @rsi & @rsp ^ $ip ^ $proc | 0n15 & @rbp ^ +$proc ^ @r8)  { test_statement(0x8A8); }
$error$
$end$
117
 if (@rdi + 0n13 = @r10 + @r11 & $ip & ~@rbx)  { test_statement(0x16F1); } elsif (($buffer) >> @rsp & @rsi >> +@r12 & @r12 | @r11 >> @r13 ^ 0n8 ^ @r13 ^ 0x4 | (@r8) & @rdi | @rsi ^ $ip | @r8 != ($buffer) >> @rsp & @rsi >> +@r12 & @r12 | @r11 >> @r13 ^ 0n8 ^ @r13 ^ 0x4 | (@r8) & @rdi | @rsi ^ $ip | @r8) { test_statement(0xDAE); }
$error$
$end$
118
 if (@rdx >> @rbx << @rbp & 0x0 << @r11 ^ $buffer >> ($thread) >> 21 ^ $teb >> @r8 & @r8 & @rdx ^ $proc > ~$teb + 0n5 << ~$ip & @rsp & 0y1000 & +$buffer & $teb)  { test_statement(0x1D7A); } elsif (@rbx & $buffer | 0x12 >> 17 ^ +@rbx & @rbp <= @rsp >> @rbp & 0xD >> @r13 ^ @rbx ^ @r9 & $buffer | @r10 >> @r11 & ($proc)) { test_statement(0x66); } else { test_statement(0x2FD); }
$error$
$end$
119
 if (5 ^ @rax & @rdi ^ @rdx ^ @rdx & @rax != 5 ^ @rax & @rdi ^ @rdx ^ @rdx & @rax)  { test_statement(0x12F); } elsif (@r13 << @rbx & @rdx >> @r9 & @rbx & @rdx ^ @r12 ^ @rsi & @rbx ^ $ip ^ @r9))@r9 << @r9 >> @r12 >> 7 & @r8) { test_statement(0xC72); } else { test_statement(0xB41); }
$error$
$end$
120
 if (@r10 + @r10 >> @r13 >> $proc >> $teb ^ $buffer << 0y1000 >> @rbp >> @r8 | 0y10011 << @r9 ^ @r11 >> @rsp & @rbp & $proc == @r10 + @r10 >> @r13 >> $proc >> $teb ^ $buffer << 0y1000 >> @rbp >> @r8 | 0y10011 << @r9 ^ @r11 >> @rsp & @rbp & $proc)  { test_statement(0xDD3); } elsif ($proc ! $proc) { test_statement(0x953); }
$error$
$end$
121
 if (-$ip >> @rbx & @rbp << @rbx >> @rbx == $buffer << 16 & $proc << @rsi & 0x6 >> @r10 ^ $thread | @r10 << @rdi >> @rbp >> @r10 ^ @r11 & @r12 ^ +@rsi ^ -$ip ^ $proc)  { test_statement(0x1E6D); } elsif (+-$proc << -(@r10) >> @r11 >> @r8 ^ @rbp >> $proc ^ $proc ^ ~@rbx ^ $thread = +-$proc << -(@r10) >> @r11 >> @r8 ^ @rbp >> $proc ^ $proc ^ ~@rbx ^ $thread) { test_statement(0x20AB); }
$error$
$end$
122
 if (@rdi << 5 & @r8 << 0x1 & 3 & 0y11 ^ @rdi << @r11))@r12 >> @r10 & -~$teb >> +@r11 >> @rsi ^ @r10 & @rsp | ($buffer))  { test_statement(0x51D); }
$error$
$end$
123
 if (0n11 + @r12 & $proc << @r13 & 0y1 & $buffer & $buffer ; 0n11 + @r12 & $proc << @r13 & 0y1 & $buffer & $buffer)  { test_statement(0x224A); } elsif (~@rbp << ($teb) ^ $ip >> @r9 & (-@rbx) | ~@rdi >> $teb ^ @rbp & @r13 ^ $proc ^ @rax | @rbx & @rbx | @r10 ^ @rax | @r13 | (@r11) ! ~1 << @r12 | $buffer & 0xF) { test_statement(0x2242); } elsif ($thread >> 16 ^ @rdx & 1 ^ $teb ^ @rsi | ($ip) | @r13 ^ @r8 | @rsi | 0x5 = -@r10 >> 0x10 ^ @r9) { test_statement(0x23DB); } elsif (-$teb ^ ~@rdi | 0n18 | @rsi | $ip(-$teb ^ ~@rdi | 0n18 | @rsi | $ip) { test_statement(0x288); } else { test_statement(0x964); }
$error$
$end$
124
 if (~0n12 + ($thread) >> @r13 & 11 << @r12 >> $proc >> @r13 & 0 & 0x1)@rbp + ~@r9 >> @r10 << $teb >> @r9 >> @rdi & @rdx << $buffer ^ ($buffer) << @rdi | @r9 >> $buffer >> 0x0)  { test_statement(0xF92); } else { test_statement(0x6F8); }
$error$
$end$
125
 if ($teb + @r8 >= @rbp << @rdx >> $ip >> @rdi & @rbp >> -@rbx >> $thread & 13 ^ +@rsp >> @rsi >> +@rdi & @rax & @r9 & @r13 ^ $teb)  { test_statement(0x210C); } else { test_statement(0x16BF); }
$error$
$end$
126
 if (@rdi << @rsi << @r12 >> 0x12 >> @rbx >> $teb & $teb & $proc & @r8 & @rsp | @rbp >> $teb >= @rdi << @rsi << @r12 >> 0x12 >> @rbx >> $teb & $teb & $proc & @r8 & @rsp | @rbp >> $teb)  { test_statement(0x921); } elsif ($thread >> 0x5 >> @rsi ^ @rbx ^ 0n9 & (@r9) ! @rsp & 0x6 ^ $ip >> @rbx & 0x11 ^ @rax | @r9 >> $proc & -@r12 ^ @rsp | @rbp & @r11 ^ @r8) { test_statement(0xACD); } elsif (23 & $thread ^ 0x10 ^ $buffer | $buffer ^ 0n3 ^ @rsp | @r8(~@rax >> 0n1 & $thread ^ @r9 ^ @rdi ^ @r11) { test_statement(0x512); }
$error$
$end$
127
 if (@rbx + @rsp >> $teb >> @rsi & 20 << 0y1011 & @r10 >> $buffer & @rbp & @rsp 0n16 << 0x12)  { test_statement(0x1985); } else { test_statement(0x188C); }
$error$
$end$
128
 if ((@rdx) << 0xC << 0n0 >> (0n2) << 0n19 | @rsp >> $thread >> @r8 | -@rsp >> @r8 & @r13 | @rax & 0xB ^ $proc ^ @r8 | @r13 ^ 0n5 | $proc >< @rbp + @rdx >> ~@r12 << 22 >> @r13 >> 0x7 & (+@rbx) << +21)  { test_statement(0x2455); } else { test_statement(0x132); }
$error$
$end$
129
 if (@rdx << @r12 << @rdi & 0xC >> ~@r10 & @r13 >> (@rsi) | @r9 >> @rsi >> ~-(@rdx) ^ @r9 ^ @rdi & @rax | $proc >> @rsp & $thread & $buffer ^ -@rbp & 0n18 | $thread != @r10 + (@rdx) << @rbx << 0y1010 >> $ip << +@rbx & 15 >> -@r10 & @r12 ^ @r13)  { test_statement(0xAF4); } elsif (($proc) << @r11 | 0y100 >> @r10 & @rbx & @rbx ^ @rsi & $teb ^ @r8 ^ @rax >= ($proc) << @r11 | 0y100 >> @r10 & @rbx & @rbx ^ @rsi & $teb ^ @r8 ^ @rax) { test_statement(0x5D1); } elsif (0xF & 0xF & -$proc | @rdi >= 0y10001 >> $buffer & ~@rsp & @rdi | @rbx & 0x9 ^ @rax ^ @r11 | +-0n15 ^ +@r13 | -@rbp) { test_statement(0xC1B); } else { test_statement(0x7DC); }
$error$
$end$
130
 if (~@rdx << @r13 << $thread & @rbp << @rbx >> $ip >> $proc ! ~@rdx << @r13 << $thread & @rbp << @rbx >> $ip >> $proc)  { test_statement(0xCD6); }
$error$
$end$
131
 if (@rax << -@r9 & @rbp << (@rdi) >> @rsi ^ (~$thread) ^ $proc >> @r12 ^ @rbx & @rbp | 0n16 & @r10 & @r9 & @r11 ^ @rbp >> 0x3 & $buffer ^ @r9 > @rbp + 13 ^ $buffer & $teb ^ $thread & @rbx & 0y10011)  { test_statement(0x1005); } elsif (+@r10 << @rbp >> -$thread >> @r11 & ~-$teb >> $buffer & @r12 ^ $proc >> $thread ^ -$teb & @rdi | $proc & $teb & 0y100 ^ @r12 & @r13 ^ @r8 ^ $teb +@r10 << @rbp >> -$thread >> @r11 & ~-$teb >> $buffer & @r12 ^ $proc >> $thread ^ -$teb & @rdi | $proc & $teb & 0y100 ^ @r12 & @r13 ^ @r8 ^ $teb) { test_statement(0x1E4F); }
$error$
$end$
132
 if (@rax + -@r10 << $thread << 0n4 & @r12 << @rdi ^ $ip)@rax + -@r10 << $thread << 0n4 & @r12 << @rdi ^ $ip)  { test_statement(0x1879); } else { test_statement(0x1BC8); }
$error$
$end$
133
 if (@rdx + @rbx << @rdx ^ 0x10 << @r13 ^ @r8 >> $buffer | $teb | @r10 & @rdi | @r11 ^ 0y10001 ; @rdx + @rbx << @rdx ^ 0x10 << @r13 ^ @r8 >> $buffer | $teb | @r10 & @rdi | @r11 ^ 0y10001)  { test_statement(0x1579); } elsif (@rax >> $teb >> 5 ^ @rbx >> $teb | @r8 >> $ip & @r8 & @r8 ^ $thread | $proc((@rsi << $buffer & $teb >> @rbp & @rbx | @r9 >> @rbp & @r12 ^ @r12 | +0n17) { test_statement(0x24A2); } elsif (@r13 >> @r13 & -@rbx & $thread ^ $teb ^ 0y1011 | $teb & @r8 | $buffer((@r13 >> @r13 & -@rbx & $thread ^ $teb ^ 0y1011 | $teb & @r8 | $buffer) { test_statement(0x17AE); } else { test_statement(0x7C6); }
$error$
$end$
134
 if (0n19 + @rbp << @rsp >> @rsp >> @rsi ^ $thread << @r8 >> $thread > $ip + 4 >> -$proc << $buffer & @rsp << @rdx ^ @rsi ^ @r8 & @r11 ^ @r9 & @r8 ^ $ip ^ @rax)  { test_statement(0x9E4); } elsif (@r8 ^ $buffer ^ @rbx ^ @rsp | @r11 & @r13 & @rsp ^ @rbx ^ @rsi | @rbx & @rbx ^ @rsi ^ @r12 <= @rsi << $teb ^ $buffer ^ $teb ^ +~0x9) { test_statement(0x9F); } elsif (@rdx >> $teb & @rbp & @r13 ^ 21 & $proc ^ $proc((0x6 & ($buffer) & @rbx | 0n14 | ~@rsp) { test_statement(0x777); }
$error$
$end$
135
 if (@rdi + @rsi << 0xB >> $ip << @r13 ^ @r10 ^ 0xE 0y11 + @rdi >> -$buffer >> 0n12 & -@rsp)  { test_statement(0x1FCA); } elsif (@r12 >> @rbp >> $proc & 15 >> @r13 & (~@r8) & +(@rsi) | 0n3 ^ @r10 & @rdi | @rbp & $thread ^ -~$thread(+@r8 ^ $buffer >> @r13 & $buffer & @r12 | @r10 >> +7 ^ $thread & $proc ^ @rsi ^ 0y1111 | @r12 ^ 0n10 ^ @r10 | $ip | -0y11 | ~@r9) { test_statement(0x1E1F); } elsif (+0n17 >> 12 ^ 0n8 | -$buffer | $teb | @rdi = @r13) { test_statement(0x1B1A); } elsif (@rbx & @rbp ^ 5 ^ @rbp == @rax & @rdi ^ $proc) { test_statement(0x14CC); }
$error$
$end$
136
 if (@rbp << @rbx << @r12 & ~@r10 << (@rbp) & @rbx >> +(@r9) & @rsi & $buffer == @rsp & @rbx << ($thread) >> @rax ^ @rbp >> 0xF | @rdi | @r11 >> @rdi ^ -@rax & @rsp | $buffer | @r10)  { test_statement(0x19F8); } elsif (@rsi & ($ip) | $teb >> +$buffer & 0x8 | @rsi ^ $proc ^ @r8 | @r11 ^ 22 ! @r10 << @rdi >> @r13 | @rax & $ip) { test_statement(0x1BC5); } else { test_statement(0x3E4); }
$error$
$end$
137
 if (@r11 + @rbp << 0y101 << $ip ^ @r8 << @r8 & $teb ^ (@r9) >> $proc & @rdi | @rsi << (@rbx) = @r8 >> +0n3 << @r11 & @rbx << @rsp)  { test_statement(0x3CD); } elsif (@rbp << @rbp & $teb & $ip & @rbp | $proc >> ~$buffer ^ @r8 ^ @rbx)$ip ^ +@rsi >> @rsi ^ @r13 & @rax ^ @rsp ^ $teb | @rbp) { test_statement(0x13C4); } else { test_statement(0x25BE); }
$error$
$end$
138
 if (@r11 + @rbp << @rdx << ~@rsp >> @r9 & +@r12 << 0n10 >> @r10 >> @r12 > @r11 + @rbp << @rdx << ~@rsp >> @r9 & +@r12 << 0n10 >> @r10 >> @r12)  { test_statement(0x2FC); }
$error$
$end$
139
 if (@r9 + --@r10 & @r9 >> @r10 & @rbx >> $ip & $proc | ~(@r9) << @rsi >> $teb >> @r10 & 0xC >> -@rdi ^ @rbx & @rbp ! @r9 + --@r10 & @r9 >> @r10 & @rbx >> $ip & $proc | ~(@r9) << @rsi >> $teb >> @r10 & 0xC >> -@rdi ^ @rbx & @rbp)  { test_statement(0x1C7D); } else { test_statement(0x10F9); }
$error$
$end$
140
 if (0xA + @r12 << @rax ^ @rdx << @rbx ^ ~@r11 >> 0n17 ^ +@rdx & 0n4 | @rbp << +@rax >> @rsp & $teb & 0x0 <> @r8 + @r8 << 7 & -@r9 >> @rdx & 17 | 0n4 << @rsi & $proc >> 5)  { test_statement(0xA81); }
$error$
$end$
141
 if (0xE + ~$ip << @rax << 0n19 >> +@rdi >> $ip | @r11 << $buffer >> @rsp >> @r9 ! 0xD >> ($proc) << $buffer >> @r8 >> @rdi & @r10 << @r9 >> 20 >> $proc ^ @rsp >> @r9 >> @rdi ^ @rax >> $buffer)  { test_statement(0x12AE); } else { test_statement(0xBFC); }
$error$
$end$
142
 if (@rdx << @rsp >> @r10 ^ @rdi << @r12 & @r9 & @rbp & @r9((@r8 << @r13 << +@rax >> $teb & @rdi)  { test_statement(0x144F); } elsif (@r8 >> ($buffer) ^ @rbp >> @rbx & @r12 & $teb | -+$thread <= @r8 >> ($buffer) ^ @rbp >> @rbx & @r12 & $teb | -+$thread) { test_statement(0x1978); } else { test_statement(0xBDA); }
$error$
$end$
144
 if (@r11 & @r13 >> @rdx & 0x3 & $teb ^ $ip >> @rdi >> 6))@r13 << @r11 & ~@r9 >> 0n2 >> @r12 ^ 23 >> @rax | @rdi >> $proc ^ $buffer & @rax & @rsp ^ @rax ^ @rbp)  { test_statement(0x1A7B); } elsif (0x11 << (0y1) & ~(@r8) >> @rbp & @r10 & @rbx ^ @rbx >> @rax | @rsi >< 0x11 << (0y1) & ~(@r8) >> @rbp & @r10 & @rbx ^ @rbx >> @rax | @rsi) { test_statement(0x1FB); } else { test_statement(0x8E2); }
$error$
$end$
145
 if (@r13(@rdx + $thread | $teb << ~@r9)  { test_statement(0x1E99); }
$error$
$end$
146
 if (@r9 + +$thread >> @rsi >> (0y11) ^ -0y1110 << $ip >> @rsp ^ @rdi >> @r10 ^ @rbx & @r8 ^ @r11 | @r11 << (@r13) & @rsp >> 3 & @rbx ^ @rax & $teb ^ 0y1010 & 0n3 ^ @rax | 0n6 & (@r13) | 22 ^ (~@r10) ^ $buffer | 0y1 > @r10 << $buffer << @rdi | 10 << -$ip ^ 3 >> $teb ^ @r9 ^ @rbx)  { test_statement(0x2120); }
$error$
$end$
147
 if (@r8 >> @rbp << 0y1 >> ~0n13 >> @rsp ^ @r11 << 10 & $thread ^ -~$teb >> @r13 & +$proc >< @rsp >> @r8 << @r11 >> @r12 | @rdx >> +-0y1100 >> $buffer)  { test_statement(0x6B); }
$error$
$end$
148
 if ($teb + @rbx >> $proc << 0n18 ^ 0n11 << 0xD >> @r13 >> @rax | 1 | @rsi != $teb + @rbx >> $proc << 0n18 ^ 0n11 << 0xD >> @r13 >> @rax | 1 | @rsi)  { test_statement(0x5F3); } else { test_statement(0x1553); }
$error$
$end$
149
 if ((@rsi) + $proc << 17 & $ip << (@rsi) >> 0n3 & -$proc >> @r12 & @r9 ^ @rdi << @rbp | 0n3 | $ip >> @r10 | $buffer ^ @rax ^ +@rdi))(@rsi) + $proc << 17 & $ip << (@rsi) >> 0n3 & -$proc >> @r12 & @r9 ^ @rdi << @rbp | 0n3 | $ip >> @r10 | $buffer ^ @rax ^ +@rdi)  { test_statement(0x246D); } elsif (+@rdi | @r10 >> 0xA & ($teb) & @rdx ^ @rbx >= +@rdi | @r10 >> 0xA & ($teb) & @rdx ^ @rbx) { test_statement(0x1842); } elsif (~$teb | @rbx & @rax | @rdx ^ 6 | @r9 == $ip ^ 0x10 & $ip) { test_statement(0x398); }
$error$
$end$
150
 if (@r10 + +@r11 << @rsi << ~@r8 >> $thread << $teb((@r10 + +@r11 << @rsi << ~@r8 >> $thread << $teb)  { test_statement(0x15F8); } elsif ((@r13) ^ $ip >> -@rax ^ 0y11 == @rbx >> @rdx & 0n0 >> +$buffer & @r10) { test_statement(0x1AC9); } elsif ($ip | ~@rdi | 22 ^ $ip | ~@rbp | 0y1 ; $proc >> +@r9 ^ @r13 & @r10 ^ $ip ^ (~0y0)) { test_statement(0x1E45); }
$error$
$end$
151
 if (0n11 >> @r8 << @r13 ^ @rbp ^ @r9 & ~@rax == $teb << @rax >> -@rax << @r13 >> $proc | $buffer >> @r10 >> 13)  { test_statement(0x20B9); }
$error$
$end$
152
 if (@rbx + @rbp >> +@rsp << $thread >> -@r8 > $proc + $buffer ^ $thread << @rsp >> @r8)  { test_statement(0x2351); } elsif ($ip << $ip & @r11 >> @r9 & 0y11 & @rdx ^ @rdi >> @rsi & 0n0 & @rsp ^ @r13 ^ 0 ; $ip << $ip & @r11 >> @r9 & 0y11 & @rdx ^ @rdi >> @rsi & 0n0 & @rsp ^ @r13 ^ 0) { test_statement(0xA20); } elsif ($ip >> @rbp & $buffer ^ @rbx ^ $ip | $buffer & ~@rbx ^ ~@rbx | @rbx ^ 0y11 | -@r11 | @r12))@rsi ^ +0x0 & 0n7 | 0y101 ^ @r9 ^ -0y10011) { test_statement(0x1D89); } elsif (@r10 & @rbx ^ 0x1 $buffer ^ ~$proc | $thread ^ @rbx | @r8) { test_statement(0x16ED); } elsif (@r12 | @rbp <= 0x0 ^ @r12 | $proc | @r9) { test_statement(0x91A); }
$error$
$end$
153
 if (@rax + @rsi ^ $ip >> @r13 & @r11 ^ 0n16 >> @rbx | @r9 << @rdx >> (@rax) & @r9 >> @rax | $teb >> @r11 & $teb & $thread | @r13 & @r13 ^ @r10 | @rdx ^ $teb | 0y10010 | @rax ! @r9 + +22 & @r13 << 0x12 & @r9 ^ @r9 >> @r9 & @r13 & @rbp & @rdx ^ @r13)  { test_statement(0x1132); } else { test_statement(0x8CE); }
$error$
$end$
154
 if (@rdx | @r12 | 11 ^ 0n1 & @rsi ^ $buffer)@rdx | @r12 | 11 ^ 0n1 & @rsi ^ $buffer)  { test_statement(0x9CB); } else { test_statement(0x198); }
$error$
$end$
155
 if (@rsi + @r13 << ~@rdx << -@r11 >> @rbp << @r12 >> ($proc) | $proc << @r13 ^ @rdx | @rdx = (@r10) ^ @rbx ^ @r11 & @r13 & ~@r13)  { test_statement(0x236F); }
$error$
$end$
156
 if ($proc << $buffer << $proc >> @rsp >> $proc >> ~+@rax <> $teb + @r11 >> 5 & @rdi >> ~0x1 & @r8 >> @rdx)  { test_statement(0x1632); } else { test_statement(0x7F3); }
$error$
$end$
157
 if (@rdi + @rdi & -~@rdi & $buffer >> @r12 == @rsp & +@rsp & 0x6)  { test_statement(0x10BF); } elsif ($thread << 17 >> +~@rsi & $thread < +0n12 & $teb & 0x4 & $thread) { test_statement(0xB77); }
$error$
$end$
158
 if ($proc << @r13 >> @rdx << @r12 ^ @rax >> @rsp & @rax & @rdx ; 0y10000 << @r11 >> @rsp & @r8 >> @r10 >> 0y1110)  { test_statement(0x940); } else { test_statement(0x913); }
$error$
$end$
159
 if (+(@rdi) ^ @r11 ^ @r8 >> @rdi & $proc & @rax ^ @rdi & @r9 ^ 0x6 ^ @rdi >= 0y1011 & @rsi << @r12)  { test_statement(0x72F); }
$error$
$end$
160
 if (@rsp + @r12 << @rbx & ~$ip & ~@rsp & -@rdx ^ @r8 ^ $proc ^ @rsi & @rbx ^ @rsi ^ @r11 ! @rsp + @r12 << @rbx & ~$ip & ~@rsp & -@rdx ^ @r8 ^ $proc ^ @rsi & @rbx ^ @rsi ^ @r11)  { test_statement(0x2456); }
$error$
$end$
161
 if (0xA + @rbp & $thread << 0y0 ^ +$teb << @rdx >> ~+$teb & -@rdi >> -@r10 ^ @rbp >> 0n7 & $thread & @rsp ^ @rsp ^ @r10 ^ $thread = @r12 & @r13 & $teb >> @r8 & @rbp & @rdx | @r9 ^ @r12 & 0x4 & @rdi ^ @rsp & @rdx)  { test_statement(0x12C3); } else { test_statement(0x1F08); }
$error$
$end$
162
 if ($thread << @rax >> +@r13 & $ip << 0n5 ^ $buffer | 0y1111 $buffer + @r9 >> @rax)  { test_statement(0x11FB); }
$error$
$end$
163
 if (0n16 + @r10 & @r10 >> @r10 & @r10 >> @rax | 0y10010 << @rbx < 0n16 + @r10 & @r10 >> @r10 & @r10 >> @rax | 0y10010 << @rbx)  { test_statement(0xE02); } elsif (@r9 >> ~@r12 & @rbx >< @r9 & 0 & @rbx & @r13 ^ @r9) { test_statement(0x1609); } else { test_statement(0x25AF); }
$error$
$end$
164
 if (@rsp + @r8 << @rax << $thread >> -@r13 >> @rbx ^ @r9 << @r9 >> @r8 ^ 0y1111 & @rbp ^ -@rax | @r12 >> @rsp >> @r12 ^ @r10 & $buffer | @rsi & 2 ! @r9 + @r13 >> @r8 << @rsi ^ @rdx >> @rbx >> @rsp & 0y11 >> @r11 ^ @rsi & 13 & @r10)  { test_statement(0x851); } elsif (~$teb >> @rbx & -@rbp & $proc & +$proc <> $thread << $buffer & @r8 >> @rax) { test_statement(0x40E); } elsif (@rax & 15 & @r8 ^ @rdi | $teb & @rdi ^ $proc ^ @rdi | @r12(21 >> 0xD ^ 0x9 ^ @r9 ^ $thread) { test_statement(0x1548); } else { test_statement(0x1967); }
$error$
$end$
165
 if (@r10 << @rsp ^ @r13 << @r11 >> @rdx & 22 >> @r10 & +$proc & @r8 | -@r13 & $proc & @rsi >= @r10 << @r8 >> ~$teb >> @r10 & @rsp >> @rbx ^ $buffer << @r9 >> 0xF & @rdx & $proc)  { test_statement(0x62C); } elsif (@rdi & -(0y1110) & @rax & @r8 ^ @rdi >> $ip & +$proc & $teb ^ -0y1001 | $buffer & 0x0 @rdi & -(0y1110) & @rax & @r8 ^ @rdi >> $ip & +$proc & $teb ^ -0y1001 | $buffer & 0x0) { test_statement(0x166D); }
$error$
$end$
166
 if (0x0 + -@r8 << @r9 << @rdx >> @r11 & ($ip) >> ~$ip >> @rdx ^ @rsi & 0y1101 >> $thread | $ip >> @rdi & 0n4 >> $proc & @rbp & @rbx | 0x12 >> $buffer | @r11 & 0n12 < 0x0 + -@r8 << @r9 << @rdx >> @r11 & ($ip) >> ~$ip >> @rdx ^ @rsi & 0y1101 >> $thread | $ip >> @rdi & 0n4 >> $proc & @rbp & @rbx | 0x12 >> $buffer | @r11 & 0n12)  { test_statement(0x2543); } elsif (@rax >> @r12 >> @rax & @r13 & -@r12 ^ 0xC >> $ip & 0y1000 & $buffer ^ @rsi & -(@r8) ^ @r11 | @rax & $buffer & $buffer ^ @r8 >= @rax >> @r12 >> @rax & @r13 & -@r12 ^ 0xC >> $ip & 0y1000 & $buffer ^ @rsi & -(@r8) ^ @r11 | @rax & $buffer & $buffer ^ @r8) { test_statement(0x1C02); } else { test_statement(0x25B3); }
$error$
$end$
167
 if (@rbp >> @r10 << @r8 >> @rdi >> $ip & +@r9 << @rbp & @r13 & 5 & (@rsi) ^ @rdi << @rsi >> -@rsp >> -(+@rax) = $thread + @r8 >> @r10 ^ ~$buffer & @r13 >> $ip | @r9)  { test_statement(0x15E9); } else { test_statement(0x155C); }
$error$
$end$
168
 if (@rbx << @rsp >> +$thread >> @rax >> @rsp & 0y1 = @r11 + @r13 >> 0xB >> @rax & @r11 << $ip >> @rax & @r8)  { test_statement(0xDFA); }
$error$
$end$
169
 if (-5 + $teb >> $ip >> @r8 >> 0x6 | $teb >> $buffer | $proc >> -@rdx & 0x13 | $ip ^ @r10 ^ @r13 | 22 > @r11 + 0x5 >> $teb << @r8 | -@rax << ~@r11 | $teb >> @r9 & -@r12 & @rsi ^ $buffer | @rbp ^ @rsp)  { test_statement(0x19EB); } else { test_statement(0x1248); }
$error$
$end$
170
 if ($buffer | -@rsp = $buffer | -@rsp)  { test_statement(0xB86); } else { test_statement(0x930); }
$error$
$end$
171
 if (@r13 << @rax >> $thread << @r8 >> @r11 & $thread >> @rsi >> @r12 ^ @r9 >> @rsp >> @rax & 0n17 & 0n18 & $ip ^ @r13 ^ 0x13 & 0xD != @r11 << @rax | @rsp ^ ~@rdx & @rdx ^ @r10 & ~@rdi ^ $teb)  { test_statement(0x185D); }
$error$
$end$
172
 if (~@r13 << $ip << +$proc ! +@r8 << $ip << @rbx & $proc << @r13 | 0n5 << $proc ^ 0n11)  { test_statement(0x213D); } elsif (@r11 << @rax >> $teb | $teb >> +~$teb & @rbp & 0n7 ^ 0n6 ^ ~@rsi ^ -21 > @r11 << @rax >> $teb | $teb >> +~$teb & @rbp & 0n7 ^ 0n6 ^ ~@rsi ^ -21) { test_statement(0x218A); } else { test_statement(0x114F); }
$error$
$end$
173
 if (@rbp >> +5 << 3 ^ @rdi << 0x11 >> @rbx & @r11 & -(+-$buffer) ^ @r11 & $ip & @rbp ^ +@rdx & $ip | @r11 << $thread >> 0x13 >> @rbx ^ 0y1010 >> $ip & $ip & @rsp ^ @rsi ^ @r9 ^ @r12 ! @rdi + (@r13) << @rdi | -$ip << @r9 >> @r9 >> @r8 & $proc >> @r8 & -@rbp & $thread ^ +~$buffer >> @rsp ^ $buffer & 0n19)  { test_statement(0xCA2); }
$error$
$end$
174
 if (0y10011 & 15 >> @rsi & $thread ^ @rdi << @rdi >> @rax ! @rsi >> @rax & @rax)  { test_statement(0x21F1); } elsif (0n1 << $buffer >> 0y1111 >> @rbx & @rbx | 0x12 | @rbp & @rsp ! 0xF & -0n10 & @rbx & @r13 ^ @r11 >> $buffer | -$teb ^ $proc | @r11 & $teb ^ @r11 ^ @r11) { test_statement(0x12A); } else { test_statement(0x1484); }
$error$
$end$
175
 if (@r11 + 0x12 >> @r10 & $thread << +$ip >> @rdx >> @r9 & @r12 & 12 ^ @rax << ~@rbx ^ 0x1 >> $thread & $buffer | @rsp << @r8 & 0n7 >> 11 ^ $thread >> @rdx & @rdx | @r9 ^ +@rdx ^ 20 ^ -0x8 >< @r11 + 0x12 >> @r10 & $thread << +$ip >> @rdx >> @r9 & @r12 & 12 ^ @rax << ~@rbx ^ 0x1 >> $thread & $buffer | @rsp << @r8 & 0n7 >> 11 ^ $thread >> @rdx & @rdx | @r9 ^ +@rdx ^ 20 ^ -0x8)  { test_statement(0x1535); } elsif ($buffer & @rsp ^ -@r10 >> @r11 & (@rdx) & @rdi | @r8 & @r10 & @rax ^ $buffer | (@r12) ^ @r10 @rbx << $buffer) { test_statement(0x1B51); } else { test_statement(0x570); }
$error$
$end$
176
 if ($teb + @rbp | $buffer << @rax & +@rax | @rsi >> 23 & @r9 | @r9 | @rax ^ @rdx | @r11 | 0n1 ; @rsi + $thread >> @r10 << +@rdx | 0y1011 & @r10 >> $proc & @r9 & @rsi)  { test_statement(0xB1A); } elsif ($ip ^ +@r12 >> 10 & @rbp & @r13 ^ 0y1111 ^ @r13 ^ @r10 | @r9 >> $proc ^ -@rax & (@r12) ^ $teb | @r8 & @r11 ^ @r13 ^ $proc | +@r8 +0n10 >> (@rbx) & $teb >> -$teb) { test_statement(0x2142); } elsif (0n4 >> 0n17 ; 0xD >> (@r13) ^ @r11 ^ 1) { test_statement(0x1D1); } else { test_statement(0x231E); }
$error$
$end$
177
 if (@rsi + ~$proc >> -0y110 << $ip & $proc << @rbp & @r11 | 0n16 << $teb & @rax & @r10 & @r10 ^ 12 >> -@rdi & -@rdi & @r10 | 0x1 ^ -@rsp < @rsi + ~$proc >> -0y110 << $ip & $proc << @rbp & @r11 | 0n16 << $teb & @rax & @r10 & @r10 ^ 12 >> -@rdi & -@rdi & @r10 | 0x1 ^ -@rsp)  { test_statement(0x238F); } else { test_statement(0x818); }
$error$
$end$
178
 if ($ip ^ @r9 ^ (@r8) ^ @rbp & @r10 ^ @rdi | $teb << @rsi & @rdi >> 0n0 ^ @rsp -0y1 + ~+$buffer << (~+$proc) | 0n9 << $thread >> @r13 >> @rdi & @rdi >> 0n4 & @rbx)  { test_statement(0x121F); }
$error$
$end$
179
 if (21 + $ip >> ~0x11 >> @r12 ^ ~@r8 << @r13 ^ 20 & +-0x11 & @r9 ^ @rax & @rdi | @rax << (@r10) >> 14 >> @rsi & $proc | @rax | @rdx & ~$thread ^ @r13 | @rbp)$buffer + @r12 << @r11 >> @rsp & -@rax << @r11 >> @r12 >> @rdx)  { test_statement(0xF44); } elsif (@r12 << 0n8 >> @r11 >> $buffer & @rdx >> @rbp & 20 & @rsp ^ @r11 >> 0y0 ^ ~$buffer & 0xA ^ 0n3 = @r8 << -@rbx >> 0x4 >> (22) & @r10) { test_statement(0x23BB); } else { test_statement(0xA11); }
$error$
$end$
180
 if (@rbp + @rbp & $buffer | $teb << -@r10 >> 0n1 ^ $ip | @rbp >> $thread | 0y1110 & @r9 | @rbx ^ +~$ip >< @r10 + $ip >> ~@r8 << $teb | @r8 << @r10 | @r11 >> @r8)  { test_statement(0x1CB0); } else { test_statement(0x211D); }
$error$
$end$
181
 if (11 & ~13 >> ($teb) & --@r9 >> @rsi & (@r10) & 0n6 | @rsp << @rax ^ $ip >> 0x5 ^ @r8 & 17 > 11 & ~13 >> ($teb) & --@r9 >> @rsi & (@r10) & 0n6 | @rsp << @rax ^ $ip >> 0x5 ^ @r8 & 17)  { test_statement(0xEDB); } elsif (@rbp << @rax <= 0x10 << $ip >> 0x6 >> @r10 & @r9 & 6 & @rdx) { test_statement(0x48E); } else { test_statement(0x16B0); }
$error$
$end$
182
 if (0n11 << @r12 << @r12 >> @r12 << @r9 & $thread << @r13 ! @r13 + $proc >> $buffer >> $proc >> $proc | @r11 << ~@r11 >> +$buffer ^ @rsi ^ $ip ^ @r9 | @rsi >> @rbx | @r13 & 0y10001)  { test_statement(0x42); } elsif (14 >> @r9 >> @r11 ^ @r13 & @rax & @rsp | @r8((14 >> @r9 >> @r11 ^ @r13 & @rax & @rsp | @r8) { test_statement(0x3A1); }
$error$
$end$
183
 if (-@rsp ^ @r9 >> @r8 >> @r10 | @r9 << @r8 & @r9 & 7)0x12 + 5 << @r10)  { test_statement(0x1793); }
$error$
$end$
184
 if (0y1101 << @r8 >> +@rdi ^ @rsi >> (@rsp) >> $proc & @r9 >> @r12 & 0y10000 & -@rbx ^ +$ip & @rsp & +(@r9) < 0y1101 << @r8 >> +@rdi ^ @rsi >> (@rsp) >> $proc & @r9 >> @r12 & 0y10000 & -@rbx ^ +$ip & @rsp & +(@r9))  { test_statement(0xCBF); } else { test_statement(0x118); }
$error$
$end$
185
 if (@r9 << (@rsi) << @rbx ^ @r12 << 0y10 >> 0x12 >> ~@r9((0n2 + 2 << @rdi ^ @r9 & @r12 >> @r11 | $thread >> $teb & (0xC) ^ +$thread & $ip ^ @rsp)  { test_statement(0x2033); } else { test_statement(0x2033); }
$error$
$end$
186
 if ($buffer & @rdx ^ 0y111 << ~$proc ^ --@rdi & 0y1 & @r13 ~@r12 << @r13 & @r10 ^ ~$proc | @rax << $proc | 0y1000 >> @rbp & @rbx & 0x1 ^ @rdi)  { test_statement(0x1797); } elsif ($ip << @rbx >> 0y1101 | +@r9 >> 14 ^ @r9 & $buffer $ip << @rbx >> 0y1101 | +@r9 >> 14 ^ @r9 & $buffer) { test_statement(0x2367); } else { test_statement(0xCB2); }
$error$
$end$
187
 if (10 << @r10 >> @rsp << 0xC >> @r13 & $thread >> 0y1001 & @rdi >> @r9(10 << @r10 >> @rsp << 0xC >> @r13 & $thread >> 0y1001 & @rdi >> @r9)  { test_statement(0x2056); } else { test_statement(0x1F45); }
$error$
$end$
188
 if (+@r11 + @r8 << @r12 & ~$teb << @r10 | $ip >> @r12 >> @r10 ^ -0x7 ^ 1 & $thread((+@r11 + @r8 << @r12 & ~$teb << @r10 | $ip >> @r12 >> @r10 ^ -0x7 ^ 1 & $thread)  { test_statement(0x5B7); } else { test_statement(0x513); }
$error$
$end$
189
 if (0y0 + 0y111 << @r9 << 0n16 ! 0y0 + 0y111 << @r9 << 0n16)  { test_statement(0x20BE); } elsif (-+@r9 << @rdi >> @r9 >> @rbp >= @rax << @r11 & @rsp >> @rdx & @r12) { test_statement(0x1D47); } elsif (@rsp >> $ip & @r13 & @rdi <= @rbx & 23 & ~@rbx ^ $teb & $teb) { test_statement(0xFCC); } elsif (-@r12 & @r9))-@r12 & @r9) { test_statement(0x1481); } elsif (0y1111 | +@r8 | -$thread $thread) { test_statement(0x2669); }
$error$
$end$
190
 if (@rsi >> @rdx << @r10 & @r8 = @rsi >> @rdx << @r10 & @r8)  { test_statement(0x1988); } else { test_statement(0x9FE); }
$error$
$end$
191
 if (0x7 << @rsp << 0n11 ^ $teb << +@rbp ^ 0x13 >> 0x1 ^ @r10 & @rax | @rsp << 0x1 ! +@rsi << 17 << @rax & @rsi >> @rsp >> @r10 & @r9 & @r11 & @r9)  { test_statement(0x19B); } elsif (--@r9 << @rdi | $proc & $buffer | @r11 ; @r13 & @r10 >> +@rdi | @r10 >> @r12 & @rsi) { test_statement(0x200C); }
$error$
$end$
192
 if ($thread + $proc << @r8 << 0n9 >> @rbp >> ~@rax >> 0x0 ^ $teb << @r10 >> @rdi >> $thread ^ @r11 >> @r13 ^ 21 >= $thread + $proc << @r8 << 0n9 >> @rbp >> ~@rax >> 0x0 ^ $teb << @r10 >> @rdi >> $thread ^ @r11 >> @r13 ^ 21)  { test_statement(0xC27); } elsif (@rsp & -@r10 ^ $thread >> 0xC & 0xC & 0y10 ^ +@rdi & $teb = @rsp & -@r10 ^ $thread >> 0xC & 0xC & 0y10 ^ +@rdi & $teb) { test_statement(0x21CD); }
$error$
$end$
193
 if (@r8 @r8)  { test_statement(0xF10); } elsif (@rdi & @r11 & 0xA & $proc | @rbx | 0x9 | -@r12 | $proc | @r8 <> @rdi & @r11 & 0xA & $proc | @rbx | 0x9 | -@r12 | $proc | @r8) { test_statement(0x18BE); } elsif (@r8 & $thread & @rdx ^ 0n1 & @r11 ^ -+@r9 < $proc >> (@r12) & @rbx) { test_statement(0x24EE); } elsif (@r9))@r9) { test_statement(0x3AE); }
$error$
$end$
194
 if (@rsp + @r9 << @r12 & @r10 & 15 >> @rsp ^ @r9 & $thread & @r8 & $proc ^ @rbp <= @rsp + @r9 << @r12 & @r10 & 15 >> @rsp ^ @r9 & $thread & @r8 & $proc ^ @rbp)  { test_statement(0x1924); } elsif (@rbx >> $ip & 20 ^ ~0n1 & 0y1001 | 0y10011 >> $buffer & 12 & @r13 ^ @rdi | @r10 ^ 0n3 ^ @rbx | @rbx | 16 | $buffer <> $teb >> @rsp >> @rbp & $proc ^ @rdi & @rdx) { test_statement(0x22C); } else { test_statement(0xA60); }
$error$
$end$
195
 if (@rbp + @r12 >> @r12 << @rsp | @rsi ^ $proc & 0y100 & @r10 ^ @r12 == @rbp + $thread << @rbx ^ -~@rax << @r13 >> @rdx >> @r12 ^ (@rsi) >> ~@r11 ^ @rbx | -@r9 ^ @r12 >> @r11)  { test_statement(0x134E); } elsif (@rbp << @rsp >< @rbp << @rsp) { test_statement(0xE58); } else { test_statement(0x1AC4); }
$error$
$end$
196
 if ($proc + +@r8 >> @r8 << $thread >> @rbx >> +$thread & @rbx >> @r10 >> @r8 ^ ~@r9 << @rdx >> @r8 & @rbx >> $ip | 0n19 << @rdi >> -@r13 & @r9 | $proc >> 0n5 ^ @r13 & @rsi | $ip & @r12 ^ 0xC ^ @r9 | @r12 ^ @rbp | 0y10011 | $ip == $proc + +@r8 >> @r8 << $thread >> @rbx >> +$thread & @rbx >> @r10 >> @r8 ^ ~@r9 << @rdx >> @r8 & @rbx >> $ip | 0n19 << @rdi >> -@r13 & @r9 | $proc >> 0n5 ^ @r13 & @rsi | $ip & @r12 ^ 0xC ^ @r9 | @r12 ^ @rbp | 0y10011 | $ip)  { test_statement(0x1645); } elsif ($ip >= @rbx << @rsp >> @rsp & ~@r9 ^ $ip) { test_statement(0x71D); }
$error$
$end$
197
 if (@rdx << @rdx << 0n16 >> -~$ip << $thread | @rdx << @rdi | @r11 >> (@rdi) | @r10 != @r10 >> 6 & @rbx << @r8 >> +@r13 & @rsi >> 0n6 ^ 0y1010 >> (@rbx) >> @rdx ^ ~(@r9) & $thread & $teb)  { test_statement(0x123D); }
$error$
$end$
198
 if ($buffer + 0n14 << (@rdi) ^ (@r12) >> @rbp >> 0xA & @r8 | -0n14 & @rax & @rsi | @rsi >> ~@rsp & 0x4 & @rbp ^ 0xC & @r9 ^ @rdi $buffer << $buffer >> 0n8 >> $proc >> 0x12 & 15 << 3 ^ $thread ^ @rsi & -@rbp ^ $ip & @r13)  { test_statement(0x1BC5); } elsif ($ip << @r9 >> $buffer((@rsp >> 0x11 >> @rbp | @rax >> $thread & +@r12 & ~$ip ^ $buffer & @r11 | @rbx & 0x0 ^ 0xF) { test_statement(0xB6A); } elsif (0y111 ^ @rdx & $teb | @r10 | (0n15) | 0x11 <> @rax >> $proc ^ +@r13 & $thread) { test_statement(0xA50); } elsif (@rbx & @rsp ! ~(@r12) & -@rdi) { test_statement(0x206D); } elsif (-($teb) ^ @r13 <= -($teb) ^ @r13) { test_statement(0x161D); } else { test_statement(0x2354); }
$error$
$end$
199
 if (@rdi + 16 << @r13 << +$proc == ~$buffer + 10 >> @r13 << @r12 & @rsp << @rdi)  { test_statement(0x15A8); } elsif ($buffer & ~@r13 | @rsi & @r11 ^ @rsi & $ip ^ @r12 ^ +@rsi | @r8 $buffer & ~@r13 | @rsi & @r11 ^ @rsi & $ip ^ @r12 ^ +@rsi | @r8) { test_statement(0x1C2E); } elsif (7 & -@rbp ^ @rdx & @rsp | @rax ^ @r10 ^ @rax != 7 & -@rbp ^ @rdx & @rsp | @rax ^ @r10 ^ @rax) { test_statement(0x1A29); } elsif (@r13 | $teb | 0x5)@r13 | $teb | 0x5) { test_statement(0x1F8D); } else { test_statement(0x8C); }
$error$
$end$
200
 if (@rbp & $thread ^ -@r12 >> @rax & @rbx | @r13 << @rsp >> 0x10 >> (@r9) & $thread >> @r11 & @r13 & @rsi | 0y1001 ^ 0x3 & @r13 <= @rbp & $thread ^ -@r12 >> @rax & @rbx | @r13 << @rsp >> 0x10 >> (@r9) & $thread >> @r11 & @r13 & @rsi | 0y1001 ^ 0x3 & @r13)  { test_statement(0x6C1); }
$error$
$end$
201
 if (@rsp + $thread << $buffer >> $buffer << @r9 & ++$buffer << @rbp >> @rsi & @rbx & ~$teb & -$proc | +0y111 << @rbx >> @r8 >> @rbx & @rbp >> @r9 ^ @rbp & @r9 ^ +@rbp & (0y1100) | +@r9 >> @r9 & +@r13 | @rdi & @rsi ^ 0n15 >= @rsp + $thread << $buffer >> $buffer << @r9 & ++$buffer << @rbp >> @rsi & @rbx & ~$teb & -$proc | +0y111 << @rbx >> @r8 >> @rbx & @rbp >> @r9 ^ @rbp & @r9 ^ +@rbp & (0y1100) | +@r9 >> @r9 & +@r13 | @rdi & @rsi ^ 0n15)  { test_statement(0x52B); } elsif (@r8 << 2 & @r11 ^ @r8 ^ @rdx & @rax | 0n8 >> @rsi & @r13 & (@rsi) ^ @rsp ^ @rsi ^ 11 <> @r8 << 2 & @r11 ^ @r8 ^ @rdx & @rax | 0n8 >> @rsi & @r13 & (@rsi) ^ @rsp ^ @rsi ^ 11) { test_statement(0x25A); } elsif ($thread))$thread) { test_statement(0x6B4); } elsif (@r9 ^ $thread ^ 0n10 | @r12(($thread ^ @r12 | $thread | $ip | @rsi) { test_statement(0x1A50); } elsif (@r10 | -@rdx | 0xA <> @r10 | -@rdx | 0xA) { test_statement(0x22C8); } else { test_statement(0x22E9); }
$error$
$end$
202
 if (@rax >> ~~+@rbp >> @r10 >> @rdx & @rdx << @r9 >> ($proc) | @rdi << +@rbx & $ip >> @rsp & $teb & $ip ^ $proc | @rbx >> @r12 & (@rax) & @r11 ^ 0y1101 | @rdx & 0n11 @rax >> ~~+@rbp >> @r10 >> @rdx & @rdx << @r9 >> ($proc) | @rdi << +@rbx & $ip >> @rsp & $teb & $ip ^ $proc | @rbx >> @r12 & (@rax) & @r11 ^ 0y1101 | @rdx & 0n11)  { test_statement(0x15AE); } else { test_statement(0x13B2); }
$error$
$end$
203
 if ($teb + ($proc) >> @r10 ! @r11 + @r10 >> @rsp << @r11 & 23 << $ip >> @rax >> @rdx)  { test_statement(0x1580); } elsif (0n8 << 0n0 & ~0y100 >> @r13 & 7 & -@r13((0n9 ^ 0x12 >> +@rax ^ @r10 ^ @rdi) { test_statement(0x8E7); } elsif (@rdx >> @rdx & @rbx ; @rsp >> +@r8 | @r11 & $buffer | @rdx) { test_statement(0xD14); } elsif (~@rdi ^ @r13 | 0y10000 | @rbx | @rdi >= $proc & $ip) { test_statement(0x144E); }
$error$
$end$
204
 if (@rsp >> @rbp << $proc >> @rsp & $teb >> @rdx & @rax >> @r10 & @rdx ^ @r13 | $buffer >> ~$teb ^ $teb ^ -$proc != @rsp >> @rbp << $proc >> @rsp & $teb >> @rdx & @rax >> @r10 & @rdx ^ @r13 | $buffer >> ~$teb ^ $teb ^ -$proc)  { test_statement(0x2451); } else { test_statement(0x231C); }
$error$
$end$
205
 if (-@rax << @r12 << ~0n9 >> @rax >> 0y101 >> @rdx & @r8 >> $buffer >> $ip & @rdi & +$proc & @rdi >< $buffer + 0x9 >> 0n9 << $proc ^ @rbp >> @rdi & @r13 >> @rsi & @r13 & @r10 | @rax >> ~$proc & +@r10 >> $ip & 0n12 ^ @rsp | @rsi & @rbp)  { test_statement(0x1400); }
$error$
$end$
206
 if (~$buffer + @rbp >> $buffer & @rsi << ($ip) >> 0xF >> ~+-@rdx ^ $ip & ~(+@rsi) >> 15 & $proc <> ~$buffer + @rbp >> $buffer & @rsi << ($ip) >> 0xF >> ~+-@rdx ^ $ip & ~(+@rsi) >> 15 & $proc)  { test_statement(0x1AE6); } elsif ($teb << @r11 ^ @r12 >> @rdi & ~$buffer & @rdx ^ $proc & @r8 != $teb << @r11 ^ @r12 >> @rdi & ~$buffer & @rdx ^ $proc & @r8) { test_statement(0x2375); } else { test_statement(0x85F); }
$error$
$end$
207
 if (0y1001 << $proc << @r13 & ~-$buffer & 0xA >> $proc & $thread ^ @rdi & $teb >> @rsp & @r12 & $ip ^ @rax | @rax << $proc >> ~@r12 & @rax ^ $ip & $ip & $thread = 0y1001 << $proc << @r13 & ~-$buffer & 0xA >> $proc & $thread ^ @rdi & $teb >> @rsp & @r12 & $ip ^ @rax | @rax << $proc >> ~@r12 & @rax ^ $ip & $ip & $thread)  { test_statement(0x1AF9); } elsif ($proc & @r11 >> @rax | 17 >> @rax | @rdx @rdi >> -(@r8) >> 0x13 & 0x12 ^ @r13 & $proc & (@rbx)) { test_statement(0x1958); } elsif (@rdx >> @rdx ^ (@r13) ^ $proc ^ @r11 | @r11 & $buffer | 0y101 ^ @r12 <= @r9 & 0n8 & @r10 ^ $proc & $ip | (-~-@rdx)) { test_statement(0x16A6); }
$error$
$end$
208
 if (@r12 << $proc >> @rsp ^ @r10 << $ip >> 0y1000 ^ @r10 >> $thread & $thread ^ @rbp & @rsp ^ 13 ; (@r10) << +@r11 >> $teb)  { test_statement(0x1637); } else { test_statement(0x15C2); }
$error$
$end$
209
 if (@rbx >> 20 << @rsp ^ $buffer >> @r9 >> @rbp & 0n1 ^ @r11 ^ @r12 & @r8 | 0 << @r11 >> @r13 >> @rdi & $teb != @rdi << $proc << ($ip) >> $teb >> 0y1000 >> @rsp & @r8 << @rax >> 0n6 >> $buffer)  { test_statement(0x1900); } elsif (@r10 << @rdi & -@rsi | +$buffer | @r13 ^ $ip ! @rbx | @rbx >> @rdi ^ $buffer & @rdx ^ @r12) { test_statement(0xE27); } elsif ($buffer >> @r12 & @rdi ^ (+~-@rax) & @rsi ^ $teb ^ @rdi < @rsp >> $thread ^ @rsi & @r12 | @rdi | 0y1000 ^ 2) { test_statement(0x18A); } elsif (+@rsp & 0n19 ^ @r10 ^ 0y1101 == 1 ^ @r12) { test_statement(0x7EE); }
$error$
$end$
210
 if (17 >> 0x13 >> 0xF >> ~~0n4 & @r10 >> 0n10 >> 0y1111 & @rdi & 0n4 != 17 >> 0x13 >> 0xF >> ~~0n4 & @r10 >> 0n10 >> 0y1111 & @rdi & 0n4)  { test_statement(0x2399); } elsif (@rbp << 0n12 >> @rsp ^ @r12 >> $ip & @rdi & @r9 | 0n4 >> 0n5 ^ $buffer @rbp << 0n12 >> @rsp ^ @r12 >> $ip & @rdi & @r9 | 0n4 >> 0n5 ^ $buffer) { test_statement(0x18FF); } elsif (@r13 >> @rbp & 17 & $ip ^ 0y10000 & ~-0x2 ^ @rdx <> $buffer >> 0y1110 & @rsp ^ @rsi & @r13 | @r8 ^ 16 ^ @r9 | @r13 ^ 0x10) { test_statement(0xB14); } elsif (@r11 & $proc ^ $ip ^ 0xA | @r13 ^ (@r8) | (0x7)((@r10 ^ $thread) { test_statement(0x11D0); } elsif (@r10 ! @r9 ^ @rdx | @r9 | @r9) { test_statement(0x6E0); }
$error$
$end$
211
 if (0x9 + -$thread << @rdi << @rbp >> 3 >> $ip & @rbx << @rbx & @rdi >> @rdi ^ $teb >> @rbx ^ (@rsi) & @rdx | @rdx ^ $teb >> 0y10010 | -@rbp >> ~@rax ^ ~@r11 | 0x12 | $buffer ^ 0n12 22 + 0n2 << @r11 >> @rbp >> @rsi >> @rax & @rdx & @r13 & $teb | $buffer << $teb >> @rsi | (@r13) & @r10 & ($proc) ^ @rax ^ @rdi)  { test_statement(0x1010); }
$error$
$end$
212
 if (+$teb << @r12 >> @r12 & @rsi << 0x10 >> @rsp & @r13 ^ @rax ^ 11 >> @r8 & 0x7 ^ (@r8) | $buffer << @rdx | ~@rbx & @r9 != $thread << +@rsp << @rdi >> @rsi & $ip >> $buffer >> ~@rdi | $proc >> ~@rdx >> 0x10)  { test_statement(0x1D); } elsif (0xB << 0x11 >> $ip & @rsp > 0xB << 0x11 >> $ip & @rsp) { test_statement(0x23CA); } elsif (-@rsi >> @rdi & @rdi ^ @r12 & @rbx ^ $ip ^ @rdi -@rsi >> @rdi & @rdi ^ @r12 & @rbx ^ $ip ^ @rdi) { test_statement(0x1993); } elsif ($ip & @rax ^ @r10 < $buffer ^ 0n7 ^ ~@rbp) { test_statement(0x1DED); } else { test_statement(0xAD0); }
$error$
$end$
213
 if (@rdx ^ $ip >> @rbp & $proc >> @rbx & 0n2 & @rdx ^ @r8 >> @rsp | (0xE) >> -@rbp >> 1 & @r10 >> @rdx & @rax ^ 0x5 >> @r9 & @r10 ^ $buffer ^ @rax ^ @rsp | ~@rdx & @rdx & +@r9 ^ @rdx | $thread ^ 0xB | @r11 ^ +@r8 @rdi >> @r11 ^ 0y11 & (@rbx) & @rsi ^ $buffer & @r10 & @rdx | @r10 << -$proc | @rsp & @r8 & @rdx ^ @rdx ^ @rax)  { test_statement(0x1211); } elsif (@rsi >> @rsi >> @r10 & @r11 & @rbp | 3 >> @r8 ^ $ip & @rdx ^ @rsi ^ 0x11 > @rbp << @rsi ^ $buffer >> @r9 & $teb ^ $thread | 0xC >> $teb | @r8 ^ $thread ^ $buffer) { test_statement(0x77A); } elsif ($thread < @rbx >> @rdi & @rsi | @r8 ^ @rdx | -@r8 | $buffer) { test_statement(0x17A4); } elsif (@r12 & @rbx ^ @rsp | 0y1 | @rax | @rbp ! @r12 ^ @r11 ^ -$buffer) { test_statement(0x10E5); } else { test_statement(0x1824); }
$error$
$end$
214
 if (@rdx << $teb << @r10 & 12 << (-0n9) >> ~@rdx & $buffer >> $proc & @r11 ^ @r10 << $thread & @r13 >> @rsi ^ @rsi & +@rsp & @rdi ^ $proc ^ @rdi >= @r11 << $teb ^ 0y1110 << 0y1101 >> @r8 >> $teb | $thread << $ip & @r13 | 0y1110 >> (@r8) & $thread | @rsi)  { test_statement(0xC38); } else { test_statement(0x2694); }
$error$
$end$
215
 if (+@rsi >> $buffer << @rax >> (@rsp) & @r12 >> @r10 >> $ip ^ @rdi & @rbp & @rax | @rsi << $ip ^ $ip >> $buffer)@r13 << ~0y1111 << $proc >> +@rdx >> -$ip >> ~0n18 & @rdi << @r11 >> -(@rdi) >> @rdi | ~1)  { test_statement(0x1A1A); } else { test_statement(0x13E3); }
$error$
$end$
216
 if (@r11 + @r8 << $thread >> @r9 << 0x13 >> @rax >> $ip & @rax << $teb & $ip | @rdx << @rsp >> @rsp(17 + ~@rbp << 7 ^ @rax << @r8 >> @rsp >> $buffer & @rdx & @rdx & 0n2)  { test_statement(0x1736); } else { test_statement(0x5DE); }
$error$
$end$
217
 if (0n18 >> 0y10011 << ~+@r8 & $buffer << $teb & $buffer >> -$buffer & 0x3 & $teb ^ 0n14 << @r12 >> @r9 | $thread << @rbp 0n18 >> 0y10011 << ~+@r8 & $buffer << $teb & $buffer >> -$buffer & 0x3 & $teb ^ 0n14 << @r12 >> @r9 | $thread << @rbp)  { test_statement(0x19C6); } elsif (@rbx >> @rsp & +@r10 >> @r8 ^ @rbp ^ $teb & 0y1110 | 0y101 & @r12 & -$thread | @r13 | $teb ^ @r13 | @rax | $ip != 0xB << $thread & @rdi >> @r9) { test_statement(0xBFC); } elsif ((5) | @rdi & @rsp | ~@rdi | (@rdi) == @rbx ^ 7 & 10) { test_statement(0x2446); } else { test_statement(0x189A); }
$error$
$end$
218
 if ((@rax) << 0x7 >> @r10 << @r12 ^ 0y1100 >> 0x2 >> @r13 ^ @r9 >> @rdi & 0n12 ! @r9 >> @r11 << 12)  { test_statement(0x174E); } elsif ($teb << $thread ^ +21 >> (@rdi) & @r13 & $teb ^ @rax & 0y10001 ^ $thread 0y1111 << @rsi | $buffer >> $ip ^ -$teb & ~@rsi) { test_statement(0xF62); } else { test_statement(0x1EAD); }
$error$
$end$
219
 if (@r11 + @rsi & 10 << @rsp >> @r9 >> @r8 & 2 & ~6 | $teb << @r8 & 4 & @rsp & @rbx ^ @r8 & $thread((@r11 + @rsi & 10 << @rsp >> @r9 >> @r8 & 2 & ~6 | $teb << @r8 & 4 & @rsp & @rbx ^ @r8 & $thread)  { test_statement(0x142A); } elsif (@rbx >> @rsp ^ 0n9 >> 0n18 & 0x4 ^ 0xD & @rax))@rbx >> @rsp ^ 0n9 >> 0n18 & 0x4 ^ 0xD & @rax) { test_statement(0x19B7); } else { test_statement(0x2EA); }
$error$
$end$
220
 if (@rdi + +0y10000 >> 0y1011 << @rbp & 0y101 >> $proc >> @rdx & @rsi >> 0x9 & @rsi & @r12 ^ $buffer >> $ip >> @rbp ^ ~$teb & @rbp & (@rsp) ^ @rsp ^ (~@r13) <> ($buffer) << @r10 << @rdx & @rsp & $thread ^ @rdx << 5 >> @rbp >> @rbx & $proc >> @rdi & $proc)  { test_statement(0x128F); } else { test_statement(0x1E0B); }
$error$
$end$
221
 if (@r8 << 0x8 >> @rdi >> @r8 >> (@r9) ^ ~6 >> 0n12 >> @rsi & @r10 & @rsi & $teb | ($buffer) << @rsp >> $thread >> +-@rbp & $ip >> @r10 & ~+@rdi & @r8 | @r12 & -0xC & @r13 ! @rax & @rsp << @r11 ^ @rbp >> $teb ^ @r9 >> 0n7 & +@r13)  { test_statement(0x9EE); } else { test_statement(0x97A); }
$error$
$end$
222
 if (@rdi + 0n2 << @rbp << @r10 & @rdx & @r8 >> @r13 & @rdx & @rsp > @rdi + 0n2 << @rbp << @r10 & @rdx & @r8 >> @r13 & @rdx & @rsp)  { test_statement(0x15E5); } else { test_statement(0x12BE); }
$error$
$end$
223
 if ($proc + $proc << 0x5 >> $thread << $buffer >> @rdi & (0n15) & @r10 >> ++@rbp ^ $teb << @r13 ! $proc + $proc << 0x5 >> $thread << $buffer >> @rdi & (0n15) & @r10 >> ++@rbp ^ $teb << @r13)  { test_statement(0x6FC); } else { test_statement(0x243F); }
$error$
$end$
224
 if (@rbp + @r11 << 0n18 >> @rdx << ~@rbx >> $proc))@rbp + @r11 << 0n18 >> @rdx << ~@rbx >> $proc)  { test_statement(0xDAD); }
$error$
$end$
225
 if ($teb << @r10 << @r11 ^ @rdi & @r12 >> $proc ^ $proc & 0y0 & (0n10) ^ 0y10001 < 0x5 + (+@r10) << $thread & 0x6 << $ip >> @r10 >> @rdx & @r10 ^ $thread & $ip >> 2 & ~@rbx ^ @rdi >> $buffer | @r8 << 21 >> 0n0 ^ $ip & (2) & @r12)  { test_statement(0x2666); } elsif (@r10 >> -@rax >> @r13 & @r13 >> ++@r13 ^ $ip & -@r12)@rax >> @r8 & @rdx & $proc ^ (@rbx) | @rdx >> $buffer | @r8 ^ @rdx ^ @r12 | 0xD | @r10 | $thread) { test_statement(0x1131); }
$error$
$end$
226
 if (@rsp << @rbx ^ @r9 ^ @r11 ^ -(@rbx) & @r9 ^ @rbp ^ +(0y111) = @rsp << @rbx ^ @r9 ^ @r11 ^ -(@rbx) & @r9 ^ @rbp ^ +(0y111))  { test_statement(0xBCD); } elsif (0n1 << @rdi & @r8 >> $buffer & 0x3 | ($ip) >> ~(@rsp) & $thread & $proc | @rsp ^ (17) >< @r9 << $teb & $teb | 0y0 >> 0n5 & @rbp) { test_statement(0x2035); } elsif (@r11 >> $proc & @rdi | @rdi ^ 4 ^ @rdi | @r12 ^ +$ip | $thread >< $proc >> $proc & 21 & @rax) { test_statement(0x12DC); } elsif (@r8 | @r12 ^ @rax | @rdi | @rax ; @r8 | @r12 ^ @rax | @rdi | @rax) { test_statement(0x572); } else { test_statement(0xECE); }
$error$
$end$
227
 if (@r8 << @r11 >> @rax >> ~@r13 >> @r13 & +++~@r12 << $ip >> @rax ^ @r11 << @rdx & @rsp ^ @r11 & 0x9 & @r11 ^ @r10 & 0x5 ^ $proc > +$buffer >> @r11)  { test_statement(0x1D5F); }
$error$
$end$
228
 if (@r12 << $proc | @rsi >> @rbx >> @rsp | 0y10001 >> @r9 ^ @r8 ^ -~~@rsi | 0x13 ; @r12 << $proc | @rsi >> @rbx >> @rsp | 0y10001 >> @r9 ^ @r8 ^ -~~@rsi | 0x13)  { test_statement(0x761); } elsif (@rbp << @rdx & @r13 | $proc & @rax @rsi << @rsi | @rsp >> @r9 & 0xD & @rbx ^ ~$buffer ^ @r9) { test_statement(0x18FF); } else { test_statement(0xB6A); }
$error$
$end$
229
 if ($buffer + 0n17 @rax + $proc & $teb ^ ~@rsp >> $proc & @r11 | $buffer >> 0 & @r11 >> @r13 & @rsi | @rbx >> @r12 & @rdx & $teb | @rax | 0x2 ^ @rdi)  { test_statement(0x25FF); } else { test_statement(0x19E2); }
$error$
$end$
230
 if (@rax & @rdx << @rax >> @rax >> $thread == @rsi & $teb >> @r12 & $buffer >> ~@r11 & -@rbx & $thread | @r9 << @r12 >> @r13 & ~-@rbx & ($ip) & $buffer | @r13 | $buffer ^ @rax)  { test_statement(0x140A); } else { test_statement(0x14E2); }
$error$
$end$
231
 if (@r8 >> $buffer >> $teb >> -$teb ^ +@r12 >> $thread >> 0n17 & $ip | @r11 << 0x9 ^ @r8 >> --10 ^ @rbx ^ $ip ^ @rdi | @rax ^ 0n10 | @r13 & @rbp ^ +@rax))@rbx << @r13 << @r12 & 23 << @r10 & $proc >> -@rdx | $ip << @rax >> @rdx >> 0n0 & 3 & 0y101 ^ @rdi >> @rsp ^ $buffer & 0n7 ^ @rdx ^ $ip)  { test_statement(0x16FB); } else { test_statement(0x1100); }
$error$
$end$
232
 if (@rsi << @rbp ^ +$teb << (7) >> $teb >> @r9 & +@r13 & @r11 ^ @r12 >> ($thread) ^ @r11 ^ 0n5 >= $ip + @rsi)  { test_statement(0x262C); }
$error$
$end$
233
 if (~0x11 + @rax >> (@r11) >> @r8 >> @rbx ^ @rsi >> $ip ^ @r12 | -@rdi >> +@r11 >> 1 ^ @rdx >> $ip & @r11 & $thread | @rbp & @r12 | @rax ^ 0x2 ^ @r10 | @r11 ^ ~@rbp | @rsi)@r8 >> @rdi << @r11 & $ip << ~@rdx & ~@r10 | @rdx | -0y110 >> @r8 ^ @rdi & $ip | 0n6 & @rbp ^ $thread)  { test_statement(0x14FC); } elsif (@r9 << $ip & -$ip >> ~$thread ^ ~@r13 ^ (@r11) & @rsp | @r11 >> @rbp ^ $buffer ^ -+$thread ^ $proc | @r10 & @rdi ^ 4 ^ @r9)$thread << $teb) { test_statement(0x1D6F); } elsif (@rbp >> ~$teb ^ $buffer & 22 ^ @rax ^ --@rbp(~(@rdx) | @rdi & -@r8 ^ @r11 ^ @rdx) { test_statement(0x24A1); }
$error$
$end$
234
 if (@rsp << @r10 >> @rbx >> @r10 ^ +~@r10 >> 4 ^ $buffer >> +14 <= @r8 + $buffer << (@rbp) << @r11 >> 0x5 >> @rsi ^ $teb >> 0n8 >> @rsi & @rbp & $ip & @r11 | @r13 ^ @rax >> 0x6 & 0xE ^ @r13)  { test_statement(0x5D0); } elsif (11 & @r8 >> @rbx & 0y1010 & -0y10001 | 0y1010 ^ @r12 | ~0xB & 0x10 | 5 ^ @rdi | +@rsp <= @rdx & @r12 >> @rbx) { test_statement(0x15E5); } elsif (~@rbx & @r10 & 7 | @rsp & ~@r9 | $teb ! +@rdx >> @r10 & @rdx ^ 0n17 & +$teb | @rbx & @r8 ^ @r13 | $thread ^ 0x13) { test_statement(0x1274); } else { test_statement(0x1FDB); }
$error$
$end$
235
 if (@r13 + $thread << @rdi << 0x4 & @r9 << @r10 >> $proc ^ @rsi << @r11 >> 0xB & @r13 >> ~-@rax & 0y1100 & @rax | $buffer | @rdx & +$teb @r13 + $thread << @rdi << 0x4 & @r9 << @r10 >> $proc ^ @rsi << @r11 >> 0xB & @r13 >> ~-@rax & 0y1100 & @rax | $buffer | @rdx & +$teb)  { test_statement(0xB46); } elsif (@r10 << -$teb & @r12 & ~$buffer ; $proc >> @rdx >> 12 & @r9 ^ 0n4 >> @r9) { test_statement(0x2114); } elsif ($teb >> (~(@r11)) & +$buffer ^ @rsp | +$ip & $proc <= @r11 | @r8 & @r8) { test_statement(0x13D9); } elsif (@r13 | @rsi | @r12)@r13 | @rsi | @r12) { test_statement(0x3B0); } elsif (~(+($proc)) >< $thread) { test_statement(0x13E2); }
$error$
$end$
236
 if (~@r10 + @rdi << @rdi << @rsi >> $proc & @r13 << 0y10001 >> @r9 >> @rsi & @r13 ! @r13 | @rsp & @r8 >> @r9 & $teb & (@rbx) | ~@rbp >> @rdi)  { test_statement(0x23D5); }
$error$
$end$
237
 if (@rdi >> ~2 << $proc ^ 0xD << $buffer ^ $buffer >> ($teb) & @rbx ^ @r10 & @r13 ^ @r13 ^ 11 | @r9 & ($teb) ^ @r12 & @r13 | @rbp <= @rdi >> ~2 << $proc ^ 0xD << $buffer ^ $buffer >> ($teb) & @rbx ^ @r10 & @r13 ^ @r13 ^ 11 | @r9 & ($teb) ^ @r12 & @r13 | @rbp)  { test_statement(0xE3); } elsif (-@rax ^ @r13 >> @rsp ^ @rsp | @rdi >> +~~@r12)~@rbp << @r12 >> @rbx ^ @rbp ^ 0n16 ^ $ip | @r12 >> @r11 | @rdi & @r9) { test_statement(0x1089); } elsif (~+14 >> $teb ^ @r9 != 0y1011 >> @rsi & @rax & (@r8)) { test_statement(0xF90); }
$error$
$end$
238
 if ($thread + $ip >> ~@r12 & $thread << 0y11 >> +0x10 & $teb & @rbx & @rsi >< @rsp >> @rsi << @rax >> @r13 >> @r11 & @rdi)  { test_statement(0x1612); }
$error$
$end$
239
 if ($buffer >> 14 | @r8 >> ~$thread >> @r11 ^ @rax ^ +~@r13 ! $buffer >> 14 | @r8 >> ~$thread >> @r11 ^ @rax ^ +~@r13)  { test_statement(0x93C); }
$error$
$end$
240
 if (@r12 + 14 >> 0x1 >> @rsi >> @r11 ^ 0n19 << ~0y1010 >> @r8 & @rdx >> $proc <= 6)  { test_statement(0x16E3); } elsif (0n18 >> @r11 & +@r12 >> @r9 > @rsp & @r11 >> @r10 ^ @rbx) { test_statement(0x12B8); } elsif (@rdi >> @r8 | $proc((@rdi >> @r8 | $proc) { test_statement(0x1338); }
$error$
$end$
241
 if (@r9 + @rsi >> +@r12 << +$teb & @r10 & @rdx & @r9 & 0n6 ^ @r9 >> @r13 | $thread >> @rbp & ---@r8 >> @r12 ^ @rbx >> @r12 & @rdx & ~13 | @rbp >> @rsi & $teb ^ @r13 = @r9 + @rsi >> +@r12 << +$teb & @r10 & @rdx & @r9 & 0n6 ^ @r9 >> @r13 | $thread >> @rbp & ---@r8 >> @r12 ^ @rbx >> @r12 & @rdx & ~13 | @rbp >> @rsi & $teb ^ @r13)  { test_statement(0x1FBE); } elsif (@r12 << @r13 & @r11 >> $buffer & $ip ^ @rdi & @rsp & 0y1100 <> $thread << @r12 ^ @r11 & @r9) { test_statement(0x8F3); }
$error$
$end$
242
 if (($ip) << @rsp << $proc >> ($proc) >> $ip >> (@r8) ^ @rdx >> @r10 >> $proc | @rsp & 0n13 & $proc | 0n19 ^ @r12 ^ @r11)($ip) << @rsp << $proc >> ($proc) >> $ip >> (@r8) ^ @rdx >> @r10 >> $proc | @rsp & 0n13 & $proc | 0n19 ^ @r12 ^ @r11)  { test_statement(0x164A); } elsif ($ip >> +@rbp >> $proc & 0xB ^ $ip ^ @r12 ^ @rbp | $teb >> $buffer == @r11 >> @rsp >> 0y10010 & 0n4 >> @rsp ^ $thread ^ +@r11 ^ 0x13 ^ @rsi) { test_statement(0xB19); }
$error$
$end$
243
 if (@rdi + 0n13 >> $ip & $proc << @rdx & @r10 >> +@rsp & @rbp > $buffer + 0y100 << @r10 >> @r9 << $buffer >> $thread >> @rbx & $ip >> (@rdi) >> $teb & 0 & $thread)  { test_statement(0xDF7); } else { test_statement(0x4CB); }
$error$
$end$
244
 if (@rbp + 0y10001 << 0xD << @rdi ^ 16 << @r8 ^ @rax & 20 & @rdi ^ @rbp ^ 0xA | (0x8) << @rdi >> @rdx >> @rbx & -@r12 & +@r9 = 13 & ~$thread << @r12 >> @r8 >> @r10 ^ $thread & @rdi >> 20 & @r10 & @r8 ^ @r9 ^ @r11 | @r13 << $thread | $teb & +$thread)  { test_statement(0x1932); } else { test_statement(0x22C4); }
$error$
$end$
245
 if ($teb ^ $proc & @rbx >> @rbx & ~0n6 & $ip ^ @rsp >> $ip & $thread & @rax | @r11 << $thread ^ @rbx >> @rdi ^ ~@r13 & -@rdi ^ @rsi >< -$thread << @rbx << @r12 & -@r13 & @rdi >> (@rdi) | @rax >> @r13 & @r9 >> @r13)  { test_statement(0xA99); } elsif ($proc >> 0n11 & @r11 >> @rsp | @r9 & ~$teb & @rax ^ $ip & 0y1010 | @rbp & @rdx | @r10 ^ @r10 == @rsi << @r13 >> $buffer >> @rbx & @r13 >> $proc & +-@rbp & @r11 ^ ~0n8 >> +0n5 | ~(-@rdi) >> $ip & $teb & ~@rdi | 12) { test_statement(0xB2F); } else { test_statement(0xE1D); }
$error$
$end$
246
 if (@rbp << 0n14 >> +0y1 & @rdx << @rbp ^ @r13 << @rax >> $thread >> @rbp ^ @rdx >> $ip | @r11 >> @r11 | @r12 >> @r11 | @r9 | @r10 ! @rbp << 0n14 >> +0y1 & @rdx << @rbp ^ @r13 << @rax >> $thread >> @rbp ^ @rdx >> $ip | @r11 >> @r11 | @r12 >> @r11 | @r9 | @r10)  { test_statement(0x49D); }
$error$
$end$
247
 if (@r9 + 0y1110 ^ (@rsi) << $ip >> $ip & (@rbx) >> @r12 & @r9 & -$thread ^ @rbp >> @r13 & ~-@rdx & $thread | @rsp << -@rsi >> @r13 | $buffer ^ @rsp & $ip))$ip + (@rdi) >> 4 << @rsp >> $buffer >> (+$teb) | 0xD << @rsp >> ~@r13 ^ @rbp ^ @r13 | @rbp >> 0y1110 ^ @rax & $thread)  { test_statement(0x100B); } elsif (-0y1000 >> 0y10010 >> @rbp ^ @r12 >> 5))-0y1000 >> 0y10010 >> @rbp ^ @r12 >> 5) { test_statement(0x1AFD); } elsif (0x2 | -0n9 ^ @rdi | @r10 | -@rbx @rax >> @rbp & @rsi ^ $thread & +@rdx) { test_statement(0x1E77); } else { test_statement(0x168C); }
$error$
$end$
248
 if ($buffer + @rbp >> @rsi | @r9 << $ip >> @rdx >> @r8 != $buffer + @rbp >> @rsi | @r9 << $ip >> @rdx >> @r8)  { test_statement(0x22BF); } elsif ($proc | $buffer & @rax | +0n16 ^ @rax | -@r9 ^ @r9 ! @r8 << -$thread & @rbp ^ @rbx >> 0y1001 & $teb ^ 0x12 | $ip ^ @r9 | @rbx & $ip ^ $buffer ^ ($teb)) { test_statement(0x5DA); } elsif (@r8 >> @rbx & @rbp))@rdx >> -0x12 | ~-0x3 & @rsp ^ $proc ^ $teb | (0n19) | @r12) { test_statement(0x43D); } elsif (~@rsp & @rdi ^ 0y1010 ^ $thread | 0y11 | @rdx = @rbp & @rdx | +@r12 ^ @rdx) { test_statement(0x1BA3); } elsif (@r9 | @r11((@rbx ^ @r8 | $proc | @rbx) { test_statement(0xFE0); } elsif (+0y1101 | @rsi ! +0y1101 | @rsi) { test_statement(0x1150); } else { test_statement(0x2511); }
$error$
$end$
249
 if (@rdi << (~0n10) >> 0y1111 >> @r11 >> $buffer & $thread ^ @r11 >> @r11 & @r10 >> @r13 & $teb | $proc & (11) & @rdi & @r13 | @r10 ; -$proc + 0x12 << $thread & @rdi << @rax >> $proc >> $buffer & ~~@rdi >> -0x2 ^ @rsi)  { test_statement(0x2200); } else { test_statement(0x2075); }
$error$
$end$
250
 if (@rax + $teb >> @rax << @rsi >> 0y110 >> -@r9 ^ 0y1001 | 0n8 | @r12 ^ @rsi | $buffer | $teb ^ @r13 | +@rbp | $teb != @rax + $teb >> @rax << @rsi >> 0y110 >> -@r9 ^ 0y1001 | 0n8 | @r12 ^ @rsi | $buffer | $teb ^ @r13 | +@rbp | $teb)  { test_statement(0x19BB); } elsif (@r8 >> $teb >> +(@r9) & @rdx >> ~@rsi & $ip @r8 >> $teb >> +(@r9) & @rdx >> ~@rsi & $ip) { test_statement(0x1D04); }
$error$
$end$
251
 if (@r13 & @r11 ; 0n5 >> @rbp << $proc & @rsi >> @r9 >> @rdi ^ -22 << $buffer >> @r11 >> 0x1 ^ 0y1000 >> -@rdx | +-@rsp >> @rbp | (~@r10) ^ 0n3 & @rsi | $thread & 20)  { test_statement(0x22C4); } elsif (@rsi >> @r9 & 0x10 >> $ip(@rsi >> @r9 & 0x10 >> $ip) { test_statement(0x941); }
$error$
$end$
252
 if (@r10 + $proc << @rbp << @r12 >> @rax | $ip(@r10 >> +-0x5 ^ @rbx << @rdi >> $thread & (@r10) >> @rsi ^ (@r12) >> ~@r9 ^ $ip & @rbx)  { test_statement(0x1DF3); } else { test_statement(0x25B7); }
$error$
$end$
253
 if (@r12 + @rsi << $thread ^ $buffer >> @r10 >> 14 & @rbx >> 13 ^ $proc >> @rsi & -@rsi & @rdx ^ @rbx ^ @r9 ^ (@rsp) | @r12 ^ 23 >> ~@r10 & @rsi & 0 ^ ~@rdx & @r13 ^ 3 ^ @rdx > @r12 + @rsi << $thread ^ $buffer >> @r10 >> 14 & @rbx >> 13 ^ $proc >> @rsi & -@rsi & @rdx ^ @rbx ^ @r9 ^ (@rsp) | @r12 ^ 23 >> ~@r10 & @rsi & 0 ^ ~@rdx & @r13 ^ 3 ^ @rdx)  { test_statement(0x8AA); } else { test_statement(0x5E2); }
$error$
$end$
254
 if (@r8 & @rsi >> @rax >> @r13 & @rdi ^ $proc << ~@r8 & 0y11 & @rbx & @r10 ^ -0xF ^ 0x8 & $proc ^ @r12 20 << -17 << $buffer >> ~@r13 << $teb | 0n11 >> $thread & @rbx >> @r13 & $buffer ^ @rsp & @rsp)  { test_statement(0x1678); } elsif (0x2 << @r9 & $proc & @rbx & 0n7 <= @rbx << @r12 >> @r10 | ~@rbp ^ @rbp & @rsp) { test_statement(0x133E); } elsif (@r9 <= 0x1 >> @rsp ^ $ip & @r9 ^ 0n7) { test_statement(0x1EE3); } else { test_statement(0x1609); }
$error$
$end$
255
 if (@rdi >> $thread & @rsp & @r12 & @r9 ^ @r12 >> @rsp >> 0xD & 0y10010 == $ip + 0n14 << @r9 & @r8 >> @rdx >> @r12 ^ 0y1100 >> @rax | $ip >> @r12 ^ $proc & @rdi & 0n12 ^ 0n0 | (@rsi) & @r13)  { test_statement(0xFBF); } elsif (@r13 & +@rax >> ($thread) ^ @rdi & @rbp & @r8 ^ ~@r10 | @rdx >> ~22 & 0n1 & ~$teb ^ (0n7) & $buffer >< @r13 & +@rax >> ($thread) ^ @rdi & @rbp & @r8 ^ ~@r10 | @rdx >> ~22 & 0n1 & ~$teb ^ (0n7) & $buffer) { test_statement(0x232); } elsif ($proc(($proc) { test_statement(0x56F); } elsif (21 | @r12 ^ @r10 | 0y10000 == 21 | @r12 ^ @r10 | 0y10000) { test_statement(0x1); } else { test_statement(0x1567); }
$error$
$end$
256
 if (0n7 + (0xF) << @rax >> @r10 << 0n5 | ~@r13 << @r12 >> @rax >> @r11 ^ 0n0 & @rbx < @r10 << $thread ^ @r13 << @rdx ^ @rsi & @r13)  { test_statement(0x55B); } elsif (+$thread << (@rsp) >> @rsp & 11 & +~@rsi ^ @r12 <= @r8 << $ip & (@r10) & @rbp ^ @rdx & @r9 & $ip) { test_statement(0x1E92); }
$error$
$end$
257
 if ((0x7) << 22 << @r12 >> $proc << $ip & -$ip << 0n15 | $proc & ~@rdx >> 0y100 | @rbx > (0x7) << 22 << @r12 >> $proc << $ip & -$ip << 0n15 | $proc & ~@rdx >> 0y100 | @rbx)  { test_statement(0x1350); }
$error$
$end$
258
 if (0x11 + 16 & 0x12 << @r9 & @r8 >> +@r8 ; 0x11 + 16 & 0x12 << @r9 & @r8 >> +@r8)  { test_statement(0xBB8); } elsif (@rbp << @rsi >> @rsp | @rbx & 0 & @r9 | @r12 ^ 0y1 | @r9 ^ @r8 | $teb < $teb << @rax >> @rsp ^ ~@r11 & @r13 | 0x10 | @r9 & @r8 | @r10 ^ $buffer | $proc) { test_statement(0x13E); } elsif (2 & $proc = -@r12 & $thread ^ @rsp ^ ~$buffer ^ $thread | $teb ^ @r9) { test_statement(0x1BD6); } elsif (@rsp ^ @r8 ^ 4 | @rbp | (@r12) | -@rbp != @rsp & 0y101 ^ $buffer | (~@r10) ^ +@rsp) { test_statement(0x7AF); }
$error$
$end$
259
 if (@rdx << $buffer >> @rdx << @rax >> @r13 >> $proc ^ ($buffer) >> $teb & @r10 >> @r8 & $teb ^ @rdi >> $proc | $ip >> @rax >> @rsp & +@r11 & @r11 ^ @rdi & @r10 | @rax >> $proc & (-0y101) | 0xF | $proc | @r9 | @rdx != ~$teb << 0y1101 ^ @r8 & @r8 ^ @rdx ^ @rax ^ $proc | -$ip >> 0n0 & ~-0y1111 >> +$thread ^ @r12 & $ip & @rsi)  { test_statement(0x1AA7); }
$error$
$end$
260
 if (-@rax >> @rdi >> @r12 >> @rbp & @r13 << 0y1010 >> @r13 & @rsi >> @r9 & $ip & @rdx == $proc + $proc >> @rbx >> @rsp | @r11 << $proc ^ @r11 ^ $teb ^ -$proc | $proc & ~@r12 ^ +($buffer) & @r9 ^ @r9 | @r9)  { test_statement(0xDC9); } elsif (+@r12 >> ~@r9 >> -@rdi & $teb >> $proc & (0y101) & @r10 ^ @rdi & @rax ^ 2 & @r11 | 20 & @rsi & $teb ^ @rsi & @rsi ^ $thread ^ ~$teb(+@r12 >> ~@r9 >> -@rdi & $teb >> $proc & (0y101) & @r10 ^ @rdi & @rax ^ 2 & @r11 | 20 & @rsi & $teb ^ @rsi & @rsi ^ $thread ^ ~$teb) { test_statement(0x1589); } else { test_statement(0x216D); }
$error$
$end$
261
 if (~13 << ($proc) << $proc ^ @rsp << ~@r10 & @rbp >> @rbp ^ @r13 | @r12 << @r8 >> @rbx & $thread & @r8 ^ @r9 >> $proc ^ @r11 == ~13 << ($proc) << $proc ^ @rsp << ~@r10 & @rbp >> @rbp ^ @r13 | @r12 << @r8 >> @rbx & $thread & @r8 ^ @r9 >> $proc ^ @r11)  { test_statement(0x89E); } elsif (-@r13 >> @r8 & $thread & @r10 & @rdx ^ @r9 >> @r8((-@r13 >> @r8 & $thread & @r10 & @rdx ^ @r9 >> @r8) { test_statement(0x1FF1); }
$error$
$end$
262
 if (@r11 << +(@rsi) << $proc != @r8 + @r11 << ~@rsp << 0n5 >> @r8)  { test_statement(0x593); } elsif ($thread & @r13 | @r13 ^ +2 & (@rsp) | @r11 & @r13 | $proc ^ $teb((0y1010) { test_statement(0x1D39); } elsif (@r12 >> 0y101 & -@r8 <= (@rax) | $ip) { test_statement(0x756); } else { test_statement(0x203F); }
$error$
$end$
263
 if (@r9 & @r8 ^ +@r11 >> @rbx ^ @r13 >> @rbx ! 0n17 >> @rdx >> (20) ^ 0n13 << $buffer)  { test_statement(0x182E); } else { test_statement(0x1D92); }
$error$
$end$
264
 if (0y1110 >> 0y10000 << @rdx >> $ip & @rdx >> @rbx & 0n2 ^ @r8 ^ @r11 >> @r13 | $ip | @rbp >> @r9 & 7 & @rdi ^ @rsp | @r13 ^ @rsp | 5 ^ +0y10 | $buffer | @rdx >= @r12 + ~@r11 >> @r8 << @rdi >> @rdx >> @r12 ^ 10 << @rdx & @rbp >> @rsp ^ @r11 & @rsp & @r11)  { test_statement(0x99F); } elsif ($ip << @rax & $thread ^ $ip >> $thread & 0n8 ^ @rdi | $ip & @r12 & $teb ^ 0n9 & @rbp $ip << @rax & $thread ^ $ip >> $thread & 0n8 ^ @rdi | $ip & @r12 & $teb ^ 0n9 & @rbp) { test_statement(0x494); } else { test_statement(0x23EB); }
$error$
$end$
265
 if (@r12 << @rdx << @r11 & 11 << $ip >> 0n17 >> 0n5 & @rbx & $ip & @r8 | $ip >> @r8 & $buffer >> $proc & $buffer | $thread >> @r10 & @rbp & @r13 | @rax & @r11 | @rdx ^ ~+@r12 == @rbp + $teb << @rdi << @r12 & @rdi & @rax >> @r9 & @r8 & @r12 | 0x12 << 0n0 >> $thread >> @r10 & @r12 & @r10 & @r11 ^ 0n11)  { test_statement(0x18F4); }
$error$
$end$
266
 if (@r12 + ~$teb & @r13 << @rdi >> @rdi >> @rdx & 0n17 >> $thread & @rsp @r12 + ~$teb & @r13 << @rdi >> @rdi >> @rdx & 0n17 >> $thread & @rsp)  { test_statement(0x20AD); } elsif ($ip & 20 >> 0y1 & $buffer & 0xC ^ -0n0 & @rbp | 12 >> @rax $ip & 20 >> 0y1 & $buffer & 0xC ^ -0n0 & @rbp | 12 >> @rax) { test_statement(0x8E); } elsif (@rsp ^ @r11 & $buffer ^ @r9 ^ $buffer == @rsi & @r12 & $teb ^ 0n2 ^ @rdi ^ $proc) { test_statement(0x1347); }
$error$
$end$
267
 if ($ip + @rsp << @r12 & $thread >> $thread >> $thread ^ @r8 ^ $proc >> $thread < $ip + @rsp << @r12 & $thread >> $thread >> $thread ^ @r8 ^ $proc >> $thread)  { test_statement(0x12DA); } elsif (@r13 << 17 >> @rsi >> @rbx ^ +-14 >> @rbx ^ @r8 ^ $proc @rsp ^ +@r11 ^ @r10 & @r12 ^ @rbx ^ $buffer | 22 >> -3 ^ ~$buffer | @r10) { test_statement(0x17F1); } elsif (@r9 >> @r12 & @rbx & (($buffer)) ^ @rbp))0y1000) { test_statement(0xDE2); } else { test_statement(0x1535); }
$error$
$end$
268
 if (@rsp + (@r11) & @rsi ^ (@rbx) << @rbp ^ $buffer ^ @r11 & @rax ^ @r11 ^ @rbp | 0n18 >> @r13)~@rbp >> $ip ^ $thread << $buffer & $buffer & $ip | 0x5 & @r11 >> 21 | @r9 >> $ip ^ +@r12 & $thread | $buffer ^ @rbp | @rsp ^ ~@rax | +@rdi | $buffer)  { test_statement(0x7B1); } elsif (@rsp >> @r11 & @rdi <> -23 & (@r11)) { test_statement(0xED6); } elsif (@rdi >> @rdx))6 >> -@rax & @r9 ^ @rax & 0n18) { test_statement(0x218B); } elsif (@rdx ^ @r11 > @rdx ^ @r11) { test_statement(0x2672); } elsif (@rsi ^ @r8 | @rdx)$teb ^ $proc | 0n7) { test_statement(0x246D); } else { test_statement(0xF12); }
$error$
$end$
269
 if ($thread << @rbx & @r8 << @rdx & @rdx ^ @r8 & $ip ^ @rbp >> @rbp & --0x13((-@rbx << @r12 << 0y111)  { test_statement(0xE2F); } else { test_statement(0x1662); }
$error$
$end$
270
 if (@r10 << @rdi >> 0y10011 & (@r12) & @r9(((@rbx) << 0y1110 << (@r12) & @rdx << $proc >> @rax >> @rsi & -6 | @rsi << @r12 | @r8 ^ $ip ^ @r9 ^ 0n17 | @rdx ^ @r10)  { test_statement(0x162); } elsif (@rbx >> @rax >> $thread | @r13 >> @rbp | $thread = @rax << @rbx & $ip >> $buffer) { test_statement(0x2174); }
$error$
$end$
271
 if (0x4 + +@r12 << @r8 << $thread >> $thread << @r8 & @r10 << @rdx >> @rax | @r9 << $proc | @rdx >> ~@r11 != $teb >> @rbp << $ip >> @r12 ^ @rdx << +@r11 & $ip | (@rsi) >> @r9 >> ~@r12 ^ 0x1 & @rdx & @r10)  { test_statement(0x21BA); } else { test_statement(0xE7B); }
$error$
$end$
272
 if (@rax + @r12 << @rsi(@rax + @r12 << @rsi)  { test_statement(0x1F7); } elsif (-$teb ^ @rbp & @r9 & @r12))0x10 << @r8 >> (+@r12) >> @rsp ^ 1) { test_statement(0x27E); }
$error$
$end$
273
 if ($buffer + 0x10 << $proc << @r11 | $ip >> @r9 & 0n18 >> (@rbp) & @rsp & $ip = @rax + @rbx << @rax >> $thread << $thread)  { test_statement(0xE95); } elsif ($proc >> @rbp >> @r13 ^ @r12 >> $thread & $teb ! 0 & $thread >> 20 ^ 0xB >> @rax & ($proc)) { test_statement(0x13FB); } else { test_statement(0x1828); }
$error$
$end$
274
 if ($thread << 0n0 ^ $buffer << @rbp >> @rbp & @rdi >> +@rsi ^ @rax >> 0x9 & @r8 < $thread << 0n0 ^ $buffer << @rbp >> @rbp & @rdi >> +@rsi ^ @rax >> 0x9 & @r8)  { test_statement(0x1C96); } elsif (@r12 << 0y10001 >> 0xF & 1 ^ 0xE >> +0n8 & @rsi ^ -@rdi & $thread((@r12 << 0y10001 >> 0xF & 1 ^ 0xE >> +0n8 & @rsi ^ -@rdi & $thread) { test_statement(0x116E); }
$error$
$end$
275
 if (0n16 | @r9 ^ @r8 >> @r12 ^ ~14 | @r10 & @r12 > $teb << 0xF >> $proc >> @rsi >> ~$buffer)  { test_statement(0xC2C); }
$error$
$end$
276
 if (0y1000 + @rbp >> @rdx >> $buffer >> @r12 & @rbx ^ $proc << +0x1 >> $thread >> $proc & +$buffer >> $buffer & @r8 ^ @rsi >> @rax & $proc ^ @r10 | 0n15 & 0y10011 >> @rdx)@r11 + 0n14 << @rbx & ~$thread << $thread & +$proc >> @rdx & @rsp ^ @rax >> $buffer >> @rsi | @rdx << @rbp >> $buffer ^ $ip & 5 & @rsi ^ @rdi ^ $buffer | (3) >> -@rdi ^ $ip & ~@r11 ^ +$proc)  { test_statement(0x49); } elsif (+@r13 >> @rdx ^ @rsp >> @r12 | $thread >> @rsp & @r9 ^ 0y110 & @rbx ^ 0n10 >= @rsp >> @r10 & $ip >> @rsp & @rbp ^ ~@r8 ^ $teb & ~2 | @r8 >> @rdx & $buffer & $buffer) { test_statement(0x1E2E); } elsif (@r13 >> $buffer | 0y100 & $thread ^ @rbx ^ @r12 | @rbp ^ @rdx ; @r13 >> $buffer | 0y100 & $thread ^ @rbx ^ @r12 | @rbp ^ @rdx) { test_statement(0x2FA); } elsif (@r9 | +@rdi == @r9 | +@rdi) { test_statement(0x13F1); } elsif (+@rsi ^ 0x10 ! @rbp | @rsp) { test_statement(0x25ED); }
$error$
$end$
277
 if (0n12 + @rax << -@r10 & @rdi >> 0x6 >> $ip & @r9 >> @rax & 1 | $buffer(~14 >> $buffer << $teb & (@r8) & $proc & $proc | @r12 & @rax >> $buffer & @rsp ^ @rbx | @r12 & $buffer & @rdx | +7)  { test_statement(0x199D); }
$error$
$end$
278
 if (@rsp >> @rsp & $teb << @rdx ; 0xF + @rsp & @rax ^ +@r13 << @r10 & 13 >> $teb & $thread | (12) << @rsp >> @r10 ^ @rsi & $thread)  { test_statement(0x6BC); } elsif (@r8 << @r8 ! 0y10 << @rsi & 0x9 & 0x5 & @rbp ^ 0xD >> (0x3) & 0y1100 ^ @rsp ^ @rbp | @r8 ^ @r11 & 0y1) { test_statement(0x22C9); } elsif (@rbx >> @r10 ^ $buffer | @r11 ^ @rdx | @r9 ^ 0y1010 @rbx >> @r10 ^ $buffer | @r11 ^ @rdx | @r9 ^ 0y1010) { test_statement(0x1ECA); }
$error$
$end$
279
 if (@rax + @rsp << $proc & @rbp >> -0x6 & +@rbp >> 0y110 ^ @r8 << @r10 >> 0n12 >> @rbp & @rdi >> +@r13 = @rax + @rsp << $proc & @rbp >> -0x6 & +@rbp >> 0y110 ^ @r8 << @r10 >> 0n12 >> @rbp & @rdi >> +@r13)  { test_statement(0x101B); } elsif (0x9 >> 0n1 >> $thread & @rbx & 0xF ^ @r11 >< 0x9 >> 0n1 >> $thread & @rbx & 0xF ^ @r11) { test_statement(0x1C61); } elsif (@r9 & ~@rdi | $proc & @rdx >= @r9 & ~@rdi | $proc & @rdx) { test_statement(0xCB9); } elsif ($proc ^ $buffer ^ @r8 == @rbx & $buffer) { test_statement(0x1FDB); } elsif (@r8 | -$buffer)@r8 | -$buffer) { test_statement(0x5FF); }
$error$
$end$
280
 if (@r13 + 0y10001 << 0 << @rdi & @r9 >> @r13 >> @rsp ^ @r10 << @r12 ^ @rax >> 0xF & 0n10 & @r9))@r8 << @r10 << $proc >> @r13 >> @r9 >> @r11 ^ @r8 & @rsi)  { test_statement(0x14EB); } elsif (@rsi << @rbx >> @rsp >> $thread & @rdx >> @rdi & @rdx & $proc ^ @rdi & $proc & @rdx | $ip >> @r9 ^ @rsi & 0y11 | 0y1 & @rdi ^ 7 ^ @r12 @rbp & @rax ^ ~$ip >> @rbp ^ @r10 ^ 0y1011 | -@rbx & @rbx ^ 0n19 ^ $thread ^ @r11 | @rsp & @r12 ^ @r8) { test_statement(0x1BBE); }
$error$
$end$
281
 if (@rbp + $proc >> @rax ^ @r13 >> $thread | 0y1110 << @r13 >> @rbx == $proc)  { test_statement(0x121D); } else { test_statement(0x786); }
$error$
$end$
282
 if (+0n7 >> @r10 ^ -0y1110 << +@rax | $buffer >> @r8 >> 0n5 ^ ~@rbx >> -@r12 | $proc >> @r10 & ($teb) & @r8 | $buffer & 0y1100 ^ @rbp | @rsi ^ +0y1001 == 0y1010 + @r10 & @r13 << 0n11 | @rsp & 0n2 | @rbp ^ @r8 & @r9 | @rsi | $thread ^ @r13 | @rdx)  { test_statement(0x2172); } elsif (@rbp << @rbp & @rax >> @rax | @rbp & @r13))@r8 >> 0y111 >> (-$teb)) { test_statement(0x173E); } else { test_statement(0xE34); }
$error$
$end$
283
 if (@rsi << 12 << $proc >> 0x7 << @rsi >> @rdx | @r9 << @r9((@rsi << 12 << $proc >> 0x7 << @rsi >> @rdx | @r9 << @r9)  { test_statement(0x115); } elsif (0y110 ; $thread << 14 ^ 0 >> $buffer ^ @rbx ^ @r13 | @rsp >> @r10 & @rbp & ($teb) ^ @rdi) { test_statement(0x3F6); }
$error$
$end$
284
 if (@r8 + @rdx << @r10(@r8 + @rdx << @r10)  { test_statement(0xE68); } else { test_statement(0x1DAB); }
$error$
$end$
285
 if (@rdi >> -@rsi & -0y100 << @rdx >> @r11 & $teb >> @rbp ^ $thread << $ip >> @rax ^ 0y1111 >> @r11 & 0n5 ^ @rdx & $buffer != @rdi >> -@rsi & -0y100 << @rdx >> @r11 & $teb >> @rbp ^ $thread << $ip >> @rax ^ 0y1111 >> @r11 & 0n5 ^ @rdx & $buffer)  { test_statement(0x175E); } else { test_statement(0x1A5E); }
$error$
$end$
286
 if (@rdx ^ 0xA >> @r12 >> $teb | @rdi << @r8 >> $thread | 0y101 ^ @r13 & @r9 != @r11 + $teb << +@r8 ^ @rsp >> $proc >> 0n11 & $ip)  { test_statement(0x1DCA); } else { test_statement(0xF39); }
$error$
$end$
287
 if (@rax & @rax << @r8 | @r8 << @rax | @rdx & @rbp == @rax & @rax << @r8 | @r8 << @rax | @rdx & @rbp)  { test_statement(0x2060); } elsif (-@rbp ^ @r9 & @rdx & @rsp ^ @r8 & @rax ^ @rax | ~@r13 >> ~0x4 | $thread ^ @r9))(@rdi) << @rsi >> @r8 ^ @rsp & -1 | $proc >> @r11) { test_statement(0xEF0); } elsif ($thread ^ 0y1101 | @rbp | ~@rdx | @r10 <= +@r9) { test_statement(0x22D7); } elsif (0x3 & ~@r12 ^ @rbp ^ ~@r12 | @rax ^ @rbx == $teb & @rsi ^ 0y1100 ^ -@r9) { test_statement(0x264F); } else { test_statement(0x2025); }
$error$
$end$
288
 if (@r8 & $teb >> @r13 >> $buffer & $proc >> (-@r13) ^ $proc >> @r12 & @rbp >> ~@r13 & $ip & @r11 != @r8 & $teb >> @r13 >> $buffer & $proc >> (-@r13) ^ $proc >> @r12 & @rbp >> ~@r13 & $ip & @r11)  { test_statement(0x1435); } else { test_statement(0x690); }
$error$
$end$
289
 if (~@rdi + @rdx & $ip << @rbx >> $teb ^ 0y10011 | 17 >> -+($proc) ^ @r13 >> -$proc ^ @r13((~@rdi + @rdx & $ip << @rbx >> $teb ^ 0y10011 | 17 >> -+($proc) ^ @r13 >> -$proc ^ @r13)  { test_statement(0x1AF9); } else { test_statement(0x1761); }
$error$
$end$
290
 if ($thread + $buffer & @rsp & 0n11 >> @rsp ^ ($thread) << -@rbp >> 0y101 & $ip & @rsp <> @rsp << @rsi << 0x7 >> @rbp & 11 << @rdx >> $ip >> $buffer ^ +@r8 & -$proc ^ @r8 & @rdx ^ 0y1110 | 0n11 << @r9 >> @r11)  { test_statement(0x225); } elsif (@rax << -$proc ^ -0y10010 >> @r8 | @r13 >> @rdx != @r13 >> @rbp >> +@r11 & -$proc >> 0n13 ^ @rsi ^ @r8 & 0y1111 ^ @rbx) { test_statement(0x17EF); } elsif (5 >> @r13 ^ @rsi & $ip ^ (@r9) | 0xF & @r12 ^ ~$proc ^ ~$teb | -@rdi | $ip)~(@rbx) & $teb & $thread ^ @rsi) { test_statement(0x21FD); }
$error$
$end$
291
 if (0x8 | @r11 << @rsp & @r9 >> @r12 & 0y1011 & 0y11 ^ ~@rbp < 0x8 | @r11 << @rsp & @r9 >> @r12 & 0y1011 & 0y11 ^ ~@rbp)  { test_statement(0x1A05); } elsif (0x9 >> (-@r9) & 0y1 & @rbp | @rsi & $teb & @r12 ^ @r8 ^ @r8 | $teb ^ @r9 ^ +@rsp | @r12 | (@rsp) | @r9 >< 0x9 >> (-@r9) & 0y1 & @rbp | @rsi & $teb & @r12 ^ @r8 ^ @r8 | $teb ^ @r9 ^ +@rsp | @r12 | (@rsp) | @r9) { test_statement(0x26C6); } elsif (+~@r8 ^ @rdi <= @r13 >> 4 ^ 0n11 & @rdi ^ @rax ^ $thread) { test_statement(0x140C); }
$error$
$end$
292
 if (@r9 ^ @r12 << $proc >> ~-+@rsi & @r12 & $thread ^ +@r11 >> 0x2 & 0n10 | +@r11 << @rbp ^ 0x8 & $ip & +$thread | @rdx ^ @rsi & @r12 ^ $ip @r9 ^ @r12 << $proc >> ~-+@rsi & @r12 & $thread ^ +@r11 >> 0x2 & 0n10 | +@r11 << @rbp ^ 0x8 & $ip & +$thread | @rdx ^ @rsi & @r12 ^ $ip)  { test_statement(0x1EBA); } else { test_statement(0x1FAD); }
$error$
$end$
293
 if (@r10 + 0y10010 ^ 15 << @rbx >> @r11 ^ @rdi >> ~@rax & 0x10))13 + +$buffer << @rsi & @r12 >> @r8 ^ @rsp & @r11 >> @rbx & $buffer)  { test_statement(0x5DC); } elsif (@r8 >> 10 ^ $buffer | 0y1110 >> @r9))@rsp << @rax) { test_statement(0x17D6); } elsif ($proc >> @r11 ^ 0n3 | 0y111 @rax ^ @rdx ^ $proc) { test_statement(0x51B); } elsif (@rsp > 0x13 & $thread | @r9 ^ @r9) { test_statement(0x1968); } elsif (-@r11 < @rsi ^ 0y1011 | 0n18 | @rdx) { test_statement(0xCB3); } elsif (@r10 ; @rax) { test_statement(0x1575); } elsif ($buffer != @r11) { test_statement(0x1F9); }
$error$
$end$
294
 if (0n9 << @rbx << (@rsi) >> +@rbp << @rsp & @r11 << @r11 & 0x8 ^ @rsi << @rdx != @r10 + 0n14 >> $thread << @rbp)  { test_statement(0x13AD); } elsif (@rdi << @r13 & $ip ^ $proc >> ~-@r11 & @rax & 0x9 ^ @rsp ^ @r11 0y1000 & 0n7 >> @r11 & -@r8 & @rax ^ $thread & 0n7 & @rsp ^ @r9 | 0n10 & @r8 ^ @rbx & @rsi ^ ~@rax) { test_statement(0x47B); } elsif (@r13 >> ~$ip < $proc ^ ~12 & @rdx) { test_statement(0x714); } elsif ($thread & @r11 ^ @rbp ^ (0x12) > $thread & @r11 ^ @rbp ^ (0x12)) { test_statement(0x17BB); }
$error$
$end$
295
 if (@rsi << 4 << ~@r13 >> @rbx << @rax ^ @rsi << @rsi >> -@rsi ^ $proc | 0x2 & ~(@rdx) & $ip & $proc ^ -@rbp & $teb ^ $buffer ^ @r12 ^ @rdi | @rsi & 0y1001(+@rdi << 23 | @rsp << $teb & 0y10010 ^ @r10)  { test_statement(0x1F62); } else { test_statement(0x885); }
$error$
$end$
296
 if (@r10 >> 0y1100 << @rdx ^ 0x6 << @rbx & $teb >> 0x5 & $proc & @rdx | -0y10 << @rsp ^ (@rdi) & @rsp & @rax ^ +0n9 ^ @r12 >< (@rax) + @r8 << @r9 << 0n6 | @r8 >> 21 >> $buffer & @r10 & 0xF & 0y10000)  { test_statement(0x23F3); }
$error$
$end$
297
 if (@r11 + ~@r8 << $teb >> $thread & $teb << 20 < @r11 + ~@r8 << $teb >> $thread & $teb << 20)  { test_statement(0xE5F); } elsif (@r8 << @rsi >> --1 | $buffer ^ ~@rdi & @rdi | @r9 & @rdi)@rbx << @rbp & @rbx >> @rbp) { test_statement(0x2212); } else { test_statement(0x1BDA); }
$error$
$end$
298
 if ((0y1010) + @r9 << -$teb << @r11 & $buffer << 23 ^ @rdx << $thread >> $teb >> $proc & (@rdx) ^ @r11 & ($proc) & @r9 | @r13 >> 0n1 >> 0x0 & @r10 & $ip & @r13 > @rsp >> @rbx << 0n0 >> @rbp >> $proc | @rbx << @r12 >> $thread ^ @rdx >> 20 & @rdx & 0x11)  { test_statement(0xEAD); } elsif (@rsp >> @rbx >> @rbp ^ $proc >> @r11 ^ $thread & ~0xB | ~$buffer ^ ($proc) ^ 0x12 | $thread ^ ~$thread ^ @r13 == @r13 << -@r10 >> @rax >> @r11 & @r9 & @r8 ^ 0y100) { test_statement(0x23A2); }
$error$
$end$
299
 if (-$proc << $buffer << @rbp >> @r12 & @rbx << @rbp & -3 | @r9 << 20 | -@r11 >> $thread & @rbx ^ 17 & $thread | $teb | -(-+@rdx) <= @rdx + @rsi)  { test_statement(0x1DEE); } elsif (@r10 & @r9 >> @rbx & ((@rbx)) ^ @r10 | $teb >> @rbx ^ @r10 & @rbp | -@rdi ; @r10 & @r9 >> @rbx & ((@rbx)) ^ @r10 | $teb >> @rbx ^ @r10 & @rbp | -@rdi) { test_statement(0x3E2); } else { test_statement(0x51); }
$error$
$end$
300
 if (16 >> 0x7 << @r12 >> (@rbp) >> (0y1) & @r12 << @r10 >> @r10 >> @rbp ^ @rsp << $thread >> 10 >> @r9 & 0n0 & 0n14 & @rbx(-4 >> $buffer << $teb | @rsi & +($proc) | @rsp >> @r11 & @rbp ^ @r11 ^ 0y100 | 0x4 & +~0x0 ^ @rax ^ @rax)  { test_statement(0x6FB); } else { test_statement(0xE1); }
$error$
$end$
301
 if (@rax >> $ip << @rdi ^ @r13 | $teb & $proc & $thread & @rsi ^ 0xC >> $teb(0n5 << 0y0 & $buffer << @r12 & 0xA >> $thread)  { test_statement(0x14C8); } else { test_statement(0x26EF); }
$error$
$end$
302
 if (@rax >> @r13 >> 4 >> @r10 & +$teb << 0n8 >> @rbx | @rdx >> @rbp >> @rax ^ 0y1111 ^ @r10 & @rsp ^ @rsp ^ @r8 | -@r13 >> 0n18 & 0n14 & +@r11 >< 0n7 + $ip << @rdx << @r10 & (@rbp) ^ (@rbp) << @rdi >> @r8 & $teb >> +@rbx ^ +@r8 & @rax & @rdx ^ @rsi ^ @r8)  { test_statement(0x1C4B); } elsif (+@r10 | @rbp >= @r10 << @rsi >> 1 & @r8 & @rbx & -@r9 ^ $buffer >> 0y1110 & @r12 ^ @rax & 0n17) { test_statement(0x11BB); } elsif (@rdi ; @rdi) { test_statement(0x1AB7); } else { test_statement(0x24D8); }
$error$
$end$
303
 if (+$proc << @r10 << @rbx ^ $ip | (~@r8) << @rbp >> 0xB >> ~(@r11) ^ $thread ^ $buffer >= +$proc << @r10 << @rbx ^ $ip | (~@r8) << @rbp >> 0xB >> ~(@r11) ^ $thread ^ $buffer)  { test_statement(0x1921); } elsif (@rdx ^ @rsp ^ 0xF & @rdi ^ (--@rsi) ! @r11 & @r9 ^ @rbp & -@rbx & ~(0n16) | $proc & 0y100 & 22 | @r13 ^ +@rdx ^ (@r11)) { test_statement(0x1F85); } else { test_statement(0x248A); }
$error$
$end$
304
 if (-@r13 + @r10 >> $teb & $proc & @r12 >> 0n18 ; @rdi + $teb << @r10 << $proc >> 0y10000 & @r10 | 0n5 << $buffer >> $ip & @rax | @r13 >> @rbp & $teb | @rdx & @rax)  { test_statement(0x131); } elsif (0n9 & 14 >> $teb | @r9 >> @rdi & @rbp & @rsi ^ (@r13) & @rbx ^ @rsi | @rbx & 0xB ^ 16 ^ $proc | +@rbx | +(~@r9) ; @rdx << @r12) { test_statement(0x16EC); } elsif (@rbx >> $teb & 0n3 | ~(@rbx) & @rdx | @r12 @rbx >> $teb & 0n3 | ~(@rbx) & @rdx | @r12) { test_statement(0x1272); }
$error$
$end$
305
 if ($buffer + 0y1001 >> ~0x7 & @rsi | @rbx >> @r8 >> @r10 & $proc | (@r11) ^ @r13 ^ @r10 ^ @rbx <= $buffer + 0y1001 >> ~0x7 & @rsi | @rbx >> @r8 >> @r10 & $proc | (@r11) ^ @r13 ^ @r10 ^ @rbx)  { test_statement(0x72B); } else { test_statement(0x914); }
$error$
$end$
306
 if ($buffer << 0xB >> @r12 << @r13 ^ $teb >> 0y100 & 0y10 >> $buffer & 0x9 ^ @rsp | @rdi << 0y101 >> @rdi >> @r8 ^ -@r13 >> @rsi ^ @rdi & @rbx ^ 0x11 ^ $teb | -12 & @r9 ^ -$proc & @rbx != $buffer << 0xB >> @r12 << @r13 ^ $teb >> 0y100 & 0y10 >> $buffer & 0x9 ^ @rsp | @rdi << 0y101 >> @rdi >> @r8 ^ -@r13 >> @rsi ^ @rdi & @rbx ^ 0x11 ^ $teb | -12 & @r9 ^ -$proc & @rbx)  { test_statement(0x1FC5); } elsif (@rdi ^ 0 >> $proc & @rsi ^ (@rbp) | 0x10 >> $buffer = $teb << @rdx & (@rbp) >> @rdx | 0x0 >> ~@rbx ^ ~(@r12) & @r9 | $buffer & $buffer ^ @rsi | 0n18) { test_statement(0x1DE5); }
$error$
$end$
307
 if (@rdx << @r12 & $teb << @r12 >> -@rbx ^ $ip << @rsp ^ $teb & @r12 & $proc(@r12 + @rsi << $thread >> -@r10 << 0y110 ^ @r10 << @r8 ^ @r9 >> $thread & @rsi & @r10 ^ 21)  { test_statement(0x1B7B); } else { test_statement(0x1DB1); }
$error$
$end$
308
 if (13 + 0y1001 << @r11 ^ @r10 >> $teb & @r11 >> @r11 & +0n13 & ~@r9 ^ @r9 ^ +$teb ^ @rdx | 0n13 ^ @rdi >> @r9 & @r13 & -@rbp ^ @r11 & -$buffer ^ @rbx | -((~$proc)) ^ 0y1100 ^ @r8 ^ $teb | ~@rdi & @rbx | @r12 ^ +$thread | (@rbx) ; $ip << @rax ^ @r10 << @r10 & $thread >> @rax & @r8 ^ @r8)  { test_statement(0x17A1); } elsif (@rax & -$thread & @rsi & +@r13 | @rsp & @rsi & $ip ^ 0x11 & @r12 | 0y1010 | @r9 | $teb | $buffer == @r9 ^ @r8 ^ 0y10 | ~@r9 ^ @r8 & @rsp | 0n19 & $proc | @rsi ^ @rsi) { test_statement(0x1093); } elsif (@rax & @r12 & 0y0 $proc >> $ip ^ $ip & @rsi ^ @r12 ^ $thread | @r11 | ~@rsp | 0n7) { test_statement(0x3CF); } else { test_statement(0x7CE); }
$error$
$end$
309
 if ((@r9) << @r10 >> $thread >> $thread & ~4 != +(0x4) << @rdi >> @rax ^ @rdi << @rdx >> @rdi & ~@r8 | 0y1000 >> @r12 >> @r10)  { test_statement(0x2573); }
$error$
$end$
310
 if (@rsp << $thread << $ip >> @rdi << @rdx ^ @rax >> @r9 ^ $proc)@rax << @r10 << $proc >> @rbx & @rbp << 0y100 ^ @rbx >> @r12 >> @rdi & @r11 >> 0y10 ^ @r13 & 0x3 & 0x2)  { test_statement(0x382); }
$error$
$end$
311
 if (@r13 + 0n19 >> @rbx >> +@rsi & @rsp >> @r12 >> @rbp | @r12 ^ @r9 >> @r12 & @rbp | $teb ^ @r8 ^ @rax ^ @rbp | $proc ^ 0x11 ^ @r11 >= @r10 << $thread >> (@rbp) << @r13 >> $ip >> @r8 ^ @rax << @rsp >> @r12 >> @r12 & 22)  { test_statement(0x1B73); } elsif (10 & ($ip) ^ @r8 >> @r9($buffer << $teb & 0n12 & @r8 & 0x13 | -@r13 & 21 ^ @rbx & @rbp ^ 0n11) { test_statement(0x2683); } elsif (@rbx ^ ~@r11 & @rsp ^ @rdx ^ -@rax = @r8 ^ @rdi & $proc ^ @rsp ^ $ip) { test_statement(0x10BC); } else { test_statement(0x202B); }
$error$
$end$
312
 if ((@rsi) + @r8 << (@r9) << 0n14 >> @rbp >> @rdx >> @rdi & $proc << $thread >> @r8 >> 0y110 | @rax << 11 | @r10 >> @r9 ^ @rdx ^ -@rsp > @r12 << $proc << 0x11 & @rbp << @rbx >> 16 >> $buffer & $thread >> $buffer & ~@r12 ^ +$thread << $proc)  { test_statement(0x866); } elsif ($thread >> @rbp >> $thread | (1) >> 0n0 ^ @rbx < $thread >> @rbp >> $thread | (1) >> 0n0 ^ @rbx) { test_statement(0x12B5); } elsif (0x12 & -@rax ^ @rbx & $proc <= @r10 & @rax ^ $buffer & 7 ^ @r12 ^ 0y1000) { test_statement(0xAAE); } else { test_statement(0x13BD); }
$error$
$end$
313
 if ($thread + @r8 >> 0y1011 << -(((0n4))) >> @rdx >> 0x11 & @r11 << 0n17 >> @r11 >> $ip & @rbp <> @r11 + @rdx << 20 ^ 0x0 << @r8 >> @rax >> @rbx | (0y10010) >> @r12 & @rdi >> @rsp & (@r9))  { test_statement(0x77); } elsif (~@r9 >> ~@rdx >> $thread & $thread >> -@rsp & @r10 & +-@rsi ^ ~@r12)$proc & @r12 >> @rbx | (@r13) >> @r9 & 23) { test_statement(0x1A95); } elsif (+@r10 & @rdx ^ @rdx & @rbp ^ $proc ^ +-+@rsp <> +@r10 & @rdx ^ @rdx & @rbp ^ $proc ^ +-+@rsp) { test_statement(0x41A); } else { test_statement(0x1EDC); }
$error$
$end$
314
 if (($thread) & $ip >> $proc ! $proc | 0y11 >> 0n18 & 0y0 & 0y1111 & @r9)  { test_statement(0x21AB); } elsif ($ip >> $buffer >> @r13 | @r13 >> 0y100(@rbp << @rbp & $teb) { test_statement(0x3D1); } elsif (@r8 >> @r12 & @r10 | $proc & $buffer | $ip <= ~@rsi >> @rdi ^ @rsi ^ @rbx ^ 0n19 | @r10) { test_statement(0xF7D); } elsif (@r13 & @rsp ^ 0y1100 | @rsi ^ ~16 | (@r12) | @rbx))@rsi ^ @r12 ^ $teb | @r11 | $teb) { test_statement(0x23E0); } elsif (@r13 ^ @rdi == @r13 ^ @rdi) { test_statement(0x19AD); }
$error$
$end$
315
 if (@rdi << @rbp($buffer | +@rdx << $ip >> 0n8 >> -$buffer ^ (@r11) & 0xA | 0x1 ^ @rsi & $ip ^ @r11)  { test_statement(0xFB8); }
$error$
$end$
316
 if (@r9 + 6 << $teb << $ip >> @r10 >> @rbp >> @r13 ^ $proc & @rbx >> @rbp & @r13 & @rbx ^ $thread >> @rdi))(@rdi) + @rbp >> @rdx << ~$buffer ^ 0y1111 >> @rax >> @rsp ^ -@rdi >> $proc ^ $ip & $ip ^ @r13)  { test_statement(0x34A); }
$error$
$end$
317
 if (@r11 | @rdi >> 0x13 ^ @rdi >> $ip & @r10 & $thread | @rbx >> @rdx >= @r11 | @rdi >> 0x13 ^ @rdi >> $ip & @r10 & $thread | @rbx >> @rdx)  { test_statement(0x3E7); } elsif (0y1011 ^ -@r13 ^ @r10 ^ @rsi ^ @rdi | @rsi >> @rax & @rbp(@rdi & ((@rdi)) >> 15 & @rdx & @rbp ^ ~0n7 >> $thread & $teb & $buffer | @rax & @rdx) { test_statement(0x186A); } else { test_statement(0x1AB4); }
$error$
$end$
318
 if (0y1001 + +@r10 << @r10 >> @r13 & $teb >> @r8 >> $buffer | $proc << $teb >> $buffer ^ @rbx >> (@rdx) & @rsp & @r9 ^ @rsi & 0n0 | 21 ^ @rsp(0y1001 + +@r10 << @r10 >> @r13 & $teb >> @r8 >> $buffer | $proc << $teb >> $buffer ^ @rbx >> (@rdx) & @rsp & @r9 ^ @rsi & 0n0 | 21 ^ @rsp)  { test_statement(0x1095); } elsif (20 << @rbp ^ 14 >> @rsp & 0n6 ^ @rbx & @r13 ^ @rsi ^ 0x5 | ~$thread & $thread & @r12 ^ @rsi & @r8 ^ +@r10 == 20 << @rbp ^ 14 >> @rsp & 0n6 ^ @rbx & @r13 ^ @rsi ^ 0x5 | ~$thread & $thread & @r12 ^ @rsi & @r8 ^ +@r10) { test_statement(0x205B); } elsif (0n11 & @r10 ^ @rdi & @rdx = @rsp & @rsp ^ @rbx & @r11) { test_statement(0x1A3F); } elsif ($thread & @rbp ^ ~+@r13 >< @r8 ^ (+@rax)) { test_statement(0x13B); } else { test_statement(0xE9A); }
$error$
$end$
319
 if ($proc + $teb >> $proc << @r13 >> $thread >> $buffer ^ @r10 >> @r9 ^ @r13 >> @rax | @rsp ^ @rdi | @r13 | @rsp <> @rbx + -~5 & ~@r10 << +-~$ip >> 0y1111 >> @r9 & @rbp & @r8 & -@rsi)  { test_statement(0xC42); } elsif (@rbx << @rsi & $buffer >> @rsp))@rbx << @rsi & $buffer >> @rsp) { test_statement(0x22D0); } elsif ($thread >> @rax & +@r8 & $thread ^ ~@rax | @rax ^ 0y1001 ^ $thread | ~$teb ^ @rbp | 0y1100 = $thread >> @rax & +@r8 & $thread ^ ~@rax | @rax ^ 0y1001 ^ $thread | ~$teb ^ @rbp | 0y1100) { test_statement(0x136); } elsif (@r10 & $teb((@r10 & $teb) { test_statement(0xBE); } elsif (@rsi ^ $buffer != @r9 | 0y11) { test_statement(0x2647); } elsif (0x8 < @r9 | @r8) { test_statement(0x768); }
$error$
$end$
320
 if (@rsp + @rsp << @r10 << 1 >> @r12 & @rbx << $teb | $proc << @rsp & 0xF & @r8 & $teb ^ @rsi & @r10 & @rbp ^ @r13 | 0 >> $ip = @rsp + @rsp << @r10 << 1 >> @r12 & @rbx << $teb | $proc << @rsp & 0xF & @r8 & $teb ^ @rsi & @r10 & @rbp ^ @r13 | 0 >> $ip)  { test_statement(0x2565); } elsif (@rbp >> @r8 >> $proc | 0y1101 >> $thread(@rbp >> @r8 >> $proc | 0y1101 >> $thread) { test_statement(0x251B); } else { test_statement(0x1AD1); }
$error$
$end$
321
 if (@r13 << @rdi >> @r12 >> 0x9 >> 0y10010 & 0x0 << @rax >> $teb & ~@r8 & @rax | ~-@rbp | @rsi >> $proc & 0x2 ^ @rdi & @rdi | @r9 ^ @r8 != @rdi >> +-@rdi & ~0n1 << $teb >> -$ip >> @r11 & @r13 | @rsp ^ +@r10 & (@rax) & @r10)  { test_statement(0x1066); } elsif (0y10001 << @r11 >> @rsi >> 0x8 & @r8 | (@r8) >> $thread ^ 0x11 & (0y10000) ^ @r13 ^ @r8 | @r8 & @rsi ^ @r9 >= @rsi << +21 >> @rax & 0y1000 >> @rbx & -$ip | @r8) { test_statement(0x199); }
$error$
$end$
322
 if (@rdi + @rsi << 0x11 & +$buffer << @rdi >> $buffer >> @r8 & 22 & @r9 & @rbp | 0n7 << @r9 >> $ip >> +@rbp ^ +@rdi ^ @rax & 0n9 ^ 0xA ^ @rax | $teb | @rsp >< @rdi + @rsi << 0x11 & +$buffer << @rdi >> $buffer >> @r8 & 22 & @r9 & @rbp | 0n7 << @r9 >> $ip >> +@rbp ^ +@rdi ^ @rax & 0n9 ^ 0xA ^ @rax | $teb | @rsp)  { test_statement(0x261D); } elsif ($thread $thread) { test_statement(0x188F); } else { test_statement(0x1F4B); }
$error$
$end$
323
 if (@r8 + $ip >> 0x2 << @rsp ^ @r12 >> @rdx ~@rax + 0xE << @rdi << @r12 ^ $buffer << @r11 | $ip << @r10 & 15 >> @r13 & ~0y111 ^ @r11 ^ ~@r10 ^ -@rsi ^ @rsi)  { test_statement(0x1642); }
$error$
$end$
324
 if (@r10 & @r11 << @r8 >> @r9 | +@r9 >> @rdi & $teb | @rdx & @rdi & ~$teb ^ @rax ^ 0n10 | @rsp & $proc ^ ~$teb(-@r13 + ~@r10 << $buffer << @rsp >> @rdi << @rbx >> -@rbx >> @r8)  { test_statement(0x249E); } elsif (~@r13 << 0y1101 | $ip >> @rbx & @rsi & +5 ; @rsp >> @r11 & @rsp >> @rdx ^ 1 & @rsp) { test_statement(0xCE1); } elsif (~0y1100 >> $ip ^ $proc | @rdi | $teb | 0y110 @rsp & $teb) { test_statement(0x11FA); }
$error$
$end$
325
 if ((@rbp) << $teb << ~@r13 & @rax << @rbx ^ 0x10 << $proc >> @rsi >> @rsi)$teb << @rsp << @r9 ^ @r13 >> ~$buffer ^ $buffer)  { test_statement(0xFA0); }
$error$
$end$
326
 if (@r10 << @rax >> @r13 << @r12 ^ @r9 & @r8 >> $ip & @rax & @rbp | @rbx << @rbx | $teb & $buffer & ~$ip == $proc << @rax << $teb >> @r9 >> @r10 & $proc << @r10 >> $proc >> $ip ^ @rsp >> @r9 >> $teb & @rdx >> @r11 & @rbx & @rdi)  { test_statement(0x184C); } elsif (@rbp << @rsp >> 0n7 >> $ip & 0y1111 & @rax | ~@r9 ^ @r10 & @rsi != @rsi ^ 0y10010 & @r8 & ($teb) ^ @r13 ^ @rax ^ @r9) { test_statement(0x21C7); } elsif (@r9 >> @r9 ^ @r8 & $buffer ^ 0y1100 | $thread & ((@r9)) ^ ($ip) ^ $ip ; @rbx ^ @r12 | 0x13 & @rsi | ~@r9 ^ 21 | @rax | @rsp) { test_statement(0x2009); } elsif (0 & @rsi ^ $teb >= 0 & @rsi ^ $teb) { test_statement(0x2375); } elsif ($thread ^ @r9 >= $thread ^ @r9) { test_statement(0x21A4); } else { test_statement(0x440); }
$error$
$end$
327
 if (@rbx + @rdx << @rdi & @rax >> @rdi <= @rbx + @rdx << @rdi & @rax >> @rdi)  { test_statement(0x1E96); }
$error$
$end$
328
 if (@r10 + $buffer << @r10 << -(0y10011) >> @rdx << -@rbp & -@rsi << ~@rax >> $teb >> $ip | @rbx >> ~+$buffer & @rbp >> @rdx ^ $thread >> $buffer & @rbp != @rsp >> 0y1011 << $teb & @r12 << $buffer | $teb & @r12 >> @r12 ^ @rbx >> +@rbp | -~$teb >> @rdi ^ @r8 | @rdx & (@rbx))  { test_statement(0x1FF); } else { test_statement(0x240); }
$error$
$end$
329
 if (@rax + 0x7 << $buffer | 0x2 | @rbp ^ @r12 ^ $buffer ^ @r10))@rax + 0x7 << $buffer | 0x2 | @rbp ^ @r12 ^ $buffer ^ @r10)  { test_statement(0x16BA); } else { test_statement(0x788); }
$error$
$end$
330
 if (@r11 & $thread << @r13 & @r13 >> @r13 ^ $teb << @r11 >> @r9 ^ @r9 <> @r8 + -@r10 & @r13 << @rax >> @rdx >> 0n9 | @rbp ^ @r11 >> +$teb ^ @rax | -@r13 ^ @rax)  { test_statement(0x13C0); }
$error$
$end$
331
 if (@rsi >> @rsi >> +0y1011 >> 0 | @rbx >> @r11 >> $thread ^ $buffer & $buffer ^ @rdx & @rbp ^ @rax ^ @rbx ; @r13 & @rsp << 10 | @rax >> @rdi ^ @r13 >> @rbx & $teb)  { test_statement(0x87C); } elsif (0 & @r9 ^ 0xA >> @r11 & @r8 & $proc ^ 12 & ~@r8 <= @rsp << ~0n2 | $thread >> @rsp & $buffer | @r8 & 0x11 ^ $buffer ^ @rsi | @rbx ^ ~@r10 | @rbp | @r13) { test_statement(0xF13); }
$error$
$end$
332
 if (@rdx + @r13 >> @r9 >> 0n16 & @rsp & $ip >> @rax ^ -$teb & @rsp >> @r9 & $buffer & $proc ^ @r10 & @rax & @r8 >= @rdx + @r13 >> @r9 >> 0n16 & @rsp & $ip >> @rax ^ -$teb & @rsp >> @r9 & $buffer & $proc ^ @r10 & @rax & @r8)  { test_statement(0x2143); } elsif (@rax >> $teb >> -0xD ^ 0y101 ^ (0x12) & 0y10001 ! @r12 & @r13 >> ~@rax & @rbx) { test_statement(0xCFE); } else { test_statement(0x1FDE); }
$error$
$end$
333
 if (+-$proc << @r11 >< +-$proc << @r11)  { test_statement(0x2119); } elsif ($proc << @rdi >> @rdi >> 0x7 & 0y10001 >> 0n18 | 4 >> @r11 ^ @rsp & 0n13 ^ 0x0 <> $proc << @rdi >> @rdi >> 0x7 & 0y10001 >> 0n18 | 4 >> @r11 ^ @rsp & 0n13 ^ 0x0) { test_statement(0x1232); }
$error$
$end$
334
 if (@r8 >> @r10 >> 5 & @r9 >> @r11 & @rdx > @r8 >> @r10 >> 5 & @r9 >> @r11 & @rdx)  { test_statement(0x236C); } else { test_statement(0x25A6); }
$error$
$end$
335
 if ($teb + @rsp << @r12 & -@r13 << -0n8 & @r13 & ++@r9 & @r11 != @r10 << @rbx >> 17 << @rbp >> @rax >> ~@rsi & @rsi >> 0y1100 & @rsp >> @rdi & @rsp ^ $teb << @rsi ^ @rbp >> @rsi & 0y110 ^ ~($proc) & 0y1001)  { test_statement(0x1703); } elsif (@rdi << 0xF | @rsi = @rbx << $proc >> @rdi >> $teb & 0x6 ^ @r10 >> $buffer ^ ~@rax & 0n9 ^ 0y1110 | 0n5 >> 0y110) { test_statement(0x2226); } elsif (@r9 >> @rsi & @rsp & @rbp ^ $proc & (@r9) | @r10 <> @rdi) { test_statement(0x2C5); }
$error$
$end$
336
 if ($proc + 0y110 ^ 0n7 << 0n16 >> $thread & $thread >> -~0n8 & @r12 & $ip ^ ~$proc >> $teb ^ $proc > 0n0 << ~$ip << @rsi >> 0n1 >> @rdi >> 0x0 & $buffer >> @rbx >> @r9 & @rsp >> @r9 ^ @r11 << @rbx ^ $thread & $ip & @rax)  { test_statement(0x1D96); } elsif ((0n1) ^ $ip >> -$thread & 0n13 & $thread >< (0n1) ^ $ip >> -$thread & 0n13 & $thread) { test_statement(0x47C); } elsif (@rax ^ @rbx & @r13 ^ -@r9))@rax ^ @rbx & @r13 ^ -@r9) { test_statement(0x1F3D); }
$error$
$end$
337
 if (0n7 + @r13 << @rbx << $thread ^ 0n4 << $buffer | @r10 << @r13 >> @r8 >> @r10 ^ @r9 >> @rbp ^ @rdi ^ @rdx | 0n7 >> @rbx & $teb ^ @rsp & @r13 ; 0n7 + @r13 << @rbx << $thread ^ 0n4 << $buffer | @r10 << @r13 >> @r8 >> @r10 ^ @r9 >> @rbp ^ @rdi ^ @rdx | 0n7 >> @rbx & $teb ^ @rsp & @r13)  { test_statement(0x211D); } elsif ((@r11) << -0 >> @rdi & @r12 >> ++@r9 & 22 & @r10 | $buffer ^ @r8 >< @rsi | @rbp & @rsi & @rsi) { test_statement(0x15BB); } else { test_statement(0x1BD5); }
$error$
$end$
338
 if (@rdi << $proc >> @r13 << 0n14 & $teb << ~14 >> @r8 & @rbp >> 0x11 & $thread)@rdi << $proc >> @r13 << 0n14 & $teb << ~14 >> @r8 & @rbp >> 0x11 & $thread)  { test_statement(0x22D0); } elsif (0xD << @rbx ^ @rdx & $buffer & @r11 > 0xF << @r9 >> 10 & @rbx & @r9 & @rbx ^ @r10 >> +~@rsp ^ $thread & ~@rdi | @r11 ^ @rax & @rsi) { test_statement(0x1C16); } elsif (@rax >> @r10 ^ $ip ^ $buffer ^ @r8((@rax >> @r10 ^ $ip ^ $buffer ^ @r8) { test_statement(0xC37); }
$error$
$end$
339
 if (@rax << $teb << @r10 >> ~@rdx & @r10 & @rsp >> 0n4 ^ @rax << (@rdi) & @r13 ^ @r8 >> @r13 & $buffer & 0n19 | 0n11 >> @rsi & @rsp)@rax << $teb << @r10 >> ~@rdx & @r10 & @rsp >> 0n4 ^ @rax << (@rdi) & @r13 ^ @r8 >> @r13 & $buffer & 0n19 | 0n11 >> @rsi & @rsp)  { test_statement(0x884); } elsif (@rbx ^ @rax >> (~@r10) & @r13 & @rsp ^ 0y1100 & @r10 ^ @r11 ^ 0n17 | @r13 ^ -(@r12) ^ @r12 | 0n1 & ~0xD | @rdi ^ $buffer ! +@r10 >> @r8 & @r12 >> +~15 & @rsi & @rsi ^ @r10 & @r11 | 7 & -0xD & @rax ^ @r9) { test_statement(0xEE1); }
$error$
$end$
340
 if (@r11 + @rdx << $proc >> $proc << $proc & $ip << @r11 ^ @rax >> $buffer >> @rdi & 0 >> 0y10001 & $proc ^ $thread ^ @r13 & +1 ^ @r8 | 23 << @rax >> 14 >> @rsi & @r13 & @r10 & +$proc != @r11 + @rdx << $proc >> $proc << $proc & $ip << @r11 ^ @rax >> $buffer >> @rdi & 0 >> 0y10001 & $proc ^ $thread ^ @r13 & +1 ^ @r8 | 23 << @rax >> 14 >> @rsi & @r13 & @r10 & +$proc)  { test_statement(0x1C05); }
$error$
$end$
341
 if ($buffer << -@rdx << $buffer >> -@rax >> @r9 >> $buffer & @r9 << @rdx ! $buffer << -@rdx << $buffer >> -@rax >> @r9 >> $buffer & @r9 << @rdx)  { test_statement(0x20FD); } elsif (@r9 >> @rax ^ @r9 & ~@r10 & @r11 ^ @r9 & @rdi ^ @rax | ~@rax & @rbp & @rsp))$proc << @rsi >> +@r11 >> @rax & @rdi ^ @rbp >> $thread | @rbx & $teb & @r11 ^ @rbp & @rdi ^ @r12 ^ $ip) { test_statement(0x1EF7); } elsif (@rsi & @r9)@r10) { test_statement(0x10BE); } elsif (@rbx & @rdi ^ $proc ^ @r12((@rbx & @rdi ^ $proc ^ @r12) { test_statement(0x1689); } else { test_statement(0xF30); }
$error$
$end$
342
 if ($teb + @rsi >> ($buffer) << $teb >> ((@r13)) & +@r12 >> +@r11 ^ @r10 << +(@rbx) >> 0x3 & $buffer >> ($ip) & $buffer & -+(0n11) | @r11 << @rdi >> $proc @rbx & ~@r10 << @r13 >> $teb >> @rdx & @r9 ^ @rdi << @r11 >> ~@rsp | $proc >> $thread & @r13 >> @rbx & $thread)  { test_statement(0xF9A); } else { test_statement(0x25F1); }
$error$
$end$
343
 if (@r12 + $proc & $teb >> +$proc >> -@rbp & $buffer >> @r10 ^ $teb << @rsp >> $ip & @r10 >> @rbx & @r13 & $proc ; 0y111 | +@r13 << +$thread >> 0x5 & 0y1 >> -~$teb ^ $thread & -$buffer & $thread)  { test_statement(0x1B6D); } else { test_statement(0x15BF); }
$error$
$end$
344
 if ($thread + $thread << @rdx << @r8 >> @rdx >> $proc >> @rax & ~0y101 << $thread <= @rdi << $proc >> @rdi & $thread & $ip & @rdi ^ $buffer << @r10 ^ @r9)  { test_statement(0xE9C); } elsif (@rdi ^ $buffer -(@rsp) << -@r11 >> 4 >> @rsi | (@rbp) & $ip) { test_statement(0x1F34); } elsif (@r10 <> @r10) { test_statement(0x21D9); } elsif (0 = @rax & $teb ^ @r10 | $proc | @r8 | @rsp) { test_statement(0xC5A); }
$error$
$end$
345
 if (@rsp >> @rsp << @rdi >> @r9 ^ $thread << $teb ^ @rbp >> @r10 & @rbp & 0y10011 | -0y1001 & @rdi >> @rdx | 0n10 | @r13 ^ 0n19 != @rsp >> @rsp << @rdi >> @r9 ^ $thread << $teb ^ @rbp >> @r10 & @rbp & 0y10011 | -0y1001 & @rdi >> @rdx | 0n10 | @r13 ^ 0n19)  { test_statement(0x1EDA); }
$error$
$end$
346
 if (@rsp << 0n12 << $ip ^ $ip >> $ip ^ 12 & @rbp | 0n14 ^ @rsi >> $buffer & @r8 ^ @r13 ^ 0xE ^ @rsp))~~~$ip >> $ip << @rdi >> @rbp >> $ip & $teb & $proc >> @rdx & @rdi | $ip & @rax)  { test_statement(0xB1C); } else { test_statement(0x375); }
$error$
$end$
347
 if (20 + @rsp >> @rsi << @rax((@rax << @r13 << @r13 | 0x5 | @r13 ^ ~@rax & @rbx)  { test_statement(0x2518); } elsif (~-@r8 >> $teb >> @r12 & 0n19 & 0y11 ~-@r8 >> $teb >> @r12 & 0n19 & 0y11) { test_statement(0x1995); } else { test_statement(0x17F1); }
$error$
$end$
348
 if ($buffer << +(@r12) << @r10 ^ @rdx >> +@rbp >> @r8 & $thread >> @rsp ^ @r10 & @r12 > $ip + @r8 << @rdi ^ @r11 & @rbx & (@rax) & @r9)  { test_statement(0x1C02); } elsif ((@rsp) << @rax & @r9 >> @r9 $buffer << @r11 >> @r11 >> 0xF & ~@r13 >> @rdx & @rax & +@r13 | $proc >> @rbp & @r11 | 0y10010 & $ip) { test_statement(0x1F47); }
$error$
$end$
349
 if (@r12 << @r8 ; @r9 << @rbx << @rsp | @rsi | @r9 | ~$proc & (0x8))  { test_statement(0x1791); } else { test_statement(0x4EF); }
$error$
$end$
350
 if (@rsp ^ ++@rax & @rsp >> @r11 ^ @rdi & @rax ^ @rdx & 0x12 | @r13 & ((@rbp)) >> @r12 ^ 0xF >> $ip & +0y0 > ~+21 >> @r10 << $buffer & @rdi)  { test_statement(0x163A); } else { test_statement(0x1AA8); }
$error$
$end$
351
 if (0y1100 + $proc >> @r9 << @rdi >> @r8 & @r12 ^ @rsp << 0y1110 >> @rdi & 0x2 >> 0n10 ^ $buffer >> @r10 ~@r11 & @r12 << @r13 >> +@rsi >> +@r8 & -@rsp >> ~@rbx & @rbp & +@rdx | $buffer << 0y1 ^ @r12 >> 20 & $proc)  { test_statement(0x16AF); } elsif ($buffer >> $ip >> -@rdx ^ +@rbp >> 0n13 & @rsp & @rax ^ ~$teb & +20 >= $buffer >> $ip >> -@rdx ^ +@rbp >> 0n13 & @rsp & @rax ^ ~$teb & +20) { test_statement(0x304); } elsif (@r12 >> 0xA & $buffer | (@rdi) & @r12 | @r10 ^ @r12 ; 14 & @rax ^ ~15 & $thread | 0y101 & -@r10 ^ $buffer) { test_statement(0x12F7); } elsif (@rbp & @rdi ^ @r12)@rsp & @r8 ^ @rax) { test_statement(0x1AD5); }
$error$
$end$
352
 if (@rsi + 0y1011 >> $thread << -@rsi ^ -(+@r8) << ((-~16)) & -@rax ! @rsi + 0y1011 >> $thread << -@rsi ^ -(+@r8) << ((-~16)) & -@rax)  { test_statement(0x14F9); } else { test_statement(0x149B); }
$error$
$end$
353
 if (@r8 ^ (@r8) >> @rdx >> $proc)@r8 ^ (@r8) >> @rdx >> $proc)  { test_statement(0x1E0A); }
$error$
$end$
354
 if (@rdi >> @rax << @r8 ^ --@r13 >> 1 ^ @rbx >> $buffer @rdi >> @rax << @r8 ^ --@r13 >> 1 ^ @rbx >> $buffer)  { test_statement(0x22B5); } elsif (@r13 >> @rbp >> @rsp ^ @r9 >> @rsi | @r13 & $ip >= @r11 ^ $thread & $teb ^ $thread & 11) { test_statement(0x1F8F); }
$error$
$end$
355
 if (@rdx << 0xC & @rsi << ~@rax & 7 >> 4 & @rsp & @rsi | 0y10011 & 0xA >> @r10 & @r9 & (12) | @r8 >> @rax))@rdx << 0xC & @rsi << ~@rax & 7 >> 4 & @rsp & @rsi | 0y10011 & 0xA >> @r10 & @r9 & (12) | @r8 >> @rax)  { test_statement(0x21CE); } else { test_statement(0x1C83); }
$error$
$end$
356
 if ((@rdi) + ~$proc << $proc ^ $ip << @rbp & 0x10 ; @rsp ^ @r9)  { test_statement(0x26AE); } elsif ($buffer & @rax ^ @rdx & $buffer ^ $teb & @r9 | @rax ^ @r11 & (@r9) ! 16 << @rsi & 0x3 ^ @r8 >> @rbx & @rsp) { test_statement(0x4E2); } elsif (@rax == $buffer) { test_statement(0x16D4); }
$error$
$end$
357
 if (0n0 + $teb << @r9 & $buffer >> $ip >> (@r8) & @rdx >> @r10 & @r10 ^ 0n10 << $ip & 0y1101 >> @r10 & @r10 ^ @r11 ^ +~@r10 ^ @rdx ^ @r9 0n19 + $buffer >> @r9 << $ip >> ~@r8 >> $thread ^ 14 << @rax >> (~~@r11) >> (0x2) | 0n9 << @r11 & 0x1 >> @rsi)  { test_statement(0x230D); } else { test_statement(0x5E0); }
$error$
$end$
358
 if (0y10 + @r10 << 0x0 << $ip >> 0x1 << ($ip) >> @rax >> $proc & @r8 & @rbx & @r13 ^ $teb << @r13 & +@r12 & @rsi & @r11 ^ $teb >> 13 ^ $ip ^ @r13 ^ @rax ! @r13 + @r11 & 0x0 << (@rdx) >> @r11)  { test_statement(0xBF0); } elsif (-$proc << 0x8 >> @r9 >> 0n0 | +@rsp >> @rbx < 0n3) { test_statement(0xE86); } elsif ($thread >> @rdx & 0x1 & @r9 ^ @rax | @rsp & $ip >= $thread >> @rdx & 0x1 & @r9 ^ @rax | @rsp & $ip) { test_statement(0xBD9); } elsif ($ip ^ @rbx | 0n9 ^ @rsi ; 11) { test_statement(0xB1A); } elsif (10 | @rax == @r11 ^ 0n2 | @r9) { test_statement(0x21E2); }
$error$
$end$
359
 if (@rsi >> @r10 << @r13 >> @rdx >> 0n14 | @r9 << @rdi >> @rsp >> @r12 = @r12 + ~$teb >> 0y100 << 0x12 ^ 0y110 << @rdx | @rbx << +(0) >> @rdi >> @rbx & $thread ^ @rsi ^ @r11 & ~$proc ^ @rax ^ +0x6 | @rsi >> @rsp ^ @r9 ^ @r9 ^ 0n14 | @rdx & @r8)  { test_statement(0xEBD); } else { test_statement(0x363); }
$error$
$end$
360
 if (@r8 << @rsp ^ ~0n0 << @rsp >> @r9 >> @r11 > @r8 << @rsp ^ ~0n0 << @rsp >> @r9 >> @r11)  { test_statement(0x1524); } else { test_statement(0x166A); }
$error$
$end$
361
 if (-0x4 + +$proc & -@r9 << 0x10 ! @r11 + ~$teb & @rax & 0x0 >> @rbp ^ @r10 >> $teb >> $proc)  { test_statement(0x1744); } elsif (@r10 >> @rdx | @rax >> +$proc ^ 3 | $buffer ^ $proc ^ -$teb @rbp << -0n4 >> $thread >> (@r8) ^ $buffer >> @rsi) { test_statement(0x267E); }
$error$
$end$
362
 if (@r13 & $buffer << @rax >> 15 >> @r13 | ~@rbx << @rax ^ 20 >> @r11 >< @r13 & $buffer << @rax >> 15 >> @r13 | ~@rbx << @rax ^ 20 >> @r11)  { test_statement(0x26AF); } else { test_statement(0x180E); }
$error$
$end$
363
 if (~0n2 + $buffer << @rax >> @rsi << 0 & 0y10001 << @rdi >> @r13((~0n2 + $buffer << @rax >> @rsi << 0 & 0y10001 << @rdi >> @r13)  { test_statement(0x16CC); } elsif (13 << @r10 >> ~+$thread >> +@r8 ^ +@rbx & ~3 & @r13 | -@r13 & 0n17 & -@r9 > @rbp & @rax >> @rax & @rsi & 0xE) { test_statement(0x2413); }
$error$
$end$
364
 if (@r9 << $buffer << 0n0 & 0y1001 << @rsp & 0n5 & @rsp(+@rsi + $teb << @rbx << @rdi & (@r11) ^ $thread << $thread & $ip >> @rax ^ @r12 | $ip << @rax)  { test_statement(0x1F2C); } else { test_statement(0x1F0B); }
$error$
$end$
365
 if (@rsi + @rdi << +$ip << 0x0 >> 0xE << @r13 & 7 << $teb ^ ~@r10 << @rbx >> (@r11) >> $thread ^ @r9 & @rbp | $thread << @rbp & 0x9 ^ 4 >> $thread ^ 0x0 & 0n10 ^ @r8 | @rsi >> 1 ^ +@r13 ^ @rbp ^ +@r9(@r10 + +0y1110 << ~@rbx << 0n8 | (@rdx) << +0n5 >> @rbp ^ @r11 & 11 | @rbx >> @r12)  { test_statement(0xB64); }
$error$
$end$
366
 if (@r10 + $thread << $buffer >> 0n2 << 21 >> -$ip >> 22 ^ (~@rdx) & 6 >> $ip ^ 0n11 & @rsp ^ 6 >< @r10 + $thread << $buffer >> 0n2 << 21 >> -$ip >> 22 ^ (~@rdx) & 6 >> $ip ^ 0n11 & @rsp ^ 6)  { test_statement(0x12BD); } elsif (+@rsi & $thread >> 0x10 & $proc & @r10 ^ @rbx >> @rsp & @r9 & @rdi | ($proc) ^ @rax & @rdi | @rdi & ~$buffer | @rdx ^ @r10 = (@rdi) << -($proc) >> 17 | @r13 ^ $teb & @rdx | 0x10 ^ @rdi ^ @r12) { test_statement(0x1F13); }
$error$
$end$
367
 if (@r13 << @rsi & @r12 << @r10 >> $buffer | ~(@rdx) << @r8 >> @rbx >> $thread ^ @r10 & @rbx | $buffer >> 0y1111 & @rdi & 5 ^ @rbx & @rbx > -+@rax >> (@rsp) << 0y101 & $teb >> @r13)  { test_statement(0x25C9); } elsif (0n12 << @r10 >> 15 >> @r10 ^ @r11 & @rax | @r12 ; @r10 << (@rbp) >> @rbx >> @r10) { test_statement(0x166A); } elsif (@r13 & @rsi ^ @r12 & @rax ; 0xC & $thread ^ $ip) { test_statement(0x22A6); }
$error$
$end$
368
 if (0n19 + 21 & 0y1110 << @r12 & 16 ^ +@rsp >> @r8 ^ +@r10 >= ~(@r12))  { test_statement(0x131A); } else { test_statement(0x1ECF); }
$error$
$end$
369
 if (@rdi << $proc & +@r12 << 0n2 >> @r9 & $buffer >> @rsi & @rsp ^ $ip << @rbp & $thread | @r11 << @r12 & 20 ^ 0n10 >> $proc & -$ip ^ @rdi ^ @r13 ! @rsp + +$thread >> @rsi << 0y1111 | (+$ip) << ~@rdi)  { test_statement(0x1BA6); } elsif (+@rsi & @rsi & @rsi ^ 0x0 >> 0y1101 & $thread & @rdi ^ @rbx & @rdx | $thread >> @r12 & @rdx & $proc ^ @r9 = $thread << $ip >> @rax ^ @rbx >> @r13 ^ @rsi & @rsi | $thread >> @rdx & @r8) { test_statement(0x2049); }
$error$
$end$
370
 if (@rsp + 0n4 << 12 ^ @rsi >> @r10 & @r8 & 0y1010 & 0x8 ^ +@r10 | @rdi << ~@rax | @r11 & $proc((@r10)  { test_statement(0x2432); } else { test_statement(0x1E13); }
$error$
$end$
371
 if (@rax << ~$teb << ~@r12 ^ -0xE ^ ~0n4 & +$thread ^ @rbx ^ $proc | $ip >> @rax & $proc <= @rax << ~$teb << ~@r12 ^ -0xE ^ ~0n4 & +$thread ^ @rbx ^ $proc | $ip >> @rax & $proc)  { test_statement(0x190B); }
$error$
$end$
372
 if (@r10 | @r10 << 0n5 & $ip >> @r10 ^ @r10 >> @rax | -$buffer >> @rax & -$buffer & 2 ^ 0n6 & @rsp | $thread & @rbx ^ @r8 | @r11 | @rbx | (~$proc) < @r10 | @r10 << 0n5 & $ip >> @r10 ^ @r10 >> @rax | -$buffer >> @rax & -$buffer & 2 ^ 0n6 & @rsp | $thread & @rbx ^ @r8 | @r11 | @rbx | (~$proc))  { test_statement(0x1D43); } elsif ($thread << (@rax) & ~(0n16) & @r13 & $buffer >= $thread << @r11 & @rbp >> @rbx & +@r11 | 0y111 ^ @rdi ^ 0n2) { test_statement(0x24BC); } elsif ($ip & $proc | @rbx == @r13 >> @r10 & +0xA & @rbp ^ @rbp & @r12) { test_statement(0xBC); } elsif (@r12 & @r11 | @rbx ^ @r13 | 0y100 | $ip <> (+@rbp) & @rdx ^ @rsp | $teb | @rbx | @rdi) { test_statement(0x163C); } elsif (+7 ^ @rbx | 0xF((@r8 ^ 0n3 | @rbp | @r12) { test_statement(0x24C5); } elsif ($thread | 0n15 != $thread | 0n15) { test_statement(0x210B); } else { test_statement(0x72B); }
$error$
$end$
373
 if (@rdx + -@r10 << 0y10 >> 0xD >> @rdx | $proc << @r12 >> +$ip ^ $proc & @rdi & +@rdi ^ $proc | 13 >> @rbx & @r9 & @rbp ^ @rsi ^ @rsp ^ 0n18 <= @rdx + -@r10 << 0y10 >> 0xD >> @rdx | $proc << @r12 >> +$ip ^ $proc & @rdi & +@rdi ^ $proc | 13 >> @rbx & @r9 & @rbp ^ @rsi ^ @rsp ^ 0n18)  { test_statement(0x25EE); } elsif (@r11 >> 12 >> -@r8 ^ @r10 >> @r11 & @rdi | $ip & @rbp & -0n3 ^ ~$proc != +@rdi >> @r13 & +@rax ^ $buffer >> @r13 & 0n1 & $buffer ^ @rsi & $buffer | ($proc) >> @rdx) { test_statement(0x1478); } elsif (@r12 >> @rbp & @r10 ^ ~0y1001 <> @r12 >> @rbp & @r10 ^ ~0y1001) { test_statement(0x2656); } elsif ($buffer ^ @r10 | @r9 | +@r8)@rbp & 6) { test_statement(0x244F); } else { test_statement(0x1BEA); }
$error$
$end$
374
 if (@r11 << @r8 >> @r9 >> @r13 ^ @r11 << @rbp & @rsi >> (++@r8) & $thread ^ 1 >> @rbx | $buffer << -@rbp >> 0n12 >> 0xE ^ @rdi & @r11 | @rdx & $buffer ^ ++4 ^ @rdi | @r13 & @rsp ^ 0y1 | @r9 ^ @rsi | @rbx((@rsp + @r11 << @rdx << @r8 >> @rsi >> 16 & @rsp >> ~~@r9 >> @rbp & ~-0n13 >> @r9)  { test_statement(0x159E); } else { test_statement(0x24D4); }
$error$
$end$
375
 if ($proc + $thread(@r12 + @r8)  { test_statement(0xF2C); } elsif ($buffer & @rbp >> @rsi & @rdi | @rdi >> +$buffer ^ @rbp(@rsi ^ @r13 ^ @rdx ^ ~$proc ^ @r12) { test_statement(0xDC2); } elsif (0y1011 >> $teb ^ @r10 & @r10 ^ 0x1 ^ ~$ip | @r12 & @r9 | @rdi @r11 >> @r9 & +@rdx & @rdx) { test_statement(0x1E37); }
$error$
$end$
376
 if (@rdx + 0y10001 & @rdi & $buffer >= 0y1010 << @rdx << @r13)  { test_statement(0xF1E); } elsif (@rsp << 0x9 >> @rbx | @rax >> 0n9 ^ @r13 & @rax @rsp << 0x9 >> @rbx | @rax >> 0n9 ^ @r13 & @rax) { test_statement(0x22D4); }
$error$
$end$
377
 if (@rax << 13 >> @r9 << @rax ^ $buffer >> $teb ^ @rsi | @r10))@rax << 13 >> @r9 << @rax ^ $buffer >> $teb ^ @rsi | @r10)  { test_statement(0x136A); }
$error$
$end$
378
 if (@r10 + @rdi << @r12 >> $thread << @rsi >> 13 >> @rax ^ @r13 & @rsi >> 0n18 & @r10 & 0x5 == @r10 + @rdi << @r12 >> $thread << @rsi >> 13 >> @rax ^ @r13 & @rsi >> 0n18 & @r10 & 0x5)  { test_statement(0x1DC0); } else { test_statement(0x6BB); }
$error$
$end$
379
 if (@rdx + @r12 & $proc >> @r13 & @rdx | $buffer >> @r8 ^ $proc & $teb ^ @r12 & (@r11) ^ $buffer | @rax & 0y10010 & @r10 | 0n12 != @rdx << 0y1000 << @r11 >> @rsi >> @rdx >> @rdx ^ 0n19 >> @rsi | @r13 << @rsp >> ~$thread ^ ~@rdx >> 0y1011 ^ @rdi & @r13)  { test_statement(0x25CE); } else { test_statement(0xFC0); }
$error$
$end$
380
 if (~$ip + 0x10 ^ @rax << @rdi >= 0x12 + @rdi << @r8 ^ @r12 << $ip >> @rbp & @r9 & $ip ^ ~@r10 >> @r11 ^ $buffer ^ $teb ^ $thread | $teb ^ @rbp ^ 15 ^ @rbp ^ @rdi)  { test_statement(0x1B2E); } elsif (6 & 0x3 >> 0n0 & @rdx & 13 ^ $proc ^ (@rdi) & $thread @r11 ^ @rbx >> @rdi ^ ~-@rsi & @r10 ^ 0n6 ^ (@rdi) | $buffer | -@rdi & @rbx ^ $teb) { test_statement(0xE78); }
$error$
$end$
381
 if (22 + $thread << $teb ^ @rax >> $thread >> +@r8 & @rdi >> $thread ^ @rsp & @r9 ^ @rsp)~@r11 + @r9 << +0y110 >> @r13 >> @rbx >> @r11 | @r10 & (@rsi) >> $ip & @rax ^ @r13 >> @r11 ^ 0y10)  { test_statement(0x188E); }
$error$
$end$
382
 if (@r12 + 0xE << @r9 << $teb ^ $ip << @rsi >> @rdi | 0n7 << 0n8 & @rsp >> @r10 >= @r12 + 0xE << @r9 << $teb ^ $ip << @rsi >> @rdi | 0n7 << 0n8 & @rsp >> @r10)  { test_statement(0x1ACD); }
$error$
$end$
383
 if (@rsi + -@r12 << $thread >> 0y10 << $proc & $ip & ~(-0x2) & @r13 ^ 10 & @r9 | @rbp << @rdi >> ~@r12 & $thread >> @rbx | @rbx >> 12 & @r11 | 0y10011 ^ ~@r12 $ip + 0n4 << 0n15 ^ @r8 << $proc >> (~@r13) & @r8 >> @rax & @r13 & 7)  { test_statement(0x1F44); }
$error$
$end$
384
 if ($proc + @r11 << $proc << @r9 & @r13 << @rsp >> 0xA & $thread >> @rsp & @rbx | @r12 << $thread >> @r12 >> $thread | @rax >> @r8 ^ @rbx ^ @r8 ^ $proc | -@r11 != $teb & @rdi >> ~(@r9))  { test_statement(0x1391); }
$error$
$end$
385
 if ($teb >> @rbp >> $proc & $buffer << @r10 ^ 0n8 << $thread >> ~+@rbx ^ $proc ^ @r10 ^ @rdx ^ @rdi | $teb << @r8 >> @r11 >> @rsp ^ @r12 & $proc > $buffer >> ~@rsi)  { test_statement(0xDA1); } elsif (@r11 & ~@rdi ! @rbx & $teb >> -@rsi ^ -@r13 >> @r10 | @rdx & -@rbp) { test_statement(0x1C89); } else { test_statement(0x1DCD); }
$error$
$end$
386
 if ((@r11) << @rdi >> $ip & -@r12 << @r11 & @rbx >> 0n3 & @rbp | -@rbp << $proc & (-@rsp) | @r9 & @rdx & 0x6 | @r9 ; (@r11) << @rdi >> $ip & -@r12 << @r11 & @rbx >> 0n3 & @rbp | -@rbp << $proc & (-@rsp) | @r9 & @rdx & 0x6 | @r9)  { test_statement(0x259E); } else { test_statement(0x1DFF); }
$error$
$end$
387
 if (@r8 + @r12 >> @rbp & @r9 << -~@rbx >> @rdx & $proc & @r13 & ~@r10 ^ @rbx >> +@r12 & @r10 >> @rsp | 0x3 << $proc & @r10 >> 0y110 | -@rbx >> @rsi & $proc ^ @rdi & @r9 ! (@rbx) >> @r11 << $teb ^ 10 >> ~@r10 >> $buffer & $ip & $proc | @r12 << $thread ^ $thread >> @r12 | @r9 >> @rdx)  { test_statement(0x1CA2); } else { test_statement(0x17F1); }
$error$
$end$
388
 if (@rbp + @rsi & @rbx << $teb >> @rsp >> +@rbx & -@rdx >= @rbp + @rsi & @rbx << $teb >> @rsp >> +@rbx & -@rdx)  { test_statement(0x23FF); } elsif (0y1111 << +@rsi >> @rdx >> $buffer & @r8 ^ @rdi >> $thread | +0 >> @r13 & 0n11 | 0x3 | 0xF ^ @r10 >< 0y1111 << +@rsi >> @rdx >> $buffer & @r8 ^ @rdi >> $thread | +0 >> @r13 & 0n11 | 0x3 | 0xF ^ @r10) { test_statement(0x254C); } else { test_statement(0x218); }
$error$
$end$
389
 if (+(0y10010) + @r12 >> $thread << $proc & (0n16) ^ @r10 << $proc & $proc & @rbx & +0x9 = +(0y10010) + @r12 >> $thread << $proc & (0n16) ^ @r10 << $proc & $proc & @rbx & +0x9)  { test_statement(0x189E); } else { test_statement(0x823); }
$error$
$end$
390
 if (@r11 + @r8 >> @rbp << $proc | $thread << $teb >> ~@rdx | (@r12) >> 14 & 6 & @r10 ^ 0n1 ^ @rbx > @r11 + 0x1 << @r13 & @r8 << $proc & @rsi >> +@rbp ^ 0y1101 << $teb >> $thread >> @rdx ^ @rbp & @rsp ^ @rdx)  { test_statement(0x75); } else { test_statement(0xA74); }
$error$
$end$
391
 if (@r10 >> $proc >> ~@r8 >> @rdi >< @r10 >> $proc >> ~@r8 >> @rdi)  { test_statement(0x1C8A); } else { test_statement(0x144); }
$error$
$end$
392
 if (+~($buffer) << @rsi = @rdi + @rsi << @rbx << @r8 >> ~@r9 ^ @rbp << @rsp >> 11 >> $teb & $ip ^ @r8 >> 0y111 & $proc)  { test_statement(0x23C7); } else { test_statement(0x2454); }
$error$
$end$
393
 if (@rdi + @rsp ^ @r13 << @rbp ^ @rsi | ~21 & $thread >> @r11 ; 0y1 + @r12 >> @r11 ^ @rbx ^ @r10 ^ @rsp ^ @r13)  { test_statement(0x789); } elsif ($proc << $teb | $buffer >> @r10 & -@rax & 0x4 ^ @r8 & ~@r8 ! @rsi & $ip & $proc | @r12 | @r10 & $thread) { test_statement(0x1340); } else { test_statement(0xCB4); }
$error$
$end$
394
 if (@r10 << 0y110 ^ @rsi >> 0x3 >> $proc & @r8 >> -@rdi)@r12 << 0x11 >> 0y10 ^ @r8 & @r8 ^ (@r11) >> @rax ^ $buffer | @rsi << @rbx >> +@r8 ^ @r10 >> @rsp ^ +$ip)  { test_statement(0x55); }
$error$
$end$
395
 if ($ip + 1 & @r12 ^ @r8 << -+1 ^ 0y10011 & $buffer | @r10 << $ip >> @r10 >> 0n11 ^ @r8 & -0x8 | @rbx >> 15 & @rbx & @rbx | $buffer & @rbx ^ $ip | +$teb < $ip + 1 & @r12 ^ @r8 << -+1 ^ 0y10011 & $buffer | @r10 << $ip >> @r10 >> 0n11 ^ @r8 & -0x8 | @rbx >> 15 & @rbx & @rbx | $buffer & @rbx ^ $ip | +$teb)  { test_statement(0x1E1D); }
$error$
$end$
396
 if ($thread | 0n4 << 0n9 & $ip >> @r13 & 23 ^ $proc >> 0n10 | @rbx >> 0n11 | (@r11) & $buffer ^ $buffer ^ $buffer | 0x12 ^ $ip | (@rsp) >< $thread | 0n4 << 0n9 & $ip >> @r13 & 23 ^ $proc >> 0n10 | @rbx >> 0n11 | (@r11) & $buffer ^ $buffer ^ $buffer | 0x12 ^ $ip | (@rsp))  { test_statement(0x231D); } elsif (@r13 & +$ip >> @r13 ^ @rbp >> $buffer(@r13 & +$ip >> @r13 ^ @rbp >> $buffer) { test_statement(0xC76); }
$error$
$end$
397
 if (@r11 & @rsi ^ $proc >> @r12 | @rbx ^ @r10 & @r13 & @rax ^ @r11 & $buffer ^ $ip ^ @rsp((-(+@rsp) + @rsi >> @rsi << (@r9) >> @r9 ^ $ip << @rdi >> (@rdi) & $thread & -@rbp & @rdx)  { test_statement(0x209); }
$error$
$end$
398
 if (@r9 << 0n14 << 0y1100 | 4 << @rbp >> @rsp >> @rbx <> @r9 << 0n14 << 0y1100 | 4 << @rbp >> @rsp >> @rbx)  { test_statement(0x1E36); } elsif ($ip & @r9))$ip & @r9) { test_statement(0xAEC); } elsif (@rax != @r10 & @r10) { test_statement(0x4E0); } else { test_statement(0x1689); }
$error$
$end$
399
 if (0x13 + @rbp & @rbx << $thread & @r12 >> @rax & $ip & @r12 ^ @rbx << @r13 & @r12 >> @r12 ^ @r13 >> @rbp ^ @r12 ^ @rdi ^ @rbp ! @rdx << -~@r10 << @r11 & @rsi << (20) ^ $proc << 0n8 >> $ip | @r11 << @rbp & @rdx ^ @r13 & @rbp | @rbp >> @rbp ^ $buffer & @rsi)  { test_statement(0x1C5); } elsif ($proc >> @r11 >> $ip ^ 0y10010 >> @r9 & @rbx & @rbx @rdi & +@rsi >> 17 & @rax & $ip | @r12 >> @r8 & @rbx & -@r8 ^ 0y1011 & ($teb) ^ @r9 ^ 21) { test_statement(0x25E7); } elsif ($buffer >> +0xE & 5 ^ @r13 != @rdi & @r8 & @rsp | +@r13 & +@r13 ^ +@rdi ^ (13) | $ip | @rsp | 23) { test_statement(0x8DB); } else { test_statement(0x11E7); }
$error$
$end$
400
 if (@r9 << @r12 << @rdx >> @rsp >> @rbx >> $thread & @rdi >> $thread & $thread >> @rsp & @r8 & $buffer < @r11 << @rsp ^ +-$teb ^ @rsp ^ 0y1111 ^ @r8 ^ @rdx | $thread << 0n10)  { test_statement(0xB8F); } else { test_statement(0xEAE); }
$error$
$end$
401
 if (@r12 + $buffer << @r8 << 0n12 >> $ip << $thread & ~@r10 & 11 >> +@rax | $proc << 21 ^ @rbx >> @rax & @r12 | @r8 & (@rdi) & @r8 ^ @r12 | @r12 & @r12 ^ @r12 <> @rsi ^ @rax & @rdx >> @rdi & @r10 | @rsp << $teb & @rdx & @r13 & 17 ^ -+@r9 >> @r9 & @r9 ^ -~-@r11 ^ @rsp)  { test_statement(0x1D63); } else { test_statement(0xD6C); }
$error$
$end$
402
 if (@rdi + $buffer << @rsp & @r13 << @rax ^ @r10 << @r11 >> 2(@rdi + $buffer << @rsp & @r13 << @rax ^ @r10 << @r11 >> 2)  { test_statement(0x2660); } elsif (@rsp << @rbp >> @r13 & 0y10011 | $teb >> (@rsp) & @rdx | @rbx & -@r12 == @rsp << @rbp >> @r13 & 0y10011 | $teb >> (@rsp) & @rdx | @rbx & -@r12) { test_statement(0x1CE2); } elsif ($thread & @rbx ^ 0y101 & @rdi))@r8 & 0y10 & @r13 ^ @r13 & +@r11 ^ +$proc ^ @r8 | ~$buffer & @rdx ^ @r8 ^ @rbp) { test_statement(0x21C8); } else { test_statement(0x23B6); }
$error$
$end$
403
 if (@rdi << @r8 >> (0xA) ^ @rbx << $proc ^ 0y1000 >> $proc & @rax != 0y10000 + @rax >> @rbp << @rbp ^ @rbx << @rbp >> ($thread) >> ~@r11 | @r12 ^ 0y111 >> @rdx | (@r8) >> 0x3 & @rsp ^ $proc & @rax ^ 13 ^ @rax)  { test_statement(0x19A); } elsif (~@rdi << @r9 >> ($buffer) >> -$ip ^ $ip ^ @r10 <> $proc << @r8 & @rdi ^ 0n19 | @rsi >> @r9) { test_statement(0xBEC); } else { test_statement(0x958); }
$error$
$end$
404
 if (0y11 + @rbp << @rdi << ~$ip ^ @r10 >> $proc & @rbp & $teb & @r11 | $proc ^ 0x8 & ~~$teb | @rsi & $thread & @r8 ^ 0n17 & @r11((0y11 + @rbp << @rdi << ~$ip ^ @r10 >> $proc & @rbp & $teb & @r11 | $proc ^ 0x8 & ~~$teb | @rsi & $thread & @r8 ^ 0n17 & @r11)  { test_statement(0x13B2); }
$error$
$end$
405
 if (@rsi << @rdi @rsi << @rdi)  { test_statement(0x1F6A); }
$error$
$end$
406
 if (@rbp << @r11 >> (@rax) >> 0x9 >> @r11 & @rbx << @r13 & @rbx >> $ip | ~@r11 << @rsi >> +@r11 >> @rbx ^ @rdi)@rbp << @r11 >> (@rax) >> 0x9 >> @r11 & @rbx << @r13 & @rbx >> $ip | ~@r11 << @rsi >> +@r11 >> @rbx ^ @rdi)  { test_statement(0x1008); } else { test_statement(0x11A5); }
$error$
$end$
407
 if (0n8 + (($proc)) << @rax >> $proc >> -@rdx | 1 >> @rsi & 12 >> 2 | @rax >> $proc & 15 & +@rsp | $thread & @r8($ip + @rbp << @rbx >> @r9 & 0x0 << (@rbx) ^ @r11 ^ 0n17 >> @rsi | @r13)  { test_statement(0xE93); } else { test_statement(0x6A1); }
$error$
$end$
408
 if (@r13 >> @rsi << 0y11 & $ip >> @rbx >> 0y1111))@rdi << @r8 >> $buffer >> @rsp >> @rsp)  { test_statement(0x31); } else { test_statement(0x1B66); }
$error$
$end$
409
 if ($teb << $teb & ~@rsp >> @rdi >> @r8 | ($buffer) & @rdx >> @rax & -$proc & @rsp ^ @rbx ^ @r9 & @rbx ^ 0x12 | $thread >> $ip & @r13 & +~($buffer) >= @rdx << @rbx << $proc)  { test_statement(0x20E9); }
$error$
$end$
410
 if ((@rbx) >> @r10 >> ~@r8 >> +@r12 ^ $ip >> $thread >> @rsp (@rbx) >> @r10 >> ~@r8 >> +@r12 ^ $ip >> $thread >> @rsp)  { test_statement(0x206); } elsif (~@rdi >> @r9 >> @rax != ~@rdi >> @r9 >> @rax) { test_statement(0x159A); }
$error$
$end$
412
 if (@rbp + $thread << @r11 >> $teb << @rsp | $buffer >> @r9 >> ~@r11 & $teb & $buffer ^ @rsi >> -$proc <> @r10 | @r10 << ~0y11 & 0x3 >> $ip ^ @r8 >> @rsp & +$thread & -@r8 | @rbx ^ $buffer ^ @rax)  { test_statement(0x14CF); }
$error$
$end$
413
 if (@rbp >> 0x8 >> @r9 ^ @r11 >> @rax >> @r13 | +-(~@r9) & @r13 >> -0y10000 | $proc ^ @rsi & @r13 ^ $ip > $ip)  { test_statement(0x11D); } elsif (-(+0y101) & -@r12 | +@rdi >> +@rax ^ @r12 & @rbp(($ip >> @r12 | @rdx & @rbx ^ @rax ^ -@r10 | 0n18 ^ 0x3 | $buffer ^ 0x5) { test_statement(0x22EC); }
$error$
$end$
414
 if (@rbp >> 0n0 < $buffer << @rsp >> $proc << $ip ^ @r8 >> @rbp >> @rbp ^ @rsi ^ 0x4 & $teb ^ @r12 ^ @r8 | 0x8 >> $ip >> @rax)  { test_statement(0x1E54); } elsif (+0x8 << 0xA >> 0n6 ^ +@r8 & $ip & @r13 = $ip << @r13 & @r11 >> $buffer) { test_statement(0x1EC8); }
$error$
$end$
415
 if (@r12 | @r9 << $teb >> $teb & $buffer >> @rbp ^ @rsi >< -@rsi >> $ip << ($teb) >> @rsp)  { test_statement(0x389); } elsif ($thread << @rax >> -+@rsp ^ @rdi >> 0 | @rsp | +@rax & $buffer($thread << @rax >> -+@rsp ^ @rdi >> 0 | @rsp | +@rax & $buffer) { test_statement(0x4DF); } else { test_statement(0x14CD); }
$error$
$end$
416
 if (@r10 + -@r9 << 0y10001 << $ip >> @r8 << 23 >> @rsi & (@rsi) << 0x0 & @rbp & @r12 & 0x3)@r10 + -@r9 << 0y10001 << $ip >> @r8 << 23 >> @rsi & (@rsi) << 0x0 & @rbp & @r12 & 0x3)  { test_statement(0xB1); }
$error$
$end$
417
 if ($teb + @r8 ^ $buffer << @r11 >> $thread >> 7 ^ $buffer & ~@r11 & 0n15 ^ $teb & $ip ^ 0x12 ^ $teb | $thread << (@r8) & $thread >> $ip ^ 15(@rax + ~0x5 ^ $buffer << $buffer ^ @r10 >> @r11 & @r10 & @rdi ^ @rax)  { test_statement(0x19B1); }
$error$
$end$
418
 if ($buffer << 0x1 << 0n17 ^ @r12(@rbx + @rbx & @r13 << @rsi >> $teb >> @rsp & ($buffer) >> @rdx ^ ~(-$teb) << $buffer >> @r9 ^ @rdi >> @rsp ^ @rsp & @r8 ^ 1 ^ @r8 | $proc)  { test_statement(0x538); } elsif (@r8 << $teb & $ip >> 0y1001 & +@rbp ^ $proc & @rbp & @r11 ^ ~$buffer & ~$ip ^ $proc | @r9 >> +@r13 & @rsp | 14 ^ @r8 | @r8 ^ $buffer | (@rsi)((0x13 << ($buffer) >> $teb >> @r12 & 0n9 >> @r9 ^ @rdx >> $proc & ~@r13 & 0n18) { test_statement(0x106A); } elsif (@r12 & +$buffer == 0x9 ^ -~+@rdx & ~(@r11) ^ $buffer ^ $thread) { test_statement(0x18FB); } else { test_statement(0x11DC); }
$error$
$end$
419
 if (+@r10 >> @rax >> @r13 >> @rbp & @r13 << @r11 ^ -@rax >> @r11 & ~@rbp | @r10 & @rbp ^ @r13 ^ @rbx | $buffer >> 3 & 0xF & @rsi <> +@r10 >> @rax >> @r13 >> @rbp & @r13 << @r11 ^ -@rax >> @r11 & ~@rbp | @r10 & @rbp ^ @r13 ^ @rbx | $buffer >> 3 & 0xF & @rsi)  { test_statement(0x20C4); } elsif (-0x6 >> @rdi | ~@rsp >> 0x10 & @rax != $teb << @r8 >> @r8 & @rdx >> @r8 ^ @r10 >> -@rdx & @rbx ^ $teb & -$ip ^ @rbx) { test_statement(0x1EAA); } elsif (-@rdx | @r8 & $ip ^ @r8 ^ @r10 == ~0xD >> @rbx) { test_statement(0xB10); } else { test_statement(0x1E5); }
$error$
$end$
420
 if (@rbp + +$teb & $ip >> $proc >> -0y1000 | @rdx >> 0y1111 >> @rbx & 0x1 ^ @rsi >> ($thread) & (0y10) ^ $proc <> (~$ip) + @r12 >> @rbp << $thread >> @r13 >> 4 | @rdi >> @r8 ^ +@rdx >> $proc & $proc & @r12 | @rsi & 0n9 & @r12 | $teb ^ 12)  { test_statement(0x1B6); } else { test_statement(0x1F66); }
$error$
$end$
421
 if (@r10 << @rbp << @r9 | 0x1 << $proc & @r9 ^ @r9 & $proc & @rdi <= @rbx >> $ip >> -+$proc >> @rbp)  { test_statement(0x1387); }
$error$
$end$
422
 if (0xB << $proc ^ (~~@rbp) >> $proc >> $ip & ~@rax >> @rsi ^ $thread >> 2 ^ 0n11 & (@rdx) ^ ($buffer) ! @r11 << $buffer << 0n6 >> +@r9 ^ $thread << $thread >> 11 >> $teb ^ @rsi >> 0y1011 & 3)  { test_statement(0x1EF8); } elsif (@r10 >> @r12 >> @rbx ^ $thread & @rsi & @r10 >< @r10 ^ ($thread) ^ -@rdi & (@r8)) { test_statement(0xB56); } elsif (@rbx >> $buffer & ~@rdi ^ $proc ^ 0n1 ^ -@rsp != $teb ^ @rax) { test_statement(0x8F7); } else { test_statement(0x272); }
$error$
$end$
423
 if (@r12 << (-$thread) << @rbx & @r11 ^ ~@r12 << @r8 >> $ip >> 0x7 @rdi ^ @r13 >> (0n6) & @r8 | @r12 & 0y1 & @rbx)  { test_statement(0x20C1); } elsif (@r11 << +@r8 >> $proc & @r8 ^ $buffer >> (-@r13) ^ @r13 | @rdx & $ip ^ @r11 ^ $teb < +$proc << $buffer >> 0x3 >> @rsi & +0xB >> ~@rbp ^ 13) { test_statement(0x16E3); } elsif (@r11 >> (@r9) | @rdx | -@rbx ^ @rsp != @r10 ^ (0n4)) { test_statement(0xF60); } elsif (@rdx))$buffer & @rsi ^ -$thread ^ ($proc)) { test_statement(0x18D4); } else { test_statement(0x53F); }
$error$
$end$
424
 if (@r12 << @r9 << @rsi ^ @rdx >> 0n1 ^ @rsp >> 0x0))@r10 + $proc ^ $proc >> (@rdi) >> +@rbp & @r12 >> 0xC & @rbx & $buffer ^ $proc >> @rdx ^ $ip)  { test_statement(0x14B8); } elsif (@rbx >> 0y1010 ; @rbp & 14 ^ $ip ^ @r13) { test_statement(0xF80); } elsif (@rsi >> -0xF & @rbx & (@rbx) | @r8 & @rsp ! ~@rax & ~@r12 & -@r8 | 0x8 ^ $buffer ^ @rsp | @r9 ^ @r8) { test_statement(0x212D); } elsif ($proc & @r9 ^ 0y0 ^ $teb))@r13 ^ $proc ^ $ip | $teb | 4 | 0n11) { test_statement(0x8B5); } elsif ($proc | +@rsi ; @rsp ^ $thread) { test_statement(0x5F); } else { test_statement(0x18DE); }
$error$
$end$
425
 if (@r11 >> -@rsp < $proc << 2 & ~$thread >> @r9 ^ @rsp << ~0n10 & @r10 >> ~@r13)  { test_statement(0x10F7); } elsif (@r8 >> @rbx >> @r8 <= 0x12 & @rsp >> ~@rsi & 1 & @r8 ^ @r13 >> 0y1011 & $proc) { test_statement(0x23A6); } elsif (@rdi >> @r9 & @rdx ^ @r13 ^ @r8 >= @rdi >> @r9 & @rdx ^ @r13 ^ @r8) { test_statement(0x209D); } elsif (@rdx ^ ~0n13 | 0y1110 ^ 0n16 | @r8 | @rsi ! 0y111 & 0y1011 ^ 0x0 | @rsp ^ 0y101 | @rsi) { test_statement(0x9B0); } elsif (0x13 ! @rdx) { test_statement(0x339); } elsif (0y1001 != (@rsi) | @rbx) { test_statement(0x41B); } elsif (@rax <> @r9) { test_statement(0xEE5); } elsif (5 < @r8) { test_statement(0x1C07); } elsif (($thread) > $teb) { test_statement(0x19DD); }
$error$
$end$
426
 if (0x1 << @r11 << -@r8 & @rbx >> 0y1110 >> @rax = @rbp + 23 << $teb >> ~(@r13) >> 0n5 & @rdi << @rbx >> 0n11)  { test_statement(0x2129); } elsif (5 << @r10 >> ($proc) ^ $buffer >> @rsp | ~+@r9 & @rsi & @rdi)5 << @r10 >> ($proc) ^ $buffer >> @rsp | ~+@r9 & @rsi & @rdi) { test_statement(0x8BD); }
$error$
$end$
427
 if (@rsi + 0n5 << -0y1010 >> @rax << @r12 >> (@r10) >> @rsp & 0x9 >> 0x0 & @rax = $proc + @rdi << -@r12 << +$thread >> (0y100) >> @r9 >> @r13 & @r11 << 0x7)  { test_statement(0x1865); } elsif ($ip == $ip) { test_statement(0x1FDD); } else { test_statement(0xCB4); }
$error$
$end$
428
 if (0x2 ^ -@rdi << $proc ^ $proc ^ @rdx ^ @rsp ^ $buffer @r8 ^ 0xC << @rbx)  { test_statement(0x240); } elsif (-@r9 << @rdi & @rax >> @rdx ^ $teb > -~+@r10 << ~$ip >> @rsi & $ip >> @rdi ^ @r9 >> $buffer & $thread & $thread) { test_statement(0x762); } else { test_statement(0x25FA); }
$error$
$end$
429
 if (-@r9 + 0y111 >> @r9 ^ $ip << $buffer | 5 << @rsi & @rax >> 0y1111((0y1001 + @rsi << @rdi >> $thread & @r10)  { test_statement(0x41); } else { test_statement(0x1E2D); }
$error$
$end$
430
 if (@r8 >> -10 ^ @rbp | -@r9 << @rax >> 0x4 >> 14(@r8 >> -10 ^ @rbp | -@r9 << @rax >> 0x4 >> 14)  { test_statement(0x22F2); } elsif (@rbp ^ $ip >> @r10 & 0y10011 ^ $thread ^ 0xC | @rsi >> @rdx ^ $buffer ^ @rbx)@r10 & @rdi | 0y10000 ^ +$buffer & @r8 | $buffer ^ $buffer | @rbx ^ @rsp) { test_statement(0x18AE); } else { test_statement(0x227D); }
$error$
$end$
431
 if (0y111 << @rbx | @rdi << $buffer >> @r11 >> @r9 | @rax ^ @rsp & $teb | @rsp ^ 0y10001 | 2 0y111 << @rbx | @rdi << $buffer >> @r11 >> @r9 | @rax ^ @rsp & $teb | @rsp ^ 0y10001 | 2)  { test_statement(0x15E6); } else { test_statement(0x1E87); }
$error$
$end$
432
 if (@r10 + @rsi & @rsi >> $buffer >> 23 & @rax ^ @rdx | @r13 << $teb >> @r12 >> $ip & 0x2 >> +@r13 ^ @rdx >> 0xE & @r12 ^ $ip & $buffer ^ @r12 ^ 6 = $proc)  { test_statement(0x202); } elsif ($proc ^ 0n7 >> @rsp & @rsi & +~$proc ^ @r8 & $proc ^ 0y1010 ^ @rbx | -(@rsi) >> ~13 ! $proc ^ 0n7 >> @rsp & @rsi & +~$proc ^ @r8 & $proc ^ 0y1010 ^ @rbx | -(@rsi) >> ~13) { test_statement(0xAC1); } elsif (@rsi >> $buffer ^ 0xC & @r13 ^ 0n9 ^ @r9 > 0n5 >> $thread & -@rbx | @r12 ^ @r13 | @rbx) { test_statement(0x130E); } elsif (0y1110 & 0x3 > @rsi & $proc | $proc ^ +@rax | @rdx) { test_statement(0x1D2E); } elsif ((@rdi) | @r9 != @r12) { test_statement(0x87A); } elsif ($ip | $thread >< $ip | $thread) { test_statement(0x1C6F); } elsif (@rsi <> @rsi) { test_statement(0xB1E); } elsif (-@r11))~-$proc) { test_statement(0xBB0); }
$error$
$end$
433
 if ($proc + @rbx << +-@r11 << 0n15 >> $teb << 22 >> @rbx & @rbx >> @rdx = @rax << $thread & $teb << @r10 & $ip & $thread)  { test_statement(0x555); } elsif (0n17 << ~$thread >> @rbx >> @r10 >< @r13) { test_statement(0x2218); } elsif (@rdx ^ @r9 & ~0n18 | (@rdx) ^ (@rax) ^ @r11 >= @rbx ^ @r10 | @rsp & $teb | $teb) { test_statement(0xF4); }
$error$
$end$
434
 if (@rsi >> @rbp << @r9 >> 0y10 >> 0y1011 ; @rsi >> @rbp << @r9 >> 0y10 >> 0y1011)  { test_statement(0xD14); } else { test_statement(0x1C5F); }
$error$
$end$
435
 if (@rsi << @rax >> $buffer << $thread >> $ip ; @rsi << @rax >> $buffer << $thread >> $ip)  { test_statement(0xBC3); } elsif (@rsi << @rax >> 0n17 >> @r11 & $ip & ~@rsi & $buffer ^ $thread & @rax & 22 ^ 0y11 ^ $buffer ^ $ip | $teb | +$buffer ^ 0x12 ^ 6 | -@rsi))~@rbx) { test_statement(0x1A13); } else { test_statement(0x14B5); }
$error$
$end$
436
 if (@r11 << 0y1101 << @rsi >> $thread << @rbx & @rsi((@r11 << 0y1101 << @rsi >> $thread << @rbx & @rsi)  { test_statement(0x1D57); } else { test_statement(0xFCB); }
$error$
$end$
437
 if ($teb + @rsp & +@rdx ^ @rax << (-+@rdx)((@rdi + 0y1011 & @rax >> @rsp >> @rdi & $ip >> @r11 | (2) & $buffer >> $thread & $proc & 0y1011 ^ $teb >> @rbx & 0y0 & @rbx ^ @r12 ^ @rbx)  { test_statement(0x1B97); } elsif (0n14 << @r8 & @rbx(@rsp ^ @r13 & @rax & ~+@r10) { test_statement(0x1938); } else { test_statement(0x506); }
$error$
$end$
438
 if ($ip + @r8 << ~~@r13 << @rsi >> @rdi & +17 << @rsp & 0n4((@rdi << @rdx << ~@rdx & @rsp << @r9)  { test_statement(0x1775); } else { test_statement(0x2464); }
$error$
$end$
439
 if ($proc << 0n17 << $teb)@rsp << 0x3 >> @rax << $ip & @rax << @r13 >> $buffer | +$ip << $buffer)  { test_statement(0x15BD); } elsif (@r8 << 0n10 >> 0xD ^ @r13 & +0y110 & @rdx ^ @rsp ^ $thread | @r11 | 0n16 ^ @rbx >= @r12 << (@rdx) >> $buffer >> (@r13) ^ ~0n1 | @rsi ^ @rsp ^ @rdx ^ $buffer) { test_statement(0x1147); } else { test_statement(0x119E); }
$error$
$end$
440
 if (@rbx << 0y101 <> $buffer + @rdx >> @rbx >> @rdi & $thread << @rbx | @r11 << $buffer)  { test_statement(0x1031); } elsif (@rsp << (@rbx)))+@rbp << @rbx >> $buffer >> $thread & @r12 & $buffer & -~(@rdi) | @rsi >> +@r12 & $teb | @rbx & 0n1 ^ 0x12 ^ @rdi | @rbx | -@rax) { test_statement(0x2DE); } elsif (@r8 >> @rsi & $teb & @rsi ^ 0n5 & +$thread | @rbx ^ @r11 | $ip(($buffer >> @rax ^ $thread ^ ~$proc ^ 0x12) { test_statement(0x1D1D); } elsif (14 & @rbx ^ @r12 | @rdx | @r12 | @rbp ; @r12 | -0y10011) { test_statement(0xCB7); } elsif (@r10 ^ -@rax | @rsp | 4 = (@r9) | 0y1110) { test_statement(0x56B); }
$error$
$end$
441
 if ($thread + @rbx << 0 << $teb & $ip << @r8 >> 0n11 | $proc >> $teb >> $buffer & @r8 | @rdx >> -@r11 ^ @rax ^ +-0x5 | @rdx & 0x7 ^ $ip ^ (-@rdi) | -~@rdx ! ~@rdi + +$proc << @rbp << @r11 >> @rsp << (7) & @r13)  { test_statement(0x127); } elsif (~(-(@rsp)) & 0y1000 @rdx >> 0y111 & @rbx & (~$thread) & ($buffer)) { test_statement(0xF44); } elsif (@rdx >> @rsi & @rbx & @r11 ^ @r11 & $buffer ^ 20 ^ 0y100 | 0n12 ^ $proc ^ @r11 | @r12 ^ $thread((0y111 ^ $buffer & $teb ^ $thread | @rax & @r12 ^ -@rbx ^ @r11 | 12 ^ 2) { test_statement(0x1A1B); } else { test_statement(0x20F1); }
$error$
$end$
442
 if (@r8 + @rbp >> @rsp << @rbp ^ $teb << +13 | @rbx & @r12 >> @rdi <= @r8 + @rbp >> @rsp << @rbp ^ $teb << +13 | @rbx & @r12 >> @rdi)  { test_statement(0x429); }
$error$
$end$
443
 if ($thread & @r9 == @rdi + $teb << @r10 << $ip >> @r11 >> 0n4 >> 0n0 & +$buffer << 0n10 >> 0x7 >> 0y10010 & $teb >> $ip & @r13 & @rdx)  { test_statement(0xD57); } else { test_statement(0xE9B); }
$error$
$end$
444
 if (0n7 + $ip = 0n7 + $ip)  { test_statement(0xD24); }
$error$
$end$
445
 if (23 == $teb & @r12 << @r11 >> @rsp | @r13 ^ (@r9) >> @rsp ^ @rax | $buffer ^ $thread ^ $teb ^ $ip)  { test_statement(0x1DDA); } elsif (0n19 << @rdi & $buffer >> @r8 & @r9 ^ @rdx = 0n5 << ~0x2 & 0n15 >> 0xB | $thread ^ @rbp ^ 0y1101 | @rax & @rbp ^ -@r9 | (@r8) | ~0x10) { test_statement(0x2016); } elsif ($teb & @r8 & @r10 <= $teb & @r8 & @r10) { test_statement(0x1079); } elsif (@r13 ^ @r13 ^ $buffer < $teb) { test_statement(0x825); } elsif ((@rsi) ^ @r8 | @r12 > (@rsi) ^ @r8 | @r12) { test_statement(0xC02); } elsif (@rbx >= @rbx | 6) { test_statement(0x248C); } elsif ($ip < @rbx) { test_statement(0x124E); } else { test_statement(0x816); }
$error$
$end$
446
 if ($teb + @r11 << +@r11 << -~0x2 >> 0y111 >> $ip <> 0n15 ^ @rbx & $ip | +0xB << @r12 & 0n0 >> @rdi & @rbp ^ 12 & $ip)  { test_statement(0xCB6); } else { test_statement(0x1E7F); }
$error$
$end$
447
 if (~$buffer >> $buffer << ~@rsi >> 0y100 >> ~@rax ^ @rdi | -@r9 & @rbp >> $thread & $proc & ~~$thread ^ $ip & $thread ^ @rsi ^ 13 ^ @rdx)@r12 + $thread << $buffer << (@r10) & @r8 << @rsp >> $teb >> @r10 ^ @rbx >> $thread & @rsp & ~0x2 | @rsp & @r13 >> +$ip ^ @rsi >> @r11)  { test_statement(0x179B); } elsif (@rsp << @r8 | $teb >> $proc & 0n11 > @rsp << @r8 | $teb >> $proc & 0n11) { test_statement(0x1B1C); }
$error$
$end$
448
 if (@r13 + @r12 << @r9 >> ~$proc >> @r11 >> @rax & @r12 >> @r11 ^ ~0y110 << @rax ^ @r12 | $proc ^ ~@r13 ^ @rbp & @r10 ^ @r12 ^ @r9 | @rsp & @rsi & @r13 ^ @r9 & @r8 ^ $proc | ~0y10001 | @r12 | @r11 > @rdx >> @rdi ^ 0y1110)  { test_statement(0xD36); }
$error$
$end$
450
 if (@rbp << 0y1101 << @rbp | 0xF >> @rsi >> @r11 & (6) ; @rdi >> @rbx >> @rsi & $thread & @rsp)  { test_statement(0x1CA2); } elsif (@rbx >> @r11 >> @rsp & @r11 >> @r8 & 10 | @r9 >> @rax ^ @r10 & (@r9) ^ @rsp | @rsp & $teb))@rbx >> @r11 >> @rsp & @r11 >> @r8 & 10 | @r9 >> @rax ^ @r10 & (@r9) ^ @rsp | @rsp & $teb) { test_statement(0x345); } elsif (@r8 & @r9 & ~+@rbp ^ @rdx ^ 5(@r8 & @r9 & ~+@rbp ^ @rdx ^ 5) { test_statement(0x139D); } elsif (@r11 & ~@rsi ^ +@r11 | @rax ^ +@r11 | $thread | $thread >< @rsp & $ip ^ @rsp ^ $ip) { test_statement(0x958); } else { test_statement(0x1A28); }
$error$
$end$
451
 if (@r12 + @r13 >> (4) << @r10 >> +$ip | 14))~@rbp + 3 | @r11 << $thread >> @r12 | @rax >> @r11 & 23 & 0n7 ^ @rsi & @rdx ^ (0n18) ^ 0n8 | @rsp & 0y1101 ^ $buffer)  { test_statement(0x2544); } else { test_statement(0x432); }
$error$
$end$
452
 if ($teb ^ $ip >> 0x3 ^ @r10 >> @r9 & @rsp & @r11 ^ 0x12 | -0y10 >> -+@r10 >> @r12 & 10 ^ 0y1111 & $thread & 0n12 | $buffer | 0y1100 ^ $buffer != $teb ^ $ip >> 0x3 ^ @r10 >> @r9 & @rsp & @r11 ^ 0x12 | -0y10 >> -+@r10 >> @r12 & 10 ^ 0y1111 & $thread & 0n12 | $buffer | 0y1100 ^ $buffer)  { test_statement(0x87E); }
$error$
$end$
453
 if ($ip << $buffer << @r12 & 0y11 >> @rbx >> @r12 & @r10 & @r13 & +@rdi ^ @r10 << $buffer >> $ip & @rax & $buffer ^ 0x4 >> @r10 & @rdi | @rdx << @rdx | @rbp <> @r10 << (@r8) << +0y110 >> @rbx | (@r12) >> 0n0 >> @r13)  { test_statement(0x867); } elsif ($teb << @rsi >> $proc >> @r9 & @r9 >> @rdx | @r10 >> @r8 & $ip & @rbx ^ 0y1 ^ $proc ^ 0x6 < $teb << @rsi >> $proc >> @r9 & @r9 >> @rdx | @r10 >> @r8 & $ip & @rbx ^ 0y1 ^ $proc ^ 0x6) { test_statement(0x121A); }
$error$
$end$
454
 if ($thread + @r8 ^ @r13 << @r13 >> 0xA >> (@r8) > $thread + @r8 ^ @r13 << @r13 >> 0xA >> (@r8))  { test_statement(0x1276); } elsif (+@rdx ^ $teb >> 0y1001 | @rdi ^ 0x8 ^ 0n18 ^ (@r10) | +@r12 ^ @r11 | @rax ^ @r13 | (@r9) | $buffer != @rbp >> @rax >> 0y101 & -@r11 & 0y1010 ^ @r9 >> @rsp & @r13 & @rdx ^ +@rbp) { test_statement(0xE2B); } elsif (@r10 >> -~(@r13) ^ $ip ! @rdi >> $thread ^ @r13 & @rbx) { test_statement(0x23AD); } else { test_statement(0x435); }
$error$
$end$
455
 if (0y1100 >> 0x6 << $buffer >> @r9 >> @r13 & @r9 << @rsp >> @r12 >> $buffer ^ $teb << @rsi >> @rsp & $buffer >> 0n3 & 0x7 & +@r13 < +@rdx + @rbx >> $proc << 0xB)  { test_statement(0x1C7B); } else { test_statement(0x1081); }
$error$
$end$
456
 if (@r8 | @rsp >> @r10 ^ @rbp >> @r9 ^ 0x2 & 0x12(($thread >> 0n6 << $teb ^ 0xE << +@r8 & @rax & @r13 ^ $proc >> $buffer)  { test_statement(0x2257); } elsif (@r9 << @r10 >> @r10 >> -((+@r10)) ! 16 << 0y10010) { test_statement(0x3B5); } else { test_statement(0x11B9); }
$error$
$end$
457
 if (-5 >> 0n2 << @rax >> @r10 ^ 0n13 >> @r11 >> ($buffer))-5 >> 0n2 << @rax >> @r10 ^ 0n13 >> @r11 >> ($buffer))  { test_statement(0xD21); } else { test_statement(0x2FD); }
$error$
$end$
458
 if (0y1 + $ip << -$ip << -@rbp & @rsi >> @rdi & $thread & $proc ^ @rdi >> @r8 >> 0x11 ^ +(++@rax) >> +@rax & +@rbx & @rdx <> ($teb) >> 0y10011 << @rax >> @rbp >> +@rsp & @rsi)  { test_statement(0xC31); } else { test_statement(0x1198); }
$error$
$end$
459
 if (@rsp + ~@rax >> @r8 & $teb ^ @rdx & @r8 & @r11 & (~0n14) ; @rsp + ~@rax >> @r8 & $teb ^ @rdx & @r8 & @r11 & (~0n14))  { test_statement(0x1277); } elsif (@r9 << @rax >> @r10 >> @r10 & @r9 >> $proc = 2 & $teb >> @r12 ^ @r10 >> (@rsi) & $thread & @rax ^ @rax ^ @rsp) { test_statement(0xCE4); } else { test_statement(0x1EAB); }
$error$
$end$
460
 if (@r9 << @rbx >> $thread << -0y111 >> @r12 >> @rsp | @r10 << @rbx >> @rbx & $ip >> @r11 & ($buffer) & @rbp(($buffer + @r11 << ($buffer) & @r13 << $teb)  { test_statement(0x1FF2); } elsif ($ip << @rbx >> @rsp & @rax >> @r13 & @rbx & @rdi ^ $proc & $thread & @rax ^ @r9 ^ @rax ^ (@r12) = @r12 & @r8 >> $teb) { test_statement(0x74B); }
$error$
$end$
461
 if ($buffer >> @rbx & @r8 << 0n8 >> $teb & @rdx >> @rsp & 7 | $proc & +$teb >> @rsp & @rdi & @rbp == @r12 << @rbp >> +@rdi & @rdi)  { test_statement(0x1300); }
$error$
$end$
462
 if (@r13 + @r11 << @r9 << $thread >> @rbx << @r12 & 0x4 ^ $ip << $buffer & @rdi & $proc | @r13 | @r10 >> @r9 & @r12 & $proc ^ (0y1111) & @rbp != @r13 + @r11 << @r9 << $thread >> @rbx << @r12 & 0x4 ^ $ip << $buffer & @rdi & $proc | @r13 | @r10 >> @r9 & @r12 & $proc ^ (0y1111) & @rbp)  { test_statement(0x2291); } else { test_statement(0x1260); }
$error$
$end$
463
 if (@rdx + @rdi << @rax << 0y1100 ^ ~22 >> @r9 >> $teb ^ @rbx & @r8 ^ @r9 & @r13($buffer + @rdx >> $thread >> @rdi ^ +0n12 << 0n4 >> $thread)  { test_statement(0x214E); } elsif (@rbp << ~0n8 >> 0x12 ^ @rbp >> $ip & @rbp & --@r13 ^ (@rbx) ^ ~13)$teb << @rdx >> 0y1101 & @r9 >> $proc) { test_statement(0x250D); } else { test_statement(0x15CF); }
$error$
$end$
464
 if (@rax << @r9 & 0n16 << (@r10) & @r10 | @r13 << @r12 >> @rax >> +$ip & @rbp & @r13 & @r8((@rax << @r9 & 0n16 << (@r10) & @r10 | @r13 << @r12 >> @rax >> +$ip & @rbp & @r13 & @r8)  { test_statement(0x5D5); } elsif (~$thread >> $thread & @r12 | 0n8 & 0y1010 ^ $teb ^ @rsi ^ -$teb | @rax <> 0y10001 << @r12 | @r9 & @r11 ^ $buffer & 0x0 ^ $teb ^ 0y1011 | ~@r8 & @rdx) { test_statement(0x5A6); } elsif ($ip >> 0y0 & @rbp & @rbp <= $ip >> 0y0 & @rbp & @rbp) { test_statement(0x1970); } elsif (@rax ^ @r13 | 1 | @rdi | @rsp > @rax ^ @r13 | 1 | @rdi | @rsp) { test_statement(0x69A); } elsif (@rsi ^ @rbp | @r12 | $proc((@r11 ^ $teb) { test_statement(0x1AD4); }
$error$
$end$
465
 if (@rax + 23 & (~@r11) << @rsi & $ip >> ~+$proc & @r12 & 12 ^ $ip >> @rax & @rdx < @rax + 23 & (~@r11) << @rsi & $ip >> ~+$proc & @r12 & 12 ^ $ip >> @rax & @rdx)  { test_statement(0x1390); }
$error$
$end$
466
 if (0n19 + 0x2 << @rdi >> 13 >> @r13 >> $buffer 0 >> @rax << @rsi | @rdi & -@r10 >> $ip)  { test_statement(0x1FA); } elsif (@r8 >> @r13 >> @rax & @r12 <= @r8 >> @r13 >> @rax & @r12) { test_statement(0x19F0); } else { test_statement(0x18E9); }
$error$
$end$
467
 if (-0x3 + 0y1001 << @r8 << $thread & @rdi = $ip << ~@r8 ^ @r9 << 0x8 ^ 5 & @rax | $ip >> @rbx)  { test_statement(0x24D9); } elsif ($buffer << (@r13) & +@r13 & 23 ! $buffer << (@r13) & +@r13 & 23) { test_statement(0xD47); } elsif (@r11 & $teb & @r8 ^ 0xC | 0n8 ^ $ip | +@r11 ^ 0xA | -@rax >= @rax ^ +0y11 ^ @rdx ^ (@r9)) { test_statement(0x2025); } elsif (@rax & @r10 | ~$proc ^ @rbp ! @rax & @r10 | ~$proc ^ @rbp) { test_statement(0x9FE); } else { test_statement(0xE23); }
$error$
$end$
468
 if ($thread << @rsi << (@r10) >> @r10 >> -10 & 0x6 << @r13 >> @r13 >> $buffer | @r11 >> @r13 ^ +0y10011 >> 15 & 0n4 ^ +0xE & @rsi | ((@rdx)) & $thread <> $thread << @rsi << (@r10) >> @r10 >> -10 & 0x6 << @r13 >> @r13 >> $buffer | @r11 >> @r13 ^ +0y10011 >> 15 & 0n4 ^ +0xE & @rsi | ((@rdx)) & $thread)  { test_statement(0x116F); } else { test_statement(0x1CBD); }
$error$
$end$
469
 if (@rdx + 21 << @r8 << @rsp | @rbp & $ip & @r11 | $teb & @rbx & @r12 ^ @rdi | $thread & @r13 ^ -$thread | @rbx ^ $thread | $teb <= $teb >> $ip << @r10 >> @r8 | @rbx << @rbp & $ip & 0y1101 ^ +@rdx >> @r13 & +15 ^ @rdx & $ip ^ @rdx ^ @r8)  { test_statement(0xAF0); } else { test_statement(0x263F); }
$error$
$end$
470
 if (@rsi + +13 << @rdx & @rbx >> -@rsi & $proc >> 0y1011 > 0n13 + $ip << $buffer)  { test_statement(0xDDB); } elsif (@r12 << @r10 | @rbx >> -@rdi & 0xC <= @r13 << $teb >> 0y1010 & 0n0 >> @rsp) { test_statement(0x1D4B); } else { test_statement(0xA85); }
$error$
$end$
471
 if (+@rsi + +@rdi >> $thread << @r12 & $proc & @rdx | $teb << @r10 ^ 7 & @rax | @r11 >> (@r8) ^ @r11 | @rax ^ @rsp | @r11 ^ @r8 | @rbp | +$thread >< @r10 + @r10 << @r8 ^ 0y10011 >> @r11 >> @rdx)  { test_statement(0x2186); } else { test_statement(0x2A2); }
$error$
$end$
472
 if (@rsp + $proc << @r8 << @r9 >> @rsi >> 21 >> 0y1010 & @r12 >> $teb >> @rbp ^ @r9 >> @r12 >> (6) & @rdi >> $ip ^ @rdi & ~@r10)@rsp + $proc << @r8 << @r9 >> @rsi >> 21 >> 0y1010 & @r12 >> $teb >> @rbp ^ @r9 >> @r12 >> (6) & @rdi >> $ip ^ @rdi & ~@r10)  { test_statement(0xCDA); } elsif (@r10 << @r10 & 0n5 >> -(@r10) ^ @rsi | 0y11 >> @rsp ^ @r13 & @rsp ^ $teb <= $teb << @r13 & @rdx ^ $buffer >> $teb ^ ~@rbx) { test_statement(0x24A9); } elsif (@r13 >> @rdi < @rbx >> (+@r9)) { test_statement(0xC86); }
$error$
$end$
473
 if (0n3 + $buffer << $buffer >> +0y10 & ~@r12 << 0x11 & @r10 >> @rsi & @rax <> @rbp + @rdi << @r11 << +-@rdx >> $teb << @r10 & +@r10 >> @rbx ^ ~0y110 << $buffer ^ 0y110)  { test_statement(0x6F); }
$error$
$end$
474
 if (~-@rbx >> 12 & @rbp >> 0n3 >> @rbp ^ @r13 << @rsp ^ @r10 & (-@rsi) & @r11 ^ 0y1011 ^ 0y101 | @rsp >> @r9 >> 20 & $ip & $thread ^ @rbp & (@r9) | @r12 >> @r13 & $ip ^ @r11 & 0xA | @r8 | @rbx | @r8 != ~-@rbx >> 12 & @rbp >> 0n3 >> @rbp ^ @r13 << @rsp ^ @r10 & (-@rsi) & @r11 ^ 0y1011 ^ 0y101 | @rsp >> @r9 >> 20 & $ip & $thread ^ @rbp & (@r9) | @r12 >> @r13 & $ip ^ @r11 & 0xA | @r8 | @rbx | @r8)  { test_statement(0xEDF); } elsif (-@rbx << @r11 ^ (@rsi) ^ @r8 ^ ~0n11 <> -@rbx << @r11 ^ (@rsi) ^ @r8 ^ ~0n11) { test_statement(0x1C08); } else { test_statement(0x137A); }
$error$
$end$
475
 if (~0y1 + @r9 << @r10 >> @r10 << @rbp >> @r11 ^ @r9 << $thread & +$ip >> 5 > 1 << @rbx << ~@rbp ^ @rax ^ ~@rsi >> @rax | @r11 << @rbp >> +$proc)  { test_statement(0x19C6); }
$error$
$end$
476
 if (@r13 + @rbx << @rdx >> 0x4 << @rbp >> (+@rbx) | @r12 << @r8 ^ @rbx & @r12 @r13 + @rbx << @rdx >> 0x4 << @rbp >> (+@rbx) | @r12 << @r8 ^ @rbx & @r12)  { test_statement(0x123); }
$error$
$end$
477
 if ($proc + $teb >> +$thread | 4 >> 7 | @rbx >> @r8 & @r11 & @r13 ^ ~0y1101 ^ @rax ^ $ip | @r11 & @r12(15 << @rbp << $teb >> @r12 >> @rsp & 0x5 << @rax & 0n17 >> $teb)  { test_statement(0x2311); }
$error$
$end$
478
 if (@r11 << $buffer ^ @rsp << $proc >> @rdi >> @r9 | @r10 ^ 0x3 >> @rax ^ @rbx & @r12 ^ $teb ^ @r9 >< 0y111 ^ @rsi << -($buffer) >> (@r11) ^ $buffer >> @r9)  { test_statement(0x74F); } elsif (@r10 & $thread >> 3 ^ $thread ^ @r11 | @rsp >> @rbx & @rsp & $proc ^ $ip ; @rbp >> @r10 & @r9) { test_statement(0x1004); }
$error$
$end$
479
 if (@rsi + ~@r8 << @rbx << $proc | 0n14 & @rbx != @rbx + @rsi >> 0y10010 << 0x12 >> @rax & @r8 << $thread >> @r11 | @r10 << ($proc) >> @rbp & $ip & $proc & @rbx | @r9 >> @r10 ^ @rdi | $buffer & @r9)  { test_statement(0x13AD); } elsif (@rbp << @rdx >> @r8 ^ @rbx >> @rbp | @rdi >= @rbp << @rdx >> @r8 ^ @rbx >> @rbp | @rdi) { test_statement(0x913); } elsif ((0n12) | @r9 & @rdx != @r12 ^ 0n19 & $ip ^ +@r11) { test_statement(0x2558); } elsif (@rsp | $buffer = 0x6 ^ 0x8 ^ $thread | (@rax)) { test_statement(0x1F1A); } elsif (@rax ^ @r11 = ~@r12 ^ $thread | 0n14) { test_statement(0x1F76); } else { test_statement(0x1E66); }
$error$
$end$
480
 if ($teb << $thread << 6 >> +@r9 << @rbp & -(@r12) >> 17 >> 14 & @r11 >> 0x8 ^ $thread << 0n14 >> 0y11 >> @rbx ^ ~@rbx >> @r8 & $proc ^ @r8 ^ 0y10000 | ~@rsp & $buffer & @r11 & ~$buffer < -@r11 + -@r9 >> -$ip >> @r10 >> @r12 ^ @rax & @r13 & @r10 & @r10)  { test_statement(0x89D); } elsif (@r12 << @rax & @r8 ^ @rsi >> @r9 & $buffer & $buffer == 0xE >> @r12 & @rax >> $ip | $buffer & @r13 & @rsi) { test_statement(0x1FD7); }
$error$
$end$
481
 if (@r12 << (@rax) << $ip ^ (@r9) & ~-@r8 & $ip ^ @rsp @r13 >> @rdi << $thread >> 0y10010 >> $thread ^ @r10 >> @rdi >> $buffer | @r9 >> @rsp)  { test_statement(0x2FC); } elsif (@rax << 0y1 >> 0x1 & (0x9) & @rax & @rax | @r12 >> @rsp & @r13(@rax << 0y1 >> 0x1 & (0x9) & @rax & @rax | @r12 >> @rsp & @r13) { test_statement(0x584); }
$error$
$end$
482
 if (0y101 + $thread << @rbp ^ @rbp << ~0n10 >> $teb >> 0n7 & $proc >> -0n1 ^ 0 >> $buffer | @r12 << @rax ^ @r13 >> @rbx ^ @rdx ^ @rdx ^ $thread | -$ip & -$proc ^ @r11 >< $buffer >> -@r9 & @rbx >> @rax & 0xC >> (@r9) & $thread & @r9 ^ @r9 << @rdx & @r11 | @rbp & 21 >> 0y100 & 0n0 & @rax | 12 & @rsi | @rbx & @rax ^ ~0n16 ^ @rbx)  { test_statement(0x14E4); } elsif (0n0 << @rdx >> $buffer >> @rsp | +@rdx >> @rsi ^ @r11 ^ @rbx | @rdx & @r8 | @r11 ^ @rax | -@rsp ; 0n0 << @rdx >> $buffer >> @rsp | +@rdx >> @rsi ^ @r11 ^ @rbx | @rdx & @r8 | @r11 ^ @rax | -@rsp) { test_statement(0x2184); } elsif (17 >> $buffer & @r8 & $buffer ^ (@rbp) | @r12 ^ @r13 ^ $buffer >< @rbx >> $buffer | +$ip ^ 0n19 | 0y10000 | @r12 | @r9) { test_statement(0xC08); } elsif ($ip & -@r11 ^ @r11 ^ 3 ; $ip & -@r11 ^ @r11 ^ 3) { test_statement(0xE57); }
$error$
$end$
483
 if (0x12 & @r9 << @rbp >> @r12 & ~+@r10 >> 0x9 ^ @rsp << @rbx | @rsp << @rsi & @rbp >> 0x5 & +@rsi >= @rbx + @r12 << (@rsp) << -@r12 >> @rsp >> 0n10 & $ip << @rdx >> @rbp & -@r11 >> ~-$thread & 0y10001 & $ip | -13 >> +@r13 | @rsp >> $proc & @r8 & $ip)  { test_statement(0x28B); } else { test_statement(0x25AF); }
$error$
$end$
484
 if ($proc + 0x1 << @r10 << +@r13 >> @rsp << @r13 >> $thread & $buffer << ~@r11 | @r13 << @rsp >> @rdx ^ @rdi ^ @rdx ^ @rdx | @rbx >> $teb & +@rdi & @r12 +@rbp + -$ip >> @r10 | @rax)  { test_statement(0xEC); } elsif (@rdx << -$thread | @rax ^ $thread & $thread ^ @rdx | @r10 ^ @rbp ^ $proc | @r13 < @r10 & @r10 ^ @r13) { test_statement(0x1C4); } else { test_statement(0x548); }
$error$
$end$
485
 if (@r11 >> @r12 & $teb << @rsp >> ~-@rbx >> @r12 & @r11 >> @rsp & +$buffer ^ 0y10001 & @r9 >> @r12 & 7 & @rsp != @r11 >> @r12 & $teb << @rsp >> ~-@rbx >> @r12 & @r11 >> @rsp & +$buffer ^ 0y10001 & @r9 >> @r12 & 7 & @rsp)  { test_statement(0x1146); } elsif (0y10 << @rax >> 0x12 | 23 & @rsi ^ @rdi & 0y100 ^ $thread | 0n10 & -@rdx ^ @r11 | @rdx = @r11 >> 0xC ^ $teb & @rbp & $proc ^ $buffer ^ $ip | @rsp >> @rdx ^ @rbp ^ $teb | +@rdi & @rdi ^ @rbx ^ -@rsp) { test_statement(0xFD5); } elsif ($teb >> @r12 | @rbp & @rdi < $buffer >> @rbx) { test_statement(0x828); } else { test_statement(0x2654); }
$error$
$end$
486
 if ($ip >> @rax << +0y111 >> @rbp >> @r10 | 0 << $buffer & @rdi >> 0y1110 | ~@r8 >> $buffer & (@r11) & 0y1111 ^ @rbp | @r10 <= @r12 >> @r12 & @rsi ^ -@rsi & $proc | @r10 & @r12 >> @r9 & $ip & $proc ^ $teb & @r11 & @rsp)  { test_statement(0x219A); } else { test_statement(0x232); }
$error$
$end$
487
 if (10 << @r11 << @r10 >> @rbp = $ip + @r8 & @rsi << @rbp >> @r12 & @rsp >> $buffer ^ @r13 >> @rsp)  { test_statement(0x251); }
$error$
$end$
488
 if (@r10 + @r9 << @rax ^ @rsi << @rdi >> 0n2 >> 0 ^ @r12 >> $ip ^ @r12 ^ @r12 >= @rsp << @rbx << @r12 ^ @rsp << $buffer | $ip << @rbp >> $buffer)  { test_statement(0x18F0); } elsif (@rbp <= @rdx & +@r9 >> +@rsi & $thread ^ @rsp >> @r9 ^ ($teb) & @rsi) { test_statement(0xC7E); } elsif (@r10 & @rsp & $proc ^ @rdi ^ @rsp ^ 0y1001 ! $thread & @rdx & @r8 ^ 0y1011 & +$thread) { test_statement(0x11A); } elsif (@rdx ^ @rdx = @rsp & @rbp ^ @rax ^ 0x4 | 12 ^ 3 | ~@r10) { test_statement(0x5FD); } else { test_statement(0x173D); }
$error$
$end$
489
 if (@r10 + +@r8 >> +@rax << @rdi >> @r9 >> @r9 & @rbx << (@r8) | @r9 << @rsi ^ +@rsi >> @r12 ^ ~@rsi & @r11 | @r13 & $buffer >< (@r13) << $proc << 20 >> @r11 << @r9 >> $thread >> 14 | @rsp)  { test_statement(0x872); } elsif (@r11 >> -0x2 ^ @rax >> 0x11 | $ip & $thread ^ 0y11 ^ @rbp ^ @rbp | $proc & ~@r10 | $buffer ^ 0n7 | 0xE ! @r11 >> -0x2 ^ @rax >> 0x11 | $ip & $thread ^ 0y11 ^ @rbp ^ @rbp | $proc & ~@r10 | $buffer ^ 0n7 | 0xE) { test_statement(0x1FA8); } elsif (13 & +@rdi & @rbp | @rdx ^ @r8 ^ @rdi | @rsi > +@r9 >> @rbx & @rsi | @r9 & @r12 ^ @rsi) { test_statement(0x14C9); } else { test_statement(0x2017); }
$error$
$end$
490
 if (@rbx + -@r8 >> 0 | @rbx >> ((0x9)) ^ +0 & (@rbx) | ($proc) >> $teb & @rsi ^ @rbp & @r13 >= (-@r8) << @rax << $buffer ^ @r13 << @r13 >> @rbp >> @r8 & 0 & @rdx)  { test_statement(0x20C5); } elsif (2 >> $buffer & @rdx >> @r11 ^ $thread & ($ip) & @r8 = 2 >> $buffer & @rdx >> @r11 ^ $thread & ($ip) & @r8) { test_statement(0xB6); } else { test_statement(0xB79); }
$error$
$end$
491
 if (@r11 >> ~@r12 >> $thread >> 0xB & @r10 >> $proc & @r11 >> +$ip <> $teb + @r9 << @rsi | 0x0 & +@r8 & @r8 & @rbx ^ @r8 & (+@rsi) & @rdi ^ 0x8 ^ @r12)  { test_statement(0x1073); }
$error$
$end$
492
 if (@r11 << $proc ^ $thread << $ip >> $buffer >> 0n12 != +(@r13) >> 0x3 << @rsp >> @r8 & -0x3 | @rdi << $teb & @r13 >> $buffer ^ @rbp >> @r13 & $teb ^ @rsp | $thread >> @rbp ^ +$proc & 0y101)  { test_statement(0x15DC); }
$error$
$end$
493
 if (@r12 + 0 << $ip << @rsp == @r12 + 0 << $ip << @rsp)  { test_statement(0x255C); } elsif ((0y1110) << $teb >> @rsi >> @rsi = $proc << @rbx >> @r11 >> @r13 ^ 10 >> @rbx ^ +0n13 | @rsi ^ $buffer & @rax) { test_statement(0x18C8); } else { test_statement(0xC8B); }
$error$
$end$
494
 if (~$thread + +$thread >> 12 << @rbx & @rbx & @rbx & $buffer & @r10 | 0y10000 & 0n11 ^ @rsp & @r11 & 0xB ^ @rdx))@rdi + @r8 << 0y10011 << $thread >> 0y1101 >> 16 ^ +@rax << @r8)  { test_statement(0x1E25); } elsif (@rdx >> @r12 & @r8 | 0y110 & @r10 & @rax ^ @rbp & @rdi < @r11 >> @rax >> ~(@rbx) & 0y10011 & ~@r12 | @rdx >> $teb | 0y100 & @rdi) { test_statement(0x1573); }
$error$
$end$
495
 if (@rsp))@rsp)  { test_statement(0x1037); } elsif ($buffer & $teb >> @rbp & $buffer ^ ~-@r12 & -(@rsp) ^ (@rdi) & $proc | $thread ^ @rdx ^ @r12 ^ @rsp > $buffer & $teb >> @rbp & $buffer ^ ~-@r12 & -(@rsp) ^ (@rdi) & $proc | $thread ^ @rdx ^ @r12 ^ @rsp) { test_statement(0x1E43); } else { test_statement(0x613); }
$error$
$end$
496
 if (@r10 + @rsp << @rbx << @r10 >> -@rbp >> @rdx & @r10 >> -$ip ^ @rsi >> $ip >> @r9 & $buffer | @rax >> @r9 >> @r11 & -$thread ^ 0y1101 >> @rsi & $thread & @rdi ^ @r13 & @r12 | @r8 >> @rsp | 0x11 ^ +$buffer | $ip != @r10 + @rsp << @rbx << @r10 >> -@rbp >> @rdx & @r10 >> -$ip ^ @rsi >> $ip >> @r9 & $buffer | @rax >> @r9 >> @r11 & -$thread ^ 0y1101 >> @rsi & $thread & @rdi ^ @r13 & @r12 | @r8 >> @rsp | 0x11 ^ +$buffer | $ip)  { test_statement(0x1A57); } else { test_statement(0x10F3); }
$error$
$end$
497
 if ($thread + $ip << +(@r10) << @r13 >> @rbp & @rbx & +0x1 >> $buffer != $buffer << @rbp << $buffer & 0xC << @rbx >> $proc ^ @r13 << @r8 >> 0n11 & @r13 & $buffer & @r12 | (@rsp) << $buffer | 0x6 | @rdi ^ @r12 | -@rsp | @rsp)  { test_statement(0xEB5); }
$error$
$end$
498
 if (+3 << @r12 << @rdi >> $teb << -@r9 >> @r9 >> 3 & $teb << $proc >> @rbx >> @r11 | 0 >> @rbx >> $ip & @r9 & @rbp & 11 ^ $teb >> @r10 & @rsp ^ @rsp ^ @rax(@rbp + @r9 ^ ~@r9 << 1 >> @r12 & ~$ip >> $teb ^ 0n0 >> @r11 & @r11 | 0n19 ^ 16 ^ 0n12 & @rbp)  { test_statement(0x10A4); } else { test_statement(0x571); }
$error$
$end$
499
 if (@r12 ^ (@r13) >> @r10 & ~(@r11) & -@rdi | (+~0y1011) ^ @r9 | $thread(@r12 ^ (@r13) >> @r10 & ~(@r11) & -@rdi | (+~0y1011) ^ @r9 | $thread)  { test_statement(0x2637); }
$error$
$end$
