package phnt



func CTL_CODE(deviceType, function, method, access uint32) uint32 {
	return ((deviceType) << 16) | ((access) << 14) | ((function) << 2) | (method)
}


const (
	FILE_DEVICE_UNKNOWN = windef.FILE_DEVICE_UNKNOWN
	METHOD_BUFFERED     = windef.METHOD_BUFFERED
	FILE_ANY_ACCESS     = windef.FILE_ANY_ACCESS
)

var(
_NTIOAPI_H =  //col:13
FILE_SUPERSEDE = 0x00000000 //col:17
FILE_OPEN = 0x00000001 //col:18
FILE_CREATE = 0x00000002 //col:19
FILE_OPEN_IF = 0x00000003 //col:20
FILE_OVERWRITE = 0x00000004 //col:21
FILE_OVERWRITE_IF = 0x00000005 //col:22
FILE_MAXIMUM_DISPOSITION = 0x00000005 //col:23
FILE_DIRECTORY_FILE = 0x00000001 //col:27
FILE_WRITE_THROUGH = 0x00000002 //col:28
FILE_SEQUENTIAL_ONLY = 0x00000004 //col:29
FILE_NO_INTERMEDIATE_BUFFERING = 0x00000008 //col:30
FILE_SYNCHRONOUS_IO_ALERT = 0x00000010 //col:32
FILE_SYNCHRONOUS_IO_NONALERT = 0x00000020 //col:33
FILE_NON_DIRECTORY_FILE = 0x00000040 //col:34
FILE_CREATE_TREE_CONNECTION = 0x00000080 //col:35
FILE_COMPLETE_IF_OPLOCKED = 0x00000100 //col:37
FILE_NO_EA_KNOWLEDGE = 0x00000200 //col:38
FILE_OPEN_FOR_RECOVERY = 0x00000400 //col:39
FILE_RANDOM_ACCESS = 0x00000800 //col:40
FILE_DELETE_ON_CLOSE = 0x00001000 //col:42
FILE_OPEN_BY_FILE_ID = 0x00002000 //col:43
FILE_OPEN_FOR_BACKUP_INTENT = 0x00004000 //col:44
FILE_NO_COMPRESSION = 0x00008000 //col:45
FILE_OPEN_REQUIRING_OPLOCK = 0x00010000 //col:47
FILE_DISALLOW_EXCLUSIVE = 0x00020000 //col:48
FILE_SESSION_AWARE = 0x00040000 //col:51
FILE_RESERVE_OPFILTER = 0x00100000 //col:54
FILE_OPEN_REPARSE_POINT = 0x00200000 //col:55
FILE_OPEN_NO_RECALL = 0x00400000 //col:56
FILE_OPEN_FOR_FREE_SPACE_QUERY = 0x00800000 //col:57
FILE_COPY_STRUCTURED_STORAGE = 0x00000041 //col:59
FILE_STRUCTURED_STORAGE = 0x00000441 //col:60
FILE_SUPERSEDED = 0x00000000 //col:64
FILE_OPENED = 0x00000001 //col:65
FILE_CREATED = 0x00000002 //col:66
FILE_OVERWRITTEN = 0x00000003 //col:67
FILE_EXISTS = 0x00000004 //col:68
FILE_DOES_NOT_EXIST = 0x00000005 //col:69
FILE_WRITE_TO_END_OF_FILE = 0xffffffff //col:73
FILE_USE_FILE_POINTER_POSITION = 0xfffffffe //col:74
FILE_BYTE_ALIGNMENT = 0x00000000 //col:78
FILE_WORD_ALIGNMENT = 0x00000001 //col:79
FILE_LONG_ALIGNMENT = 0x00000003 //col:80
FILE_QUAD_ALIGNMENT = 0x00000007 //col:81
FILE_OCTA_ALIGNMENT = 0x0000000f //col:82
FILE_32_BYTE_ALIGNMENT = 0x0000001f //col:83
FILE_64_BYTE_ALIGNMENT = 0x0000003f //col:84
FILE_128_BYTE_ALIGNMENT = 0x0000007f //col:85
FILE_256_BYTE_ALIGNMENT = 0x000000ff //col:86
FILE_512_BYTE_ALIGNMENT = 0x000001ff //col:87
MAXIMUM_FILENAME_LENGTH = 256 //col:91
FILE_NEED_EA = 0x00000080 //col:95
FILE_EA_TYPE_BINARY = 0xfffe //col:97
FILE_EA_TYPE_ASCII = 0xfffd //col:98
FILE_EA_TYPE_BITMAP = 0xfffb //col:99
FILE_EA_TYPE_METAFILE = 0xfffa //col:100
FILE_EA_TYPE_ICON = 0xfff9 //col:101
FILE_EA_TYPE_EA = 0xffee //col:102
FILE_EA_TYPE_MVMT = 0xffdf //col:103
FILE_EA_TYPE_MVST = 0xffde //col:104
FILE_EA_TYPE_ASN1 = 0xffdd //col:105
FILE_EA_TYPE_FAMILY_IDS = 0xff01 //col:106
FILE_REMOVABLE_MEDIA = 0x00000001 //col:110
FILE_READ_ONLY_DEVICE = 0x00000002 //col:111
FILE_FLOPPY_DISKETTE = 0x00000004 //col:112
FILE_WRITE_ONCE_MEDIA = 0x00000008 //col:113
FILE_REMOTE_DEVICE = 0x00000010 //col:114
FILE_DEVICE_IS_MOUNTED = 0x00000020 //col:115
FILE_VIRTUAL_VOLUME = 0x00000040 //col:116
FILE_AUTOGENERATED_DEVICE_NAME = 0x00000080 //col:117
FILE_DEVICE_SECURE_OPEN = 0x00000100 //col:118
FILE_CHARACTERISTIC_PNP_DEVICE = 0x00000800 //col:119
FILE_CHARACTERISTIC_TS_DEVICE = 0x00001000 //col:120
FILE_CHARACTERISTIC_WEBDAV_DEVICE = 0x00002000 //col:121
FILE_CHARACTERISTIC_CSV = 0x00010000 //col:122
FILE_DEVICE_ALLOW_APPCONTAINER_TRAVERSAL = 0x00020000 //col:123
FILE_PORTABLE_DEVICE = 0x00040000 //col:124
FILE_REMOTE_DEVICE_VSMB = 0x00080000 //col:125
FILE_DEVICE_REQUIRE_SECURITY_CHECK = 0x00100000 //col:126
FILE_PIPE_BYTE_STREAM_TYPE = 0x00000000 //col:131
FILE_PIPE_MESSAGE_TYPE = 0x00000001 //col:132
FILE_PIPE_ACCEPT_REMOTE_CLIENTS = 0x00000000 //col:133
FILE_PIPE_REJECT_REMOTE_CLIENTS = 0x00000002 //col:134
FILE_PIPE_TYPE_VALID_MASK = 0x00000003 //col:135
FILE_PIPE_QUEUE_OPERATION = 0x00000000 //col:138
FILE_PIPE_COMPLETE_OPERATION = 0x00000001 //col:139
FILE_PIPE_BYTE_STREAM_MODE = 0x00000000 //col:142
FILE_PIPE_MESSAGE_MODE = 0x00000001 //col:143
FILE_PIPE_INBOUND = 0x00000000 //col:146
FILE_PIPE_OUTBOUND = 0x00000001 //col:147
FILE_PIPE_FULL_DUPLEX = 0x00000002 //col:148
FILE_PIPE_DISCONNECTED_STATE = 0x00000001 //col:151
FILE_PIPE_LISTENING_STATE = 0x00000002 //col:152
FILE_PIPE_CONNECTED_STATE = 0x00000003 //col:153
FILE_PIPE_CLOSING_STATE = 0x00000004 //col:154
FILE_PIPE_CLIENT_END = 0x00000000 //col:157
FILE_PIPE_SERVER_END = 0x00000001 //col:158
FILE_PIPE_UNLIMITED_INSTANCES = 0xffffffff //col:161
MAILSLOT_SIZE_AUTO = 0 //col:165
FLAGS_END_OF_FILE_INFO_EX_EXTEND_PAGING = 0x00000001 //col:395
FLAGS_END_OF_FILE_INFO_EX_NO_EXTRA_PAGING_EXTEND = 0x00000002 //col:396
FLAGS_END_OF_FILE_INFO_EX_TIME_CONSTRAINED = 0x00000004 //col:397
FLAGS_DELAY_REASONS_LOG_FILE_FULL = 0x00000001 //col:398
FLAGS_DELAY_REASONS_BITMAP_SCANNED = 0x00000002 //col:399
FILE_LINK_REPLACE_IF_EXISTS = 0x00000001 //col:416
FILE_LINK_POSIX_SEMANTICS = 0x00000002 //col:417
FILE_LINK_SUPPRESS_STORAGE_RESERVE_INHERITANCE = 0x00000008 //col:419
FILE_LINK_NO_INCREASE_AVAILABLE_SPACE = 0x00000010 //col:420
FILE_LINK_NO_DECREASE_AVAILABLE_SPACE = 0x00000020 //col:421
FILE_LINK_PRESERVE_AVAILABLE_SPACE = 0x00000030 //col:422
FILE_LINK_IGNORE_READONLY_ATTRIBUTE = 0x00000040 //col:423
FILE_LINK_FORCE_RESIZE_TARGET_SR = 0x00000080 //col:427
FILE_LINK_FORCE_RESIZE_SOURCE_SR = 0x00000100 //col:428
FILE_LINK_FORCE_RESIZE_SR = 0x00000180 //col:429
FILE_RENAME_REPLACE_IF_EXISTS = 0x00000001 //col:473
FILE_RENAME_POSIX_SEMANTICS = 0x00000002 //col:474
FILE_RENAME_SUPPRESS_PIN_STATE_INHERITANCE = 0x00000004 //col:478
FILE_RENAME_SUPPRESS_STORAGE_RESERVE_INHERITANCE = 0x00000008 //col:482
FILE_RENAME_NO_INCREASE_AVAILABLE_SPACE = 0x00000010 //col:483
FILE_RENAME_NO_DECREASE_AVAILABLE_SPACE = 0x00000020 //col:484
FILE_RENAME_PRESERVE_AVAILABLE_SPACE = 0x00000030 //col:485
FILE_RENAME_IGNORE_READONLY_ATTRIBUTE = 0x00000040 //col:486
FILE_RENAME_FORCE_RESIZE_TARGET_SR = 0x00000080 //col:490
FILE_RENAME_FORCE_RESIZE_SOURCE_SR = 0x00000100 //col:491
FILE_RENAME_FORCE_RESIZE_SR = 0x00000180 //col:492
FILE_SKIP_COMPLETION_PORT_ON_SUCCESS = 0x1 //col:638
FILE_SKIP_SET_EVENT_ON_HANDLE = 0x2 //col:639
FILE_SKIP_SET_USER_EVENT_ON_FAST_IO = 0x4 //col:640
CHECKSUM_ENFORCEMENT_OFF = 0x00000001 //col:731
LX_FILE_METADATA_HAS_UID = 0x1 //col:838
LX_FILE_METADATA_HAS_GID = 0x2 //col:839
LX_FILE_METADATA_HAS_MODE = 0x4 //col:840
LX_FILE_METADATA_HAS_DEVICE_ID = 0x8 //col:841
LX_FILE_CASE_SENSITIVE_DIR = 0x10 //col:842
FILE_CS_FLAG_CASE_SENSITIVE_DIR =     0x00000001 //col:866
FILE_ID_GLOBAL_TX_DIR_INFO_FLAG_WRITELOCKED = 0x00000001 //col:1007
FILE_ID_GLOBAL_TX_DIR_INFO_FLAG_VISIBLE_TO_TX = 0x00000002 //col:1008
FILE_ID_GLOBAL_TX_DIR_INFO_FLAG_VISIBLE_OUTSIDE_TX = 0x00000004 //col:1009
FILE_VC_QUOTA_NONE = 0x00000000 //col:1113
FILE_VC_QUOTA_TRACK = 0x00000001 //col:1114
FILE_VC_QUOTA_ENFORCE = 0x00000002 //col:1115
FILE_VC_QUOTA_MASK = 0x00000003 //col:1116
FILE_VC_CONTENT_INDEX_DISABLED = 0x00000008 //col:1117
FILE_VC_LOG_QUOTA_THRESHOLD = 0x00000010 //col:1118
FILE_VC_LOG_QUOTA_LIMIT = 0x00000020 //col:1119
FILE_VC_LOG_VOLUME_THRESHOLD = 0x00000040 //col:1120
FILE_VC_LOG_VOLUME_LIMIT = 0x00000080 //col:1121
FILE_VC_QUOTAS_INCOMPLETE = 0x00000100 //col:1122
FILE_VC_QUOTAS_REBUILDING = 0x00000200 //col:1123
FILE_VC_VALID_MASK = 0x000003ff //col:1124
SSINFO_FLAGS_ALIGNED_DEVICE = 0x00000001 //col:1184
SSINFO_FLAGS_PARTITION_ALIGNED_ON_DEVICE = 0x00000002 //col:1185
SSINFO_OFFSET_UNKNOWN = 0xffffffff //col:1188
FLUSH_FLAGS_FILE_DATA_ONLY = 0x00000001 //col:1313
FLUSH_FLAGS_NO_SYNC = 0x00000002 //col:1314
FLUSH_FLAGS_FILE_DATA_SYNC_ONLY = 0x00000004 // REDSTONE1 //col:1315
FILE_QUERY_RESTART_SCAN = 0x00000001 //col:1384
FILE_QUERY_RETURN_SINGLE_ENTRY = 0x00000002 //col:1385
FILE_QUERY_INDEX_SPECIFIED = 0x00000004 //col:1386
FILE_QUERY_RETURN_ON_DISK_ENTRIES_ONLY = 0x00000008 //col:1387
FILE_QUERY_NO_CURSOR_UPDATE = 0x00000010 //col:1389
IO_COMPLETION_QUERY_STATE = 0x0001 //col:1705
IO_COMPLETION_MODIFY_STATE = 0x0002 //col:1709
IO_COMPLETION_ALL_ACCESS = (IO_COMPLETION_QUERY_STATE|IO_COMPLETION_MODIFY_STATE|STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE) //col:1713
SYMLINK_FLAG_RELATIVE = 0x00000001 //col:1971
SYMLINK_DIRECTORY = 0x80000000 // If set then this is a directory symlink //col:1974
SYMLINK_FILE = 0x40000000 // If set then this is a file symlink //col:1975
REPARSE_DATA_BUFFER_HEADER_SIZE = UFIELD_OFFSET(REPARSE_DATA_BUFFER, GenericReparseBuffer) //col:2011
DEVICE_NAMED_PIPE L"DeviceNamedPipe" =  //col:2015
FSCTL_PIPE_ASSIGN_EVENT =             CTL_CODE(FILE_DEVICE_NAMED_PIPE, 0, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2017
FSCTL_PIPE_DISCONNECT =               CTL_CODE(FILE_DEVICE_NAMED_PIPE, 1, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2018
FSCTL_PIPE_LISTEN =                   CTL_CODE(FILE_DEVICE_NAMED_PIPE, 2, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2019
FSCTL_PIPE_PEEK =                     CTL_CODE(FILE_DEVICE_NAMED_PIPE, 3, METHOD_BUFFERED, FILE_READ_DATA) //col:2020
FSCTL_PIPE_QUERY_EVENT =              CTL_CODE(FILE_DEVICE_NAMED_PIPE, 4, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2021
FSCTL_PIPE_TRANSCEIVE =               CTL_CODE(FILE_DEVICE_NAMED_PIPE, 5, METHOD_NEITHER,  FILE_READ_DATA | FILE_WRITE_DATA) //col:2022
FSCTL_PIPE_WAIT =                     CTL_CODE(FILE_DEVICE_NAMED_PIPE, 6, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2023
FSCTL_PIPE_IMPERSONATE =              CTL_CODE(FILE_DEVICE_NAMED_PIPE, 7, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2024
FSCTL_PIPE_SET_CLIENT_PROCESS =       CTL_CODE(FILE_DEVICE_NAMED_PIPE, 8, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2025
FSCTL_PIPE_QUERY_CLIENT_PROCESS =     CTL_CODE(FILE_DEVICE_NAMED_PIPE, 9, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2026
FSCTL_PIPE_GET_PIPE_ATTRIBUTE =       CTL_CODE(FILE_DEVICE_NAMED_PIPE, 10, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2027
FSCTL_PIPE_SET_PIPE_ATTRIBUTE =       CTL_CODE(FILE_DEVICE_NAMED_PIPE, 11, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2028
FSCTL_PIPE_GET_CONNECTION_ATTRIBUTE = CTL_CODE(FILE_DEVICE_NAMED_PIPE, 12, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2029
FSCTL_PIPE_SET_CONNECTION_ATTRIBUTE = CTL_CODE(FILE_DEVICE_NAMED_PIPE, 13, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2030
FSCTL_PIPE_GET_HANDLE_ATTRIBUTE =     CTL_CODE(FILE_DEVICE_NAMED_PIPE, 14, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2031
FSCTL_PIPE_SET_HANDLE_ATTRIBUTE =     CTL_CODE(FILE_DEVICE_NAMED_PIPE, 15, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2032
FSCTL_PIPE_FLUSH =                    CTL_CODE(FILE_DEVICE_NAMED_PIPE, 16, METHOD_BUFFERED, FILE_WRITE_DATA) //col:2033
FSCTL_PIPE_DISABLE_IMPERSONATE =      CTL_CODE(FILE_DEVICE_NAMED_PIPE, 17, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2034
FSCTL_PIPE_SILO_ARRIVAL =             CTL_CODE(FILE_DEVICE_NAMED_PIPE, 18, METHOD_BUFFERED, FILE_WRITE_DATA) //col:2035
FSCTL_PIPE_CREATE_SYMLINK =           CTL_CODE(FILE_DEVICE_NAMED_PIPE, 19, METHOD_BUFFERED, FILE_SPECIAL_ACCESS) //col:2036
FSCTL_PIPE_DELETE_SYMLINK =           CTL_CODE(FILE_DEVICE_NAMED_PIPE, 20, METHOD_BUFFERED, FILE_SPECIAL_ACCESS) //col:2037
FSCTL_PIPE_QUERY_CLIENT_PROCESS_V2 =  CTL_CODE(FILE_DEVICE_NAMED_PIPE, 21, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2038
FSCTL_PIPE_INTERNAL_READ =            CTL_CODE(FILE_DEVICE_NAMED_PIPE, 2045, METHOD_BUFFERED, FILE_READ_DATA) //col:2040
FSCTL_PIPE_INTERNAL_WRITE =           CTL_CODE(FILE_DEVICE_NAMED_PIPE, 2046, METHOD_BUFFERED, FILE_WRITE_DATA) //col:2041
FSCTL_PIPE_INTERNAL_TRANSCEIVE =      CTL_CODE(FILE_DEVICE_NAMED_PIPE, 2047, METHOD_NEITHER, FILE_READ_DATA | FILE_WRITE_DATA) //col:2042
FSCTL_PIPE_INTERNAL_READ_OVFLOW =     CTL_CODE(FILE_DEVICE_NAMED_PIPE, 2048, METHOD_BUFFERED, FILE_READ_DATA) //col:2043
FILE_PIPE_READ_DATA = 0x00000000 //col:2047
FILE_PIPE_WRITE_SPACE = 0x00000001 //col:2048
FILE_PIPE_COMPUTER_NAME_LENGTH = 15 //col:2110
FILE_PIPE_SYMLINK_FLAG_GLOBAL =   0x1 //col:2143
FILE_PIPE_SYMLINK_FLAG_RELATIVE = 0x2 //col:2151
FILE_PIPE_SYMLINK_VALID_FLAGS = (FILE_PIPE_SYMLINK_FLAG_GLOBAL | FILE_PIPE_SYMLINK_FLAG_RELATIVE) //col:2153
MAILSLOT_CLASS_FIRSTCLASS = 1 //col:2177
MAILSLOT_CLASS_SECONDCLASS = 2 //col:2178
FSCTL_MAILSLOT_PEEK =             CTL_CODE(FILE_DEVICE_MAILSLOT, 0, METHOD_NEITHER, FILE_READ_DATA) //col:2180
MOUNTMGR_DEVICE_NAME L"DeviceMountPointManager" = MOUNTMGRCONTROLTYPE 0x0000006D // 'm' //col:2192
MOUNTMGRCONTROLTYPE = 0x0000006D // 'm' //col:2193
MOUNTDEVCONTROLTYPE = 0x0000004D // 'M' //col:2194
IOCTL_MOUNTMGR_CREATE_POINT =                 CTL_CODE(MOUNTMGRCONTROLTYPE, 0, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) //col:2196
IOCTL_MOUNTMGR_DELETE_POINTS =                CTL_CODE(MOUNTMGRCONTROLTYPE, 1, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) //col:2197
IOCTL_MOUNTMGR_QUERY_POINTS =                 CTL_CODE(MOUNTMGRCONTROLTYPE, 2, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2198
IOCTL_MOUNTMGR_DELETE_POINTS_DBONLY =         CTL_CODE(MOUNTMGRCONTROLTYPE, 3, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) //col:2199
IOCTL_MOUNTMGR_NEXT_DRIVE_LETTER =            CTL_CODE(MOUNTMGRCONTROLTYPE, 4, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) //col:2200
IOCTL_MOUNTMGR_AUTO_DL_ASSIGNMENTS =          CTL_CODE(MOUNTMGRCONTROLTYPE, 5, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) //col:2201
IOCTL_MOUNTMGR_VOLUME_MOUNT_POINT_CREATED =   CTL_CODE(MOUNTMGRCONTROLTYPE, 6, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) //col:2202
IOCTL_MOUNTMGR_VOLUME_MOUNT_POINT_DELETED =   CTL_CODE(MOUNTMGRCONTROLTYPE, 7, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) //col:2203
IOCTL_MOUNTMGR_CHANGE_NOTIFY =                CTL_CODE(MOUNTMGRCONTROLTYPE, 8, METHOD_BUFFERED, FILE_READ_ACCESS) //col:2204
IOCTL_MOUNTMGR_KEEP_LINKS_WHEN_OFFLINE =      CTL_CODE(MOUNTMGRCONTROLTYPE, 9, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS) //col:2205
IOCTL_MOUNTMGR_CHECK_UNPROCESSED_VOLUMES =    CTL_CODE(MOUNTMGRCONTROLTYPE, 10, METHOD_BUFFERED, FILE_READ_ACCESS) //col:2206
IOCTL_MOUNTMGR_VOLUME_ARRIVAL_NOTIFICATION =  CTL_CODE(MOUNTMGRCONTROLTYPE, 11, METHOD_BUFFERED, FILE_READ_ACCESS) //col:2207
IOCTL_MOUNTMGR_QUERY_DOS_VOLUME_PATH =        CTL_CODE(MOUNTMGRCONTROLTYPE, 12, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2208
IOCTL_MOUNTMGR_QUERY_DOS_VOLUME_PATHS =       CTL_CODE(MOUNTMGRCONTROLTYPE, 13, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2209
IOCTL_MOUNTDEV_QUERY_DEVICE_NAME =            CTL_CODE(MOUNTDEVCONTROLTYPE, 2, METHOD_BUFFERED, FILE_ANY_ACCESS) //col:2211
MOUNTMGR_IS_DRIVE_LETTER(s) ( = (s)->Length == 28 && (s)->Buffer[0] == '' && (s)->Buffer[1] == 'D' && (s)->Buffer[2] == 'o' && (s)->Buffer[3] == 's' && (s)->Buffer[4] == 'D' && (s)->Buffer[5] == 'e' && (s)->Buffer[6] == 'v' && (s)->Buffer[7] == 'i' && (s)->Buffer[8] == 'c' && (s)->Buffer[9] == 'e' && (s)->Buffer[10] == 's' && (s)->Buffer[11] == '' && (s)->Buffer[12] >= 'A' && (s)->Buffer[12] <= 'Z' && (s)->Buffer[13] == ':') //col:2290
MOUNTMGR_IS_VOLUME_NAME(s) ( = ((s)->Length == 96 || ((s)->Length == 98 && (s)->Buffer[48] == '')) && (s)->Buffer[0] == '' && ((s)->Buffer[1] == '?' || (s)->Buffer[1] == '') && (s)->Buffer[2] == '?' && (s)->Buffer[3] == '' && (s)->Buffer[4] == 'V' && (s)->Buffer[5] == 'o' && (s)->Buffer[6] == 'l' && (s)->Buffer[7] == 'u' && (s)->Buffer[8] == 'm' && (s)->Buffer[9] == 'e' && (s)->Buffer[10] == '{' && (s)->Buffer[19] == '-' && (s)->Buffer[24] == '-' && (s)->Buffer[29] == '-' && (s)->Buffer[34] == '-' && (s)->Buffer[47] == '}') //col:2311
MOUNTMGR_IS_DOS_VOLUME_NAME(s) ( = MOUNTMGR_IS_VOLUME_NAME(s) && (s)->Length == 96 && (s)->Buffer[1] == '')  //col:2344
MOUNTMGR_IS_DOS_VOLUME_NAME_WB(s) ( = MOUNTMGR_IS_VOLUME_NAME(s) && (s)->Length == 98 && (s)->Buffer[1] == '')  //col:2349
MOUNTMGR_IS_NT_VOLUME_NAME(s) ( = MOUNTMGR_IS_VOLUME_NAME(s) && (s)->Length == 96 && (s)->Buffer[1] == '?') //col:2354
MOUNTMGR_IS_NT_VOLUME_NAME_WB(s) ( = MOUNTMGR_IS_VOLUME_NAME(s) && (s)->Length == 98 && (s)->Buffer[1] == '?') //col:2359
)

const(
    FileDirectoryInformation  =  1 // FILE_DIRECTORY_INFORMATION  //col:193
    FileFullDirectoryInformation // FILE_FULL_DIR_INFORMATION = 2  //col:194
    FileBothDirectoryInformation // FILE_BOTH_DIR_INFORMATION = 3  //col:195
    FileBasicInformation // FILE_BASIC_INFORMATION = 4  //col:196
    FileStandardInformation // FILE_STANDARD_INFORMATION = 5  //col:197
    FileInternalInformation // FILE_INTERNAL_INFORMATION = 6  //col:198
    FileEaInformation // FILE_EA_INFORMATION = 7  //col:199
    FileAccessInformation // FILE_ACCESS_INFORMATION = 8  //col:200
    FileNameInformation // FILE_NAME_INFORMATION = 9  //col:201
    FileRenameInformation // FILE_RENAME_INFORMATION // 10 = 10  //col:202
    FileLinkInformation // FILE_LINK_INFORMATION = 11  //col:203
    FileNamesInformation // FILE_NAMES_INFORMATION = 12  //col:204
    FileDispositionInformation // FILE_DISPOSITION_INFORMATION = 13  //col:205
    FilePositionInformation // FILE_POSITION_INFORMATION = 14  //col:206
    FileFullEaInformation // FILE_FULL_EA_INFORMATION = 15  //col:207
    FileModeInformation // FILE_MODE_INFORMATION = 16  //col:208
    FileAlignmentInformation // FILE_ALIGNMENT_INFORMATION = 17  //col:209
    FileAllInformation // FILE_ALL_INFORMATION = 18  //col:210
    FileAllocationInformation // FILE_ALLOCATION_INFORMATION = 19  //col:211
    FileEndOfFileInformation // FILE_END_OF_FILE_INFORMATION // 20 = 20  //col:212
    FileAlternateNameInformation // FILE_NAME_INFORMATION = 21  //col:213
    FileStreamInformation // FILE_STREAM_INFORMATION = 22  //col:214
    FilePipeInformation // FILE_PIPE_INFORMATION = 23  //col:215
    FilePipeLocalInformation // FILE_PIPE_LOCAL_INFORMATION = 24  //col:216
    FilePipeRemoteInformation // FILE_PIPE_REMOTE_INFORMATION = 25  //col:217
    FileMailslotQueryInformation // FILE_MAILSLOT_QUERY_INFORMATION = 26  //col:218
    FileMailslotSetInformation // FILE_MAILSLOT_SET_INFORMATION = 27  //col:219
    FileCompressionInformation // FILE_COMPRESSION_INFORMATION = 28  //col:220
    FileObjectIdInformation // FILE_OBJECTID_INFORMATION = 29  //col:221
    FileCompletionInformation // FILE_COMPLETION_INFORMATION // 30 = 30  //col:222
    FileMoveClusterInformation // FILE_MOVE_CLUSTER_INFORMATION = 31  //col:223
    FileQuotaInformation // FILE_QUOTA_INFORMATION = 32  //col:224
    FileReparsePointInformation // FILE_REPARSE_POINT_INFORMATION = 33  //col:225
    FileNetworkOpenInformation // FILE_NETWORK_OPEN_INFORMATION = 34  //col:226
    FileAttributeTagInformation // FILE_ATTRIBUTE_TAG_INFORMATION = 35  //col:227
    FileTrackingInformation // FILE_TRACKING_INFORMATION = 36  //col:228
    FileIdBothDirectoryInformation // FILE_ID_BOTH_DIR_INFORMATION = 37  //col:229
    FileIdFullDirectoryInformation // FILE_ID_FULL_DIR_INFORMATION = 38  //col:230
    FileValidDataLengthInformation // FILE_VALID_DATA_LENGTH_INFORMATION = 39  //col:231
    FileShortNameInformation // FILE_NAME_INFORMATION // 40 = 40  //col:232
    FileIoCompletionNotificationInformation // FILE_IO_COMPLETION_NOTIFICATION_INFORMATION // since VISTA = 41  //col:233
    FileIoStatusBlockRangeInformation // FILE_IOSTATUSBLOCK_RANGE_INFORMATION = 42  //col:234
    FileIoPriorityHintInformation // FILE_IO_PRIORITY_HINT_INFORMATION FILE_IO_PRIORITY_HINT_INFORMATION_EX = 43  //col:235
    FileSfioReserveInformation // FILE_SFIO_RESERVE_INFORMATION = 44  //col:236
    FileSfioVolumeInformation // FILE_SFIO_VOLUME_INFORMATION = 45  //col:237
    FileHardLinkInformation // FILE_LINKS_INFORMATION = 46  //col:238
    FileProcessIdsUsingFileInformation // FILE_PROCESS_IDS_USING_FILE_INFORMATION = 47  //col:239
    FileNormalizedNameInformation // FILE_NAME_INFORMATION = 48  //col:240
    FileNetworkPhysicalNameInformation // FILE_NETWORK_PHYSICAL_NAME_INFORMATION = 49  //col:241
    FileIdGlobalTxDirectoryInformation // FILE_ID_GLOBAL_TX_DIR_INFORMATION // since WIN7 // 50 = 50  //col:242
    FileIsRemoteDeviceInformation // FILE_IS_REMOTE_DEVICE_INFORMATION = 51  //col:243
    FileUnusedInformation = 52  //col:244
    FileNumaNodeInformation // FILE_NUMA_NODE_INFORMATION = 53  //col:245
    FileStandardLinkInformation // FILE_STANDARD_LINK_INFORMATION = 54  //col:246
    FileRemoteProtocolInformation // FILE_REMOTE_PROTOCOL_INFORMATION = 55  //col:247
    FileRenameInformationBypassAccessCheck // (kernel-mode only); FILE_RENAME_INFORMATION // since WIN8 = 56  //col:248
    FileLinkInformationBypassAccessCheck // (kernel-mode only); FILE_LINK_INFORMATION = 57  //col:249
    FileVolumeNameInformation // FILE_VOLUME_NAME_INFORMATION = 58  //col:250
    FileIdInformation // FILE_ID_INFORMATION = 59  //col:251
    FileIdExtdDirectoryInformation // FILE_ID_EXTD_DIR_INFORMATION // 60 = 60  //col:252
    FileReplaceCompletionInformation // FILE_COMPLETION_INFORMATION // since WINBLUE = 61  //col:253
    FileHardLinkFullIdInformation // FILE_LINK_ENTRY_FULL_ID_INFORMATION // FILE_LINKS_FULL_ID_INFORMATION = 62  //col:254
    FileIdExtdBothDirectoryInformation // FILE_ID_EXTD_BOTH_DIR_INFORMATION // since THRESHOLD = 63  //col:255
    FileDispositionInformationEx // FILE_DISPOSITION_INFO_EX // since REDSTONE = 64  //col:256
    FileRenameInformationEx // FILE_RENAME_INFORMATION_EX = 65  //col:257
    FileRenameInformationExBypassAccessCheck // (kernel-mode only); FILE_RENAME_INFORMATION_EX = 66  //col:258
    FileDesiredStorageClassInformation // FILE_DESIRED_STORAGE_CLASS_INFORMATION // since REDSTONE2 = 67  //col:259
    FileStatInformation // FILE_STAT_INFORMATION = 68  //col:260
    FileMemoryPartitionInformation // FILE_MEMORY_PARTITION_INFORMATION // since REDSTONE3 = 69  //col:261
    FileStatLxInformation // FILE_STAT_LX_INFORMATION // since REDSTONE4 // 70 = 70  //col:262
    FileCaseSensitiveInformation // FILE_CASE_SENSITIVE_INFORMATION = 71  //col:263
    FileLinkInformationEx // FILE_LINK_INFORMATION_EX // since REDSTONE5 = 72  //col:264
    FileLinkInformationExBypassAccessCheck // (kernel-mode only); FILE_LINK_INFORMATION_EX = 73  //col:265
    FileStorageReserveIdInformation // FILE_SET_STORAGE_RESERVE_ID_INFORMATION = 74  //col:266
    FileCaseSensitiveInformationForceAccessCheck // FILE_CASE_SENSITIVE_INFORMATION = 75  //col:267
    FileKnownFolderInformation // FILE_KNOWN_FOLDER_INFORMATION // since WIN11 = 76  //col:268
    FileMaximumInformation = 77  //col:269
)


const(
    IoPriorityVeryLow  =  0 // Defragging content indexing and other background I/Os.  //col:619
    IoPriorityLow // Prefetching for applications. = 2  //col:620
    IoPriorityNormal // Normal I/Os. = 3  //col:621
    IoPriorityHigh // Used by filesystems for checkpoint I/O. = 4  //col:622
    IoPriorityCritical // Used by memory manager. Not available for applications. = 5  //col:623
    MaxIoPriorityTypes = 6  //col:624
)


const(
    KnownFolderNone = 1  //col:877
    KnownFolderDesktop = 2  //col:878
    KnownFolderDocuments = 3  //col:879
    KnownFolderDownloads = 4  //col:880
    KnownFolderMusic = 5  //col:881
    KnownFolderPictures = 6  //col:882
    KnownFolderVideos = 7  //col:883
    KnownFolderOther = 8  //col:884
    KnownFolderMax  =  7  //col:885
)


const(
    FileFsVolumeInformation  =  1 // FILE_FS_VOLUME_INFORMATION  //col:1067
    FileFsLabelInformation // FILE_FS_LABEL_INFORMATION = 2  //col:1068
    FileFsSizeInformation // FILE_FS_SIZE_INFORMATION = 3  //col:1069
    FileFsDeviceInformation // FILE_FS_DEVICE_INFORMATION = 4  //col:1070
    FileFsAttributeInformation // FILE_FS_ATTRIBUTE_INFORMATION = 5  //col:1071
    FileFsControlInformation // FILE_FS_CONTROL_INFORMATION = 6  //col:1072
    FileFsFullSizeInformation // FILE_FS_FULL_SIZE_INFORMATION = 7  //col:1073
    FileFsObjectIdInformation // FILE_FS_OBJECTID_INFORMATION = 8  //col:1074
    FileFsDriverPathInformation // FILE_FS_DRIVER_PATH_INFORMATION = 9  //col:1075
    FileFsVolumeFlagsInformation // FILE_FS_VOLUME_FLAGS_INFORMATION // 10 = 10  //col:1076
    FileFsSectorSizeInformation // FILE_FS_SECTOR_SIZE_INFORMATION // since WIN8 = 11  //col:1077
    FileFsDataCopyInformation // FILE_FS_DATA_COPY_INFORMATION = 12  //col:1078
    FileFsMetadataSizeInformation // FILE_FS_METADATA_SIZE_INFORMATION // since THRESHOLD = 13  //col:1079
    FileFsFullSizeInformationEx // FILE_FS_FULL_SIZE_INFORMATION_EX // since REDSTONE5 = 14  //col:1080
    FileFsMaximumInformation = 15  //col:1081
)


const(
    DirectoryNotifyInformation  =  1 // FILE_NOTIFY_INFORMATION  //col:1664
    DirectoryNotifyExtendedInformation // FILE_NOTIFY_EXTENDED_INFORMATION = 2  //col:1665
    DirectoryNotifyFullInformation // since 22H2 = 3  //col:1666
    DirectoryNotifyMaximumInformation = 4  //col:1667
)


const(
    IoCompletionBasicInformation = 1  //col:1718
)


const(
    IoSessionEventIgnore = 1  //col:1847
    IoSessionEventCreated = 2  //col:1848
    IoSessionEventTerminated = 3  //col:1849
    IoSessionEventConnected = 4  //col:1850
    IoSessionEventDisconnected = 5  //col:1851
    IoSessionEventLogon = 6  //col:1852
    IoSessionEventLogoff = 7  //col:1853
    IoSessionEventMax = 8  //col:1854
)


const(
    IoSessionStateCreated  =  1  //col:1859
    IoSessionStateInitialized  =  2  //col:1860
    IoSessionStateConnected  =  3  //col:1861
    IoSessionStateDisconnected  =  4  //col:1862
    IoSessionStateDisconnectedLoggedOn  =  5  //col:1863
    IoSessionStateLoggedOn  =  6  //col:1864
    IoSessionStateLoggedOff  =  7  //col:1865
    IoSessionStateTerminated  =  8  //col:1866
    IoSessionStateMax = 9  //col:1867
)


const(
    InterfaceTypeUndefined  =  -1  //col:1907
    Internal  =  0  //col:1908
    Isa  =  1  //col:1909
    Eisa  =  2  //col:1910
    MicroChannel  =  3  //col:1911
    TurboChannel  =  4  //col:1912
    PCIBus  =  5  //col:1913
    VMEBus  =  6  //col:1914
    NuBus  =  7  //col:1915
    PCMCIABus  =  8  //col:1916
    CBus  =  9  //col:1917
    MPIBus  =  10  //col:1918
    MPSABus  =  11  //col:1919
    ProcessorInternal  =  12  //col:1920
    InternalPowerBus  =  13  //col:1921
    PNPISABus  =  14  //col:1922
    PNPBus  =  15  //col:1923
    Vmcs  =  16  //col:1924
    ACPIBus  =  17  //col:1925
    MaximumInterfaceType = 20  //col:1926
)


const(
    Width8Bits = 1  //col:1931
    Width16Bits = 2  //col:1932
    Width32Bits = 3  //col:1933
    Width64Bits = 4  //col:1934
    WidthNoWrap = 5  //col:1935
    MaximumDmaWidth = 6  //col:1936
)


const(
    Compatible = 1  //col:1941
    TypeA = 2  //col:1942
    TypeB = 3  //col:1943
    TypeC = 4  //col:1944
    TypeF = 5  //col:1945
    MaximumDmaSpeed = 6  //col:1946
)


const(
    ConfigurationSpaceUndefined  =  -1  //col:1951
    Cmos = 2  //col:1952
    EisaConfiguration = 3  //col:1953
    Pos = 4  //col:1954
    CbusConfiguration = 5  //col:1955
    PCIConfiguration = 6  //col:1956
    VMEConfiguration = 7  //col:1957
    NuBusConfiguration = 8  //col:1958
    PCMCIAConfiguration = 9  //col:1959
    MPIConfiguration = 10  //col:1960
    MPSAConfiguration = 11  //col:1961
    PNPISAConfiguration = 12  //col:1962
    SgiInternalConfiguration = 13  //col:1963
    MaximumBusDataType = 14  //col:1964
)



type (
Ntioapi interface{
#if ()(ok bool)//col:175
typedef VOID ()(ok bool)//col:189
#if ()(ok bool)//col:446
#if ()(ok bool)//col:501
typedef DECLSPEC_ALIGN()(ok bool)//col:630
#if ()(ok bool)//col:729
NtCreateFile()(ok bool)//col:1668
#if ()(ok bool)//col:1719
NtCreateIoCompletion()(ok bool)//col:1855
#if ()(ok bool)//col:1927
#if ()(ok bool)//col:2009
#if !defined()(ok bool)//col:2096
#if !defined()(ok bool)//col:2108
#if !defined()(ok bool)//col:2124
    ()(ok bool)//col:2165
    ()(ok bool)//col:2335
}

)

func NewNtioapi() { return & ntioapi{} }

func (n *ntioapi)#if ()(ok bool){//col:175

























































































return true
}


func (n *ntioapi)typedef VOID ()(ok bool){//col:189











return true
}


func (n *ntioapi)#if ()(ok bool){//col:446



























return true
}


func (n *ntioapi)#if ()(ok bool){//col:501


























return true
}


func (n *ntioapi)typedef DECLSPEC_ALIGN()(ok bool){//col:630




return true
}


func (n *ntioapi)#if ()(ok bool){//col:729


































return true
}


func (n *ntioapi)NtCreateFile()(ok bool){//col:1668






































































































































































































































































































































































































return true
}


func (n *ntioapi)#if ()(ok bool){//col:1719










































return true
}


func (n *ntioapi)NtCreateIoCompletion()(ok bool){//col:1855















































































































return true
}


func (n *ntioapi)#if ()(ok bool){//col:1927


















































return true
}


func (n *ntioapi)#if ()(ok bool){//col:2009

































return true
}


func (n *ntioapi)#if !defined()(ok bool){//col:2096








return true
}


func (n *ntioapi)#if !defined()(ok bool){//col:2108






return true
}


func (n *ntioapi)#if !defined()(ok bool){//col:2124








return true
}


func (n *ntioapi)    ()(ok bool){//col:2165









return true
}


func (n *ntioapi)    ()(ok bool){//col:2335







































return true
}




