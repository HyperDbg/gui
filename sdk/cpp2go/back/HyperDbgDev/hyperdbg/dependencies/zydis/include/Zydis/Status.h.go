package Zydis
const(
ZYDIS_STATUS_H =  //col:33
ZYAN_MODULE_ZYDIS =   0x002 //col:52
ZYDIS_STATUS_NO_MORE_DATA = ZYAN_MAKE_STATUS(1, ZYAN_MODULE_ZYDIS, 0x00) //col:66
ZYDIS_STATUS_DECODING_ERROR = ZYAN_MAKE_STATUS(1, ZYAN_MODULE_ZYDIS, 0x01) //col:73
ZYDIS_STATUS_INSTRUCTION_TOO_LONG = ZYAN_MAKE_STATUS(1, ZYAN_MODULE_ZYDIS, 0x02) //col:79
ZYDIS_STATUS_BAD_REGISTER = ZYAN_MAKE_STATUS(1, ZYAN_MODULE_ZYDIS, 0x03) //col:85
ZYDIS_STATUS_ILLEGAL_LOCK = ZYAN_MAKE_STATUS(1, ZYAN_MODULE_ZYDIS, 0x04) //col:92
ZYDIS_STATUS_ILLEGAL_LEGACY_PFX = ZYAN_MAKE_STATUS(1, ZYAN_MODULE_ZYDIS, 0x05) //col:99
ZYDIS_STATUS_ILLEGAL_REX = ZYAN_MAKE_STATUS(1, ZYAN_MODULE_ZYDIS, 0x06) //col:105
ZYDIS_STATUS_INVALID_MAP = ZYAN_MAKE_STATUS(1, ZYAN_MODULE_ZYDIS, 0x07) //col:111
ZYDIS_STATUS_MALFORMED_EVEX = ZYAN_MAKE_STATUS(1, ZYAN_MODULE_ZYDIS, 0x08) //col:117
ZYDIS_STATUS_MALFORMED_MVEX = ZYAN_MAKE_STATUS(1, ZYAN_MODULE_ZYDIS, 0x09) //col:123
ZYDIS_STATUS_INVALID_MASK = ZYAN_MAKE_STATUS(1, ZYAN_MODULE_ZYDIS, 0x0A) //col:129
ZYDIS_STATUS_SKIP_TOKEN = ZYAN_MAKE_STATUS(0, ZYAN_MODULE_ZYDIS, 0x0B) //col:148
)
type (
Status interface{
  Zyan Disassembler Library ()(ok bool)//col:156
}

)
func NewStatus() { return & status{} }
func (s *status)  Zyan Disassembler Library ()(ok bool){//col:156
return true
}

