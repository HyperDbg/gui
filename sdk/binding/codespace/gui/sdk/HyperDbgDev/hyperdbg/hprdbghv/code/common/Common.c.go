package common



type (
	Common interface {
		MathPower() (ok bool)                 //col:19
		BroadcastToProcessors() (ok bool)     //col:31
		ClearBit() (ok bool)                  //col:41
		GetCr3FromProcessId() (ok bool)       //col:107
		RestoreToPreviousProcess() (ok bool)  //col:199
		IsProcessExist() (ok bool)            //col:232
		Getx86VirtualAddressWidth() (ok bool) //col:259
		CheckMemoryAccessSafety() (ok bool)   //col:431
	}
	common struct{}
)

func NewCommon() Common { return &common{} }

func (c *common) MathPower() (ok bool) { //col:19






















	return true
}


func (c *common) BroadcastToProcessors() (ok bool) { //col:31

















	return true
}


func (c *common) ClearBit() (ok bool) { //col:41

















	return true
}


func (c *common) GetCr3FromProcessId() (ok bool) { //col:107













































































	return true
}


func (c *common) RestoreToPreviousProcess() (ok bool) { //col:199





















































































































	return true
}


func (c *common) IsProcessExist() (ok bool) { //col:232










































	return true
}


func (c *common) Getx86VirtualAddressWidth() (ok bool) { //col:259
































	return true
}


func (c *common) CheckMemoryAccessSafety() (ok bool) { //col:431




























































































































































































	return true
}


