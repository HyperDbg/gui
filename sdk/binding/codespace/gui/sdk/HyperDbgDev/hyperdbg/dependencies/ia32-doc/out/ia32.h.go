package out

//binding\codespace\gui\sdk\HyperDbgDev\hyperdbg\dependencies\ia32-doc\out\ia32.h.back

const (
	CR0_PROTECTION_ENABLE_BIT                                                              = 0                                                //col:1
	CR0_PROTECTION_ENABLE_FLAG                                                             = 0x01                                             //col:2
	CR0_PROTECTION_ENABLE_MASK                                                             = 0x01                                             //col:3
	CR0_PROTECTION_ENABLE                                                              (_) = (((_) >> 0) & 0x01)                              //col:4
	CR0_MONITOR_COPROCESSOR_BIT                                                            = 1                                                //col:5
	CR0_MONITOR_COPROCESSOR_FLAG                                                           = 0x02                                             //col:6
	CR0_MONITOR_COPROCESSOR_MASK                                                           = 0x01                                             //col:7
	CR0_MONITOR_COPROCESSOR                                                            (_) = (((_) >> 1) & 0x01)                              //col:8
	CR0_EMULATE_FPU_BIT                                                                    = 2                                                //col:9
	CR0_EMULATE_FPU_FLAG                                                                   = 0x04                                             //col:10
	CR0_EMULATE_FPU_MASK                                                                   = 0x01                                             //col:11
	CR0_EMULATE_FPU                                                                    (_) = (((_) >> 2) & 0x01)                              //col:12
	CR0_TASK_SWITCHED_BIT                                                                  = 3                                                //col:13
	CR0_TASK_SWITCHED_FLAG                                                                 = 0x08                                             //col:14
	CR0_TASK_SWITCHED_MASK                                                                 = 0x01                                             //col:15
	CR0_TASK_SWITCHED                                                                  (_) = (((_) >> 3) & 0x01)                              //col:16
	CR0_EXTENSION_TYPE_BIT                                                                 = 4                                                //col:17
	CR0_EXTENSION_TYPE_FLAG                                                                = 0x10                                             //col:18
	CR0_EXTENSION_TYPE_MASK                                                                = 0x01                                             //col:19
	CR0_EXTENSION_TYPE                                                                 (_) = (((_) >> 4) & 0x01)                              //col:20
	CR0_NUMERIC_ERROR_BIT                                                                  = 5                                                //col:21
	CR0_NUMERIC_ERROR_FLAG                                                                 = 0x20                                             //col:22
	CR0_NUMERIC_ERROR_MASK                                                                 = 0x01                                             //col:23
	CR0_NUMERIC_ERROR                                                                  (_) = (((_) >> 5) & 0x01)                              //col:24
	CR0_WRITE_PROTECT_BIT                                                                  = 16                                               //col:25
	CR0_WRITE_PROTECT_FLAG                                                                 = 0x10000                                          //col:26
	CR0_WRITE_PROTECT_MASK                                                                 = 0x01                                             //col:27
	CR0_WRITE_PROTECT                                                                  (_) = (((_) >> 16) & 0x01)                             //col:28
	CR0_ALIGNMENT_MASK_BIT                                                                 = 18                                               //col:29
	CR0_ALIGNMENT_MASK_FLAG                                                                = 0x40000                                          //col:30
	CR0_ALIGNMENT_MASK_MASK                                                                = 0x01                                             //col:31
	CR0_ALIGNMENT_MASK                                                                 (_) = (((_) >> 18) & 0x01)                             //col:32
	CR0_NOT_WRITE_THROUGH_BIT                                                              = 29                                               //col:33
	CR0_NOT_WRITE_THROUGH_FLAG                                                             = 0x20000000                                       //col:34
	CR0_NOT_WRITE_THROUGH_MASK                                                             = 0x01                                             //col:35
	CR0_NOT_WRITE_THROUGH                                                              (_) = (((_) >> 29) & 0x01)                             //col:36
	CR0_CACHE_DISABLE_BIT                                                                  = 30                                               //col:37
	CR0_CACHE_DISABLE_FLAG                                                                 = 0x40000000                                       //col:38
	CR0_CACHE_DISABLE_MASK                                                                 = 0x01                                             //col:39
	CR0_CACHE_DISABLE                                                                  (_) = (((_) >> 30) & 0x01)                             //col:40
	CR0_PAGING_ENABLE_BIT                                                                  = 31                                               //col:41
	CR0_PAGING_ENABLE_FLAG                                                                 = 0x80000000                                       //col:42
	CR0_PAGING_ENABLE_MASK                                                                 = 0x01                                             //col:43
	CR0_PAGING_ENABLE                                                                  (_) = (((_) >> 31) & 0x01)                             //col:44
	CR3_PAGE_LEVEL_WRITE_THROUGH_BIT                                                       = 3                                                //col:45
	CR3_PAGE_LEVEL_WRITE_THROUGH_FLAG                                                      = 0x08                                             //col:46
	CR3_PAGE_LEVEL_WRITE_THROUGH_MASK                                                      = 0x01                                             //col:47
	CR3_PAGE_LEVEL_WRITE_THROUGH                                                       (_) = (((_) >> 3) & 0x01)                              //col:48
	CR3_PAGE_LEVEL_CACHE_DISABLE_BIT                                                       = 4                                                //col:49
	CR3_PAGE_LEVEL_CACHE_DISABLE_FLAG                                                      = 0x10                                             //col:50
	CR3_PAGE_LEVEL_CACHE_DISABLE_MASK                                                      = 0x01                                             //col:51
	CR3_PAGE_LEVEL_CACHE_DISABLE                                                       (_) = (((_) >> 4) & 0x01)                              //col:52
	CR3_ADDRESS_OF_PAGE_DIRECTORY_BIT                                                      = 12                                               //col:53
	CR3_ADDRESS_OF_PAGE_DIRECTORY_FLAG                                                     = 0xFFFFFFFFF000                                   //col:54
	CR3_ADDRESS_OF_PAGE_DIRECTORY_MASK                                                     = 0xFFFFFFFFF                                      //col:55
	CR3_ADDRESS_OF_PAGE_DIRECTORY                                                      (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:56
	CR4_VIRTUAL_MODE_EXTENSIONS_BIT                                                        = 0                                                //col:57
	CR4_VIRTUAL_MODE_EXTENSIONS_FLAG                                                       = 0x01                                             //col:58
	CR4_VIRTUAL_MODE_EXTENSIONS_MASK                                                       = 0x01                                             //col:59
	CR4_VIRTUAL_MODE_EXTENSIONS                                                        (_) = (((_) >> 0) & 0x01)                              //col:60
	CR4_PROTECTED_MODE_VIRTUAL_INTERRUPTS_BIT                                              = 1                                                //col:61
	CR4_PROTECTED_MODE_VIRTUAL_INTERRUPTS_FLAG                                             = 0x02                                             //col:62
	CR4_PROTECTED_MODE_VIRTUAL_INTERRUPTS_MASK                                             = 0x01                                             //col:63
	CR4_PROTECTED_MODE_VIRTUAL_INTERRUPTS                                              (_) = (((_) >> 1) & 0x01)                              //col:64
	CR4_TIMESTAMP_DISABLE_BIT                                                              = 2                                                //col:65
	CR4_TIMESTAMP_DISABLE_FLAG                                                             = 0x04                                             //col:66
	CR4_TIMESTAMP_DISABLE_MASK                                                             = 0x01                                             //col:67
	CR4_TIMESTAMP_DISABLE                                                              (_) = (((_) >> 2) & 0x01)                              //col:68
	CR4_DEBUGGING_EXTENSIONS_BIT                                                           = 3                                                //col:69
	CR4_DEBUGGING_EXTENSIONS_FLAG                                                          = 0x08                                             //col:70
	CR4_DEBUGGING_EXTENSIONS_MASK                                                          = 0x01                                             //col:71
	CR4_DEBUGGING_EXTENSIONS                                                           (_) = (((_) >> 3) & 0x01)                              //col:72
	CR4_PAGE_SIZE_EXTENSIONS_BIT                                                           = 4                                                //col:73
	CR4_PAGE_SIZE_EXTENSIONS_FLAG                                                          = 0x10                                             //col:74
	CR4_PAGE_SIZE_EXTENSIONS_MASK                                                          = 0x01                                             //col:75
	CR4_PAGE_SIZE_EXTENSIONS                                                           (_) = (((_) >> 4) & 0x01)                              //col:76
	CR4_PHYSICAL_ADDRESS_EXTENSION_BIT                                                     = 5                                                //col:77
	CR4_PHYSICAL_ADDRESS_EXTENSION_FLAG                                                    = 0x20                                             //col:78
	CR4_PHYSICAL_ADDRESS_EXTENSION_MASK                                                    = 0x01                                             //col:79
	CR4_PHYSICAL_ADDRESS_EXTENSION                                                     (_) = (((_) >> 5) & 0x01)                              //col:80
	CR4_MACHINE_CHECK_ENABLE_BIT                                                           = 6                                                //col:81
	CR4_MACHINE_CHECK_ENABLE_FLAG                                                          = 0x40                                             //col:82
	CR4_MACHINE_CHECK_ENABLE_MASK                                                          = 0x01                                             //col:83
	CR4_MACHINE_CHECK_ENABLE                                                           (_) = (((_) >> 6) & 0x01)                              //col:84
	CR4_PAGE_GLOBAL_ENABLE_BIT                                                             = 7                                                //col:85
	CR4_PAGE_GLOBAL_ENABLE_FLAG                                                            = 0x80                                             //col:86
	CR4_PAGE_GLOBAL_ENABLE_MASK                                                            = 0x01                                             //col:87
	CR4_PAGE_GLOBAL_ENABLE                                                             (_) = (((_) >> 7) & 0x01)                              //col:88
	CR4_PERFORMANCE_MONITORING_COUNTER_ENABLE_BIT                                          = 8                                                //col:89
	CR4_PERFORMANCE_MONITORING_COUNTER_ENABLE_FLAG                                         = 0x100                                            //col:90
	CR4_PERFORMANCE_MONITORING_COUNTER_ENABLE_MASK                                         = 0x01                                             //col:91
	CR4_PERFORMANCE_MONITORING_COUNTER_ENABLE                                          (_) = (((_) >> 8) & 0x01)                              //col:92
	CR4_OS_FXSAVE_FXRSTOR_SUPPORT_BIT                                                      = 9                                                //col:93
	CR4_OS_FXSAVE_FXRSTOR_SUPPORT_FLAG                                                     = 0x200                                            //col:94
	CR4_OS_FXSAVE_FXRSTOR_SUPPORT_MASK                                                     = 0x01                                             //col:95
	CR4_OS_FXSAVE_FXRSTOR_SUPPORT                                                      (_) = (((_) >> 9) & 0x01)                              //col:96
	CR4_OS_XMM_EXCEPTION_SUPPORT_BIT                                                       = 10                                               //col:97
	CR4_OS_XMM_EXCEPTION_SUPPORT_FLAG                                                      = 0x400                                            //col:98
	CR4_OS_XMM_EXCEPTION_SUPPORT_MASK                                                      = 0x01                                             //col:99
	CR4_OS_XMM_EXCEPTION_SUPPORT                                                       (_) = (((_) >> 10) & 0x01)                             //col:100
	CR4_USERMODE_INSTRUCTION_PREVENTION_BIT                                                = 11                                               //col:101
	CR4_USERMODE_INSTRUCTION_PREVENTION_FLAG                                               = 0x800                                            //col:102
	CR4_USERMODE_INSTRUCTION_PREVENTION_MASK                                               = 0x01                                             //col:103
	CR4_USERMODE_INSTRUCTION_PREVENTION                                                (_) = (((_) >> 11) & 0x01)                             //col:104
	CR4_LINEAR_ADDRESSES_57_BIT_BIT                                                        = 12                                               //col:105
	CR4_LINEAR_ADDRESSES_57_BIT_FLAG                                                       = 0x1000                                           //col:106
	CR4_LINEAR_ADDRESSES_57_BIT_MASK                                                       = 0x01                                             //col:107
	CR4_LINEAR_ADDRESSES_57_BIT                                                        (_) = (((_) >> 12) & 0x01)                             //col:108
	CR4_VMX_ENABLE_BIT                                                                     = 13                                               //col:109
	CR4_VMX_ENABLE_FLAG                                                                    = 0x2000                                           //col:110
	CR4_VMX_ENABLE_MASK                                                                    = 0x01                                             //col:111
	CR4_VMX_ENABLE                                                                     (_) = (((_) >> 13) & 0x01)                             //col:112
	CR4_SMX_ENABLE_BIT                                                                     = 14                                               //col:113
	CR4_SMX_ENABLE_FLAG                                                                    = 0x4000                                           //col:114
	CR4_SMX_ENABLE_MASK                                                                    = 0x01                                             //col:115
	CR4_SMX_ENABLE                                                                     (_) = (((_) >> 14) & 0x01)                             //col:116
	CR4_FSGSBASE_ENABLE_BIT                                                                = 16                                               //col:117
	CR4_FSGSBASE_ENABLE_FLAG                                                               = 0x10000                                          //col:118
	CR4_FSGSBASE_ENABLE_MASK                                                               = 0x01                                             //col:119
	CR4_FSGSBASE_ENABLE                                                                (_) = (((_) >> 16) & 0x01)                             //col:120
	CR4_PCID_ENABLE_BIT                                                                    = 17                                               //col:121
	CR4_PCID_ENABLE_FLAG                                                                   = 0x20000                                          //col:122
	CR4_PCID_ENABLE_MASK                                                                   = 0x01                                             //col:123
	CR4_PCID_ENABLE                                                                    (_) = (((_) >> 17) & 0x01)                             //col:124
	CR4_OS_XSAVE_BIT                                                                       = 18                                               //col:125
	CR4_OS_XSAVE_FLAG                                                                      = 0x40000                                          //col:126
	CR4_OS_XSAVE_MASK                                                                      = 0x01                                             //col:127
	CR4_OS_XSAVE                                                                       (_) = (((_) >> 18) & 0x01)                             //col:128
	CR4_KEY_LOCKER_ENABLE_BIT                                                              = 19                                               //col:129
	CR4_KEY_LOCKER_ENABLE_FLAG                                                             = 0x80000                                          //col:130
	CR4_KEY_LOCKER_ENABLE_MASK                                                             = 0x01                                             //col:131
	CR4_KEY_LOCKER_ENABLE                                                              (_) = (((_) >> 19) & 0x01)                             //col:132
	CR4_SMEP_ENABLE_BIT                                                                    = 20                                               //col:133
	CR4_SMEP_ENABLE_FLAG                                                                   = 0x100000                                         //col:134
	CR4_SMEP_ENABLE_MASK                                                                   = 0x01                                             //col:135
	CR4_SMEP_ENABLE                                                                    (_) = (((_) >> 20) & 0x01)                             //col:136
	CR4_SMAP_ENABLE_BIT                                                                    = 21                                               //col:137
	CR4_SMAP_ENABLE_FLAG                                                                   = 0x200000                                         //col:138
	CR4_SMAP_ENABLE_MASK                                                                   = 0x01                                             //col:139
	CR4_SMAP_ENABLE                                                                    (_) = (((_) >> 21) & 0x01)                             //col:140
	CR4_PROTECTION_KEY_ENABLE_BIT                                                          = 22                                               //col:141
	CR4_PROTECTION_KEY_ENABLE_FLAG                                                         = 0x400000                                         //col:142
	CR4_PROTECTION_KEY_ENABLE_MASK                                                         = 0x01                                             //col:143
	CR4_PROTECTION_KEY_ENABLE                                                          (_) = (((_) >> 22) & 0x01)                             //col:144
	CR4_CONTROL_FLOW_ENFORCEMENT_ENABLE_BIT                                                = 23                                               //col:145
	CR4_CONTROL_FLOW_ENFORCEMENT_ENABLE_FLAG                                               = 0x800000                                         //col:146
	CR4_CONTROL_FLOW_ENFORCEMENT_ENABLE_MASK                                               = 0x01                                             //col:147
	CR4_CONTROL_FLOW_ENFORCEMENT_ENABLE                                                (_) = (((_) >> 23) & 0x01)                             //col:148
	CR4_PROTECTION_KEY_FOR_SUPERVISOR_MODE_ENABLE_BIT                                      = 24                                               //col:149
	CR4_PROTECTION_KEY_FOR_SUPERVISOR_MODE_ENABLE_FLAG                                     = 0x1000000                                        //col:150
	CR4_PROTECTION_KEY_FOR_SUPERVISOR_MODE_ENABLE_MASK                                     = 0x01                                             //col:151
	CR4_PROTECTION_KEY_FOR_SUPERVISOR_MODE_ENABLE                                      (_) = (((_) >> 24) & 0x01)                             //col:152
	CR8_TASK_PRIORITY_LEVEL_BIT                                                            = 0                                                //col:153
	CR8_TASK_PRIORITY_LEVEL_FLAG                                                           = 0x0F                                             //col:154
	CR8_TASK_PRIORITY_LEVEL_MASK                                                           = 0x0F                                             //col:155
	CR8_TASK_PRIORITY_LEVEL                                                            (_) = (((_) >> 0) & 0x0F)                              //col:156
	CR8_RESERVED_BIT                                                                       = 4                                                //col:157
	CR8_RESERVED_FLAG                                                                      = 0xFFFFFFFFFFFFFFF0                               //col:158
	CR8_RESERVED_MASK                                                                      = 0xFFFFFFFFFFFFFFF                                //col:159
	CR8_RESERVED                                                                       (_) = (((_) >> 4) & 0xFFFFFFFFFFFFFFF)                 //col:160
	DR6_BREAKPOINT_CONDITION_BIT                                                           = 0                                                //col:161
	DR6_BREAKPOINT_CONDITION_FLAG                                                          = 0x0F                                             //col:162
	DR6_BREAKPOINT_CONDITION_MASK                                                          = 0x0F                                             //col:163
	DR6_BREAKPOINT_CONDITION                                                           (_) = (((_) >> 0) & 0x0F)                              //col:164
	DR6_DEBUG_REGISTER_ACCESS_DETECTED_BIT                                                 = 13                                               //col:165
	DR6_DEBUG_REGISTER_ACCESS_DETECTED_FLAG                                                = 0x2000                                           //col:166
	DR6_DEBUG_REGISTER_ACCESS_DETECTED_MASK                                                = 0x01                                             //col:167
	DR6_DEBUG_REGISTER_ACCESS_DETECTED                                                 (_) = (((_) >> 13) & 0x01)                             //col:168
	DR6_SINGLE_INSTRUCTION_BIT                                                             = 14                                               //col:169
	DR6_SINGLE_INSTRUCTION_FLAG                                                            = 0x4000                                           //col:170
	DR6_SINGLE_INSTRUCTION_MASK                                                            = 0x01                                             //col:171
	DR6_SINGLE_INSTRUCTION                                                             (_) = (((_) >> 14) & 0x01)                             //col:172
	DR6_TASK_SWITCH_BIT                                                                    = 15                                               //col:173
	DR6_TASK_SWITCH_FLAG                                                                   = 0x8000                                           //col:174
	DR6_TASK_SWITCH_MASK                                                                   = 0x01                                             //col:175
	DR6_TASK_SWITCH                                                                    (_) = (((_) >> 15) & 0x01)                             //col:176
	DR6_RESTRICTED_TRANSACTIONAL_MEMORY_BIT                                                = 16                                               //col:177
	DR6_RESTRICTED_TRANSACTIONAL_MEMORY_FLAG                                               = 0x10000                                          //col:178
	DR6_RESTRICTED_TRANSACTIONAL_MEMORY_MASK                                               = 0x01                                             //col:179
	DR6_RESTRICTED_TRANSACTIONAL_MEMORY                                                (_) = (((_) >> 16) & 0x01)                             //col:180
	DR7_LOCAL_BREAKPOINT_0_BIT                                                             = 0                                                //col:181
	DR7_LOCAL_BREAKPOINT_0_FLAG                                                            = 0x01                                             //col:182
	DR7_LOCAL_BREAKPOINT_0_MASK                                                            = 0x01                                             //col:183
	DR7_LOCAL_BREAKPOINT_0                                                             (_) = (((_) >> 0) & 0x01)                              //col:184
	DR7_GLOBAL_BREAKPOINT_0_BIT                                                            = 1                                                //col:185
	DR7_GLOBAL_BREAKPOINT_0_FLAG                                                           = 0x02                                             //col:186
	DR7_GLOBAL_BREAKPOINT_0_MASK                                                           = 0x01                                             //col:187
	DR7_GLOBAL_BREAKPOINT_0                                                            (_) = (((_) >> 1) & 0x01)                              //col:188
	DR7_LOCAL_BREAKPOINT_1_BIT                                                             = 2                                                //col:189
	DR7_LOCAL_BREAKPOINT_1_FLAG                                                            = 0x04                                             //col:190
	DR7_LOCAL_BREAKPOINT_1_MASK                                                            = 0x01                                             //col:191
	DR7_LOCAL_BREAKPOINT_1                                                             (_) = (((_) >> 2) & 0x01)                              //col:192
	DR7_GLOBAL_BREAKPOINT_1_BIT                                                            = 3                                                //col:193
	DR7_GLOBAL_BREAKPOINT_1_FLAG                                                           = 0x08                                             //col:194
	DR7_GLOBAL_BREAKPOINT_1_MASK                                                           = 0x01                                             //col:195
	DR7_GLOBAL_BREAKPOINT_1                                                            (_) = (((_) >> 3) & 0x01)                              //col:196
	DR7_LOCAL_BREAKPOINT_2_BIT                                                             = 4                                                //col:197
	DR7_LOCAL_BREAKPOINT_2_FLAG                                                            = 0x10                                             //col:198
	DR7_LOCAL_BREAKPOINT_2_MASK                                                            = 0x01                                             //col:199
	DR7_LOCAL_BREAKPOINT_2                                                             (_) = (((_) >> 4) & 0x01)                              //col:200
	DR7_GLOBAL_BREAKPOINT_2_BIT                                                            = 5                                                //col:201
	DR7_GLOBAL_BREAKPOINT_2_FLAG                                                           = 0x20                                             //col:202
	DR7_GLOBAL_BREAKPOINT_2_MASK                                                           = 0x01                                             //col:203
	DR7_GLOBAL_BREAKPOINT_2                                                            (_) = (((_) >> 5) & 0x01)                              //col:204
	DR7_LOCAL_BREAKPOINT_3_BIT                                                             = 6                                                //col:205
	DR7_LOCAL_BREAKPOINT_3_FLAG                                                            = 0x40                                             //col:206
	DR7_LOCAL_BREAKPOINT_3_MASK                                                            = 0x01                                             //col:207
	DR7_LOCAL_BREAKPOINT_3                                                             (_) = (((_) >> 6) & 0x01)                              //col:208
	DR7_GLOBAL_BREAKPOINT_3_BIT                                                            = 7                                                //col:209
	DR7_GLOBAL_BREAKPOINT_3_FLAG                                                           = 0x80                                             //col:210
	DR7_GLOBAL_BREAKPOINT_3_MASK                                                           = 0x01                                             //col:211
	DR7_GLOBAL_BREAKPOINT_3                                                            (_) = (((_) >> 7) & 0x01)                              //col:212
	DR7_LOCAL_EXACT_BREAKPOINT_BIT                                                         = 8                                                //col:213
	DR7_LOCAL_EXACT_BREAKPOINT_FLAG                                                        = 0x100                                            //col:214
	DR7_LOCAL_EXACT_BREAKPOINT_MASK                                                        = 0x01                                             //col:215
	DR7_LOCAL_EXACT_BREAKPOINT                                                         (_) = (((_) >> 8) & 0x01)                              //col:216
	DR7_GLOBAL_EXACT_BREAKPOINT_BIT                                                        = 9                                                //col:217
	DR7_GLOBAL_EXACT_BREAKPOINT_FLAG                                                       = 0x200                                            //col:218
	DR7_GLOBAL_EXACT_BREAKPOINT_MASK                                                       = 0x01                                             //col:219
	DR7_GLOBAL_EXACT_BREAKPOINT                                                        (_) = (((_) >> 9) & 0x01)                              //col:220
	DR7_RESTRICTED_TRANSACTIONAL_MEMORY_BIT                                                = 11                                               //col:221
	DR7_RESTRICTED_TRANSACTIONAL_MEMORY_FLAG                                               = 0x800                                            //col:222
	DR7_RESTRICTED_TRANSACTIONAL_MEMORY_MASK                                               = 0x01                                             //col:223
	DR7_RESTRICTED_TRANSACTIONAL_MEMORY                                                (_) = (((_) >> 11) & 0x01)                             //col:224
	DR7_GENERAL_DETECT_BIT                                                                 = 13                                               //col:225
	DR7_GENERAL_DETECT_FLAG                                                                = 0x2000                                           //col:226
	DR7_GENERAL_DETECT_MASK                                                                = 0x01                                             //col:227
	DR7_GENERAL_DETECT                                                                 (_) = (((_) >> 13) & 0x01)                             //col:228
	DR7_READ_WRITE_0_BIT                                                                   = 16                                               //col:229
	DR7_READ_WRITE_0_FLAG                                                                  = 0x30000                                          //col:230
	DR7_READ_WRITE_0_MASK                                                                  = 0x03                                             //col:231
	DR7_READ_WRITE_0                                                                   (_) = (((_) >> 16) & 0x03)                             //col:232
	DR7_LENGTH_0_BIT                                                                       = 18                                               //col:233
	DR7_LENGTH_0_FLAG                                                                      = 0xC0000                                          //col:234
	DR7_LENGTH_0_MASK                                                                      = 0x03                                             //col:235
	DR7_LENGTH_0                                                                       (_) = (((_) >> 18) & 0x03)                             //col:236
	DR7_READ_WRITE_1_BIT                                                                   = 20                                               //col:237
	DR7_READ_WRITE_1_FLAG                                                                  = 0x300000                                         //col:238
	DR7_READ_WRITE_1_MASK                                                                  = 0x03                                             //col:239
	DR7_READ_WRITE_1                                                                   (_) = (((_) >> 20) & 0x03)                             //col:240
	DR7_LENGTH_1_BIT                                                                       = 22                                               //col:241
	DR7_LENGTH_1_FLAG                                                                      = 0xC00000                                         //col:242
	DR7_LENGTH_1_MASK                                                                      = 0x03                                             //col:243
	DR7_LENGTH_1                                                                       (_) = (((_) >> 22) & 0x03)                             //col:244
	DR7_READ_WRITE_2_BIT                                                                   = 24                                               //col:245
	DR7_READ_WRITE_2_FLAG                                                                  = 0x3000000                                        //col:246
	DR7_READ_WRITE_2_MASK                                                                  = 0x03                                             //col:247
	DR7_READ_WRITE_2                                                                   (_) = (((_) >> 24) & 0x03)                             //col:248
	DR7_LENGTH_2_BIT                                                                       = 26                                               //col:249
	DR7_LENGTH_2_FLAG                                                                      = 0xC000000                                        //col:250
	DR7_LENGTH_2_MASK                                                                      = 0x03                                             //col:251
	DR7_LENGTH_2                                                                       (_) = (((_) >> 26) & 0x03)                             //col:252
	DR7_READ_WRITE_3_BIT                                                                   = 28                                               //col:253
	DR7_READ_WRITE_3_FLAG                                                                  = 0x30000000                                       //col:254
	DR7_READ_WRITE_3_MASK                                                                  = 0x03                                             //col:255
	DR7_READ_WRITE_3                                                                   (_) = (((_) >> 28) & 0x03)                             //col:256
	DR7_LENGTH_3_BIT                                                                       = 30                                               //col:257
	DR7_LENGTH_3_FLAG                                                                      = 0xC0000000                                       //col:258
	DR7_LENGTH_3_MASK                                                                      = 0x03                                             //col:259
	DR7_LENGTH_3                                                                       (_) = (((_) >> 30) & 0x03)                             //col:260
	CPUID_SIGNATURE                                                                        = 0x00000000                                       //col:261
	CPUID_VERSION_INFORMATION                                                              = 0x00000001                                       //col:262
	CPUID_VERSION_INFORMATION_STEPPING_ID_BIT                                              = 0                                                //col:263
	CPUID_VERSION_INFORMATION_STEPPING_ID_FLAG                                             = 0x0F                                             //col:264
	CPUID_VERSION_INFORMATION_STEPPING_ID_MASK                                             = 0x0F                                             //col:265
	CPUID_VERSION_INFORMATION_STEPPING_ID                                              (_) = (((_) >> 0) & 0x0F)                              //col:266
	CPUID_VERSION_INFORMATION_MODEL_BIT                                                    = 4                                                //col:267
	CPUID_VERSION_INFORMATION_MODEL_FLAG                                                   = 0xF0                                             //col:268
	CPUID_VERSION_INFORMATION_MODEL_MASK                                                   = 0x0F                                             //col:269
	CPUID_VERSION_INFORMATION_MODEL                                                    (_) = (((_) >> 4) & 0x0F)                              //col:270
	CPUID_VERSION_INFORMATION_FAMILY_ID_BIT                                                = 8                                                //col:271
	CPUID_VERSION_INFORMATION_FAMILY_ID_FLAG                                               = 0xF00                                            //col:272
	CPUID_VERSION_INFORMATION_FAMILY_ID_MASK                                               = 0x0F                                             //col:273
	CPUID_VERSION_INFORMATION_FAMILY_ID                                                (_) = (((_) >> 8) & 0x0F)                              //col:274
	CPUID_VERSION_INFORMATION_PROCESSOR_TYPE_BIT                                           = 12                                               //col:275
	CPUID_VERSION_INFORMATION_PROCESSOR_TYPE_FLAG                                          = 0x3000                                           //col:276
	CPUID_VERSION_INFORMATION_PROCESSOR_TYPE_MASK                                          = 0x03                                             //col:277
	CPUID_VERSION_INFORMATION_PROCESSOR_TYPE                                           (_) = (((_) >> 12) & 0x03)                             //col:278
	CPUID_VERSION_INFORMATION_EXTENDED_MODEL_ID_BIT                                        = 16                                               //col:279
	CPUID_VERSION_INFORMATION_EXTENDED_MODEL_ID_FLAG                                       = 0xF0000                                          //col:280
	CPUID_VERSION_INFORMATION_EXTENDED_MODEL_ID_MASK                                       = 0x0F                                             //col:281
	CPUID_VERSION_INFORMATION_EXTENDED_MODEL_ID                                        (_) = (((_) >> 16) & 0x0F)                             //col:282
	CPUID_VERSION_INFORMATION_EXTENDED_FAMILY_ID_BIT                                       = 20                                               //col:283
	CPUID_VERSION_INFORMATION_EXTENDED_FAMILY_ID_FLAG                                      = 0xFF00000                                        //col:284
	CPUID_VERSION_INFORMATION_EXTENDED_FAMILY_ID_MASK                                      = 0xFF                                             //col:285
	CPUID_VERSION_INFORMATION_EXTENDED_FAMILY_ID                                       (_) = (((_) >> 20) & 0xFF)                             //col:286
	CPUID_ADDITIONAL_INFORMATION_BRAND_INDEX_BIT                                           = 0                                                //col:287
	CPUID_ADDITIONAL_INFORMATION_BRAND_INDEX_FLAG                                          = 0xFF                                             //col:288
	CPUID_ADDITIONAL_INFORMATION_BRAND_INDEX_MASK                                          = 0xFF                                             //col:289
	CPUID_ADDITIONAL_INFORMATION_BRAND_INDEX                                           (_) = (((_) >> 0) & 0xFF)                              //col:290
	CPUID_ADDITIONAL_INFORMATION_CLFLUSH_LINE_SIZE_BIT                                     = 8                                                //col:291
	CPUID_ADDITIONAL_INFORMATION_CLFLUSH_LINE_SIZE_FLAG                                    = 0xFF00                                           //col:292
	CPUID_ADDITIONAL_INFORMATION_CLFLUSH_LINE_SIZE_MASK                                    = 0xFF                                             //col:293
	CPUID_ADDITIONAL_INFORMATION_CLFLUSH_LINE_SIZE                                     (_) = (((_) >> 8) & 0xFF)                              //col:294
	CPUID_ADDITIONAL_INFORMATION_MAX_ADDRESSABLE_IDS_BIT                                   = 16                                               //col:295
	CPUID_ADDITIONAL_INFORMATION_MAX_ADDRESSABLE_IDS_FLAG                                  = 0xFF0000                                         //col:296
	CPUID_ADDITIONAL_INFORMATION_MAX_ADDRESSABLE_IDS_MASK                                  = 0xFF                                             //col:297
	CPUID_ADDITIONAL_INFORMATION_MAX_ADDRESSABLE_IDS                                   (_) = (((_) >> 16) & 0xFF)                             //col:298
	CPUID_ADDITIONAL_INFORMATION_INITIAL_APIC_ID_BIT                                       = 24                                               //col:299
	CPUID_ADDITIONAL_INFORMATION_INITIAL_APIC_ID_FLAG                                      = 0xFF000000                                       //col:300
	CPUID_ADDITIONAL_INFORMATION_INITIAL_APIC_ID_MASK                                      = 0xFF                                             //col:301
	CPUID_ADDITIONAL_INFORMATION_INITIAL_APIC_ID                                       (_) = (((_) >> 24) & 0xFF)                             //col:302
	CPUID_FEATURE_INFORMATION_ECX_STREAMING_SIMD_EXTENSIONS_3_BIT                          = 0                                                //col:303
	CPUID_FEATURE_INFORMATION_ECX_STREAMING_SIMD_EXTENSIONS_3_FLAG                         = 0x01                                             //col:304
	CPUID_FEATURE_INFORMATION_ECX_STREAMING_SIMD_EXTENSIONS_3_MASK                         = 0x01                                             //col:305
	CPUID_FEATURE_INFORMATION_ECX_STREAMING_SIMD_EXTENSIONS_3                          (_) = (((_) >> 0) & 0x01)                              //col:306
	CPUID_FEATURE_INFORMATION_ECX_PCLMULQDQ_INSTRUCTION_BIT                                = 1                                                //col:307
	CPUID_FEATURE_INFORMATION_ECX_PCLMULQDQ_INSTRUCTION_FLAG                               = 0x02                                             //col:308
	CPUID_FEATURE_INFORMATION_ECX_PCLMULQDQ_INSTRUCTION_MASK                               = 0x01                                             //col:309
	CPUID_FEATURE_INFORMATION_ECX_PCLMULQDQ_INSTRUCTION                                (_) = (((_) >> 1) & 0x01)                              //col:310
	CPUID_FEATURE_INFORMATION_ECX_DS_AREA_64BIT_LAYOUT_BIT                                 = 2                                                //col:311
	CPUID_FEATURE_INFORMATION_ECX_DS_AREA_64BIT_LAYOUT_FLAG                                = 0x04                                             //col:312
	CPUID_FEATURE_INFORMATION_ECX_DS_AREA_64BIT_LAYOUT_MASK                                = 0x01                                             //col:313
	CPUID_FEATURE_INFORMATION_ECX_DS_AREA_64BIT_LAYOUT                                 (_) = (((_) >> 2) & 0x01)                              //col:314
	CPUID_FEATURE_INFORMATION_ECX_MONITOR_MWAIT_INSTRUCTION_BIT                            = 3                                                //col:315
	CPUID_FEATURE_INFORMATION_ECX_MONITOR_MWAIT_INSTRUCTION_FLAG                           = 0x08                                             //col:316
	CPUID_FEATURE_INFORMATION_ECX_MONITOR_MWAIT_INSTRUCTION_MASK                           = 0x01                                             //col:317
	CPUID_FEATURE_INFORMATION_ECX_MONITOR_MWAIT_INSTRUCTION                            (_) = (((_) >> 3) & 0x01)                              //col:318
	CPUID_FEATURE_INFORMATION_ECX_CPL_QUALIFIED_DEBUG_STORE_BIT                            = 4                                                //col:319
	CPUID_FEATURE_INFORMATION_ECX_CPL_QUALIFIED_DEBUG_STORE_FLAG                           = 0x10                                             //col:320
	CPUID_FEATURE_INFORMATION_ECX_CPL_QUALIFIED_DEBUG_STORE_MASK                           = 0x01                                             //col:321
	CPUID_FEATURE_INFORMATION_ECX_CPL_QUALIFIED_DEBUG_STORE                            (_) = (((_) >> 4) & 0x01)                              //col:322
	CPUID_FEATURE_INFORMATION_ECX_VIRTUAL_MACHINE_EXTENSIONS_BIT                           = 5                                                //col:323
	CPUID_FEATURE_INFORMATION_ECX_VIRTUAL_MACHINE_EXTENSIONS_FLAG                          = 0x20                                             //col:324
	CPUID_FEATURE_INFORMATION_ECX_VIRTUAL_MACHINE_EXTENSIONS_MASK                          = 0x01                                             //col:325
	CPUID_FEATURE_INFORMATION_ECX_VIRTUAL_MACHINE_EXTENSIONS                           (_) = (((_) >> 5) & 0x01)                              //col:326
	CPUID_FEATURE_INFORMATION_ECX_SAFER_MODE_EXTENSIONS_BIT                                = 6                                                //col:327
	CPUID_FEATURE_INFORMATION_ECX_SAFER_MODE_EXTENSIONS_FLAG                               = 0x40                                             //col:328
	CPUID_FEATURE_INFORMATION_ECX_SAFER_MODE_EXTENSIONS_MASK                               = 0x01                                             //col:329
	CPUID_FEATURE_INFORMATION_ECX_SAFER_MODE_EXTENSIONS                                (_) = (((_) >> 6) & 0x01)                              //col:330
	CPUID_FEATURE_INFORMATION_ECX_ENHANCED_INTEL_SPEEDSTEP_TECHNOLOGY_BIT                  = 7                                                //col:331
	CPUID_FEATURE_INFORMATION_ECX_ENHANCED_INTEL_SPEEDSTEP_TECHNOLOGY_FLAG                 = 0x80                                             //col:332
	CPUID_FEATURE_INFORMATION_ECX_ENHANCED_INTEL_SPEEDSTEP_TECHNOLOGY_MASK                 = 0x01                                             //col:333
	CPUID_FEATURE_INFORMATION_ECX_ENHANCED_INTEL_SPEEDSTEP_TECHNOLOGY                  (_) = (((_) >> 7) & 0x01)                              //col:334
	CPUID_FEATURE_INFORMATION_ECX_THERMAL_MONITOR_2_BIT                                    = 8                                                //col:335
	CPUID_FEATURE_INFORMATION_ECX_THERMAL_MONITOR_2_FLAG                                   = 0x100                                            //col:336
	CPUID_FEATURE_INFORMATION_ECX_THERMAL_MONITOR_2_MASK                                   = 0x01                                             //col:337
	CPUID_FEATURE_INFORMATION_ECX_THERMAL_MONITOR_2                                    (_) = (((_) >> 8) & 0x01)                              //col:338
	CPUID_FEATURE_INFORMATION_ECX_SUPPLEMENTAL_STREAMING_SIMD_EXTENSIONS_3_BIT             = 9                                                //col:339
	CPUID_FEATURE_INFORMATION_ECX_SUPPLEMENTAL_STREAMING_SIMD_EXTENSIONS_3_FLAG            = 0x200                                            //col:340
	CPUID_FEATURE_INFORMATION_ECX_SUPPLEMENTAL_STREAMING_SIMD_EXTENSIONS_3_MASK            = 0x01                                             //col:341
	CPUID_FEATURE_INFORMATION_ECX_SUPPLEMENTAL_STREAMING_SIMD_EXTENSIONS_3             (_) = (((_) >> 9) & 0x01)                              //col:342
	CPUID_FEATURE_INFORMATION_ECX_L1_CONTEXT_ID_BIT                                        = 10                                               //col:343
	CPUID_FEATURE_INFORMATION_ECX_L1_CONTEXT_ID_FLAG                                       = 0x400                                            //col:344
	CPUID_FEATURE_INFORMATION_ECX_L1_CONTEXT_ID_MASK                                       = 0x01                                             //col:345
	CPUID_FEATURE_INFORMATION_ECX_L1_CONTEXT_ID                                        (_) = (((_) >> 10) & 0x01)                             //col:346
	CPUID_FEATURE_INFORMATION_ECX_SILICON_DEBUG_BIT                                        = 11                                               //col:347
	CPUID_FEATURE_INFORMATION_ECX_SILICON_DEBUG_FLAG                                       = 0x800                                            //col:348
	CPUID_FEATURE_INFORMATION_ECX_SILICON_DEBUG_MASK                                       = 0x01                                             //col:349
	CPUID_FEATURE_INFORMATION_ECX_SILICON_DEBUG                                        (_) = (((_) >> 11) & 0x01)                             //col:350
	CPUID_FEATURE_INFORMATION_ECX_FMA_EXTENSIONS_BIT                                       = 12                                               //col:351
	CPUID_FEATURE_INFORMATION_ECX_FMA_EXTENSIONS_FLAG                                      = 0x1000                                           //col:352
	CPUID_FEATURE_INFORMATION_ECX_FMA_EXTENSIONS_MASK                                      = 0x01                                             //col:353
	CPUID_FEATURE_INFORMATION_ECX_FMA_EXTENSIONS                                       (_) = (((_) >> 12) & 0x01)                             //col:354
	CPUID_FEATURE_INFORMATION_ECX_CMPXCHG16B_INSTRUCTION_BIT                               = 13                                               //col:355
	CPUID_FEATURE_INFORMATION_ECX_CMPXCHG16B_INSTRUCTION_FLAG                              = 0x2000                                           //col:356
	CPUID_FEATURE_INFORMATION_ECX_CMPXCHG16B_INSTRUCTION_MASK                              = 0x01                                             //col:357
	CPUID_FEATURE_INFORMATION_ECX_CMPXCHG16B_INSTRUCTION                               (_) = (((_) >> 13) & 0x01)                             //col:358
	CPUID_FEATURE_INFORMATION_ECX_XTPR_UPDATE_CONTROL_BIT                                  = 14                                               //col:359
	CPUID_FEATURE_INFORMATION_ECX_XTPR_UPDATE_CONTROL_FLAG                                 = 0x4000                                           //col:360
	CPUID_FEATURE_INFORMATION_ECX_XTPR_UPDATE_CONTROL_MASK                                 = 0x01                                             //col:361
	CPUID_FEATURE_INFORMATION_ECX_XTPR_UPDATE_CONTROL                                  (_) = (((_) >> 14) & 0x01)                             //col:362
	CPUID_FEATURE_INFORMATION_ECX_PERFMON_AND_DEBUG_CAPABILITY_BIT                         = 15                                               //col:363
	CPUID_FEATURE_INFORMATION_ECX_PERFMON_AND_DEBUG_CAPABILITY_FLAG                        = 0x8000                                           //col:364
	CPUID_FEATURE_INFORMATION_ECX_PERFMON_AND_DEBUG_CAPABILITY_MASK                        = 0x01                                             //col:365
	CPUID_FEATURE_INFORMATION_ECX_PERFMON_AND_DEBUG_CAPABILITY                         (_) = (((_) >> 15) & 0x01)                             //col:366
	CPUID_FEATURE_INFORMATION_ECX_PROCESS_CONTEXT_IDENTIFIERS_BIT                          = 17                                               //col:367
	CPUID_FEATURE_INFORMATION_ECX_PROCESS_CONTEXT_IDENTIFIERS_FLAG                         = 0x20000                                          //col:368
	CPUID_FEATURE_INFORMATION_ECX_PROCESS_CONTEXT_IDENTIFIERS_MASK                         = 0x01                                             //col:369
	CPUID_FEATURE_INFORMATION_ECX_PROCESS_CONTEXT_IDENTIFIERS                          (_) = (((_) >> 17) & 0x01)                             //col:370
	CPUID_FEATURE_INFORMATION_ECX_DIRECT_CACHE_ACCESS_BIT                                  = 18                                               //col:371
	CPUID_FEATURE_INFORMATION_ECX_DIRECT_CACHE_ACCESS_FLAG                                 = 0x40000                                          //col:372
	CPUID_FEATURE_INFORMATION_ECX_DIRECT_CACHE_ACCESS_MASK                                 = 0x01                                             //col:373
	CPUID_FEATURE_INFORMATION_ECX_DIRECT_CACHE_ACCESS                                  (_) = (((_) >> 18) & 0x01)                             //col:374
	CPUID_FEATURE_INFORMATION_ECX_SSE41_SUPPORT_BIT                                        = 19                                               //col:375
	CPUID_FEATURE_INFORMATION_ECX_SSE41_SUPPORT_FLAG                                       = 0x80000                                          //col:376
	CPUID_FEATURE_INFORMATION_ECX_SSE41_SUPPORT_MASK                                       = 0x01                                             //col:377
	CPUID_FEATURE_INFORMATION_ECX_SSE41_SUPPORT                                        (_) = (((_) >> 19) & 0x01)                             //col:378
	CPUID_FEATURE_INFORMATION_ECX_SSE42_SUPPORT_BIT                                        = 20                                               //col:379
	CPUID_FEATURE_INFORMATION_ECX_SSE42_SUPPORT_FLAG                                       = 0x100000                                         //col:380
	CPUID_FEATURE_INFORMATION_ECX_SSE42_SUPPORT_MASK                                       = 0x01                                             //col:381
	CPUID_FEATURE_INFORMATION_ECX_SSE42_SUPPORT                                        (_) = (((_) >> 20) & 0x01)                             //col:382
	CPUID_FEATURE_INFORMATION_ECX_X2APIC_SUPPORT_BIT                                       = 21                                               //col:383
	CPUID_FEATURE_INFORMATION_ECX_X2APIC_SUPPORT_FLAG                                      = 0x200000                                         //col:384
	CPUID_FEATURE_INFORMATION_ECX_X2APIC_SUPPORT_MASK                                      = 0x01                                             //col:385
	CPUID_FEATURE_INFORMATION_ECX_X2APIC_SUPPORT                                       (_) = (((_) >> 21) & 0x01)                             //col:386
	CPUID_FEATURE_INFORMATION_ECX_MOVBE_INSTRUCTION_BIT                                    = 22                                               //col:387
	CPUID_FEATURE_INFORMATION_ECX_MOVBE_INSTRUCTION_FLAG                                   = 0x400000                                         //col:388
	CPUID_FEATURE_INFORMATION_ECX_MOVBE_INSTRUCTION_MASK                                   = 0x01                                             //col:389
	CPUID_FEATURE_INFORMATION_ECX_MOVBE_INSTRUCTION                                    (_) = (((_) >> 22) & 0x01)                             //col:390
	CPUID_FEATURE_INFORMATION_ECX_POPCNT_INSTRUCTION_BIT                                   = 23                                               //col:391
	CPUID_FEATURE_INFORMATION_ECX_POPCNT_INSTRUCTION_FLAG                                  = 0x800000                                         //col:392
	CPUID_FEATURE_INFORMATION_ECX_POPCNT_INSTRUCTION_MASK                                  = 0x01                                             //col:393
	CPUID_FEATURE_INFORMATION_ECX_POPCNT_INSTRUCTION                                   (_) = (((_) >> 23) & 0x01)                             //col:394
	CPUID_FEATURE_INFORMATION_ECX_TSC_DEADLINE_BIT                                         = 24                                               //col:395
	CPUID_FEATURE_INFORMATION_ECX_TSC_DEADLINE_FLAG                                        = 0x1000000                                        //col:396
	CPUID_FEATURE_INFORMATION_ECX_TSC_DEADLINE_MASK                                        = 0x01                                             //col:397
	CPUID_FEATURE_INFORMATION_ECX_TSC_DEADLINE                                         (_) = (((_) >> 24) & 0x01)                             //col:398
	CPUID_FEATURE_INFORMATION_ECX_AESNI_INSTRUCTION_EXTENSIONS_BIT                         = 25                                               //col:399
	CPUID_FEATURE_INFORMATION_ECX_AESNI_INSTRUCTION_EXTENSIONS_FLAG                        = 0x2000000                                        //col:400
	CPUID_FEATURE_INFORMATION_ECX_AESNI_INSTRUCTION_EXTENSIONS_MASK                        = 0x01                                             //col:401
	CPUID_FEATURE_INFORMATION_ECX_AESNI_INSTRUCTION_EXTENSIONS                         (_) = (((_) >> 25) & 0x01)                             //col:402
	CPUID_FEATURE_INFORMATION_ECX_XSAVE_XRSTOR_INSTRUCTION_BIT                             = 26                                               //col:403
	CPUID_FEATURE_INFORMATION_ECX_XSAVE_XRSTOR_INSTRUCTION_FLAG                            = 0x4000000                                        //col:404
	CPUID_FEATURE_INFORMATION_ECX_XSAVE_XRSTOR_INSTRUCTION_MASK                            = 0x01                                             //col:405
	CPUID_FEATURE_INFORMATION_ECX_XSAVE_XRSTOR_INSTRUCTION                             (_) = (((_) >> 26) & 0x01)                             //col:406
	CPUID_FEATURE_INFORMATION_ECX_OSX_SAVE_BIT                                             = 27                                               //col:407
	CPUID_FEATURE_INFORMATION_ECX_OSX_SAVE_FLAG                                            = 0x8000000                                        //col:408
	CPUID_FEATURE_INFORMATION_ECX_OSX_SAVE_MASK                                            = 0x01                                             //col:409
	CPUID_FEATURE_INFORMATION_ECX_OSX_SAVE                                             (_) = (((_) >> 27) & 0x01)                             //col:410
	CPUID_FEATURE_INFORMATION_ECX_AVX_SUPPORT_BIT                                          = 28                                               //col:411
	CPUID_FEATURE_INFORMATION_ECX_AVX_SUPPORT_FLAG                                         = 0x10000000                                       //col:412
	CPUID_FEATURE_INFORMATION_ECX_AVX_SUPPORT_MASK                                         = 0x01                                             //col:413
	CPUID_FEATURE_INFORMATION_ECX_AVX_SUPPORT                                          (_) = (((_) >> 28) & 0x01)                             //col:414
	CPUID_FEATURE_INFORMATION_ECX_HALF_PRECISION_CONVERSION_INSTRUCTIONS_BIT               = 29                                               //col:415
	CPUID_FEATURE_INFORMATION_ECX_HALF_PRECISION_CONVERSION_INSTRUCTIONS_FLAG              = 0x20000000                                       //col:416
	CPUID_FEATURE_INFORMATION_ECX_HALF_PRECISION_CONVERSION_INSTRUCTIONS_MASK              = 0x01                                             //col:417
	CPUID_FEATURE_INFORMATION_ECX_HALF_PRECISION_CONVERSION_INSTRUCTIONS               (_) = (((_) >> 29) & 0x01)                             //col:418
	CPUID_FEATURE_INFORMATION_ECX_RDRAND_INSTRUCTION_BIT                                   = 30                                               //col:419
	CPUID_FEATURE_INFORMATION_ECX_RDRAND_INSTRUCTION_FLAG                                  = 0x40000000                                       //col:420
	CPUID_FEATURE_INFORMATION_ECX_RDRAND_INSTRUCTION_MASK                                  = 0x01                                             //col:421
	CPUID_FEATURE_INFORMATION_ECX_RDRAND_INSTRUCTION                                   (_) = (((_) >> 30) & 0x01)                             //col:422
	CPUID_FEATURE_INFORMATION_EDX_FLOATING_POINT_UNIT_ON_CHIP_BIT                          = 0                                                //col:423
	CPUID_FEATURE_INFORMATION_EDX_FLOATING_POINT_UNIT_ON_CHIP_FLAG                         = 0x01                                             //col:424
	CPUID_FEATURE_INFORMATION_EDX_FLOATING_POINT_UNIT_ON_CHIP_MASK                         = 0x01                                             //col:425
	CPUID_FEATURE_INFORMATION_EDX_FLOATING_POINT_UNIT_ON_CHIP                          (_) = (((_) >> 0) & 0x01)                              //col:426
	CPUID_FEATURE_INFORMATION_EDX_VIRTUAL_8086_MODE_ENHANCEMENTS_BIT                       = 1                                                //col:427
	CPUID_FEATURE_INFORMATION_EDX_VIRTUAL_8086_MODE_ENHANCEMENTS_FLAG                      = 0x02                                             //col:428
	CPUID_FEATURE_INFORMATION_EDX_VIRTUAL_8086_MODE_ENHANCEMENTS_MASK                      = 0x01                                             //col:429
	CPUID_FEATURE_INFORMATION_EDX_VIRTUAL_8086_MODE_ENHANCEMENTS                       (_) = (((_) >> 1) & 0x01)                              //col:430
	CPUID_FEATURE_INFORMATION_EDX_DEBUGGING_EXTENSIONS_BIT                                 = 2                                                //col:431
	CPUID_FEATURE_INFORMATION_EDX_DEBUGGING_EXTENSIONS_FLAG                                = 0x04                                             //col:432
	CPUID_FEATURE_INFORMATION_EDX_DEBUGGING_EXTENSIONS_MASK                                = 0x01                                             //col:433
	CPUID_FEATURE_INFORMATION_EDX_DEBUGGING_EXTENSIONS                                 (_) = (((_) >> 2) & 0x01)                              //col:434
	CPUID_FEATURE_INFORMATION_EDX_PAGE_SIZE_EXTENSION_BIT                                  = 3                                                //col:435
	CPUID_FEATURE_INFORMATION_EDX_PAGE_SIZE_EXTENSION_FLAG                                 = 0x08                                             //col:436
	CPUID_FEATURE_INFORMATION_EDX_PAGE_SIZE_EXTENSION_MASK                                 = 0x01                                             //col:437
	CPUID_FEATURE_INFORMATION_EDX_PAGE_SIZE_EXTENSION                                  (_) = (((_) >> 3) & 0x01)                              //col:438
	CPUID_FEATURE_INFORMATION_EDX_TIMESTAMP_COUNTER_BIT                                    = 4                                                //col:439
	CPUID_FEATURE_INFORMATION_EDX_TIMESTAMP_COUNTER_FLAG                                   = 0x10                                             //col:440
	CPUID_FEATURE_INFORMATION_EDX_TIMESTAMP_COUNTER_MASK                                   = 0x01                                             //col:441
	CPUID_FEATURE_INFORMATION_EDX_TIMESTAMP_COUNTER                                    (_) = (((_) >> 4) & 0x01)                              //col:442
	CPUID_FEATURE_INFORMATION_EDX_RDMSR_WRMSR_INSTRUCTIONS_BIT                             = 5                                                //col:443
	CPUID_FEATURE_INFORMATION_EDX_RDMSR_WRMSR_INSTRUCTIONS_FLAG                            = 0x20                                             //col:444
	CPUID_FEATURE_INFORMATION_EDX_RDMSR_WRMSR_INSTRUCTIONS_MASK                            = 0x01                                             //col:445
	CPUID_FEATURE_INFORMATION_EDX_RDMSR_WRMSR_INSTRUCTIONS                             (_) = (((_) >> 5) & 0x01)                              //col:446
	CPUID_FEATURE_INFORMATION_EDX_PHYSICAL_ADDRESS_EXTENSION_BIT                           = 6                                                //col:447
	CPUID_FEATURE_INFORMATION_EDX_PHYSICAL_ADDRESS_EXTENSION_FLAG                          = 0x40                                             //col:448
	CPUID_FEATURE_INFORMATION_EDX_PHYSICAL_ADDRESS_EXTENSION_MASK                          = 0x01                                             //col:449
	CPUID_FEATURE_INFORMATION_EDX_PHYSICAL_ADDRESS_EXTENSION                           (_) = (((_) >> 6) & 0x01)                              //col:450
	CPUID_FEATURE_INFORMATION_EDX_MACHINE_CHECK_EXCEPTION_BIT                              = 7                                                //col:451
	CPUID_FEATURE_INFORMATION_EDX_MACHINE_CHECK_EXCEPTION_FLAG                             = 0x80                                             //col:452
	CPUID_FEATURE_INFORMATION_EDX_MACHINE_CHECK_EXCEPTION_MASK                             = 0x01                                             //col:453
	CPUID_FEATURE_INFORMATION_EDX_MACHINE_CHECK_EXCEPTION                              (_) = (((_) >> 7) & 0x01)                              //col:454
	CPUID_FEATURE_INFORMATION_EDX_CMPXCHG8B_BIT                                            = 8                                                //col:455
	CPUID_FEATURE_INFORMATION_EDX_CMPXCHG8B_FLAG                                           = 0x100                                            //col:456
	CPUID_FEATURE_INFORMATION_EDX_CMPXCHG8B_MASK                                           = 0x01                                             //col:457
	CPUID_FEATURE_INFORMATION_EDX_CMPXCHG8B                                            (_) = (((_) >> 8) & 0x01)                              //col:458
	CPUID_FEATURE_INFORMATION_EDX_APIC_ON_CHIP_BIT                                         = 9                                                //col:459
	CPUID_FEATURE_INFORMATION_EDX_APIC_ON_CHIP_FLAG                                        = 0x200                                            //col:460
	CPUID_FEATURE_INFORMATION_EDX_APIC_ON_CHIP_MASK                                        = 0x01                                             //col:461
	CPUID_FEATURE_INFORMATION_EDX_APIC_ON_CHIP                                         (_) = (((_) >> 9) & 0x01)                              //col:462
	CPUID_FEATURE_INFORMATION_EDX_SYSENTER_SYSEXIT_INSTRUCTIONS_BIT                        = 11                                               //col:463
	CPUID_FEATURE_INFORMATION_EDX_SYSENTER_SYSEXIT_INSTRUCTIONS_FLAG                       = 0x800                                            //col:464
	CPUID_FEATURE_INFORMATION_EDX_SYSENTER_SYSEXIT_INSTRUCTIONS_MASK                       = 0x01                                             //col:465
	CPUID_FEATURE_INFORMATION_EDX_SYSENTER_SYSEXIT_INSTRUCTIONS                        (_) = (((_) >> 11) & 0x01)                             //col:466
	CPUID_FEATURE_INFORMATION_EDX_MEMORY_TYPE_RANGE_REGISTERS_BIT                          = 12                                               //col:467
	CPUID_FEATURE_INFORMATION_EDX_MEMORY_TYPE_RANGE_REGISTERS_FLAG                         = 0x1000                                           //col:468
	CPUID_FEATURE_INFORMATION_EDX_MEMORY_TYPE_RANGE_REGISTERS_MASK                         = 0x01                                             //col:469
	CPUID_FEATURE_INFORMATION_EDX_MEMORY_TYPE_RANGE_REGISTERS                          (_) = (((_) >> 12) & 0x01)                             //col:470
	CPUID_FEATURE_INFORMATION_EDX_PAGE_GLOBAL_BIT_BIT                                      = 13                                               //col:471
	CPUID_FEATURE_INFORMATION_EDX_PAGE_GLOBAL_BIT_FLAG                                     = 0x2000                                           //col:472
	CPUID_FEATURE_INFORMATION_EDX_PAGE_GLOBAL_BIT_MASK                                     = 0x01                                             //col:473
	CPUID_FEATURE_INFORMATION_EDX_PAGE_GLOBAL_BIT                                      (_) = (((_) >> 13) & 0x01)                             //col:474
	CPUID_FEATURE_INFORMATION_EDX_MACHINE_CHECK_ARCHITECTURE_BIT                           = 14                                               //col:475
	CPUID_FEATURE_INFORMATION_EDX_MACHINE_CHECK_ARCHITECTURE_FLAG                          = 0x4000                                           //col:476
	CPUID_FEATURE_INFORMATION_EDX_MACHINE_CHECK_ARCHITECTURE_MASK                          = 0x01                                             //col:477
	CPUID_FEATURE_INFORMATION_EDX_MACHINE_CHECK_ARCHITECTURE                           (_) = (((_) >> 14) & 0x01)                             //col:478
	CPUID_FEATURE_INFORMATION_EDX_CONDITIONAL_MOVE_INSTRUCTIONS_BIT                        = 15                                               //col:479
	CPUID_FEATURE_INFORMATION_EDX_CONDITIONAL_MOVE_INSTRUCTIONS_FLAG                       = 0x8000                                           //col:480
	CPUID_FEATURE_INFORMATION_EDX_CONDITIONAL_MOVE_INSTRUCTIONS_MASK                       = 0x01                                             //col:481
	CPUID_FEATURE_INFORMATION_EDX_CONDITIONAL_MOVE_INSTRUCTIONS                        (_) = (((_) >> 15) & 0x01)                             //col:482
	CPUID_FEATURE_INFORMATION_EDX_PAGE_ATTRIBUTE_TABLE_BIT                                 = 16                                               //col:483
	CPUID_FEATURE_INFORMATION_EDX_PAGE_ATTRIBUTE_TABLE_FLAG                                = 0x10000                                          //col:484
	CPUID_FEATURE_INFORMATION_EDX_PAGE_ATTRIBUTE_TABLE_MASK                                = 0x01                                             //col:485
	CPUID_FEATURE_INFORMATION_EDX_PAGE_ATTRIBUTE_TABLE                                 (_) = (((_) >> 16) & 0x01)                             //col:486
	CPUID_FEATURE_INFORMATION_EDX_PAGE_SIZE_EXTENSION_36BIT_BIT                            = 17                                               //col:487
	CPUID_FEATURE_INFORMATION_EDX_PAGE_SIZE_EXTENSION_36BIT_FLAG                           = 0x20000                                          //col:488
	CPUID_FEATURE_INFORMATION_EDX_PAGE_SIZE_EXTENSION_36BIT_MASK                           = 0x01                                             //col:489
	CPUID_FEATURE_INFORMATION_EDX_PAGE_SIZE_EXTENSION_36BIT                            (_) = (((_) >> 17) & 0x01)                             //col:490
	CPUID_FEATURE_INFORMATION_EDX_PROCESSOR_SERIAL_NUMBER_BIT                              = 18                                               //col:491
	CPUID_FEATURE_INFORMATION_EDX_PROCESSOR_SERIAL_NUMBER_FLAG                             = 0x40000                                          //col:492
	CPUID_FEATURE_INFORMATION_EDX_PROCESSOR_SERIAL_NUMBER_MASK                             = 0x01                                             //col:493
	CPUID_FEATURE_INFORMATION_EDX_PROCESSOR_SERIAL_NUMBER                              (_) = (((_) >> 18) & 0x01)                             //col:494
	CPUID_FEATURE_INFORMATION_EDX_CLFLUSH_BIT                                              = 19                                               //col:495
	CPUID_FEATURE_INFORMATION_EDX_CLFLUSH_FLAG                                             = 0x80000                                          //col:496
	CPUID_FEATURE_INFORMATION_EDX_CLFLUSH_MASK                                             = 0x01                                             //col:497
	CPUID_FEATURE_INFORMATION_EDX_CLFLUSH                                              (_) = (((_) >> 19) & 0x01)                             //col:498
	CPUID_FEATURE_INFORMATION_EDX_DEBUG_STORE_BIT                                          = 21                                               //col:499
	CPUID_FEATURE_INFORMATION_EDX_DEBUG_STORE_FLAG                                         = 0x200000                                         //col:500
	CPUID_FEATURE_INFORMATION_EDX_DEBUG_STORE_MASK                                         = 0x01                                             //col:501
	CPUID_FEATURE_INFORMATION_EDX_DEBUG_STORE                                          (_) = (((_) >> 21) & 0x01)                             //col:502
	CPUID_FEATURE_INFORMATION_EDX_THERMAL_CONTROL_MSRS_FOR_ACPI_BIT                        = 22                                               //col:503
	CPUID_FEATURE_INFORMATION_EDX_THERMAL_CONTROL_MSRS_FOR_ACPI_FLAG                       = 0x400000                                         //col:504
	CPUID_FEATURE_INFORMATION_EDX_THERMAL_CONTROL_MSRS_FOR_ACPI_MASK                       = 0x01                                             //col:505
	CPUID_FEATURE_INFORMATION_EDX_THERMAL_CONTROL_MSRS_FOR_ACPI                        (_) = (((_) >> 22) & 0x01)                             //col:506
	CPUID_FEATURE_INFORMATION_EDX_MMX_SUPPORT_BIT                                          = 23                                               //col:507
	CPUID_FEATURE_INFORMATION_EDX_MMX_SUPPORT_FLAG                                         = 0x800000                                         //col:508
	CPUID_FEATURE_INFORMATION_EDX_MMX_SUPPORT_MASK                                         = 0x01                                             //col:509
	CPUID_FEATURE_INFORMATION_EDX_MMX_SUPPORT                                          (_) = (((_) >> 23) & 0x01)                             //col:510
	CPUID_FEATURE_INFORMATION_EDX_FXSAVE_FXRSTOR_INSTRUCTIONS_BIT                          = 24                                               //col:511
	CPUID_FEATURE_INFORMATION_EDX_FXSAVE_FXRSTOR_INSTRUCTIONS_FLAG                         = 0x1000000                                        //col:512
	CPUID_FEATURE_INFORMATION_EDX_FXSAVE_FXRSTOR_INSTRUCTIONS_MASK                         = 0x01                                             //col:513
	CPUID_FEATURE_INFORMATION_EDX_FXSAVE_FXRSTOR_INSTRUCTIONS                          (_) = (((_) >> 24) & 0x01)                             //col:514
	CPUID_FEATURE_INFORMATION_EDX_SSE_SUPPORT_BIT                                          = 25                                               //col:515
	CPUID_FEATURE_INFORMATION_EDX_SSE_SUPPORT_FLAG                                         = 0x2000000                                        //col:516
	CPUID_FEATURE_INFORMATION_EDX_SSE_SUPPORT_MASK                                         = 0x01                                             //col:517
	CPUID_FEATURE_INFORMATION_EDX_SSE_SUPPORT                                          (_) = (((_) >> 25) & 0x01)                             //col:518
	CPUID_FEATURE_INFORMATION_EDX_SSE2_SUPPORT_BIT                                         = 26                                               //col:519
	CPUID_FEATURE_INFORMATION_EDX_SSE2_SUPPORT_FLAG                                        = 0x4000000                                        //col:520
	CPUID_FEATURE_INFORMATION_EDX_SSE2_SUPPORT_MASK                                        = 0x01                                             //col:521
	CPUID_FEATURE_INFORMATION_EDX_SSE2_SUPPORT                                         (_) = (((_) >> 26) & 0x01)                             //col:522
	CPUID_FEATURE_INFORMATION_EDX_SELF_SNOOP_BIT                                           = 27                                               //col:523
	CPUID_FEATURE_INFORMATION_EDX_SELF_SNOOP_FLAG                                          = 0x8000000                                        //col:524
	CPUID_FEATURE_INFORMATION_EDX_SELF_SNOOP_MASK                                          = 0x01                                             //col:525
	CPUID_FEATURE_INFORMATION_EDX_SELF_SNOOP                                           (_) = (((_) >> 27) & 0x01)                             //col:526
	CPUID_FEATURE_INFORMATION_EDX_HYPER_THREADING_TECHNOLOGY_BIT                           = 28                                               //col:527
	CPUID_FEATURE_INFORMATION_EDX_HYPER_THREADING_TECHNOLOGY_FLAG                          = 0x10000000                                       //col:528
	CPUID_FEATURE_INFORMATION_EDX_HYPER_THREADING_TECHNOLOGY_MASK                          = 0x01                                             //col:529
	CPUID_FEATURE_INFORMATION_EDX_HYPER_THREADING_TECHNOLOGY                           (_) = (((_) >> 28) & 0x01)                             //col:530
	CPUID_FEATURE_INFORMATION_EDX_THERMAL_MONITOR_BIT                                      = 29                                               //col:531
	CPUID_FEATURE_INFORMATION_EDX_THERMAL_MONITOR_FLAG                                     = 0x20000000                                       //col:532
	CPUID_FEATURE_INFORMATION_EDX_THERMAL_MONITOR_MASK                                     = 0x01                                             //col:533
	CPUID_FEATURE_INFORMATION_EDX_THERMAL_MONITOR                                      (_) = (((_) >> 29) & 0x01)                             //col:534
	CPUID_FEATURE_INFORMATION_EDX_PENDING_BREAK_ENABLE_BIT                                 = 31                                               //col:535
	CPUID_FEATURE_INFORMATION_EDX_PENDING_BREAK_ENABLE_FLAG                                = 0x80000000                                       //col:536
	CPUID_FEATURE_INFORMATION_EDX_PENDING_BREAK_ENABLE_MASK                                = 0x01                                             //col:537
	CPUID_FEATURE_INFORMATION_EDX_PENDING_BREAK_ENABLE                                 (_) = (((_) >> 31) & 0x01)                             //col:538
	CPUID_CACHE_PARAMETERS                                                                 = 0x00000004                                       //col:539
	CPUID_EAX_CACHE_TYPE_FIELD_BIT                                                         = 0                                                //col:540
	CPUID_EAX_CACHE_TYPE_FIELD_FLAG                                                        = 0x1F                                             //col:541
	CPUID_EAX_CACHE_TYPE_FIELD_MASK                                                        = 0x1F                                             //col:542
	CPUID_EAX_CACHE_TYPE_FIELD                                                         (_) = (((_) >> 0) & 0x1F)                              //col:543
	CPUID_EAX_CACHE_LEVEL_BIT                                                              = 5                                                //col:544
	CPUID_EAX_CACHE_LEVEL_FLAG                                                             = 0xE0                                             //col:545
	CPUID_EAX_CACHE_LEVEL_MASK                                                             = 0x07                                             //col:546
	CPUID_EAX_CACHE_LEVEL                                                              (_) = (((_) >> 5) & 0x07)                              //col:547
	CPUID_EAX_SELF_INITIALIZING_CACHE_LEVEL_BIT                                            = 8                                                //col:548
	CPUID_EAX_SELF_INITIALIZING_CACHE_LEVEL_FLAG                                           = 0x100                                            //col:549
	CPUID_EAX_SELF_INITIALIZING_CACHE_LEVEL_MASK                                           = 0x01                                             //col:550
	CPUID_EAX_SELF_INITIALIZING_CACHE_LEVEL                                            (_) = (((_) >> 8) & 0x01)                              //col:551
	CPUID_EAX_FULLY_ASSOCIATIVE_CACHE_BIT                                                  = 9                                                //col:552
	CPUID_EAX_FULLY_ASSOCIATIVE_CACHE_FLAG                                                 = 0x200                                            //col:553
	CPUID_EAX_FULLY_ASSOCIATIVE_CACHE_MASK                                                 = 0x01                                             //col:554
	CPUID_EAX_FULLY_ASSOCIATIVE_CACHE                                                  (_) = (((_) >> 9) & 0x01)                              //col:555
	CPUID_EAX_MAX_ADDRESSABLE_IDS_FOR_LOGICAL_PROCESSORS_SHARING_THIS_CACHE_BIT            = 14                                               //col:556
	CPUID_EAX_MAX_ADDRESSABLE_IDS_FOR_LOGICAL_PROCESSORS_SHARING_THIS_CACHE_FLAG           = 0x3FFC000                                        //col:557
	CPUID_EAX_MAX_ADDRESSABLE_IDS_FOR_LOGICAL_PROCESSORS_SHARING_THIS_CACHE_MASK           = 0xFFF                                            //col:558
	CPUID_EAX_MAX_ADDRESSABLE_IDS_FOR_LOGICAL_PROCESSORS_SHARING_THIS_CACHE            (_) = (((_) >> 14) & 0xFFF)                            //col:559
	CPUID_EAX_MAX_ADDRESSABLE_IDS_FOR_PROCESSOR_CORES_IN_PHYSICAL_PACKAGE_BIT              = 26                                               //col:560
	CPUID_EAX_MAX_ADDRESSABLE_IDS_FOR_PROCESSOR_CORES_IN_PHYSICAL_PACKAGE_FLAG             = 0xFC000000                                       //col:561
	CPUID_EAX_MAX_ADDRESSABLE_IDS_FOR_PROCESSOR_CORES_IN_PHYSICAL_PACKAGE_MASK             = 0x3F                                             //col:562
	CPUID_EAX_MAX_ADDRESSABLE_IDS_FOR_PROCESSOR_CORES_IN_PHYSICAL_PACKAGE              (_) = (((_) >> 26) & 0x3F)                             //col:563
	CPUID_EBX_SYSTEM_COHERENCY_LINE_SIZE_BIT                                               = 0                                                //col:564
	CPUID_EBX_SYSTEM_COHERENCY_LINE_SIZE_FLAG                                              = 0xFFF                                            //col:565
	CPUID_EBX_SYSTEM_COHERENCY_LINE_SIZE_MASK                                              = 0xFFF                                            //col:566
	CPUID_EBX_SYSTEM_COHERENCY_LINE_SIZE                                               (_) = (((_) >> 0) & 0xFFF)                             //col:567
	CPUID_EBX_PHYSICAL_LINE_PARTITIONS_BIT                                                 = 12                                               //col:568
	CPUID_EBX_PHYSICAL_LINE_PARTITIONS_FLAG                                                = 0x3FF000                                         //col:569
	CPUID_EBX_PHYSICAL_LINE_PARTITIONS_MASK                                                = 0x3FF                                            //col:570
	CPUID_EBX_PHYSICAL_LINE_PARTITIONS                                                 (_) = (((_) >> 12) & 0x3FF)                            //col:571
	CPUID_EBX_WAYS_OF_ASSOCIATIVITY_BIT                                                    = 22                                               //col:572
	CPUID_EBX_WAYS_OF_ASSOCIATIVITY_FLAG                                                   = 0xFFC00000                                       //col:573
	CPUID_EBX_WAYS_OF_ASSOCIATIVITY_MASK                                                   = 0x3FF                                            //col:574
	CPUID_EBX_WAYS_OF_ASSOCIATIVITY                                                    (_) = (((_) >> 22) & 0x3FF)                            //col:575
	CPUID_ECX_NUMBER_OF_SETS_BIT                                                           = 0                                                //col:576
	CPUID_ECX_NUMBER_OF_SETS_FLAG                                                          = 0xFFFFFFFF                                       //col:577
	CPUID_ECX_NUMBER_OF_SETS_MASK                                                          = 0xFFFFFFFF                                       //col:578
	CPUID_ECX_NUMBER_OF_SETS                                                           (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:579
	CPUID_EDX_WRITE_BACK_INVALIDATE_BIT                                                    = 0                                                //col:580
	CPUID_EDX_WRITE_BACK_INVALIDATE_FLAG                                                   = 0x01                                             //col:581
	CPUID_EDX_WRITE_BACK_INVALIDATE_MASK                                                   = 0x01                                             //col:582
	CPUID_EDX_WRITE_BACK_INVALIDATE                                                    (_) = (((_) >> 0) & 0x01)                              //col:583
	CPUID_EDX_CACHE_INCLUSIVENESS_BIT                                                      = 1                                                //col:584
	CPUID_EDX_CACHE_INCLUSIVENESS_FLAG                                                     = 0x02                                             //col:585
	CPUID_EDX_CACHE_INCLUSIVENESS_MASK                                                     = 0x01                                             //col:586
	CPUID_EDX_CACHE_INCLUSIVENESS                                                      (_) = (((_) >> 1) & 0x01)                              //col:587
	CPUID_EDX_COMPLEX_CACHE_INDEXING_BIT                                                   = 2                                                //col:588
	CPUID_EDX_COMPLEX_CACHE_INDEXING_FLAG                                                  = 0x04                                             //col:589
	CPUID_EDX_COMPLEX_CACHE_INDEXING_MASK                                                  = 0x01                                             //col:590
	CPUID_EDX_COMPLEX_CACHE_INDEXING                                                   (_) = (((_) >> 2) & 0x01)                              //col:591
	CPUID_MONITOR_MWAIT                                                                    = 0x00000005                                       //col:592
	CPUID_EAX_SMALLEST_MONITOR_LINE_SIZE_BIT                                               = 0                                                //col:593
	CPUID_EAX_SMALLEST_MONITOR_LINE_SIZE_FLAG                                              = 0xFFFF                                           //col:594
	CPUID_EAX_SMALLEST_MONITOR_LINE_SIZE_MASK                                              = 0xFFFF                                           //col:595
	CPUID_EAX_SMALLEST_MONITOR_LINE_SIZE                                               (_) = (((_) >> 0) & 0xFFFF)                            //col:596
	CPUID_EBX_LARGEST_MONITOR_LINE_SIZE_BIT                                                = 0                                                //col:597
	CPUID_EBX_LARGEST_MONITOR_LINE_SIZE_FLAG                                               = 0xFFFF                                           //col:598
	CPUID_EBX_LARGEST_MONITOR_LINE_SIZE_MASK                                               = 0xFFFF                                           //col:599
	CPUID_EBX_LARGEST_MONITOR_LINE_SIZE                                                (_) = (((_) >> 0) & 0xFFFF)                            //col:600
	CPUID_ECX_ENUMERATION_OF_MONITOR_MWAIT_EXTENSIONS_BIT                                  = 0                                                //col:601
	CPUID_ECX_ENUMERATION_OF_MONITOR_MWAIT_EXTENSIONS_FLAG                                 = 0x01                                             //col:602
	CPUID_ECX_ENUMERATION_OF_MONITOR_MWAIT_EXTENSIONS_MASK                                 = 0x01                                             //col:603
	CPUID_ECX_ENUMERATION_OF_MONITOR_MWAIT_EXTENSIONS                                  (_) = (((_) >> 0) & 0x01)                              //col:604
	CPUID_ECX_SUPPORTS_TREATING_INTERRUPTS_AS_BREAK_EVENT_FOR_MWAIT_BIT                    = 1                                                //col:605
	CPUID_ECX_SUPPORTS_TREATING_INTERRUPTS_AS_BREAK_EVENT_FOR_MWAIT_FLAG                   = 0x02                                             //col:606
	CPUID_ECX_SUPPORTS_TREATING_INTERRUPTS_AS_BREAK_EVENT_FOR_MWAIT_MASK                   = 0x01                                             //col:607
	CPUID_ECX_SUPPORTS_TREATING_INTERRUPTS_AS_BREAK_EVENT_FOR_MWAIT                    (_) = (((_) >> 1) & 0x01)                              //col:608
	CPUID_EDX_NUMBER_OF_C0_SUB_C_STATES_BIT                                                = 0                                                //col:609
	CPUID_EDX_NUMBER_OF_C0_SUB_C_STATES_FLAG                                               = 0x0F                                             //col:610
	CPUID_EDX_NUMBER_OF_C0_SUB_C_STATES_MASK                                               = 0x0F                                             //col:611
	CPUID_EDX_NUMBER_OF_C0_SUB_C_STATES                                                (_) = (((_) >> 0) & 0x0F)                              //col:612
	CPUID_EDX_NUMBER_OF_C1_SUB_C_STATES_BIT                                                = 4                                                //col:613
	CPUID_EDX_NUMBER_OF_C1_SUB_C_STATES_FLAG                                               = 0xF0                                             //col:614
	CPUID_EDX_NUMBER_OF_C1_SUB_C_STATES_MASK                                               = 0x0F                                             //col:615
	CPUID_EDX_NUMBER_OF_C1_SUB_C_STATES                                                (_) = (((_) >> 4) & 0x0F)                              //col:616
	CPUID_EDX_NUMBER_OF_C2_SUB_C_STATES_BIT                                                = 8                                                //col:617
	CPUID_EDX_NUMBER_OF_C2_SUB_C_STATES_FLAG                                               = 0xF00                                            //col:618
	CPUID_EDX_NUMBER_OF_C2_SUB_C_STATES_MASK                                               = 0x0F                                             //col:619
	CPUID_EDX_NUMBER_OF_C2_SUB_C_STATES                                                (_) = (((_) >> 8) & 0x0F)                              //col:620
	CPUID_EDX_NUMBER_OF_C3_SUB_C_STATES_BIT                                                = 12                                               //col:621
	CPUID_EDX_NUMBER_OF_C3_SUB_C_STATES_FLAG                                               = 0xF000                                           //col:622
	CPUID_EDX_NUMBER_OF_C3_SUB_C_STATES_MASK                                               = 0x0F                                             //col:623
	CPUID_EDX_NUMBER_OF_C3_SUB_C_STATES                                                (_) = (((_) >> 12) & 0x0F)                             //col:624
	CPUID_EDX_NUMBER_OF_C4_SUB_C_STATES_BIT                                                = 16                                               //col:625
	CPUID_EDX_NUMBER_OF_C4_SUB_C_STATES_FLAG                                               = 0xF0000                                          //col:626
	CPUID_EDX_NUMBER_OF_C4_SUB_C_STATES_MASK                                               = 0x0F                                             //col:627
	CPUID_EDX_NUMBER_OF_C4_SUB_C_STATES                                                (_) = (((_) >> 16) & 0x0F)                             //col:628
	CPUID_EDX_NUMBER_OF_C5_SUB_C_STATES_BIT                                                = 20                                               //col:629
	CPUID_EDX_NUMBER_OF_C5_SUB_C_STATES_FLAG                                               = 0xF00000                                         //col:630
	CPUID_EDX_NUMBER_OF_C5_SUB_C_STATES_MASK                                               = 0x0F                                             //col:631
	CPUID_EDX_NUMBER_OF_C5_SUB_C_STATES                                                (_) = (((_) >> 20) & 0x0F)                             //col:632
	CPUID_EDX_NUMBER_OF_C6_SUB_C_STATES_BIT                                                = 24                                               //col:633
	CPUID_EDX_NUMBER_OF_C6_SUB_C_STATES_FLAG                                               = 0xF000000                                        //col:634
	CPUID_EDX_NUMBER_OF_C6_SUB_C_STATES_MASK                                               = 0x0F                                             //col:635
	CPUID_EDX_NUMBER_OF_C6_SUB_C_STATES                                                (_) = (((_) >> 24) & 0x0F)                             //col:636
	CPUID_EDX_NUMBER_OF_C7_SUB_C_STATES_BIT                                                = 28                                               //col:637
	CPUID_EDX_NUMBER_OF_C7_SUB_C_STATES_FLAG                                               = 0xF0000000                                       //col:638
	CPUID_EDX_NUMBER_OF_C7_SUB_C_STATES_MASK                                               = 0x0F                                             //col:639
	CPUID_EDX_NUMBER_OF_C7_SUB_C_STATES                                                (_) = (((_) >> 28) & 0x0F)                             //col:640
	CPUID_THERMAL_AND_POWER_MANAGEMENT                                                     = 0x00000006                                       //col:641
	CPUID_EAX_TEMPERATURE_SENSOR_SUPPORTED_BIT                                             = 0                                                //col:642
	CPUID_EAX_TEMPERATURE_SENSOR_SUPPORTED_FLAG                                            = 0x01                                             //col:643
	CPUID_EAX_TEMPERATURE_SENSOR_SUPPORTED_MASK                                            = 0x01                                             //col:644
	CPUID_EAX_TEMPERATURE_SENSOR_SUPPORTED                                             (_) = (((_) >> 0) & 0x01)                              //col:645
	CPUID_EAX_INTEL_TURBO_BOOST_TECHNOLOGY_AVAILABLE_BIT                                   = 1                                                //col:646
	CPUID_EAX_INTEL_TURBO_BOOST_TECHNOLOGY_AVAILABLE_FLAG                                  = 0x02                                             //col:647
	CPUID_EAX_INTEL_TURBO_BOOST_TECHNOLOGY_AVAILABLE_MASK                                  = 0x01                                             //col:648
	CPUID_EAX_INTEL_TURBO_BOOST_TECHNOLOGY_AVAILABLE                                   (_) = (((_) >> 1) & 0x01)                              //col:649
	CPUID_EAX_APIC_TIMER_ALWAYS_RUNNING_BIT                                                = 2                                                //col:650
	CPUID_EAX_APIC_TIMER_ALWAYS_RUNNING_FLAG                                               = 0x04                                             //col:651
	CPUID_EAX_APIC_TIMER_ALWAYS_RUNNING_MASK                                               = 0x01                                             //col:652
	CPUID_EAX_APIC_TIMER_ALWAYS_RUNNING                                                (_) = (((_) >> 2) & 0x01)                              //col:653
	CPUID_EAX_POWER_LIMIT_NOTIFICATION_BIT                                                 = 4                                                //col:654
	CPUID_EAX_POWER_LIMIT_NOTIFICATION_FLAG                                                = 0x10                                             //col:655
	CPUID_EAX_POWER_LIMIT_NOTIFICATION_MASK                                                = 0x01                                             //col:656
	CPUID_EAX_POWER_LIMIT_NOTIFICATION                                                 (_) = (((_) >> 4) & 0x01)                              //col:657
	CPUID_EAX_CLOCK_MODULATION_DUTY_BIT                                                    = 5                                                //col:658
	CPUID_EAX_CLOCK_MODULATION_DUTY_FLAG                                                   = 0x20                                             //col:659
	CPUID_EAX_CLOCK_MODULATION_DUTY_MASK                                                   = 0x01                                             //col:660
	CPUID_EAX_CLOCK_MODULATION_DUTY                                                    (_) = (((_) >> 5) & 0x01)                              //col:661
	CPUID_EAX_PACKAGE_THERMAL_MANAGEMENT_BIT                                               = 6                                                //col:662
	CPUID_EAX_PACKAGE_THERMAL_MANAGEMENT_FLAG                                              = 0x40                                             //col:663
	CPUID_EAX_PACKAGE_THERMAL_MANAGEMENT_MASK                                              = 0x01                                             //col:664
	CPUID_EAX_PACKAGE_THERMAL_MANAGEMENT                                               (_) = (((_) >> 6) & 0x01)                              //col:665
	CPUID_EAX_HWP_BASE_REGISTERS_BIT                                                       = 7                                                //col:666
	CPUID_EAX_HWP_BASE_REGISTERS_FLAG                                                      = 0x80                                             //col:667
	CPUID_EAX_HWP_BASE_REGISTERS_MASK                                                      = 0x01                                             //col:668
	CPUID_EAX_HWP_BASE_REGISTERS                                                       (_) = (((_) >> 7) & 0x01)                              //col:669
	CPUID_EAX_HWP_NOTIFICATION_BIT                                                         = 8                                                //col:670
	CPUID_EAX_HWP_NOTIFICATION_FLAG                                                        = 0x100                                            //col:671
	CPUID_EAX_HWP_NOTIFICATION_MASK                                                        = 0x01                                             //col:672
	CPUID_EAX_HWP_NOTIFICATION                                                         (_) = (((_) >> 8) & 0x01)                              //col:673
	CPUID_EAX_HWP_ACTIVITY_WINDOW_BIT                                                      = 9                                                //col:674
	CPUID_EAX_HWP_ACTIVITY_WINDOW_FLAG                                                     = 0x200                                            //col:675
	CPUID_EAX_HWP_ACTIVITY_WINDOW_MASK                                                     = 0x01                                             //col:676
	CPUID_EAX_HWP_ACTIVITY_WINDOW                                                      (_) = (((_) >> 9) & 0x01)                              //col:677
	CPUID_EAX_HWP_ENERGY_PERFORMANCE_PREFERENCE_BIT                                        = 10                                               //col:678
	CPUID_EAX_HWP_ENERGY_PERFORMANCE_PREFERENCE_FLAG                                       = 0x400                                            //col:679
	CPUID_EAX_HWP_ENERGY_PERFORMANCE_PREFERENCE_MASK                                       = 0x01                                             //col:680
	CPUID_EAX_HWP_ENERGY_PERFORMANCE_PREFERENCE                                        (_) = (((_) >> 10) & 0x01)                             //col:681
	CPUID_EAX_HWP_PACKAGE_LEVEL_REQUEST_BIT                                                = 11                                               //col:682
	CPUID_EAX_HWP_PACKAGE_LEVEL_REQUEST_FLAG                                               = 0x800                                            //col:683
	CPUID_EAX_HWP_PACKAGE_LEVEL_REQUEST_MASK                                               = 0x01                                             //col:684
	CPUID_EAX_HWP_PACKAGE_LEVEL_REQUEST                                                (_) = (((_) >> 11) & 0x01)                             //col:685
	CPUID_EAX_HDC_BIT                                                                      = 13                                               //col:686
	CPUID_EAX_HDC_FLAG                                                                     = 0x2000                                           //col:687
	CPUID_EAX_HDC_MASK                                                                     = 0x01                                             //col:688
	CPUID_EAX_HDC                                                                      (_) = (((_) >> 13) & 0x01)                             //col:689
	CPUID_EAX_INTEL_TURBO_BOOST_MAX_TECHNOLOGY_3_AVAILABLE_BIT                             = 14                                               //col:690
	CPUID_EAX_INTEL_TURBO_BOOST_MAX_TECHNOLOGY_3_AVAILABLE_FLAG                            = 0x4000                                           //col:691
	CPUID_EAX_INTEL_TURBO_BOOST_MAX_TECHNOLOGY_3_AVAILABLE_MASK                            = 0x01                                             //col:692
	CPUID_EAX_INTEL_TURBO_BOOST_MAX_TECHNOLOGY_3_AVAILABLE                             (_) = (((_) >> 14) & 0x01)                             //col:693
	CPUID_EAX_HWP_CAPABILITIES_BIT                                                         = 15                                               //col:694
	CPUID_EAX_HWP_CAPABILITIES_FLAG                                                        = 0x8000                                           //col:695
	CPUID_EAX_HWP_CAPABILITIES_MASK                                                        = 0x01                                             //col:696
	CPUID_EAX_HWP_CAPABILITIES                                                         (_) = (((_) >> 15) & 0x01)                             //col:697
	CPUID_EAX_HWP_PECI_OVERRIDE_BIT                                                        = 16                                               //col:698
	CPUID_EAX_HWP_PECI_OVERRIDE_FLAG                                                       = 0x10000                                          //col:699
	CPUID_EAX_HWP_PECI_OVERRIDE_MASK                                                       = 0x01                                             //col:700
	CPUID_EAX_HWP_PECI_OVERRIDE                                                        (_) = (((_) >> 16) & 0x01)                             //col:701
	CPUID_EAX_FLEXIBLE_HWP_BIT                                                             = 17                                               //col:702
	CPUID_EAX_FLEXIBLE_HWP_FLAG                                                            = 0x20000                                          //col:703
	CPUID_EAX_FLEXIBLE_HWP_MASK                                                            = 0x01                                             //col:704
	CPUID_EAX_FLEXIBLE_HWP                                                             (_) = (((_) >> 17) & 0x01)                             //col:705
	CPUID_EAX_FAST_ACCESS_MODE_FOR_HWP_REQUEST_MSR_BIT                                     = 18                                               //col:706
	CPUID_EAX_FAST_ACCESS_MODE_FOR_HWP_REQUEST_MSR_FLAG                                    = 0x40000                                          //col:707
	CPUID_EAX_FAST_ACCESS_MODE_FOR_HWP_REQUEST_MSR_MASK                                    = 0x01                                             //col:708
	CPUID_EAX_FAST_ACCESS_MODE_FOR_HWP_REQUEST_MSR                                     (_) = (((_) >> 18) & 0x01)                             //col:709
	CPUID_EAX_IGNORING_IDLE_LOGICAL_PROCESSOR_HWP_REQUEST_BIT                              = 20                                               //col:710
	CPUID_EAX_IGNORING_IDLE_LOGICAL_PROCESSOR_HWP_REQUEST_FLAG                             = 0x100000                                         //col:711
	CPUID_EAX_IGNORING_IDLE_LOGICAL_PROCESSOR_HWP_REQUEST_MASK                             = 0x01                                             //col:712
	CPUID_EAX_IGNORING_IDLE_LOGICAL_PROCESSOR_HWP_REQUEST                              (_) = (((_) >> 20) & 0x01)                             //col:713
	CPUID_EAX_INTEL_THREAD_DIRECTOR_BIT                                                    = 23                                               //col:714
	CPUID_EAX_INTEL_THREAD_DIRECTOR_FLAG                                                   = 0x800000                                         //col:715
	CPUID_EAX_INTEL_THREAD_DIRECTOR_MASK                                                   = 0x01                                             //col:716
	CPUID_EAX_INTEL_THREAD_DIRECTOR                                                    (_) = (((_) >> 23) & 0x01)                             //col:717
	CPUID_EBX_NUMBER_OF_INTERRUPT_THRESHOLDS_IN_THERMAL_SENSOR_BIT                         = 0                                                //col:718
	CPUID_EBX_NUMBER_OF_INTERRUPT_THRESHOLDS_IN_THERMAL_SENSOR_FLAG                        = 0x0F                                             //col:719
	CPUID_EBX_NUMBER_OF_INTERRUPT_THRESHOLDS_IN_THERMAL_SENSOR_MASK                        = 0x0F                                             //col:720
	CPUID_EBX_NUMBER_OF_INTERRUPT_THRESHOLDS_IN_THERMAL_SENSOR                         (_) = (((_) >> 0) & 0x0F)                              //col:721
	CPUID_ECX_HARDWARE_COORDINATION_FEEDBACK_CAPABILITY_BIT                                = 0                                                //col:722
	CPUID_ECX_HARDWARE_COORDINATION_FEEDBACK_CAPABILITY_FLAG                               = 0x01                                             //col:723
	CPUID_ECX_HARDWARE_COORDINATION_FEEDBACK_CAPABILITY_MASK                               = 0x01                                             //col:724
	CPUID_ECX_HARDWARE_COORDINATION_FEEDBACK_CAPABILITY                                (_) = (((_) >> 0) & 0x01)                              //col:725
	CPUID_ECX_NUMBER_OF_INTEL_THREAD_DIRECTOR_CLASSES_BIT                                  = 3                                                //col:726
	CPUID_ECX_NUMBER_OF_INTEL_THREAD_DIRECTOR_CLASSES_FLAG                                 = 0x08                                             //col:727
	CPUID_ECX_NUMBER_OF_INTEL_THREAD_DIRECTOR_CLASSES_MASK                                 = 0x01                                             //col:728
	CPUID_ECX_NUMBER_OF_INTEL_THREAD_DIRECTOR_CLASSES                                  (_) = (((_) >> 3) & 0x01)                              //col:729
	CPUID_ECX_PERFORMANCE_ENERGY_BIAS_PREFERENCE_BIT                                       = 8                                                //col:730
	CPUID_ECX_PERFORMANCE_ENERGY_BIAS_PREFERENCE_FLAG                                      = 0xFF00                                           //col:731
	CPUID_ECX_PERFORMANCE_ENERGY_BIAS_PREFERENCE_MASK                                      = 0xFF                                             //col:732
	CPUID_ECX_PERFORMANCE_ENERGY_BIAS_PREFERENCE                                       (_) = (((_) >> 8) & 0xFF)                              //col:733
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:734
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:735
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:736
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:737
	CPUID_STRUCTURED_EXTENDED_FEATURE_FLAGS                                                = 0x00000007                                       //col:738
	CPUID_EAX_NUMBER_OF_SUB_LEAVES_BIT                                                     = 0                                                //col:739
	CPUID_EAX_NUMBER_OF_SUB_LEAVES_FLAG                                                    = 0xFFFFFFFF                                       //col:740
	CPUID_EAX_NUMBER_OF_SUB_LEAVES_MASK                                                    = 0xFFFFFFFF                                       //col:741
	CPUID_EAX_NUMBER_OF_SUB_LEAVES                                                     (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:742
	CPUID_EBX_FSGSBASE_BIT                                                                 = 0                                                //col:743
	CPUID_EBX_FSGSBASE_FLAG                                                                = 0x01                                             //col:744
	CPUID_EBX_FSGSBASE_MASK                                                                = 0x01                                             //col:745
	CPUID_EBX_FSGSBASE                                                                 (_) = (((_) >> 0) & 0x01)                              //col:746
	CPUID_EBX_IA32_TSC_ADJUST_MSR_BIT                                                      = 1                                                //col:747
	CPUID_EBX_IA32_TSC_ADJUST_MSR_FLAG                                                     = 0x02                                             //col:748
	CPUID_EBX_IA32_TSC_ADJUST_MSR_MASK                                                     = 0x01                                             //col:749
	CPUID_EBX_IA32_TSC_ADJUST_MSR                                                      (_) = (((_) >> 1) & 0x01)                              //col:750
	CPUID_EBX_SGX_BIT                                                                      = 2                                                //col:751
	CPUID_EBX_SGX_FLAG                                                                     = 0x04                                             //col:752
	CPUID_EBX_SGX_MASK                                                                     = 0x01                                             //col:753
	CPUID_EBX_SGX                                                                      (_) = (((_) >> 2) & 0x01)                              //col:754
	CPUID_EBX_BMI1_BIT                                                                     = 3                                                //col:755
	CPUID_EBX_BMI1_FLAG                                                                    = 0x08                                             //col:756
	CPUID_EBX_BMI1_MASK                                                                    = 0x01                                             //col:757
	CPUID_EBX_BMI1                                                                     (_) = (((_) >> 3) & 0x01)                              //col:758
	CPUID_EBX_HLE_BIT                                                                      = 4                                                //col:759
	CPUID_EBX_HLE_FLAG                                                                     = 0x10                                             //col:760
	CPUID_EBX_HLE_MASK                                                                     = 0x01                                             //col:761
	CPUID_EBX_HLE                                                                      (_) = (((_) >> 4) & 0x01)                              //col:762
	CPUID_EBX_AVX2_BIT                                                                     = 5                                                //col:763
	CPUID_EBX_AVX2_FLAG                                                                    = 0x20                                             //col:764
	CPUID_EBX_AVX2_MASK                                                                    = 0x01                                             //col:765
	CPUID_EBX_AVX2                                                                     (_) = (((_) >> 5) & 0x01)                              //col:766
	CPUID_EBX_FDP_EXCPTN_ONLY_BIT                                                          = 6                                                //col:767
	CPUID_EBX_FDP_EXCPTN_ONLY_FLAG                                                         = 0x40                                             //col:768
	CPUID_EBX_FDP_EXCPTN_ONLY_MASK                                                         = 0x01                                             //col:769
	CPUID_EBX_FDP_EXCPTN_ONLY                                                          (_) = (((_) >> 6) & 0x01)                              //col:770
	CPUID_EBX_SMEP_BIT                                                                     = 7                                                //col:771
	CPUID_EBX_SMEP_FLAG                                                                    = 0x80                                             //col:772
	CPUID_EBX_SMEP_MASK                                                                    = 0x01                                             //col:773
	CPUID_EBX_SMEP                                                                     (_) = (((_) >> 7) & 0x01)                              //col:774
	CPUID_EBX_BMI2_BIT                                                                     = 8                                                //col:775
	CPUID_EBX_BMI2_FLAG                                                                    = 0x100                                            //col:776
	CPUID_EBX_BMI2_MASK                                                                    = 0x01                                             //col:777
	CPUID_EBX_BMI2                                                                     (_) = (((_) >> 8) & 0x01)                              //col:778
	CPUID_EBX_ENHANCED_REP_MOVSB_STOSB_BIT                                                 = 9                                                //col:779
	CPUID_EBX_ENHANCED_REP_MOVSB_STOSB_FLAG                                                = 0x200                                            //col:780
	CPUID_EBX_ENHANCED_REP_MOVSB_STOSB_MASK                                                = 0x01                                             //col:781
	CPUID_EBX_ENHANCED_REP_MOVSB_STOSB                                                 (_) = (((_) >> 9) & 0x01)                              //col:782
	CPUID_EBX_INVPCID_BIT                                                                  = 10                                               //col:783
	CPUID_EBX_INVPCID_FLAG                                                                 = 0x400                                            //col:784
	CPUID_EBX_INVPCID_MASK                                                                 = 0x01                                             //col:785
	CPUID_EBX_INVPCID                                                                  (_) = (((_) >> 10) & 0x01)                             //col:786
	CPUID_EBX_RTM_BIT                                                                      = 11                                               //col:787
	CPUID_EBX_RTM_FLAG                                                                     = 0x800                                            //col:788
	CPUID_EBX_RTM_MASK                                                                     = 0x01                                             //col:789
	CPUID_EBX_RTM                                                                      (_) = (((_) >> 11) & 0x01)                             //col:790
	CPUID_EBX_RDT_M_BIT                                                                    = 12                                               //col:791
	CPUID_EBX_RDT_M_FLAG                                                                   = 0x1000                                           //col:792
	CPUID_EBX_RDT_M_MASK                                                                   = 0x01                                             //col:793
	CPUID_EBX_RDT_M                                                                    (_) = (((_) >> 12) & 0x01)                             //col:794
	CPUID_EBX_DEPRECATES_BIT                                                               = 13                                               //col:795
	CPUID_EBX_DEPRECATES_FLAG                                                              = 0x2000                                           //col:796
	CPUID_EBX_DEPRECATES_MASK                                                              = 0x01                                             //col:797
	CPUID_EBX_DEPRECATES                                                               (_) = (((_) >> 13) & 0x01)                             //col:798
	CPUID_EBX_MPX_BIT                                                                      = 14                                               //col:799
	CPUID_EBX_MPX_FLAG                                                                     = 0x4000                                           //col:800
	CPUID_EBX_MPX_MASK                                                                     = 0x01                                             //col:801
	CPUID_EBX_MPX                                                                      (_) = (((_) >> 14) & 0x01)                             //col:802
	CPUID_EBX_RDT_BIT                                                                      = 15                                               //col:803
	CPUID_EBX_RDT_FLAG                                                                     = 0x8000                                           //col:804
	CPUID_EBX_RDT_MASK                                                                     = 0x01                                             //col:805
	CPUID_EBX_RDT                                                                      (_) = (((_) >> 15) & 0x01)                             //col:806
	CPUID_EBX_AVX512F_BIT                                                                  = 16                                               //col:807
	CPUID_EBX_AVX512F_FLAG                                                                 = 0x10000                                          //col:808
	CPUID_EBX_AVX512F_MASK                                                                 = 0x01                                             //col:809
	CPUID_EBX_AVX512F                                                                  (_) = (((_) >> 16) & 0x01)                             //col:810
	CPUID_EBX_AVX512DQ_BIT                                                                 = 17                                               //col:811
	CPUID_EBX_AVX512DQ_FLAG                                                                = 0x20000                                          //col:812
	CPUID_EBX_AVX512DQ_MASK                                                                = 0x01                                             //col:813
	CPUID_EBX_AVX512DQ                                                                 (_) = (((_) >> 17) & 0x01)                             //col:814
	CPUID_EBX_RDSEED_BIT                                                                   = 18                                               //col:815
	CPUID_EBX_RDSEED_FLAG                                                                  = 0x40000                                          //col:816
	CPUID_EBX_RDSEED_MASK                                                                  = 0x01                                             //col:817
	CPUID_EBX_RDSEED                                                                   (_) = (((_) >> 18) & 0x01)                             //col:818
	CPUID_EBX_ADX_BIT                                                                      = 19                                               //col:819
	CPUID_EBX_ADX_FLAG                                                                     = 0x80000                                          //col:820
	CPUID_EBX_ADX_MASK                                                                     = 0x01                                             //col:821
	CPUID_EBX_ADX                                                                      (_) = (((_) >> 19) & 0x01)                             //col:822
	CPUID_EBX_SMAP_BIT                                                                     = 20                                               //col:823
	CPUID_EBX_SMAP_FLAG                                                                    = 0x100000                                         //col:824
	CPUID_EBX_SMAP_MASK                                                                    = 0x01                                             //col:825
	CPUID_EBX_SMAP                                                                     (_) = (((_) >> 20) & 0x01)                             //col:826
	CPUID_EBX_AVX512_IFMA_BIT                                                              = 21                                               //col:827
	CPUID_EBX_AVX512_IFMA_FLAG                                                             = 0x200000                                         //col:828
	CPUID_EBX_AVX512_IFMA_MASK                                                             = 0x01                                             //col:829
	CPUID_EBX_AVX512_IFMA                                                              (_) = (((_) >> 21) & 0x01)                             //col:830
	CPUID_EBX_CLFLUSHOPT_BIT                                                               = 23                                               //col:831
	CPUID_EBX_CLFLUSHOPT_FLAG                                                              = 0x800000                                         //col:832
	CPUID_EBX_CLFLUSHOPT_MASK                                                              = 0x01                                             //col:833
	CPUID_EBX_CLFLUSHOPT                                                               (_) = (((_) >> 23) & 0x01)                             //col:834
	CPUID_EBX_CLWB_BIT                                                                     = 24                                               //col:835
	CPUID_EBX_CLWB_FLAG                                                                    = 0x1000000                                        //col:836
	CPUID_EBX_CLWB_MASK                                                                    = 0x01                                             //col:837
	CPUID_EBX_CLWB                                                                     (_) = (((_) >> 24) & 0x01)                             //col:838
	CPUID_EBX_INTEL_BIT                                                                    = 25                                               //col:839
	CPUID_EBX_INTEL_FLAG                                                                   = 0x2000000                                        //col:840
	CPUID_EBX_INTEL_MASK                                                                   = 0x01                                             //col:841
	CPUID_EBX_INTEL                                                                    (_) = (((_) >> 25) & 0x01)                             //col:842
	CPUID_EBX_AVX512PF_BIT                                                                 = 26                                               //col:843
	CPUID_EBX_AVX512PF_FLAG                                                                = 0x4000000                                        //col:844
	CPUID_EBX_AVX512PF_MASK                                                                = 0x01                                             //col:845
	CPUID_EBX_AVX512PF                                                                 (_) = (((_) >> 26) & 0x01)                             //col:846
	CPUID_EBX_AVX512ER_BIT                                                                 = 27                                               //col:847
	CPUID_EBX_AVX512ER_FLAG                                                                = 0x8000000                                        //col:848
	CPUID_EBX_AVX512ER_MASK                                                                = 0x01                                             //col:849
	CPUID_EBX_AVX512ER                                                                 (_) = (((_) >> 27) & 0x01)                             //col:850
	CPUID_EBX_AVX512CD_BIT                                                                 = 28                                               //col:851
	CPUID_EBX_AVX512CD_FLAG                                                                = 0x10000000                                       //col:852
	CPUID_EBX_AVX512CD_MASK                                                                = 0x01                                             //col:853
	CPUID_EBX_AVX512CD                                                                 (_) = (((_) >> 28) & 0x01)                             //col:854
	CPUID_EBX_SHA_BIT                                                                      = 29                                               //col:855
	CPUID_EBX_SHA_FLAG                                                                     = 0x20000000                                       //col:856
	CPUID_EBX_SHA_MASK                                                                     = 0x01                                             //col:857
	CPUID_EBX_SHA                                                                      (_) = (((_) >> 29) & 0x01)                             //col:858
	CPUID_EBX_AVX512BW_BIT                                                                 = 30                                               //col:859
	CPUID_EBX_AVX512BW_FLAG                                                                = 0x40000000                                       //col:860
	CPUID_EBX_AVX512BW_MASK                                                                = 0x01                                             //col:861
	CPUID_EBX_AVX512BW                                                                 (_) = (((_) >> 30) & 0x01)                             //col:862
	CPUID_EBX_AVX512VL_BIT                                                                 = 31                                               //col:863
	CPUID_EBX_AVX512VL_FLAG                                                                = 0x80000000                                       //col:864
	CPUID_EBX_AVX512VL_MASK                                                                = 0x01                                             //col:865
	CPUID_EBX_AVX512VL                                                                 (_) = (((_) >> 31) & 0x01)                             //col:866
	CPUID_ECX_PREFETCHWT1_BIT                                                              = 0                                                //col:867
	CPUID_ECX_PREFETCHWT1_FLAG                                                             = 0x01                                             //col:868
	CPUID_ECX_PREFETCHWT1_MASK                                                             = 0x01                                             //col:869
	CPUID_ECX_PREFETCHWT1                                                              (_) = (((_) >> 0) & 0x01)                              //col:870
	CPUID_ECX_AVX512_VBMI_BIT                                                              = 1                                                //col:871
	CPUID_ECX_AVX512_VBMI_FLAG                                                             = 0x02                                             //col:872
	CPUID_ECX_AVX512_VBMI_MASK                                                             = 0x01                                             //col:873
	CPUID_ECX_AVX512_VBMI                                                              (_) = (((_) >> 1) & 0x01)                              //col:874
	CPUID_ECX_UMIP_BIT                                                                     = 2                                                //col:875
	CPUID_ECX_UMIP_FLAG                                                                    = 0x04                                             //col:876
	CPUID_ECX_UMIP_MASK                                                                    = 0x01                                             //col:877
	CPUID_ECX_UMIP                                                                     (_) = (((_) >> 2) & 0x01)                              //col:878
	CPUID_ECX_PKU_BIT                                                                      = 3                                                //col:879
	CPUID_ECX_PKU_FLAG                                                                     = 0x08                                             //col:880
	CPUID_ECX_PKU_MASK                                                                     = 0x01                                             //col:881
	CPUID_ECX_PKU                                                                      (_) = (((_) >> 3) & 0x01)                              //col:882
	CPUID_ECX_OSPKE_BIT                                                                    = 4                                                //col:883
	CPUID_ECX_OSPKE_FLAG                                                                   = 0x10                                             //col:884
	CPUID_ECX_OSPKE_MASK                                                                   = 0x01                                             //col:885
	CPUID_ECX_OSPKE                                                                    (_) = (((_) >> 4) & 0x01)                              //col:886
	CPUID_ECX_WAITPKG_BIT                                                                  = 5                                                //col:887
	CPUID_ECX_WAITPKG_FLAG                                                                 = 0x20                                             //col:888
	CPUID_ECX_WAITPKG_MASK                                                                 = 0x01                                             //col:889
	CPUID_ECX_WAITPKG                                                                  (_) = (((_) >> 5) & 0x01)                              //col:890
	CPUID_ECX_AVX512_VBMI2_BIT                                                             = 6                                                //col:891
	CPUID_ECX_AVX512_VBMI2_FLAG                                                            = 0x40                                             //col:892
	CPUID_ECX_AVX512_VBMI2_MASK                                                            = 0x01                                             //col:893
	CPUID_ECX_AVX512_VBMI2                                                             (_) = (((_) >> 6) & 0x01)                              //col:894
	CPUID_ECX_CET_SS_BIT                                                                   = 7                                                //col:895
	CPUID_ECX_CET_SS_FLAG                                                                  = 0x80                                             //col:896
	CPUID_ECX_CET_SS_MASK                                                                  = 0x01                                             //col:897
	CPUID_ECX_CET_SS                                                                   (_) = (((_) >> 7) & 0x01)                              //col:898
	CPUID_ECX_GFNI_BIT                                                                     = 8                                                //col:899
	CPUID_ECX_GFNI_FLAG                                                                    = 0x100                                            //col:900
	CPUID_ECX_GFNI_MASK                                                                    = 0x01                                             //col:901
	CPUID_ECX_GFNI                                                                     (_) = (((_) >> 8) & 0x01)                              //col:902
	CPUID_ECX_VAES_BIT                                                                     = 9                                                //col:903
	CPUID_ECX_VAES_FLAG                                                                    = 0x200                                            //col:904
	CPUID_ECX_VAES_MASK                                                                    = 0x01                                             //col:905
	CPUID_ECX_VAES                                                                     (_) = (((_) >> 9) & 0x01)                              //col:906
	CPUID_ECX_VPCLMULQDQ_BIT                                                               = 10                                               //col:907
	CPUID_ECX_VPCLMULQDQ_FLAG                                                              = 0x400                                            //col:908
	CPUID_ECX_VPCLMULQDQ_MASK                                                              = 0x01                                             //col:909
	CPUID_ECX_VPCLMULQDQ                                                               (_) = (((_) >> 10) & 0x01)                             //col:910
	CPUID_ECX_AVX512_VNNI_BIT                                                              = 11                                               //col:911
	CPUID_ECX_AVX512_VNNI_FLAG                                                             = 0x800                                            //col:912
	CPUID_ECX_AVX512_VNNI_MASK                                                             = 0x01                                             //col:913
	CPUID_ECX_AVX512_VNNI                                                              (_) = (((_) >> 11) & 0x01)                             //col:914
	CPUID_ECX_AVX512_BITALG_BIT                                                            = 12                                               //col:915
	CPUID_ECX_AVX512_BITALG_FLAG                                                           = 0x1000                                           //col:916
	CPUID_ECX_AVX512_BITALG_MASK                                                           = 0x01                                             //col:917
	CPUID_ECX_AVX512_BITALG                                                            (_) = (((_) >> 12) & 0x01)                             //col:918
	CPUID_ECX_TME_EN_BIT                                                                   = 13                                               //col:919
	CPUID_ECX_TME_EN_FLAG                                                                  = 0x2000                                           //col:920
	CPUID_ECX_TME_EN_MASK                                                                  = 0x01                                             //col:921
	CPUID_ECX_TME_EN                                                                   (_) = (((_) >> 13) & 0x01)                             //col:922
	CPUID_ECX_AVX512_VPOPCNTDQ_BIT                                                         = 14                                               //col:923
	CPUID_ECX_AVX512_VPOPCNTDQ_FLAG                                                        = 0x4000                                           //col:924
	CPUID_ECX_AVX512_VPOPCNTDQ_MASK                                                        = 0x01                                             //col:925
	CPUID_ECX_AVX512_VPOPCNTDQ                                                         (_) = (((_) >> 14) & 0x01)                             //col:926
	CPUID_ECX_LA57_BIT                                                                     = 16                                               //col:927
	CPUID_ECX_LA57_FLAG                                                                    = 0x10000                                          //col:928
	CPUID_ECX_LA57_MASK                                                                    = 0x01                                             //col:929
	CPUID_ECX_LA57                                                                     (_) = (((_) >> 16) & 0x01)                             //col:930
	CPUID_ECX_MAWAU_BIT                                                                    = 17                                               //col:931
	CPUID_ECX_MAWAU_FLAG                                                                   = 0x3E0000                                         //col:932
	CPUID_ECX_MAWAU_MASK                                                                   = 0x1F                                             //col:933
	CPUID_ECX_MAWAU                                                                    (_) = (((_) >> 17) & 0x1F)                             //col:934
	CPUID_ECX_RDPID_BIT                                                                    = 22                                               //col:935
	CPUID_ECX_RDPID_FLAG                                                                   = 0x400000                                         //col:936
	CPUID_ECX_RDPID_MASK                                                                   = 0x01                                             //col:937
	CPUID_ECX_RDPID                                                                    (_) = (((_) >> 22) & 0x01)                             //col:938
	CPUID_ECX_KL_BIT                                                                       = 23                                               //col:939
	CPUID_ECX_KL_FLAG                                                                      = 0x800000                                         //col:940
	CPUID_ECX_KL_MASK                                                                      = 0x01                                             //col:941
	CPUID_ECX_KL                                                                       (_) = (((_) >> 23) & 0x01)                             //col:942
	CPUID_ECX_CLDEMOTE_BIT                                                                 = 25                                               //col:943
	CPUID_ECX_CLDEMOTE_FLAG                                                                = 0x2000000                                        //col:944
	CPUID_ECX_CLDEMOTE_MASK                                                                = 0x01                                             //col:945
	CPUID_ECX_CLDEMOTE                                                                 (_) = (((_) >> 25) & 0x01)                             //col:946
	CPUID_ECX_MOVDIRI_BIT                                                                  = 27                                               //col:947
	CPUID_ECX_MOVDIRI_FLAG                                                                 = 0x8000000                                        //col:948
	CPUID_ECX_MOVDIRI_MASK                                                                 = 0x01                                             //col:949
	CPUID_ECX_MOVDIRI                                                                  (_) = (((_) >> 27) & 0x01)                             //col:950
	CPUID_ECX_MOVDIR64B_BIT                                                                = 28                                               //col:951
	CPUID_ECX_MOVDIR64B_FLAG                                                               = 0x10000000                                       //col:952
	CPUID_ECX_MOVDIR64B_MASK                                                               = 0x01                                             //col:953
	CPUID_ECX_MOVDIR64B                                                                (_) = (((_) >> 28) & 0x01)                             //col:954
	CPUID_ECX_SGX_LC_BIT                                                                   = 30                                               //col:955
	CPUID_ECX_SGX_LC_FLAG                                                                  = 0x40000000                                       //col:956
	CPUID_ECX_SGX_LC_MASK                                                                  = 0x01                                             //col:957
	CPUID_ECX_SGX_LC                                                                   (_) = (((_) >> 30) & 0x01)                             //col:958
	CPUID_ECX_PKS_BIT                                                                      = 31                                               //col:959
	CPUID_ECX_PKS_FLAG                                                                     = 0x80000000                                       //col:960
	CPUID_ECX_PKS_MASK                                                                     = 0x01                                             //col:961
	CPUID_ECX_PKS                                                                      (_) = (((_) >> 31) & 0x01)                             //col:962
	CPUID_EDX_AVX512_4VNNIW_BIT                                                            = 2                                                //col:963
	CPUID_EDX_AVX512_4VNNIW_FLAG                                                           = 0x04                                             //col:964
	CPUID_EDX_AVX512_4VNNIW_MASK                                                           = 0x01                                             //col:965
	CPUID_EDX_AVX512_4VNNIW                                                            (_) = (((_) >> 2) & 0x01)                              //col:966
	CPUID_EDX_AVX512_4FMAPS_BIT                                                            = 3                                                //col:967
	CPUID_EDX_AVX512_4FMAPS_FLAG                                                           = 0x08                                             //col:968
	CPUID_EDX_AVX512_4FMAPS_MASK                                                           = 0x01                                             //col:969
	CPUID_EDX_AVX512_4FMAPS                                                            (_) = (((_) >> 3) & 0x01)                              //col:970
	CPUID_EDX_FAST_SHORT_REP_MOV_BIT                                                       = 4                                                //col:971
	CPUID_EDX_FAST_SHORT_REP_MOV_FLAG                                                      = 0x10                                             //col:972
	CPUID_EDX_FAST_SHORT_REP_MOV_MASK                                                      = 0x01                                             //col:973
	CPUID_EDX_FAST_SHORT_REP_MOV                                                       (_) = (((_) >> 4) & 0x01)                              //col:974
	CPUID_EDX_AVX512_VP2INTERSECT_BIT                                                      = 8                                                //col:975
	CPUID_EDX_AVX512_VP2INTERSECT_FLAG                                                     = 0x100                                            //col:976
	CPUID_EDX_AVX512_VP2INTERSECT_MASK                                                     = 0x01                                             //col:977
	CPUID_EDX_AVX512_VP2INTERSECT                                                      (_) = (((_) >> 8) & 0x01)                              //col:978
	CPUID_EDX_MD_CLEAR_BIT                                                                 = 10                                               //col:979
	CPUID_EDX_MD_CLEAR_FLAG                                                                = 0x400                                            //col:980
	CPUID_EDX_MD_CLEAR_MASK                                                                = 0x01                                             //col:981
	CPUID_EDX_MD_CLEAR                                                                 (_) = (((_) >> 10) & 0x01)                             //col:982
	CPUID_EDX_SERIALIZE_BIT                                                                = 14                                               //col:983
	CPUID_EDX_SERIALIZE_FLAG                                                               = 0x4000                                           //col:984
	CPUID_EDX_SERIALIZE_MASK                                                               = 0x01                                             //col:985
	CPUID_EDX_SERIALIZE                                                                (_) = (((_) >> 14) & 0x01)                             //col:986
	CPUID_EDX_HYBRID_BIT                                                                   = 15                                               //col:987
	CPUID_EDX_HYBRID_FLAG                                                                  = 0x8000                                           //col:988
	CPUID_EDX_HYBRID_MASK                                                                  = 0x01                                             //col:989
	CPUID_EDX_HYBRID                                                                   (_) = (((_) >> 15) & 0x01)                             //col:990
	CPUID_EDX_PCONFIG_BIT                                                                  = 18                                               //col:991
	CPUID_EDX_PCONFIG_FLAG                                                                 = 0x40000                                          //col:992
	CPUID_EDX_PCONFIG_MASK                                                                 = 0x01                                             //col:993
	CPUID_EDX_PCONFIG                                                                  (_) = (((_) >> 18) & 0x01)                             //col:994
	CPUID_EDX_CET_IBT_BIT                                                                  = 20                                               //col:995
	CPUID_EDX_CET_IBT_FLAG                                                                 = 0x100000                                         //col:996
	CPUID_EDX_CET_IBT_MASK                                                                 = 0x01                                             //col:997
	CPUID_EDX_CET_IBT                                                                  (_) = (((_) >> 20) & 0x01)                             //col:998
	CPUID_EDX_IBRS_IBPB_BIT                                                                = 26                                               //col:999
	CPUID_EDX_IBRS_IBPB_FLAG                                                               = 0x4000000                                        //col:1000
	CPUID_EDX_IBRS_IBPB_MASK                                                               = 0x01                                             //col:1001
	CPUID_EDX_IBRS_IBPB                                                                (_) = (((_) >> 26) & 0x01)                             //col:1002
	CPUID_EDX_STIBP_BIT                                                                    = 27                                               //col:1003
	CPUID_EDX_STIBP_FLAG                                                                   = 0x8000000                                        //col:1004
	CPUID_EDX_STIBP_MASK                                                                   = 0x01                                             //col:1005
	CPUID_EDX_STIBP                                                                    (_) = (((_) >> 27) & 0x01)                             //col:1006
	CPUID_EDX_L1D_FLUSH_BIT                                                                = 28                                               //col:1007
	CPUID_EDX_L1D_FLUSH_FLAG                                                               = 0x10000000                                       //col:1008
	CPUID_EDX_L1D_FLUSH_MASK                                                               = 0x01                                             //col:1009
	CPUID_EDX_L1D_FLUSH                                                                (_) = (((_) >> 28) & 0x01)                             //col:1010
	CPUID_EDX_IA32_ARCH_CAPABILITIES_BIT                                                   = 29                                               //col:1011
	CPUID_EDX_IA32_ARCH_CAPABILITIES_FLAG                                                  = 0x20000000                                       //col:1012
	CPUID_EDX_IA32_ARCH_CAPABILITIES_MASK                                                  = 0x01                                             //col:1013
	CPUID_EDX_IA32_ARCH_CAPABILITIES                                                   (_) = (((_) >> 29) & 0x01)                             //col:1014
	CPUID_EDX_IA32_CORE_CAPABILITIES_BIT                                                   = 30                                               //col:1015
	CPUID_EDX_IA32_CORE_CAPABILITIES_FLAG                                                  = 0x40000000                                       //col:1016
	CPUID_EDX_IA32_CORE_CAPABILITIES_MASK                                                  = 0x01                                             //col:1017
	CPUID_EDX_IA32_CORE_CAPABILITIES                                                   (_) = (((_) >> 30) & 0x01)                             //col:1018
	CPUID_EDX_SSBD_BIT                                                                     = 31                                               //col:1019
	CPUID_EDX_SSBD_FLAG                                                                    = 0x80000000                                       //col:1020
	CPUID_EDX_SSBD_MASK                                                                    = 0x01                                             //col:1021
	CPUID_EDX_SSBD                                                                     (_) = (((_) >> 31) & 0x01)                             //col:1022
	CPUID_DIRECT_CACHE_ACCESS_INFORMATION                                                  = 0x00000009                                       //col:1023
	CPUID_EAX_IA32_PLATFORM_DCA_CAP_BIT                                                    = 0                                                //col:1024
	CPUID_EAX_IA32_PLATFORM_DCA_CAP_FLAG                                                   = 0xFFFFFFFF                                       //col:1025
	CPUID_EAX_IA32_PLATFORM_DCA_CAP_MASK                                                   = 0xFFFFFFFF                                       //col:1026
	CPUID_EAX_IA32_PLATFORM_DCA_CAP                                                    (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1027
	CPUID_EBX_RESERVED_BIT                                                                 = 0                                                //col:1028
	CPUID_EBX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1029
	CPUID_EBX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1030
	CPUID_EBX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1031
	CPUID_ECX_RESERVED_BIT                                                                 = 0                                                //col:1032
	CPUID_ECX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1033
	CPUID_ECX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1034
	CPUID_ECX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1035
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:1036
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1037
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1038
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1039
	CPUID_ARCHITECTURAL_PERFORMANCE_MONITORING                                             = 0x0000000A                                       //col:1040
	CPUID_EAX_VERSION_ID_OF_ARCHITECTURAL_PERFORMANCE_MONITORING_BIT                       = 0                                                //col:1041
	CPUID_EAX_VERSION_ID_OF_ARCHITECTURAL_PERFORMANCE_MONITORING_FLAG                      = 0xFF                                             //col:1042
	CPUID_EAX_VERSION_ID_OF_ARCHITECTURAL_PERFORMANCE_MONITORING_MASK                      = 0xFF                                             //col:1043
	CPUID_EAX_VERSION_ID_OF_ARCHITECTURAL_PERFORMANCE_MONITORING                       (_) = (((_) >> 0) & 0xFF)                              //col:1044
	CPUID_EAX_NUMBER_OF_PERFORMANCE_MONITORING_COUNTER_PER_LOGICAL_PROCESSOR_BIT           = 8                                                //col:1045
	CPUID_EAX_NUMBER_OF_PERFORMANCE_MONITORING_COUNTER_PER_LOGICAL_PROCESSOR_FLAG          = 0xFF00                                           //col:1046
	CPUID_EAX_NUMBER_OF_PERFORMANCE_MONITORING_COUNTER_PER_LOGICAL_PROCESSOR_MASK          = 0xFF                                             //col:1047
	CPUID_EAX_NUMBER_OF_PERFORMANCE_MONITORING_COUNTER_PER_LOGICAL_PROCESSOR           (_) = (((_) >> 8) & 0xFF)                              //col:1048
	CPUID_EAX_BIT_WIDTH_OF_PERFORMANCE_MONITORING_COUNTER_BIT                              = 16                                               //col:1049
	CPUID_EAX_BIT_WIDTH_OF_PERFORMANCE_MONITORING_COUNTER_FLAG                             = 0xFF0000                                         //col:1050
	CPUID_EAX_BIT_WIDTH_OF_PERFORMANCE_MONITORING_COUNTER_MASK                             = 0xFF                                             //col:1051
	CPUID_EAX_BIT_WIDTH_OF_PERFORMANCE_MONITORING_COUNTER                              (_) = (((_) >> 16) & 0xFF)                             //col:1052
	CPUID_EAX_EBX_BIT_VECTOR_LENGTH_BIT                                                    = 24                                               //col:1053
	CPUID_EAX_EBX_BIT_VECTOR_LENGTH_FLAG                                                   = 0xFF000000                                       //col:1054
	CPUID_EAX_EBX_BIT_VECTOR_LENGTH_MASK                                                   = 0xFF                                             //col:1055
	CPUID_EAX_EBX_BIT_VECTOR_LENGTH                                                    (_) = (((_) >> 24) & 0xFF)                             //col:1056
	CPUID_EBX_CORE_CYCLE_EVENT_NOT_AVAILABLE_BIT                                           = 0                                                //col:1057
	CPUID_EBX_CORE_CYCLE_EVENT_NOT_AVAILABLE_FLAG                                          = 0x01                                             //col:1058
	CPUID_EBX_CORE_CYCLE_EVENT_NOT_AVAILABLE_MASK                                          = 0x01                                             //col:1059
	CPUID_EBX_CORE_CYCLE_EVENT_NOT_AVAILABLE                                           (_) = (((_) >> 0) & 0x01)                              //col:1060
	CPUID_EBX_INSTRUCTION_RETIRED_EVENT_NOT_AVAILABLE_BIT                                  = 1                                                //col:1061
	CPUID_EBX_INSTRUCTION_RETIRED_EVENT_NOT_AVAILABLE_FLAG                                 = 0x02                                             //col:1062
	CPUID_EBX_INSTRUCTION_RETIRED_EVENT_NOT_AVAILABLE_MASK                                 = 0x01                                             //col:1063
	CPUID_EBX_INSTRUCTION_RETIRED_EVENT_NOT_AVAILABLE                                  (_) = (((_) >> 1) & 0x01)                              //col:1064
	CPUID_EBX_REFERENCE_CYCLES_EVENT_NOT_AVAILABLE_BIT                                     = 2                                                //col:1065
	CPUID_EBX_REFERENCE_CYCLES_EVENT_NOT_AVAILABLE_FLAG                                    = 0x04                                             //col:1066
	CPUID_EBX_REFERENCE_CYCLES_EVENT_NOT_AVAILABLE_MASK                                    = 0x01                                             //col:1067
	CPUID_EBX_REFERENCE_CYCLES_EVENT_NOT_AVAILABLE                                     (_) = (((_) >> 2) & 0x01)                              //col:1068
	CPUID_EBX_LAST_LEVEL_CACHE_REFERENCE_EVENT_NOT_AVAILABLE_BIT                           = 3                                                //col:1069
	CPUID_EBX_LAST_LEVEL_CACHE_REFERENCE_EVENT_NOT_AVAILABLE_FLAG                          = 0x08                                             //col:1070
	CPUID_EBX_LAST_LEVEL_CACHE_REFERENCE_EVENT_NOT_AVAILABLE_MASK                          = 0x01                                             //col:1071
	CPUID_EBX_LAST_LEVEL_CACHE_REFERENCE_EVENT_NOT_AVAILABLE                           (_) = (((_) >> 3) & 0x01)                              //col:1072
	CPUID_EBX_LAST_LEVEL_CACHE_MISSES_EVENT_NOT_AVAILABLE_BIT                              = 4                                                //col:1073
	CPUID_EBX_LAST_LEVEL_CACHE_MISSES_EVENT_NOT_AVAILABLE_FLAG                             = 0x10                                             //col:1074
	CPUID_EBX_LAST_LEVEL_CACHE_MISSES_EVENT_NOT_AVAILABLE_MASK                             = 0x01                                             //col:1075
	CPUID_EBX_LAST_LEVEL_CACHE_MISSES_EVENT_NOT_AVAILABLE                              (_) = (((_) >> 4) & 0x01)                              //col:1076
	CPUID_EBX_BRANCH_INSTRUCTION_RETIRED_EVENT_NOT_AVAILABLE_BIT                           = 5                                                //col:1077
	CPUID_EBX_BRANCH_INSTRUCTION_RETIRED_EVENT_NOT_AVAILABLE_FLAG                          = 0x20                                             //col:1078
	CPUID_EBX_BRANCH_INSTRUCTION_RETIRED_EVENT_NOT_AVAILABLE_MASK                          = 0x01                                             //col:1079
	CPUID_EBX_BRANCH_INSTRUCTION_RETIRED_EVENT_NOT_AVAILABLE                           (_) = (((_) >> 5) & 0x01)                              //col:1080
	CPUID_EBX_BRANCH_MISPREDICT_RETIRED_EVENT_NOT_AVAILABLE_BIT                            = 6                                                //col:1081
	CPUID_EBX_BRANCH_MISPREDICT_RETIRED_EVENT_NOT_AVAILABLE_FLAG                           = 0x40                                             //col:1082
	CPUID_EBX_BRANCH_MISPREDICT_RETIRED_EVENT_NOT_AVAILABLE_MASK                           = 0x01                                             //col:1083
	CPUID_EBX_BRANCH_MISPREDICT_RETIRED_EVENT_NOT_AVAILABLE                            (_) = (((_) >> 6) & 0x01)                              //col:1084
	CPUID_ECX_RESERVED_BIT                                                                 = 0                                                //col:1085
	CPUID_ECX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1086
	CPUID_ECX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1087
	CPUID_ECX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1088
	CPUID_EDX_NUMBER_OF_FIXED_FUNCTION_PERFORMANCE_COUNTERS_BIT                            = 0                                                //col:1089
	CPUID_EDX_NUMBER_OF_FIXED_FUNCTION_PERFORMANCE_COUNTERS_FLAG                           = 0x1F                                             //col:1090
	CPUID_EDX_NUMBER_OF_FIXED_FUNCTION_PERFORMANCE_COUNTERS_MASK                           = 0x1F                                             //col:1091
	CPUID_EDX_NUMBER_OF_FIXED_FUNCTION_PERFORMANCE_COUNTERS                            (_) = (((_) >> 0) & 0x1F)                              //col:1092
	CPUID_EDX_BIT_WIDTH_OF_FIXED_FUNCTION_PERFORMANCE_COUNTERS_BIT                         = 5                                                //col:1093
	CPUID_EDX_BIT_WIDTH_OF_FIXED_FUNCTION_PERFORMANCE_COUNTERS_FLAG                        = 0x1FE0                                           //col:1094
	CPUID_EDX_BIT_WIDTH_OF_FIXED_FUNCTION_PERFORMANCE_COUNTERS_MASK                        = 0xFF                                             //col:1095
	CPUID_EDX_BIT_WIDTH_OF_FIXED_FUNCTION_PERFORMANCE_COUNTERS                         (_) = (((_) >> 5) & 0xFF)                              //col:1096
	CPUID_EDX_ANY_THREAD_DEPRECATION_BIT                                                   = 15                                               //col:1097
	CPUID_EDX_ANY_THREAD_DEPRECATION_FLAG                                                  = 0x8000                                           //col:1098
	CPUID_EDX_ANY_THREAD_DEPRECATION_MASK                                                  = 0x01                                             //col:1099
	CPUID_EDX_ANY_THREAD_DEPRECATION                                                   (_) = (((_) >> 15) & 0x01)                             //col:1100
	CPUID_EXTENDED_TOPOLOGY                                                                = 0x0000000B                                       //col:1101
	CPUID_EAX_X2APIC_ID_TO_UNIQUE_TOPOLOGY_ID_SHIFT_BIT                                    = 0                                                //col:1102
	CPUID_EAX_X2APIC_ID_TO_UNIQUE_TOPOLOGY_ID_SHIFT_FLAG                                   = 0x1F                                             //col:1103
	CPUID_EAX_X2APIC_ID_TO_UNIQUE_TOPOLOGY_ID_SHIFT_MASK                                   = 0x1F                                             //col:1104
	CPUID_EAX_X2APIC_ID_TO_UNIQUE_TOPOLOGY_ID_SHIFT                                    (_) = (((_) >> 0) & 0x1F)                              //col:1105
	CPUID_EBX_NUMBER_OF_LOGICAL_PROCESSORS_AT_THIS_LEVEL_TYPE_BIT                          = 0                                                //col:1106
	CPUID_EBX_NUMBER_OF_LOGICAL_PROCESSORS_AT_THIS_LEVEL_TYPE_FLAG                         = 0xFFFF                                           //col:1107
	CPUID_EBX_NUMBER_OF_LOGICAL_PROCESSORS_AT_THIS_LEVEL_TYPE_MASK                         = 0xFFFF                                           //col:1108
	CPUID_EBX_NUMBER_OF_LOGICAL_PROCESSORS_AT_THIS_LEVEL_TYPE                          (_) = (((_) >> 0) & 0xFFFF)                            //col:1109
	CPUID_ECX_LEVEL_NUMBER_BIT                                                             = 0                                                //col:1110
	CPUID_ECX_LEVEL_NUMBER_FLAG                                                            = 0xFF                                             //col:1111
	CPUID_ECX_LEVEL_NUMBER_MASK                                                            = 0xFF                                             //col:1112
	CPUID_ECX_LEVEL_NUMBER                                                             (_) = (((_) >> 0) & 0xFF)                              //col:1113
	CPUID_ECX_LEVEL_TYPE_BIT                                                               = 8                                                //col:1114
	CPUID_ECX_LEVEL_TYPE_FLAG                                                              = 0xFF00                                           //col:1115
	CPUID_ECX_LEVEL_TYPE_MASK                                                              = 0xFF                                             //col:1116
	CPUID_ECX_LEVEL_TYPE                                                               (_) = (((_) >> 8) & 0xFF)                              //col:1117
	CPUID_EDX_X2APIC_ID_BIT                                                                = 0                                                //col:1118
	CPUID_EDX_X2APIC_ID_FLAG                                                               = 0xFFFFFFFF                                       //col:1119
	CPUID_EDX_X2APIC_ID_MASK                                                               = 0xFFFFFFFF                                       //col:1120
	CPUID_EDX_X2APIC_ID                                                                (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1121
	CPUID_EXTENDED_STATE_INFORMATION                                                       = 0x0000000D                                       //col:1122
	CPUID_EAX_X87_STATE_BIT                                                                = 0                                                //col:1123
	CPUID_EAX_X87_STATE_FLAG                                                               = 0x01                                             //col:1124
	CPUID_EAX_X87_STATE_MASK                                                               = 0x01                                             //col:1125
	CPUID_EAX_X87_STATE                                                                (_) = (((_) >> 0) & 0x01)                              //col:1126
	CPUID_EAX_SSE_STATE_BIT                                                                = 1                                                //col:1127
	CPUID_EAX_SSE_STATE_FLAG                                                               = 0x02                                             //col:1128
	CPUID_EAX_SSE_STATE_MASK                                                               = 0x01                                             //col:1129
	CPUID_EAX_SSE_STATE                                                                (_) = (((_) >> 1) & 0x01)                              //col:1130
	CPUID_EAX_AVX_STATE_BIT                                                                = 2                                                //col:1131
	CPUID_EAX_AVX_STATE_FLAG                                                               = 0x04                                             //col:1132
	CPUID_EAX_AVX_STATE_MASK                                                               = 0x01                                             //col:1133
	CPUID_EAX_AVX_STATE                                                                (_) = (((_) >> 2) & 0x01)                              //col:1134
	CPUID_EAX_MPX_STATE_BIT                                                                = 3                                                //col:1135
	CPUID_EAX_MPX_STATE_FLAG                                                               = 0x18                                             //col:1136
	CPUID_EAX_MPX_STATE_MASK                                                               = 0x03                                             //col:1137
	CPUID_EAX_MPX_STATE                                                                (_) = (((_) >> 3) & 0x03)                              //col:1138
	CPUID_EAX_AVX_512_STATE_BIT                                                            = 5                                                //col:1139
	CPUID_EAX_AVX_512_STATE_FLAG                                                           = 0xE0                                             //col:1140
	CPUID_EAX_AVX_512_STATE_MASK                                                           = 0x07                                             //col:1141
	CPUID_EAX_AVX_512_STATE                                                            (_) = (((_) >> 5) & 0x07)                              //col:1142
	CPUID_EAX_USED_FOR_IA32_XSS_1_BIT                                                      = 8                                                //col:1143
	CPUID_EAX_USED_FOR_IA32_XSS_1_FLAG                                                     = 0x100                                            //col:1144
	CPUID_EAX_USED_FOR_IA32_XSS_1_MASK                                                     = 0x01                                             //col:1145
	CPUID_EAX_USED_FOR_IA32_XSS_1                                                      (_) = (((_) >> 8) & 0x01)                              //col:1146
	CPUID_EAX_PKRU_STATE_BIT                                                               = 9                                                //col:1147
	CPUID_EAX_PKRU_STATE_FLAG                                                              = 0x200                                            //col:1148
	CPUID_EAX_PKRU_STATE_MASK                                                              = 0x01                                             //col:1149
	CPUID_EAX_PKRU_STATE                                                               (_) = (((_) >> 9) & 0x01)                              //col:1150
	CPUID_EAX_USED_FOR_IA32_XSS_2_BIT                                                      = 13                                               //col:1151
	CPUID_EAX_USED_FOR_IA32_XSS_2_FLAG                                                     = 0x2000                                           //col:1152
	CPUID_EAX_USED_FOR_IA32_XSS_2_MASK                                                     = 0x01                                             //col:1153
	CPUID_EAX_USED_FOR_IA32_XSS_2                                                      (_) = (((_) >> 13) & 0x01)                             //col:1154
	CPUID_EBX_MAX_SIZE_REQUIRED_BY_ENABLED_FEATURES_IN_XCR0_BIT                            = 0                                                //col:1155
	CPUID_EBX_MAX_SIZE_REQUIRED_BY_ENABLED_FEATURES_IN_XCR0_FLAG                           = 0xFFFFFFFF                                       //col:1156
	CPUID_EBX_MAX_SIZE_REQUIRED_BY_ENABLED_FEATURES_IN_XCR0_MASK                           = 0xFFFFFFFF                                       //col:1157
	CPUID_EBX_MAX_SIZE_REQUIRED_BY_ENABLED_FEATURES_IN_XCR0                            (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1158
	CPUID_ECX_MAX_SIZE_OF_XSAVE_XRSTOR_SAVE_AREA_BIT                                       = 0                                                //col:1159
	CPUID_ECX_MAX_SIZE_OF_XSAVE_XRSTOR_SAVE_AREA_FLAG                                      = 0xFFFFFFFF                                       //col:1160
	CPUID_ECX_MAX_SIZE_OF_XSAVE_XRSTOR_SAVE_AREA_MASK                                      = 0xFFFFFFFF                                       //col:1161
	CPUID_ECX_MAX_SIZE_OF_XSAVE_XRSTOR_SAVE_AREA                                       (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1162
	CPUID_EDX_XCR0_SUPPORTED_BITS_BIT                                                      = 0                                                //col:1163
	CPUID_EDX_XCR0_SUPPORTED_BITS_FLAG                                                     = 0xFFFFFFFF                                       //col:1164
	CPUID_EDX_XCR0_SUPPORTED_BITS_MASK                                                     = 0xFFFFFFFF                                       //col:1165
	CPUID_EDX_XCR0_SUPPORTED_BITS                                                      (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1166
	CPUID_EAX_SUPPORTS_XSAVEC_AND_COMPACTED_XRSTOR_BIT                                     = 1                                                //col:1167
	CPUID_EAX_SUPPORTS_XSAVEC_AND_COMPACTED_XRSTOR_FLAG                                    = 0x02                                             //col:1168
	CPUID_EAX_SUPPORTS_XSAVEC_AND_COMPACTED_XRSTOR_MASK                                    = 0x01                                             //col:1169
	CPUID_EAX_SUPPORTS_XSAVEC_AND_COMPACTED_XRSTOR                                     (_) = (((_) >> 1) & 0x01)                              //col:1170
	CPUID_EAX_SUPPORTS_XGETBV_WITH_ECX_1_BIT                                               = 2                                                //col:1171
	CPUID_EAX_SUPPORTS_XGETBV_WITH_ECX_1_FLAG                                              = 0x04                                             //col:1172
	CPUID_EAX_SUPPORTS_XGETBV_WITH_ECX_1_MASK                                              = 0x01                                             //col:1173
	CPUID_EAX_SUPPORTS_XGETBV_WITH_ECX_1                                               (_) = (((_) >> 2) & 0x01)                              //col:1174
	CPUID_EAX_SUPPORTS_XSAVE_XRSTOR_AND_IA32_XSS_BIT                                       = 3                                                //col:1175
	CPUID_EAX_SUPPORTS_XSAVE_XRSTOR_AND_IA32_XSS_FLAG                                      = 0x08                                             //col:1176
	CPUID_EAX_SUPPORTS_XSAVE_XRSTOR_AND_IA32_XSS_MASK                                      = 0x01                                             //col:1177
	CPUID_EAX_SUPPORTS_XSAVE_XRSTOR_AND_IA32_XSS                                       (_) = (((_) >> 3) & 0x01)                              //col:1178
	CPUID_EBX_SIZE_OF_XSAVE_AREAD_BIT                                                      = 0                                                //col:1179
	CPUID_EBX_SIZE_OF_XSAVE_AREAD_FLAG                                                     = 0xFFFFFFFF                                       //col:1180
	CPUID_EBX_SIZE_OF_XSAVE_AREAD_MASK                                                     = 0xFFFFFFFF                                       //col:1181
	CPUID_EBX_SIZE_OF_XSAVE_AREAD                                                      (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1182
	CPUID_ECX_USED_FOR_XCR0_1_BIT                                                          = 0                                                //col:1183
	CPUID_ECX_USED_FOR_XCR0_1_FLAG                                                         = 0xFF                                             //col:1184
	CPUID_ECX_USED_FOR_XCR0_1_MASK                                                         = 0xFF                                             //col:1185
	CPUID_ECX_USED_FOR_XCR0_1                                                          (_) = (((_) >> 0) & 0xFF)                              //col:1186
	CPUID_ECX_PT_STATE_BIT                                                                 = 8                                                //col:1187
	CPUID_ECX_PT_STATE_FLAG                                                                = 0x100                                            //col:1188
	CPUID_ECX_PT_STATE_MASK                                                                = 0x01                                             //col:1189
	CPUID_ECX_PT_STATE                                                                 (_) = (((_) >> 8) & 0x01)                              //col:1190
	CPUID_ECX_USED_FOR_XCR0_2_BIT                                                          = 9                                                //col:1191
	CPUID_ECX_USED_FOR_XCR0_2_FLAG                                                         = 0x200                                            //col:1192
	CPUID_ECX_USED_FOR_XCR0_2_MASK                                                         = 0x01                                             //col:1193
	CPUID_ECX_USED_FOR_XCR0_2                                                          (_) = (((_) >> 9) & 0x01)                              //col:1194
	CPUID_ECX_CET_USER_STATE_BIT                                                           = 11                                               //col:1195
	CPUID_ECX_CET_USER_STATE_FLAG                                                          = 0x800                                            //col:1196
	CPUID_ECX_CET_USER_STATE_MASK                                                          = 0x01                                             //col:1197
	CPUID_ECX_CET_USER_STATE                                                           (_) = (((_) >> 11) & 0x01)                             //col:1198
	CPUID_ECX_CET_SUPERVISOR_STATE_BIT                                                     = 12                                               //col:1199
	CPUID_ECX_CET_SUPERVISOR_STATE_FLAG                                                    = 0x1000                                           //col:1200
	CPUID_ECX_CET_SUPERVISOR_STATE_MASK                                                    = 0x01                                             //col:1201
	CPUID_ECX_CET_SUPERVISOR_STATE                                                     (_) = (((_) >> 12) & 0x01)                             //col:1202
	CPUID_ECX_HDC_STATE_BIT                                                                = 13                                               //col:1203
	CPUID_ECX_HDC_STATE_FLAG                                                               = 0x2000                                           //col:1204
	CPUID_ECX_HDC_STATE_MASK                                                               = 0x01                                             //col:1205
	CPUID_ECX_HDC_STATE                                                                (_) = (((_) >> 13) & 0x01)                             //col:1206
	CPUID_ECX_LBR_STATE_BIT                                                                = 15                                               //col:1207
	CPUID_ECX_LBR_STATE_FLAG                                                               = 0x8000                                           //col:1208
	CPUID_ECX_LBR_STATE_MASK                                                               = 0x01                                             //col:1209
	CPUID_ECX_LBR_STATE                                                                (_) = (((_) >> 15) & 0x01)                             //col:1210
	CPUID_ECX_HWP_STATE_BIT                                                                = 16                                               //col:1211
	CPUID_ECX_HWP_STATE_FLAG                                                               = 0x10000                                          //col:1212
	CPUID_ECX_HWP_STATE_MASK                                                               = 0x01                                             //col:1213
	CPUID_ECX_HWP_STATE                                                                (_) = (((_) >> 16) & 0x01)                             //col:1214
	CPUID_EDX_SUPPORTED_UPPER_IA32_XSS_BITS_BIT                                            = 0                                                //col:1215
	CPUID_EDX_SUPPORTED_UPPER_IA32_XSS_BITS_FLAG                                           = 0xFFFFFFFF                                       //col:1216
	CPUID_EDX_SUPPORTED_UPPER_IA32_XSS_BITS_MASK                                           = 0xFFFFFFFF                                       //col:1217
	CPUID_EDX_SUPPORTED_UPPER_IA32_XSS_BITS                                            (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1218
	CPUID_EAX_IA32_PLATFORM_DCA_CAP_BIT                                                    = 0                                                //col:1219
	CPUID_EAX_IA32_PLATFORM_DCA_CAP_FLAG                                                   = 0xFFFFFFFF                                       //col:1220
	CPUID_EAX_IA32_PLATFORM_DCA_CAP_MASK                                                   = 0xFFFFFFFF                                       //col:1221
	CPUID_EAX_IA32_PLATFORM_DCA_CAP                                                    (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1222
	CPUID_EBX_RESERVED_BIT                                                                 = 0                                                //col:1223
	CPUID_EBX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1224
	CPUID_EBX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1225
	CPUID_EBX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1226
	CPUID_ECX_ECX_2_BIT                                                                    = 0                                                //col:1227
	CPUID_ECX_ECX_2_FLAG                                                                   = 0x01                                             //col:1228
	CPUID_ECX_ECX_2_MASK                                                                   = 0x01                                             //col:1229
	CPUID_ECX_ECX_2                                                                    (_) = (((_) >> 0) & 0x01)                              //col:1230
	CPUID_ECX_ECX_1_BIT                                                                    = 1                                                //col:1231
	CPUID_ECX_ECX_1_FLAG                                                                   = 0x02                                             //col:1232
	CPUID_ECX_ECX_1_MASK                                                                   = 0x01                                             //col:1233
	CPUID_ECX_ECX_1                                                                    (_) = (((_) >> 1) & 0x01)                              //col:1234
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:1235
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1236
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1237
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1238
	CPUID_INTEL_RESOURCE_DIRECTOR_TECHNOLOGY_MONITORING_INFORMATION                        = 0x0000000F                                       //col:1239
	CPUID_EAX_RESERVED_BIT                                                                 = 0                                                //col:1240
	CPUID_EAX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1241
	CPUID_EAX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1242
	CPUID_EAX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1243
	CPUID_EBX_RMID_MAX_RANGE_BIT                                                           = 0                                                //col:1244
	CPUID_EBX_RMID_MAX_RANGE_FLAG                                                          = 0xFFFFFFFF                                       //col:1245
	CPUID_EBX_RMID_MAX_RANGE_MASK                                                          = 0xFFFFFFFF                                       //col:1246
	CPUID_EBX_RMID_MAX_RANGE                                                           (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1247
	CPUID_ECX_RESERVED_BIT                                                                 = 0                                                //col:1248
	CPUID_ECX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1249
	CPUID_ECX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1250
	CPUID_ECX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1251
	CPUID_EDX_SUPPORTS_L3_CACHE_INTEL_RDT_MONITORING_BIT                                   = 1                                                //col:1252
	CPUID_EDX_SUPPORTS_L3_CACHE_INTEL_RDT_MONITORING_FLAG                                  = 0x02                                             //col:1253
	CPUID_EDX_SUPPORTS_L3_CACHE_INTEL_RDT_MONITORING_MASK                                  = 0x01                                             //col:1254
	CPUID_EDX_SUPPORTS_L3_CACHE_INTEL_RDT_MONITORING                                   (_) = (((_) >> 1) & 0x01)                              //col:1255
	CPUID_EAX_RESERVED_BIT                                                                 = 0                                                //col:1256
	CPUID_EAX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1257
	CPUID_EAX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1258
	CPUID_EAX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1259
	CPUID_EBX_CONVERSION_FACTOR_BIT                                                        = 0                                                //col:1260
	CPUID_EBX_CONVERSION_FACTOR_FLAG                                                       = 0xFFFFFFFF                                       //col:1261
	CPUID_EBX_CONVERSION_FACTOR_MASK                                                       = 0xFFFFFFFF                                       //col:1262
	CPUID_EBX_CONVERSION_FACTOR                                                        (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1263
	CPUID_ECX_RMID_MAX_RANGE_BIT                                                           = 0                                                //col:1264
	CPUID_ECX_RMID_MAX_RANGE_FLAG                                                          = 0xFFFFFFFF                                       //col:1265
	CPUID_ECX_RMID_MAX_RANGE_MASK                                                          = 0xFFFFFFFF                                       //col:1266
	CPUID_ECX_RMID_MAX_RANGE                                                           (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1267
	CPUID_EDX_SUPPORTS_L3_OCCUPANCY_MONITORING_BIT                                         = 0                                                //col:1268
	CPUID_EDX_SUPPORTS_L3_OCCUPANCY_MONITORING_FLAG                                        = 0x01                                             //col:1269
	CPUID_EDX_SUPPORTS_L3_OCCUPANCY_MONITORING_MASK                                        = 0x01                                             //col:1270
	CPUID_EDX_SUPPORTS_L3_OCCUPANCY_MONITORING                                         (_) = (((_) >> 0) & 0x01)                              //col:1271
	CPUID_EDX_SUPPORTS_L3_TOTAL_BANDWIDTH_MONITORING_BIT                                   = 1                                                //col:1272
	CPUID_EDX_SUPPORTS_L3_TOTAL_BANDWIDTH_MONITORING_FLAG                                  = 0x02                                             //col:1273
	CPUID_EDX_SUPPORTS_L3_TOTAL_BANDWIDTH_MONITORING_MASK                                  = 0x01                                             //col:1274
	CPUID_EDX_SUPPORTS_L3_TOTAL_BANDWIDTH_MONITORING                                   (_) = (((_) >> 1) & 0x01)                              //col:1275
	CPUID_EDX_SUPPORTS_L3_LOCAL_BANDWIDTH_MONITORING_BIT                                   = 2                                                //col:1276
	CPUID_EDX_SUPPORTS_L3_LOCAL_BANDWIDTH_MONITORING_FLAG                                  = 0x04                                             //col:1277
	CPUID_EDX_SUPPORTS_L3_LOCAL_BANDWIDTH_MONITORING_MASK                                  = 0x01                                             //col:1278
	CPUID_EDX_SUPPORTS_L3_LOCAL_BANDWIDTH_MONITORING                                   (_) = (((_) >> 2) & 0x01)                              //col:1279
	CPUID_INTEL_RESOURCE_DIRECTOR_TECHNOLOGY_ALLOCATION_INFORMATION                        = 0x00000010                                       //col:1280
	CPUID_EAX_IA32_PLATFORM_DCA_CAP_BIT                                                    = 0                                                //col:1281
	CPUID_EAX_IA32_PLATFORM_DCA_CAP_FLAG                                                   = 0xFFFFFFFF                                       //col:1282
	CPUID_EAX_IA32_PLATFORM_DCA_CAP_MASK                                                   = 0xFFFFFFFF                                       //col:1283
	CPUID_EAX_IA32_PLATFORM_DCA_CAP                                                    (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1284
	CPUID_EBX_SUPPORTS_L3_CACHE_ALLOCATION_TECHNOLOGY_BIT                                  = 1                                                //col:1285
	CPUID_EBX_SUPPORTS_L3_CACHE_ALLOCATION_TECHNOLOGY_FLAG                                 = 0x02                                             //col:1286
	CPUID_EBX_SUPPORTS_L3_CACHE_ALLOCATION_TECHNOLOGY_MASK                                 = 0x01                                             //col:1287
	CPUID_EBX_SUPPORTS_L3_CACHE_ALLOCATION_TECHNOLOGY                                  (_) = (((_) >> 1) & 0x01)                              //col:1288
	CPUID_EBX_SUPPORTS_L2_CACHE_ALLOCATION_TECHNOLOGY_BIT                                  = 2                                                //col:1289
	CPUID_EBX_SUPPORTS_L2_CACHE_ALLOCATION_TECHNOLOGY_FLAG                                 = 0x04                                             //col:1290
	CPUID_EBX_SUPPORTS_L2_CACHE_ALLOCATION_TECHNOLOGY_MASK                                 = 0x01                                             //col:1291
	CPUID_EBX_SUPPORTS_L2_CACHE_ALLOCATION_TECHNOLOGY                                  (_) = (((_) >> 2) & 0x01)                              //col:1292
	CPUID_EBX_SUPPORTS_MEMORY_BANDWIDTH_ALLOCATION_BIT                                     = 3                                                //col:1293
	CPUID_EBX_SUPPORTS_MEMORY_BANDWIDTH_ALLOCATION_FLAG                                    = 0x08                                             //col:1294
	CPUID_EBX_SUPPORTS_MEMORY_BANDWIDTH_ALLOCATION_MASK                                    = 0x01                                             //col:1295
	CPUID_EBX_SUPPORTS_MEMORY_BANDWIDTH_ALLOCATION                                     (_) = (((_) >> 3) & 0x01)                              //col:1296
	CPUID_ECX_RESERVED_BIT                                                                 = 0                                                //col:1297
	CPUID_ECX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1298
	CPUID_ECX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1299
	CPUID_ECX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1300
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:1301
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1302
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1303
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1304
	CPUID_EAX_LENGTH_OF_CAPACITY_BIT_MASK_BIT                                              = 0                                                //col:1305
	CPUID_EAX_LENGTH_OF_CAPACITY_BIT_MASK_FLAG                                             = 0x1F                                             //col:1306
	CPUID_EAX_LENGTH_OF_CAPACITY_BIT_MASK_MASK                                             = 0x1F                                             //col:1307
	CPUID_EAX_LENGTH_OF_CAPACITY_BIT_MASK                                              (_) = (((_) >> 0) & 0x1F)                              //col:1308
	CPUID_EBX_EBX_0_BIT                                                                    = 0                                                //col:1309
	CPUID_EBX_EBX_0_FLAG                                                                   = 0xFFFFFFFF                                       //col:1310
	CPUID_EBX_EBX_0_MASK                                                                   = 0xFFFFFFFF                                       //col:1311
	CPUID_EBX_EBX_0                                                                    (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1312
	CPUID_ECX_CODE_AND_DATA_PRIORIZATION_TECHNOLOGY_SUPPORTED_BIT                          = 2                                                //col:1313
	CPUID_ECX_CODE_AND_DATA_PRIORIZATION_TECHNOLOGY_SUPPORTED_FLAG                         = 0x04                                             //col:1314
	CPUID_ECX_CODE_AND_DATA_PRIORIZATION_TECHNOLOGY_SUPPORTED_MASK                         = 0x01                                             //col:1315
	CPUID_ECX_CODE_AND_DATA_PRIORIZATION_TECHNOLOGY_SUPPORTED                          (_) = (((_) >> 2) & 0x01)                              //col:1316
	CPUID_EDX_HIGHEST_COS_NUMBER_SUPPORTED_BIT                                             = 0                                                //col:1317
	CPUID_EDX_HIGHEST_COS_NUMBER_SUPPORTED_FLAG                                            = 0xFFFF                                           //col:1318
	CPUID_EDX_HIGHEST_COS_NUMBER_SUPPORTED_MASK                                            = 0xFFFF                                           //col:1319
	CPUID_EDX_HIGHEST_COS_NUMBER_SUPPORTED                                             (_) = (((_) >> 0) & 0xFFFF)                            //col:1320
	CPUID_EAX_LENGTH_OF_CAPACITY_BIT_MASK_BIT                                              = 0                                                //col:1321
	CPUID_EAX_LENGTH_OF_CAPACITY_BIT_MASK_FLAG                                             = 0x1F                                             //col:1322
	CPUID_EAX_LENGTH_OF_CAPACITY_BIT_MASK_MASK                                             = 0x1F                                             //col:1323
	CPUID_EAX_LENGTH_OF_CAPACITY_BIT_MASK                                              (_) = (((_) >> 0) & 0x1F)                              //col:1324
	CPUID_EBX_EBX_0_BIT                                                                    = 0                                                //col:1325
	CPUID_EBX_EBX_0_FLAG                                                                   = 0xFFFFFFFF                                       //col:1326
	CPUID_EBX_EBX_0_MASK                                                                   = 0xFFFFFFFF                                       //col:1327
	CPUID_EBX_EBX_0                                                                    (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1328
	CPUID_ECX_RESERVED_BIT                                                                 = 0                                                //col:1329
	CPUID_ECX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1330
	CPUID_ECX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1331
	CPUID_ECX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1332
	CPUID_EDX_HIGHEST_COS_NUMBER_SUPPORTED_BIT                                             = 0                                                //col:1333
	CPUID_EDX_HIGHEST_COS_NUMBER_SUPPORTED_FLAG                                            = 0xFFFF                                           //col:1334
	CPUID_EDX_HIGHEST_COS_NUMBER_SUPPORTED_MASK                                            = 0xFFFF                                           //col:1335
	CPUID_EDX_HIGHEST_COS_NUMBER_SUPPORTED                                             (_) = (((_) >> 0) & 0xFFFF)                            //col:1336
	CPUID_EAX_MAX_MBA_THROTTLING_VALUE_BIT                                                 = 0                                                //col:1337
	CPUID_EAX_MAX_MBA_THROTTLING_VALUE_FLAG                                                = 0xFFF                                            //col:1338
	CPUID_EAX_MAX_MBA_THROTTLING_VALUE_MASK                                                = 0xFFF                                            //col:1339
	CPUID_EAX_MAX_MBA_THROTTLING_VALUE                                                 (_) = (((_) >> 0) & 0xFFF)                             //col:1340
	CPUID_EBX_RESERVED_BIT                                                                 = 0                                                //col:1341
	CPUID_EBX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1342
	CPUID_EBX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1343
	CPUID_EBX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1344
	CPUID_ECX_RESPONSE_OF_DELAY_IS_LINEAR_BIT                                              = 2                                                //col:1345
	CPUID_ECX_RESPONSE_OF_DELAY_IS_LINEAR_FLAG                                             = 0x04                                             //col:1346
	CPUID_ECX_RESPONSE_OF_DELAY_IS_LINEAR_MASK                                             = 0x01                                             //col:1347
	CPUID_ECX_RESPONSE_OF_DELAY_IS_LINEAR                                              (_) = (((_) >> 2) & 0x01)                              //col:1348
	CPUID_EDX_HIGHEST_COS_NUMBER_SUPPORTED_BIT                                             = 0                                                //col:1349
	CPUID_EDX_HIGHEST_COS_NUMBER_SUPPORTED_FLAG                                            = 0xFFFF                                           //col:1350
	CPUID_EDX_HIGHEST_COS_NUMBER_SUPPORTED_MASK                                            = 0xFFFF                                           //col:1351
	CPUID_EDX_HIGHEST_COS_NUMBER_SUPPORTED                                             (_) = (((_) >> 0) & 0xFFFF)                            //col:1352
	CPUID_INTEL_SGX                                                                        = 0x00000012                                       //col:1353
	CPUID_EAX_SGX1_BIT                                                                     = 0                                                //col:1354
	CPUID_EAX_SGX1_FLAG                                                                    = 0x01                                             //col:1355
	CPUID_EAX_SGX1_MASK                                                                    = 0x01                                             //col:1356
	CPUID_EAX_SGX1                                                                     (_) = (((_) >> 0) & 0x01)                              //col:1357
	CPUID_EAX_SGX2_BIT                                                                     = 1                                                //col:1358
	CPUID_EAX_SGX2_FLAG                                                                    = 0x02                                             //col:1359
	CPUID_EAX_SGX2_MASK                                                                    = 0x01                                             //col:1360
	CPUID_EAX_SGX2                                                                     (_) = (((_) >> 1) & 0x01)                              //col:1361
	CPUID_EAX_SGX_ENCLV_ADVANCED_BIT                                                       = 5                                                //col:1362
	CPUID_EAX_SGX_ENCLV_ADVANCED_FLAG                                                      = 0x20                                             //col:1363
	CPUID_EAX_SGX_ENCLV_ADVANCED_MASK                                                      = 0x01                                             //col:1364
	CPUID_EAX_SGX_ENCLV_ADVANCED                                                       (_) = (((_) >> 5) & 0x01)                              //col:1365
	CPUID_EAX_SGX_ENCLS_ADVANCED_BIT                                                       = 6                                                //col:1366
	CPUID_EAX_SGX_ENCLS_ADVANCED_FLAG                                                      = 0x40                                             //col:1367
	CPUID_EAX_SGX_ENCLS_ADVANCED_MASK                                                      = 0x01                                             //col:1368
	CPUID_EAX_SGX_ENCLS_ADVANCED                                                       (_) = (((_) >> 6) & 0x01)                              //col:1369
	CPUID_EBX_MISCSELECT_BIT                                                               = 0                                                //col:1370
	CPUID_EBX_MISCSELECT_FLAG                                                              = 0xFFFFFFFF                                       //col:1371
	CPUID_EBX_MISCSELECT_MASK                                                              = 0xFFFFFFFF                                       //col:1372
	CPUID_EBX_MISCSELECT                                                               (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1373
	CPUID_ECX_RESERVED_BIT                                                                 = 0                                                //col:1374
	CPUID_ECX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1375
	CPUID_ECX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1376
	CPUID_ECX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1377
	CPUID_EDX_MAX_ENCLAVE_SIZE_NOT64_BIT                                                   = 0                                                //col:1378
	CPUID_EDX_MAX_ENCLAVE_SIZE_NOT64_FLAG                                                  = 0xFF                                             //col:1379
	CPUID_EDX_MAX_ENCLAVE_SIZE_NOT64_MASK                                                  = 0xFF                                             //col:1380
	CPUID_EDX_MAX_ENCLAVE_SIZE_NOT64                                                   (_) = (((_) >> 0) & 0xFF)                              //col:1381
	CPUID_EDX_MAX_ENCLAVE_SIZE_64_BIT                                                      = 8                                                //col:1382
	CPUID_EDX_MAX_ENCLAVE_SIZE_64_FLAG                                                     = 0xFF00                                           //col:1383
	CPUID_EDX_MAX_ENCLAVE_SIZE_64_MASK                                                     = 0xFF                                             //col:1384
	CPUID_EDX_MAX_ENCLAVE_SIZE_64                                                      (_) = (((_) >> 8) & 0xFF)                              //col:1385
	CPUID_EAX_VALID_SECS_ATTRIBUTES_0_BIT                                                  = 0                                                //col:1386
	CPUID_EAX_VALID_SECS_ATTRIBUTES_0_FLAG                                                 = 0xFFFFFFFF                                       //col:1387
	CPUID_EAX_VALID_SECS_ATTRIBUTES_0_MASK                                                 = 0xFFFFFFFF                                       //col:1388
	CPUID_EAX_VALID_SECS_ATTRIBUTES_0                                                  (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1389
	CPUID_EBX_VALID_SECS_ATTRIBUTES_1_BIT                                                  = 0                                                //col:1390
	CPUID_EBX_VALID_SECS_ATTRIBUTES_1_FLAG                                                 = 0xFFFFFFFF                                       //col:1391
	CPUID_EBX_VALID_SECS_ATTRIBUTES_1_MASK                                                 = 0xFFFFFFFF                                       //col:1392
	CPUID_EBX_VALID_SECS_ATTRIBUTES_1                                                  (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1393
	CPUID_ECX_VALID_SECS_ATTRIBUTES_2_BIT                                                  = 0                                                //col:1394
	CPUID_ECX_VALID_SECS_ATTRIBUTES_2_FLAG                                                 = 0xFFFFFFFF                                       //col:1395
	CPUID_ECX_VALID_SECS_ATTRIBUTES_2_MASK                                                 = 0xFFFFFFFF                                       //col:1396
	CPUID_ECX_VALID_SECS_ATTRIBUTES_2                                                  (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1397
	CPUID_EDX_VALID_SECS_ATTRIBUTES_3_BIT                                                  = 0                                                //col:1398
	CPUID_EDX_VALID_SECS_ATTRIBUTES_3_FLAG                                                 = 0xFFFFFFFF                                       //col:1399
	CPUID_EDX_VALID_SECS_ATTRIBUTES_3_MASK                                                 = 0xFFFFFFFF                                       //col:1400
	CPUID_EDX_VALID_SECS_ATTRIBUTES_3                                                  (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1401
	CPUID_EAX_SUB_LEAF_TYPE_BIT                                                            = 0                                                //col:1402
	CPUID_EAX_SUB_LEAF_TYPE_FLAG                                                           = 0x0F                                             //col:1403
	CPUID_EAX_SUB_LEAF_TYPE_MASK                                                           = 0x0F                                             //col:1404
	CPUID_EAX_SUB_LEAF_TYPE                                                            (_) = (((_) >> 0) & 0x0F)                              //col:1405
	CPUID_EBX_ZERO_BIT                                                                     = 0                                                //col:1406
	CPUID_EBX_ZERO_FLAG                                                                    = 0xFFFFFFFF                                       //col:1407
	CPUID_EBX_ZERO_MASK                                                                    = 0xFFFFFFFF                                       //col:1408
	CPUID_EBX_ZERO                                                                     (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1409
	CPUID_ECX_ZERO_BIT                                                                     = 0                                                //col:1410
	CPUID_ECX_ZERO_FLAG                                                                    = 0xFFFFFFFF                                       //col:1411
	CPUID_ECX_ZERO_MASK                                                                    = 0xFFFFFFFF                                       //col:1412
	CPUID_ECX_ZERO                                                                     (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1413
	CPUID_EDX_ZERO_BIT                                                                     = 0                                                //col:1414
	CPUID_EDX_ZERO_FLAG                                                                    = 0xFFFFFFFF                                       //col:1415
	CPUID_EDX_ZERO_MASK                                                                    = 0xFFFFFFFF                                       //col:1416
	CPUID_EDX_ZERO                                                                     (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1417
	CPUID_EAX_SUB_LEAF_TYPE_BIT                                                            = 0                                                //col:1418
	CPUID_EAX_SUB_LEAF_TYPE_FLAG                                                           = 0x0F                                             //col:1419
	CPUID_EAX_SUB_LEAF_TYPE_MASK                                                           = 0x0F                                             //col:1420
	CPUID_EAX_SUB_LEAF_TYPE                                                            (_) = (((_) >> 0) & 0x0F)                              //col:1421
	CPUID_EAX_EPC_BASE_PHYSICAL_ADDRESS_1_BIT                                              = 12                                               //col:1422
	CPUID_EAX_EPC_BASE_PHYSICAL_ADDRESS_1_FLAG                                             = 0xFFFFF000                                       //col:1423
	CPUID_EAX_EPC_BASE_PHYSICAL_ADDRESS_1_MASK                                             = 0xFFFFF                                          //col:1424
	CPUID_EAX_EPC_BASE_PHYSICAL_ADDRESS_1                                              (_) = (((_) >> 12) & 0xFFFFF)                          //col:1425
	CPUID_EBX_EPC_BASE_PHYSICAL_ADDRESS_2_BIT                                              = 0                                                //col:1426
	CPUID_EBX_EPC_BASE_PHYSICAL_ADDRESS_2_FLAG                                             = 0xFFFFF                                          //col:1427
	CPUID_EBX_EPC_BASE_PHYSICAL_ADDRESS_2_MASK                                             = 0xFFFFF                                          //col:1428
	CPUID_EBX_EPC_BASE_PHYSICAL_ADDRESS_2                                              (_) = (((_) >> 0) & 0xFFFFF)                           //col:1429
	CPUID_ECX_EPC_SECTION_PROPERTY_BIT                                                     = 0                                                //col:1430
	CPUID_ECX_EPC_SECTION_PROPERTY_FLAG                                                    = 0x0F                                             //col:1431
	CPUID_ECX_EPC_SECTION_PROPERTY_MASK                                                    = 0x0F                                             //col:1432
	CPUID_ECX_EPC_SECTION_PROPERTY                                                     (_) = (((_) >> 0) & 0x0F)                              //col:1433
	CPUID_ECX_EPC_SIZE_1_BIT                                                               = 12                                               //col:1434
	CPUID_ECX_EPC_SIZE_1_FLAG                                                              = 0xFFFFF000                                       //col:1435
	CPUID_ECX_EPC_SIZE_1_MASK                                                              = 0xFFFFF                                          //col:1436
	CPUID_ECX_EPC_SIZE_1                                                               (_) = (((_) >> 12) & 0xFFFFF)                          //col:1437
	CPUID_EDX_EPC_SIZE_2_BIT                                                               = 0                                                //col:1438
	CPUID_EDX_EPC_SIZE_2_FLAG                                                              = 0xFFFFF                                          //col:1439
	CPUID_EDX_EPC_SIZE_2_MASK                                                              = 0xFFFFF                                          //col:1440
	CPUID_EDX_EPC_SIZE_2                                                               (_) = (((_) >> 0) & 0xFFFFF)                           //col:1441
	CPUID_INTEL_PROCESSOR_TRACE_INFORMATION                                                = 0x00000014                                       //col:1442
	CPUID_EAX_MAX_SUB_LEAF_BIT                                                             = 0                                                //col:1443
	CPUID_EAX_MAX_SUB_LEAF_FLAG                                                            = 0xFFFFFFFF                                       //col:1444
	CPUID_EAX_MAX_SUB_LEAF_MASK                                                            = 0xFFFFFFFF                                       //col:1445
	CPUID_EAX_MAX_SUB_LEAF                                                             (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1446
	CPUID_EBX_FLAG0_BIT                                                                    = 0                                                //col:1447
	CPUID_EBX_FLAG0_FLAG                                                                   = 0x01                                             //col:1448
	CPUID_EBX_FLAG0_MASK                                                                   = 0x01                                             //col:1449
	CPUID_EBX_FLAG0                                                                    (_) = (((_) >> 0) & 0x01)                              //col:1450
	CPUID_EBX_FLAG1_BIT                                                                    = 1                                                //col:1451
	CPUID_EBX_FLAG1_FLAG                                                                   = 0x02                                             //col:1452
	CPUID_EBX_FLAG1_MASK                                                                   = 0x01                                             //col:1453
	CPUID_EBX_FLAG1                                                                    (_) = (((_) >> 1) & 0x01)                              //col:1454
	CPUID_EBX_FLAG2_BIT                                                                    = 2                                                //col:1455
	CPUID_EBX_FLAG2_FLAG                                                                   = 0x04                                             //col:1456
	CPUID_EBX_FLAG2_MASK                                                                   = 0x01                                             //col:1457
	CPUID_EBX_FLAG2                                                                    (_) = (((_) >> 2) & 0x01)                              //col:1458
	CPUID_EBX_FLAG3_BIT                                                                    = 3                                                //col:1459
	CPUID_EBX_FLAG3_FLAG                                                                   = 0x08                                             //col:1460
	CPUID_EBX_FLAG3_MASK                                                                   = 0x01                                             //col:1461
	CPUID_EBX_FLAG3                                                                    (_) = (((_) >> 3) & 0x01)                              //col:1462
	CPUID_EBX_FLAG4_BIT                                                                    = 4                                                //col:1463
	CPUID_EBX_FLAG4_FLAG                                                                   = 0x10                                             //col:1464
	CPUID_EBX_FLAG4_MASK                                                                   = 0x01                                             //col:1465
	CPUID_EBX_FLAG4                                                                    (_) = (((_) >> 4) & 0x01)                              //col:1466
	CPUID_EBX_FLAG5_BIT                                                                    = 5                                                //col:1467
	CPUID_EBX_FLAG5_FLAG                                                                   = 0x20                                             //col:1468
	CPUID_EBX_FLAG5_MASK                                                                   = 0x01                                             //col:1469
	CPUID_EBX_FLAG5                                                                    (_) = (((_) >> 5) & 0x01)                              //col:1470
	CPUID_EBX_FLAG6_BIT                                                                    = 6                                                //col:1471
	CPUID_EBX_FLAG6_FLAG                                                                   = 0x40                                             //col:1472
	CPUID_EBX_FLAG6_MASK                                                                   = 0x01                                             //col:1473
	CPUID_EBX_FLAG6                                                                    (_) = (((_) >> 6) & 0x01)                              //col:1474
	CPUID_EBX_FLAG7_BIT                                                                    = 7                                                //col:1475
	CPUID_EBX_FLAG7_FLAG                                                                   = 0x80                                             //col:1476
	CPUID_EBX_FLAG7_MASK                                                                   = 0x01                                             //col:1477
	CPUID_EBX_FLAG7                                                                    (_) = (((_) >> 7) & 0x01)                              //col:1478
	CPUID_EBX_FLAG8_BIT                                                                    = 8                                                //col:1479
	CPUID_EBX_FLAG8_FLAG                                                                   = 0x100                                            //col:1480
	CPUID_EBX_FLAG8_MASK                                                                   = 0x01                                             //col:1481
	CPUID_EBX_FLAG8                                                                    (_) = (((_) >> 8) & 0x01)                              //col:1482
	CPUID_ECX_FLAG0_BIT                                                                    = 0                                                //col:1483
	CPUID_ECX_FLAG0_FLAG                                                                   = 0x01                                             //col:1484
	CPUID_ECX_FLAG0_MASK                                                                   = 0x01                                             //col:1485
	CPUID_ECX_FLAG0                                                                    (_) = (((_) >> 0) & 0x01)                              //col:1486
	CPUID_ECX_FLAG1_BIT                                                                    = 1                                                //col:1487
	CPUID_ECX_FLAG1_FLAG                                                                   = 0x02                                             //col:1488
	CPUID_ECX_FLAG1_MASK                                                                   = 0x01                                             //col:1489
	CPUID_ECX_FLAG1                                                                    (_) = (((_) >> 1) & 0x01)                              //col:1490
	CPUID_ECX_FLAG2_BIT                                                                    = 2                                                //col:1491
	CPUID_ECX_FLAG2_FLAG                                                                   = 0x04                                             //col:1492
	CPUID_ECX_FLAG2_MASK                                                                   = 0x01                                             //col:1493
	CPUID_ECX_FLAG2                                                                    (_) = (((_) >> 2) & 0x01)                              //col:1494
	CPUID_ECX_FLAG3_BIT                                                                    = 3                                                //col:1495
	CPUID_ECX_FLAG3_FLAG                                                                   = 0x08                                             //col:1496
	CPUID_ECX_FLAG3_MASK                                                                   = 0x01                                             //col:1497
	CPUID_ECX_FLAG3                                                                    (_) = (((_) >> 3) & 0x01)                              //col:1498
	CPUID_ECX_FLAG31_BIT                                                                   = 31                                               //col:1499
	CPUID_ECX_FLAG31_FLAG                                                                  = 0x80000000                                       //col:1500
	CPUID_ECX_FLAG31_MASK                                                                  = 0x01                                             //col:1501
	CPUID_ECX_FLAG31                                                                   (_) = (((_) >> 31) & 0x01)                             //col:1502
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:1503
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1504
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1505
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1506
	CPUID_EAX_NUMBER_OF_CONFIGURABLE_ADDRESS_RANGES_FOR_FILTERING_BIT                      = 0                                                //col:1507
	CPUID_EAX_NUMBER_OF_CONFIGURABLE_ADDRESS_RANGES_FOR_FILTERING_FLAG                     = 0x07                                             //col:1508
	CPUID_EAX_NUMBER_OF_CONFIGURABLE_ADDRESS_RANGES_FOR_FILTERING_MASK                     = 0x07                                             //col:1509
	CPUID_EAX_NUMBER_OF_CONFIGURABLE_ADDRESS_RANGES_FOR_FILTERING                      (_) = (((_) >> 0) & 0x07)                              //col:1510
	CPUID_EAX_BITMAP_OF_SUPPORTED_MTC_PERIOD_ENCODINGS_BIT                                 = 16                                               //col:1511
	CPUID_EAX_BITMAP_OF_SUPPORTED_MTC_PERIOD_ENCODINGS_FLAG                                = 0xFFFF0000                                       //col:1512
	CPUID_EAX_BITMAP_OF_SUPPORTED_MTC_PERIOD_ENCODINGS_MASK                                = 0xFFFF                                           //col:1513
	CPUID_EAX_BITMAP_OF_SUPPORTED_MTC_PERIOD_ENCODINGS                                 (_) = (((_) >> 16) & 0xFFFF)                           //col:1514
	CPUID_EBX_BITMAP_OF_SUPPORTED_CYCLE_THRESHOLD_VALUE_ENCODINGS_BIT                      = 0                                                //col:1515
	CPUID_EBX_BITMAP_OF_SUPPORTED_CYCLE_THRESHOLD_VALUE_ENCODINGS_FLAG                     = 0xFFFF                                           //col:1516
	CPUID_EBX_BITMAP_OF_SUPPORTED_CYCLE_THRESHOLD_VALUE_ENCODINGS_MASK                     = 0xFFFF                                           //col:1517
	CPUID_EBX_BITMAP_OF_SUPPORTED_CYCLE_THRESHOLD_VALUE_ENCODINGS                      (_) = (((_) >> 0) & 0xFFFF)                            //col:1518
	CPUID_EBX_BITMAP_OF_SUPPORTED_CONFIGURABLE_PSB_FREQUENCY_ENCODINGS_BIT                 = 16                                               //col:1519
	CPUID_EBX_BITMAP_OF_SUPPORTED_CONFIGURABLE_PSB_FREQUENCY_ENCODINGS_FLAG                = 0xFFFF0000                                       //col:1520
	CPUID_EBX_BITMAP_OF_SUPPORTED_CONFIGURABLE_PSB_FREQUENCY_ENCODINGS_MASK                = 0xFFFF                                           //col:1521
	CPUID_EBX_BITMAP_OF_SUPPORTED_CONFIGURABLE_PSB_FREQUENCY_ENCODINGS                 (_) = (((_) >> 16) & 0xFFFF)                           //col:1522
	CPUID_ECX_RESERVED_BIT                                                                 = 0                                                //col:1523
	CPUID_ECX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1524
	CPUID_ECX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1525
	CPUID_ECX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1526
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:1527
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1528
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1529
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1530
	CPUID_TIME_STAMP_COUNTER_INFORMATION                                                   = 0x00000015                                       //col:1531
	CPUID_EAX_DENOMINATOR_BIT                                                              = 0                                                //col:1532
	CPUID_EAX_DENOMINATOR_FLAG                                                             = 0xFFFFFFFF                                       //col:1533
	CPUID_EAX_DENOMINATOR_MASK                                                             = 0xFFFFFFFF                                       //col:1534
	CPUID_EAX_DENOMINATOR                                                              (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1535
	CPUID_EBX_NUMERATOR_BIT                                                                = 0                                                //col:1536
	CPUID_EBX_NUMERATOR_FLAG                                                               = 0xFFFFFFFF                                       //col:1537
	CPUID_EBX_NUMERATOR_MASK                                                               = 0xFFFFFFFF                                       //col:1538
	CPUID_EBX_NUMERATOR                                                                (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1539
	CPUID_ECX_NOMINAL_FREQUENCY_BIT                                                        = 0                                                //col:1540
	CPUID_ECX_NOMINAL_FREQUENCY_FLAG                                                       = 0xFFFFFFFF                                       //col:1541
	CPUID_ECX_NOMINAL_FREQUENCY_MASK                                                       = 0xFFFFFFFF                                       //col:1542
	CPUID_ECX_NOMINAL_FREQUENCY                                                        (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1543
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:1544
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1545
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1546
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1547
	CPUID_PROCESSOR_FREQUENCY_INFORMATION                                                  = 0x00000016                                       //col:1548
	CPUID_EAX_PROCESOR_BASE_FREQUENCY_MHZ_BIT                                              = 0                                                //col:1549
	CPUID_EAX_PROCESOR_BASE_FREQUENCY_MHZ_FLAG                                             = 0xFFFF                                           //col:1550
	CPUID_EAX_PROCESOR_BASE_FREQUENCY_MHZ_MASK                                             = 0xFFFF                                           //col:1551
	CPUID_EAX_PROCESOR_BASE_FREQUENCY_MHZ                                              (_) = (((_) >> 0) & 0xFFFF)                            //col:1552
	CPUID_EBX_PROCESSOR_MAXIMUM_FREQUENCY_MHZ_BIT                                          = 0                                                //col:1553
	CPUID_EBX_PROCESSOR_MAXIMUM_FREQUENCY_MHZ_FLAG                                         = 0xFFFF                                           //col:1554
	CPUID_EBX_PROCESSOR_MAXIMUM_FREQUENCY_MHZ_MASK                                         = 0xFFFF                                           //col:1555
	CPUID_EBX_PROCESSOR_MAXIMUM_FREQUENCY_MHZ                                          (_) = (((_) >> 0) & 0xFFFF)                            //col:1556
	CPUID_ECX_BUS_FREQUENCY_MHZ_BIT                                                        = 0                                                //col:1557
	CPUID_ECX_BUS_FREQUENCY_MHZ_FLAG                                                       = 0xFFFF                                           //col:1558
	CPUID_ECX_BUS_FREQUENCY_MHZ_MASK                                                       = 0xFFFF                                           //col:1559
	CPUID_ECX_BUS_FREQUENCY_MHZ                                                        (_) = (((_) >> 0) & 0xFFFF)                            //col:1560
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:1561
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1562
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1563
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1564
	CPUID_SOC_VENDOR_INFORMATION                                                           = 0x00000017                                       //col:1565
	CPUID_EAX_MAX_SOC_ID_INDEX_BIT                                                         = 0                                                //col:1566
	CPUID_EAX_MAX_SOC_ID_INDEX_FLAG                                                        = 0xFFFFFFFF                                       //col:1567
	CPUID_EAX_MAX_SOC_ID_INDEX_MASK                                                        = 0xFFFFFFFF                                       //col:1568
	CPUID_EAX_MAX_SOC_ID_INDEX                                                         (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1569
	CPUID_EBX_SOC_VENDOR_ID_BIT                                                            = 0                                                //col:1570
	CPUID_EBX_SOC_VENDOR_ID_FLAG                                                           = 0xFFFF                                           //col:1571
	CPUID_EBX_SOC_VENDOR_ID_MASK                                                           = 0xFFFF                                           //col:1572
	CPUID_EBX_SOC_VENDOR_ID                                                            (_) = (((_) >> 0) & 0xFFFF)                            //col:1573
	CPUID_EBX_IS_VENDOR_SCHEME_BIT                                                         = 16                                               //col:1574
	CPUID_EBX_IS_VENDOR_SCHEME_FLAG                                                        = 0x10000                                          //col:1575
	CPUID_EBX_IS_VENDOR_SCHEME_MASK                                                        = 0x01                                             //col:1576
	CPUID_EBX_IS_VENDOR_SCHEME                                                         (_) = (((_) >> 16) & 0x01)                             //col:1577
	CPUID_ECX_PROJECT_ID_BIT                                                               = 0                                                //col:1578
	CPUID_ECX_PROJECT_ID_FLAG                                                              = 0xFFFFFFFF                                       //col:1579
	CPUID_ECX_PROJECT_ID_MASK                                                              = 0xFFFFFFFF                                       //col:1580
	CPUID_ECX_PROJECT_ID                                                               (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1581
	CPUID_EDX_STEPPING_ID_BIT                                                              = 0                                                //col:1582
	CPUID_EDX_STEPPING_ID_FLAG                                                             = 0xFFFFFFFF                                       //col:1583
	CPUID_EDX_STEPPING_ID_MASK                                                             = 0xFFFFFFFF                                       //col:1584
	CPUID_EDX_STEPPING_ID                                                              (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1585
	CPUID_EAX_SOC_VENDOR_BRAND_STRING_BIT                                                  = 0                                                //col:1586
	CPUID_EAX_SOC_VENDOR_BRAND_STRING_FLAG                                                 = 0xFFFFFFFF                                       //col:1587
	CPUID_EAX_SOC_VENDOR_BRAND_STRING_MASK                                                 = 0xFFFFFFFF                                       //col:1588
	CPUID_EAX_SOC_VENDOR_BRAND_STRING                                                  (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1589
	CPUID_EBX_SOC_VENDOR_BRAND_STRING_BIT                                                  = 0                                                //col:1590
	CPUID_EBX_SOC_VENDOR_BRAND_STRING_FLAG                                                 = 0xFFFFFFFF                                       //col:1591
	CPUID_EBX_SOC_VENDOR_BRAND_STRING_MASK                                                 = 0xFFFFFFFF                                       //col:1592
	CPUID_EBX_SOC_VENDOR_BRAND_STRING                                                  (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1593
	CPUID_ECX_SOC_VENDOR_BRAND_STRING_BIT                                                  = 0                                                //col:1594
	CPUID_ECX_SOC_VENDOR_BRAND_STRING_FLAG                                                 = 0xFFFFFFFF                                       //col:1595
	CPUID_ECX_SOC_VENDOR_BRAND_STRING_MASK                                                 = 0xFFFFFFFF                                       //col:1596
	CPUID_ECX_SOC_VENDOR_BRAND_STRING                                                  (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1597
	CPUID_EDX_SOC_VENDOR_BRAND_STRING_BIT                                                  = 0                                                //col:1598
	CPUID_EDX_SOC_VENDOR_BRAND_STRING_FLAG                                                 = 0xFFFFFFFF                                       //col:1599
	CPUID_EDX_SOC_VENDOR_BRAND_STRING_MASK                                                 = 0xFFFFFFFF                                       //col:1600
	CPUID_EDX_SOC_VENDOR_BRAND_STRING                                                  (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1601
	CPUID_EAX_RESERVED_BIT                                                                 = 0                                                //col:1602
	CPUID_EAX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1603
	CPUID_EAX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1604
	CPUID_EAX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1605
	CPUID_EBX_RESERVED_BIT                                                                 = 0                                                //col:1606
	CPUID_EBX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1607
	CPUID_EBX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1608
	CPUID_EBX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1609
	CPUID_ECX_RESERVED_BIT                                                                 = 0                                                //col:1610
	CPUID_ECX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1611
	CPUID_ECX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1612
	CPUID_ECX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1613
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:1614
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1615
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1616
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1617
	CPUID_DETERMINISTIC_ADDRESS_TRANSLATION_PARAMETERS                                     = 0x00000018                                       //col:1618
	CPUID_EAX_MAX_SUB_LEAF_BIT                                                             = 0                                                //col:1619
	CPUID_EAX_MAX_SUB_LEAF_FLAG                                                            = 0xFFFFFFFF                                       //col:1620
	CPUID_EAX_MAX_SUB_LEAF_MASK                                                            = 0xFFFFFFFF                                       //col:1621
	CPUID_EAX_MAX_SUB_LEAF                                                             (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1622
	CPUID_EBX_PAGE_ENTRIES_4KB_SUPPORTED_BIT                                               = 0                                                //col:1623
	CPUID_EBX_PAGE_ENTRIES_4KB_SUPPORTED_FLAG                                              = 0x01                                             //col:1624
	CPUID_EBX_PAGE_ENTRIES_4KB_SUPPORTED_MASK                                              = 0x01                                             //col:1625
	CPUID_EBX_PAGE_ENTRIES_4KB_SUPPORTED                                               (_) = (((_) >> 0) & 0x01)                              //col:1626
	CPUID_EBX_PAGE_ENTRIES_2MB_SUPPORTED_BIT                                               = 1                                                //col:1627
	CPUID_EBX_PAGE_ENTRIES_2MB_SUPPORTED_FLAG                                              = 0x02                                             //col:1628
	CPUID_EBX_PAGE_ENTRIES_2MB_SUPPORTED_MASK                                              = 0x01                                             //col:1629
	CPUID_EBX_PAGE_ENTRIES_2MB_SUPPORTED                                               (_) = (((_) >> 1) & 0x01)                              //col:1630
	CPUID_EBX_PAGE_ENTRIES_4MB_SUPPORTED_BIT                                               = 2                                                //col:1631
	CPUID_EBX_PAGE_ENTRIES_4MB_SUPPORTED_FLAG                                              = 0x04                                             //col:1632
	CPUID_EBX_PAGE_ENTRIES_4MB_SUPPORTED_MASK                                              = 0x01                                             //col:1633
	CPUID_EBX_PAGE_ENTRIES_4MB_SUPPORTED                                               (_) = (((_) >> 2) & 0x01)                              //col:1634
	CPUID_EBX_PAGE_ENTRIES_1GB_SUPPORTED_BIT                                               = 3                                                //col:1635
	CPUID_EBX_PAGE_ENTRIES_1GB_SUPPORTED_FLAG                                              = 0x08                                             //col:1636
	CPUID_EBX_PAGE_ENTRIES_1GB_SUPPORTED_MASK                                              = 0x01                                             //col:1637
	CPUID_EBX_PAGE_ENTRIES_1GB_SUPPORTED                                               (_) = (((_) >> 3) & 0x01)                              //col:1638
	CPUID_EBX_PARTITIONING_BIT                                                             = 8                                                //col:1639
	CPUID_EBX_PARTITIONING_FLAG                                                            = 0x700                                            //col:1640
	CPUID_EBX_PARTITIONING_MASK                                                            = 0x07                                             //col:1641
	CPUID_EBX_PARTITIONING                                                             (_) = (((_) >> 8) & 0x07)                              //col:1642
	CPUID_EBX_WAYS_OF_ASSOCIATIVITY_00_BIT                                                 = 16                                               //col:1643
	CPUID_EBX_WAYS_OF_ASSOCIATIVITY_00_FLAG                                                = 0xFFFF0000                                       //col:1644
	CPUID_EBX_WAYS_OF_ASSOCIATIVITY_00_MASK                                                = 0xFFFF                                           //col:1645
	CPUID_EBX_WAYS_OF_ASSOCIATIVITY_00                                                 (_) = (((_) >> 16) & 0xFFFF)                           //col:1646
	CPUID_ECX_NUMBER_OF_SETS_BIT                                                           = 0                                                //col:1647
	CPUID_ECX_NUMBER_OF_SETS_FLAG                                                          = 0xFFFFFFFF                                       //col:1648
	CPUID_ECX_NUMBER_OF_SETS_MASK                                                          = 0xFFFFFFFF                                       //col:1649
	CPUID_ECX_NUMBER_OF_SETS                                                           (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1650
	CPUID_EDX_TRANSLATION_CACHE_TYPE_FIELD_BIT                                             = 0                                                //col:1651
	CPUID_EDX_TRANSLATION_CACHE_TYPE_FIELD_FLAG                                            = 0x1F                                             //col:1652
	CPUID_EDX_TRANSLATION_CACHE_TYPE_FIELD_MASK                                            = 0x1F                                             //col:1653
	CPUID_EDX_TRANSLATION_CACHE_TYPE_FIELD                                             (_) = (((_) >> 0) & 0x1F)                              //col:1654
	CPUID_EDX_TRANSLATION_CACHE_LEVEL_BIT                                                  = 5                                                //col:1655
	CPUID_EDX_TRANSLATION_CACHE_LEVEL_FLAG                                                 = 0xE0                                             //col:1656
	CPUID_EDX_TRANSLATION_CACHE_LEVEL_MASK                                                 = 0x07                                             //col:1657
	CPUID_EDX_TRANSLATION_CACHE_LEVEL                                                  (_) = (((_) >> 5) & 0x07)                              //col:1658
	CPUID_EDX_FULLY_ASSOCIATIVE_STRUCTURE_BIT                                              = 8                                                //col:1659
	CPUID_EDX_FULLY_ASSOCIATIVE_STRUCTURE_FLAG                                             = 0x100                                            //col:1660
	CPUID_EDX_FULLY_ASSOCIATIVE_STRUCTURE_MASK                                             = 0x01                                             //col:1661
	CPUID_EDX_FULLY_ASSOCIATIVE_STRUCTURE                                              (_) = (((_) >> 8) & 0x01)                              //col:1662
	CPUID_EDX_MAX_ADDRESSABLE_IDS_FOR_LOGICAL_PROCESSORS_BIT                               = 14                                               //col:1663
	CPUID_EDX_MAX_ADDRESSABLE_IDS_FOR_LOGICAL_PROCESSORS_FLAG                              = 0x3FFC000                                        //col:1664
	CPUID_EDX_MAX_ADDRESSABLE_IDS_FOR_LOGICAL_PROCESSORS_MASK                              = 0xFFF                                            //col:1665
	CPUID_EDX_MAX_ADDRESSABLE_IDS_FOR_LOGICAL_PROCESSORS                               (_) = (((_) >> 14) & 0xFFF)                            //col:1666
	CPUID_EAX_RESERVED_BIT                                                                 = 0                                                //col:1667
	CPUID_EAX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1668
	CPUID_EAX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1669
	CPUID_EAX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1670
	CPUID_EBX_PAGE_ENTRIES_4KB_SUPPORTED_BIT                                               = 0                                                //col:1671
	CPUID_EBX_PAGE_ENTRIES_4KB_SUPPORTED_FLAG                                              = 0x01                                             //col:1672
	CPUID_EBX_PAGE_ENTRIES_4KB_SUPPORTED_MASK                                              = 0x01                                             //col:1673
	CPUID_EBX_PAGE_ENTRIES_4KB_SUPPORTED                                               (_) = (((_) >> 0) & 0x01)                              //col:1674
	CPUID_EBX_PAGE_ENTRIES_2MB_SUPPORTED_BIT                                               = 1                                                //col:1675
	CPUID_EBX_PAGE_ENTRIES_2MB_SUPPORTED_FLAG                                              = 0x02                                             //col:1676
	CPUID_EBX_PAGE_ENTRIES_2MB_SUPPORTED_MASK                                              = 0x01                                             //col:1677
	CPUID_EBX_PAGE_ENTRIES_2MB_SUPPORTED                                               (_) = (((_) >> 1) & 0x01)                              //col:1678
	CPUID_EBX_PAGE_ENTRIES_4MB_SUPPORTED_BIT                                               = 2                                                //col:1679
	CPUID_EBX_PAGE_ENTRIES_4MB_SUPPORTED_FLAG                                              = 0x04                                             //col:1680
	CPUID_EBX_PAGE_ENTRIES_4MB_SUPPORTED_MASK                                              = 0x01                                             //col:1681
	CPUID_EBX_PAGE_ENTRIES_4MB_SUPPORTED                                               (_) = (((_) >> 2) & 0x01)                              //col:1682
	CPUID_EBX_PAGE_ENTRIES_1GB_SUPPORTED_BIT                                               = 3                                                //col:1683
	CPUID_EBX_PAGE_ENTRIES_1GB_SUPPORTED_FLAG                                              = 0x08                                             //col:1684
	CPUID_EBX_PAGE_ENTRIES_1GB_SUPPORTED_MASK                                              = 0x01                                             //col:1685
	CPUID_EBX_PAGE_ENTRIES_1GB_SUPPORTED                                               (_) = (((_) >> 3) & 0x01)                              //col:1686
	CPUID_EBX_PARTITIONING_BIT                                                             = 8                                                //col:1687
	CPUID_EBX_PARTITIONING_FLAG                                                            = 0x700                                            //col:1688
	CPUID_EBX_PARTITIONING_MASK                                                            = 0x07                                             //col:1689
	CPUID_EBX_PARTITIONING                                                             (_) = (((_) >> 8) & 0x07)                              //col:1690
	CPUID_EBX_WAYS_OF_ASSOCIATIVITY_01_BIT                                                 = 16                                               //col:1691
	CPUID_EBX_WAYS_OF_ASSOCIATIVITY_01_FLAG                                                = 0xFFFF0000                                       //col:1692
	CPUID_EBX_WAYS_OF_ASSOCIATIVITY_01_MASK                                                = 0xFFFF                                           //col:1693
	CPUID_EBX_WAYS_OF_ASSOCIATIVITY_01                                                 (_) = (((_) >> 16) & 0xFFFF)                           //col:1694
	CPUID_ECX_NUMBER_OF_SETS_BIT                                                           = 0                                                //col:1695
	CPUID_ECX_NUMBER_OF_SETS_FLAG                                                          = 0xFFFFFFFF                                       //col:1696
	CPUID_ECX_NUMBER_OF_SETS_MASK                                                          = 0xFFFFFFFF                                       //col:1697
	CPUID_ECX_NUMBER_OF_SETS                                                           (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1698
	CPUID_EDX_TRANSLATION_CACHE_TYPE_FIELD_BIT                                             = 0                                                //col:1699
	CPUID_EDX_TRANSLATION_CACHE_TYPE_FIELD_FLAG                                            = 0x1F                                             //col:1700
	CPUID_EDX_TRANSLATION_CACHE_TYPE_FIELD_MASK                                            = 0x1F                                             //col:1701
	CPUID_EDX_TRANSLATION_CACHE_TYPE_FIELD                                             (_) = (((_) >> 0) & 0x1F)                              //col:1702
	CPUID_EDX_TRANSLATION_CACHE_LEVEL_BIT                                                  = 5                                                //col:1703
	CPUID_EDX_TRANSLATION_CACHE_LEVEL_FLAG                                                 = 0xE0                                             //col:1704
	CPUID_EDX_TRANSLATION_CACHE_LEVEL_MASK                                                 = 0x07                                             //col:1705
	CPUID_EDX_TRANSLATION_CACHE_LEVEL                                                  (_) = (((_) >> 5) & 0x07)                              //col:1706
	CPUID_EDX_FULLY_ASSOCIATIVE_STRUCTURE_BIT                                              = 8                                                //col:1707
	CPUID_EDX_FULLY_ASSOCIATIVE_STRUCTURE_FLAG                                             = 0x100                                            //col:1708
	CPUID_EDX_FULLY_ASSOCIATIVE_STRUCTURE_MASK                                             = 0x01                                             //col:1709
	CPUID_EDX_FULLY_ASSOCIATIVE_STRUCTURE                                              (_) = (((_) >> 8) & 0x01)                              //col:1710
	CPUID_EDX_MAX_ADDRESSABLE_IDS_FOR_LOGICAL_PROCESSORS_BIT                               = 14                                               //col:1711
	CPUID_EDX_MAX_ADDRESSABLE_IDS_FOR_LOGICAL_PROCESSORS_FLAG                              = 0x3FFC000                                        //col:1712
	CPUID_EDX_MAX_ADDRESSABLE_IDS_FOR_LOGICAL_PROCESSORS_MASK                              = 0xFFF                                            //col:1713
	CPUID_EDX_MAX_ADDRESSABLE_IDS_FOR_LOGICAL_PROCESSORS                               (_) = (((_) >> 14) & 0xFFF)                            //col:1714
	CPUID_EXTENDED_FUNCTION_INFORMATION                                                    = 0x80000000                                       //col:1715
	CPUID_EAX_MAX_EXTENDED_FUNCTIONS_BIT                                                   = 0                                                //col:1716
	CPUID_EAX_MAX_EXTENDED_FUNCTIONS_FLAG                                                  = 0xFFFFFFFF                                       //col:1717
	CPUID_EAX_MAX_EXTENDED_FUNCTIONS_MASK                                                  = 0xFFFFFFFF                                       //col:1718
	CPUID_EAX_MAX_EXTENDED_FUNCTIONS                                                   (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1719
	CPUID_EBX_RESERVED_BIT                                                                 = 0                                                //col:1720
	CPUID_EBX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1721
	CPUID_EBX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1722
	CPUID_EBX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1723
	CPUID_ECX_RESERVED_BIT                                                                 = 0                                                //col:1724
	CPUID_ECX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1725
	CPUID_ECX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1726
	CPUID_ECX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1727
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:1728
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1729
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1730
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1731
	CPUID_EXTENDED_CPU_SIGNATURE                                                           = 0x80000001                                       //col:1732
	CPUID_EAX_RESERVED_BIT                                                                 = 0                                                //col:1733
	CPUID_EAX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1734
	CPUID_EAX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1735
	CPUID_EAX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1736
	CPUID_EBX_RESERVED_BIT                                                                 = 0                                                //col:1737
	CPUID_EBX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1738
	CPUID_EBX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1739
	CPUID_EBX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1740
	CPUID_ECX_LAHF_SAHF_AVAILABLE_IN_64_BIT_MODE_BIT                                       = 0                                                //col:1741
	CPUID_ECX_LAHF_SAHF_AVAILABLE_IN_64_BIT_MODE_FLAG                                      = 0x01                                             //col:1742
	CPUID_ECX_LAHF_SAHF_AVAILABLE_IN_64_BIT_MODE_MASK                                      = 0x01                                             //col:1743
	CPUID_ECX_LAHF_SAHF_AVAILABLE_IN_64_BIT_MODE                                       (_) = (((_) >> 0) & 0x01)                              //col:1744
	CPUID_ECX_LZCNT_BIT                                                                    = 5                                                //col:1745
	CPUID_ECX_LZCNT_FLAG                                                                   = 0x20                                             //col:1746
	CPUID_ECX_LZCNT_MASK                                                                   = 0x01                                             //col:1747
	CPUID_ECX_LZCNT                                                                    (_) = (((_) >> 5) & 0x01)                              //col:1748
	CPUID_ECX_PREFETCHW_BIT                                                                = 8                                                //col:1749
	CPUID_ECX_PREFETCHW_FLAG                                                               = 0x100                                            //col:1750
	CPUID_ECX_PREFETCHW_MASK                                                               = 0x01                                             //col:1751
	CPUID_ECX_PREFETCHW                                                                (_) = (((_) >> 8) & 0x01)                              //col:1752
	CPUID_EDX_SYSCALL_SYSRET_AVAILABLE_IN_64_BIT_MODE_BIT                                  = 11                                               //col:1753
	CPUID_EDX_SYSCALL_SYSRET_AVAILABLE_IN_64_BIT_MODE_FLAG                                 = 0x800                                            //col:1754
	CPUID_EDX_SYSCALL_SYSRET_AVAILABLE_IN_64_BIT_MODE_MASK                                 = 0x01                                             //col:1755
	CPUID_EDX_SYSCALL_SYSRET_AVAILABLE_IN_64_BIT_MODE                                  (_) = (((_) >> 11) & 0x01)                             //col:1756
	CPUID_EDX_EXECUTE_DISABLE_BIT_AVAILABLE_BIT                                            = 20                                               //col:1757
	CPUID_EDX_EXECUTE_DISABLE_BIT_AVAILABLE_FLAG                                           = 0x100000                                         //col:1758
	CPUID_EDX_EXECUTE_DISABLE_BIT_AVAILABLE_MASK                                           = 0x01                                             //col:1759
	CPUID_EDX_EXECUTE_DISABLE_BIT_AVAILABLE                                            (_) = (((_) >> 20) & 0x01)                             //col:1760
	CPUID_EDX_PAGES_1GB_AVAILABLE_BIT                                                      = 26                                               //col:1761
	CPUID_EDX_PAGES_1GB_AVAILABLE_FLAG                                                     = 0x4000000                                        //col:1762
	CPUID_EDX_PAGES_1GB_AVAILABLE_MASK                                                     = 0x01                                             //col:1763
	CPUID_EDX_PAGES_1GB_AVAILABLE                                                      (_) = (((_) >> 26) & 0x01)                             //col:1764
	CPUID_EDX_RDTSCP_AVAILABLE_BIT                                                         = 27                                               //col:1765
	CPUID_EDX_RDTSCP_AVAILABLE_FLAG                                                        = 0x8000000                                        //col:1766
	CPUID_EDX_RDTSCP_AVAILABLE_MASK                                                        = 0x01                                             //col:1767
	CPUID_EDX_RDTSCP_AVAILABLE                                                         (_) = (((_) >> 27) & 0x01)                             //col:1768
	CPUID_EDX_IA64_AVAILABLE_BIT                                                           = 29                                               //col:1769
	CPUID_EDX_IA64_AVAILABLE_FLAG                                                          = 0x20000000                                       //col:1770
	CPUID_EDX_IA64_AVAILABLE_MASK                                                          = 0x01                                             //col:1771
	CPUID_EDX_IA64_AVAILABLE                                                           (_) = (((_) >> 29) & 0x01)                             //col:1772
	CPUID_BRAND_STRING1                                                                    = 0x80000002                                       //col:1773
	CPUID_BRAND_STRING2                                                                    = 0x80000003                                       //col:1774
	CPUID_BRAND_STRING3                                                                    = 0x80000004                                       //col:1775
	CPUID_EAX_PROCESSOR_BRAND_STRING_1_BIT                                                 = 0                                                //col:1776
	CPUID_EAX_PROCESSOR_BRAND_STRING_1_FLAG                                                = 0xFFFFFFFF                                       //col:1777
	CPUID_EAX_PROCESSOR_BRAND_STRING_1_MASK                                                = 0xFFFFFFFF                                       //col:1778
	CPUID_EAX_PROCESSOR_BRAND_STRING_1                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1779
	CPUID_EBX_PROCESSOR_BRAND_STRING_2_BIT                                                 = 0                                                //col:1780
	CPUID_EBX_PROCESSOR_BRAND_STRING_2_FLAG                                                = 0xFFFFFFFF                                       //col:1781
	CPUID_EBX_PROCESSOR_BRAND_STRING_2_MASK                                                = 0xFFFFFFFF                                       //col:1782
	CPUID_EBX_PROCESSOR_BRAND_STRING_2                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1783
	CPUID_ECX_PROCESSOR_BRAND_STRING_3_BIT                                                 = 0                                                //col:1784
	CPUID_ECX_PROCESSOR_BRAND_STRING_3_FLAG                                                = 0xFFFFFFFF                                       //col:1785
	CPUID_ECX_PROCESSOR_BRAND_STRING_3_MASK                                                = 0xFFFFFFFF                                       //col:1786
	CPUID_ECX_PROCESSOR_BRAND_STRING_3                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1787
	CPUID_EDX_PROCESSOR_BRAND_STRING_4_BIT                                                 = 0                                                //col:1788
	CPUID_EDX_PROCESSOR_BRAND_STRING_4_FLAG                                                = 0xFFFFFFFF                                       //col:1789
	CPUID_EDX_PROCESSOR_BRAND_STRING_4_MASK                                                = 0xFFFFFFFF                                       //col:1790
	CPUID_EDX_PROCESSOR_BRAND_STRING_4                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1791
	CPUID_EAX_PROCESSOR_BRAND_STRING_5_BIT                                                 = 0                                                //col:1792
	CPUID_EAX_PROCESSOR_BRAND_STRING_5_FLAG                                                = 0xFFFFFFFF                                       //col:1793
	CPUID_EAX_PROCESSOR_BRAND_STRING_5_MASK                                                = 0xFFFFFFFF                                       //col:1794
	CPUID_EAX_PROCESSOR_BRAND_STRING_5                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1795
	CPUID_EBX_PROCESSOR_BRAND_STRING_6_BIT                                                 = 0                                                //col:1796
	CPUID_EBX_PROCESSOR_BRAND_STRING_6_FLAG                                                = 0xFFFFFFFF                                       //col:1797
	CPUID_EBX_PROCESSOR_BRAND_STRING_6_MASK                                                = 0xFFFFFFFF                                       //col:1798
	CPUID_EBX_PROCESSOR_BRAND_STRING_6                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1799
	CPUID_ECX_PROCESSOR_BRAND_STRING_7_BIT                                                 = 0                                                //col:1800
	CPUID_ECX_PROCESSOR_BRAND_STRING_7_FLAG                                                = 0xFFFFFFFF                                       //col:1801
	CPUID_ECX_PROCESSOR_BRAND_STRING_7_MASK                                                = 0xFFFFFFFF                                       //col:1802
	CPUID_ECX_PROCESSOR_BRAND_STRING_7                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1803
	CPUID_EDX_PROCESSOR_BRAND_STRING_8_BIT                                                 = 0                                                //col:1804
	CPUID_EDX_PROCESSOR_BRAND_STRING_8_FLAG                                                = 0xFFFFFFFF                                       //col:1805
	CPUID_EDX_PROCESSOR_BRAND_STRING_8_MASK                                                = 0xFFFFFFFF                                       //col:1806
	CPUID_EDX_PROCESSOR_BRAND_STRING_8                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1807
	CPUID_EAX_PROCESSOR_BRAND_STRING_9_BIT                                                 = 0                                                //col:1808
	CPUID_EAX_PROCESSOR_BRAND_STRING_9_FLAG                                                = 0xFFFFFFFF                                       //col:1809
	CPUID_EAX_PROCESSOR_BRAND_STRING_9_MASK                                                = 0xFFFFFFFF                                       //col:1810
	CPUID_EAX_PROCESSOR_BRAND_STRING_9                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1811
	CPUID_EBX_PROCESSOR_BRAND_STRING_10_BIT                                                = 0                                                //col:1812
	CPUID_EBX_PROCESSOR_BRAND_STRING_10_FLAG                                               = 0xFFFFFFFF                                       //col:1813
	CPUID_EBX_PROCESSOR_BRAND_STRING_10_MASK                                               = 0xFFFFFFFF                                       //col:1814
	CPUID_EBX_PROCESSOR_BRAND_STRING_10                                                (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1815
	CPUID_ECX_PROCESSOR_BRAND_STRING_11_BIT                                                = 0                                                //col:1816
	CPUID_ECX_PROCESSOR_BRAND_STRING_11_FLAG                                               = 0xFFFFFFFF                                       //col:1817
	CPUID_ECX_PROCESSOR_BRAND_STRING_11_MASK                                               = 0xFFFFFFFF                                       //col:1818
	CPUID_ECX_PROCESSOR_BRAND_STRING_11                                                (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1819
	CPUID_EDX_PROCESSOR_BRAND_STRING_12_BIT                                                = 0                                                //col:1820
	CPUID_EDX_PROCESSOR_BRAND_STRING_12_FLAG                                               = 0xFFFFFFFF                                       //col:1821
	CPUID_EDX_PROCESSOR_BRAND_STRING_12_MASK                                               = 0xFFFFFFFF                                       //col:1822
	CPUID_EDX_PROCESSOR_BRAND_STRING_12                                                (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1823
	CPUID_EAX_RESERVED_BIT                                                                 = 0                                                //col:1824
	CPUID_EAX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1825
	CPUID_EAX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1826
	CPUID_EAX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1827
	CPUID_EBX_RESERVED_BIT                                                                 = 0                                                //col:1828
	CPUID_EBX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1829
	CPUID_EBX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1830
	CPUID_EBX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1831
	CPUID_ECX_RESERVED_BIT                                                                 = 0                                                //col:1832
	CPUID_ECX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1833
	CPUID_ECX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1834
	CPUID_ECX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1835
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:1836
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1837
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1838
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1839
	CPUID_EXTENDED_CACHE_INFO                                                              = 0x80000006                                       //col:1840
	CPUID_EAX_RESERVED_BIT                                                                 = 0                                                //col:1841
	CPUID_EAX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1842
	CPUID_EAX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1843
	CPUID_EAX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1844
	CPUID_EBX_RESERVED_BIT                                                                 = 0                                                //col:1845
	CPUID_EBX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1846
	CPUID_EBX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1847
	CPUID_EBX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1848
	CPUID_ECX_CACHE_LINE_SIZE_IN_BYTES_BIT                                                 = 0                                                //col:1849
	CPUID_ECX_CACHE_LINE_SIZE_IN_BYTES_FLAG                                                = 0xFF                                             //col:1850
	CPUID_ECX_CACHE_LINE_SIZE_IN_BYTES_MASK                                                = 0xFF                                             //col:1851
	CPUID_ECX_CACHE_LINE_SIZE_IN_BYTES                                                 (_) = (((_) >> 0) & 0xFF)                              //col:1852
	CPUID_ECX_L2_ASSOCIATIVITY_FIELD_BIT                                                   = 12                                               //col:1853
	CPUID_ECX_L2_ASSOCIATIVITY_FIELD_FLAG                                                  = 0xF000                                           //col:1854
	CPUID_ECX_L2_ASSOCIATIVITY_FIELD_MASK                                                  = 0x0F                                             //col:1855
	CPUID_ECX_L2_ASSOCIATIVITY_FIELD                                                   (_) = (((_) >> 12) & 0x0F)                             //col:1856
	CPUID_ECX_CACHE_SIZE_IN_1K_UNITS_BIT                                                   = 16                                               //col:1857
	CPUID_ECX_CACHE_SIZE_IN_1K_UNITS_FLAG                                                  = 0xFFFF0000                                       //col:1858
	CPUID_ECX_CACHE_SIZE_IN_1K_UNITS_MASK                                                  = 0xFFFF                                           //col:1859
	CPUID_ECX_CACHE_SIZE_IN_1K_UNITS                                                   (_) = (((_) >> 16) & 0xFFFF)                           //col:1860
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:1861
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1862
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1863
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1864
	CPUID_EXTENDED_TIME_STAMP_COUNTER                                                      = 0x80000007                                       //col:1865
	CPUID_EAX_RESERVED_BIT                                                                 = 0                                                //col:1866
	CPUID_EAX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1867
	CPUID_EAX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1868
	CPUID_EAX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1869
	CPUID_EBX_RESERVED_BIT                                                                 = 0                                                //col:1870
	CPUID_EBX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1871
	CPUID_EBX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1872
	CPUID_EBX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1873
	CPUID_ECX_RESERVED_BIT                                                                 = 0                                                //col:1874
	CPUID_ECX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1875
	CPUID_ECX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1876
	CPUID_ECX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1877
	CPUID_EDX_INVARIANT_TSC_AVAILABLE_BIT                                                  = 8                                                //col:1878
	CPUID_EDX_INVARIANT_TSC_AVAILABLE_FLAG                                                 = 0x100                                            //col:1879
	CPUID_EDX_INVARIANT_TSC_AVAILABLE_MASK                                                 = 0x01                                             //col:1880
	CPUID_EDX_INVARIANT_TSC_AVAILABLE                                                  (_) = (((_) >> 8) & 0x01)                              //col:1881
	CPUID_EXTENDED_VIRTUAL_PHYSICAL_ADDRESS_SIZE                                           = 0x80000008                                       //col:1882
	CPUID_EAX_NUMBER_OF_PHYSICAL_ADDRESS_BITS_BIT                                          = 0                                                //col:1883
	CPUID_EAX_NUMBER_OF_PHYSICAL_ADDRESS_BITS_FLAG                                         = 0xFF                                             //col:1884
	CPUID_EAX_NUMBER_OF_PHYSICAL_ADDRESS_BITS_MASK                                         = 0xFF                                             //col:1885
	CPUID_EAX_NUMBER_OF_PHYSICAL_ADDRESS_BITS                                          (_) = (((_) >> 0) & 0xFF)                              //col:1886
	CPUID_EAX_NUMBER_OF_LINEAR_ADDRESS_BITS_BIT                                            = 8                                                //col:1887
	CPUID_EAX_NUMBER_OF_LINEAR_ADDRESS_BITS_FLAG                                           = 0xFF00                                           //col:1888
	CPUID_EAX_NUMBER_OF_LINEAR_ADDRESS_BITS_MASK                                           = 0xFF                                             //col:1889
	CPUID_EAX_NUMBER_OF_LINEAR_ADDRESS_BITS                                            (_) = (((_) >> 8) & 0xFF)                              //col:1890
	CPUID_EBX_RESERVED_BIT                                                                 = 0                                                //col:1891
	CPUID_EBX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1892
	CPUID_EBX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1893
	CPUID_EBX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1894
	CPUID_ECX_RESERVED_BIT                                                                 = 0                                                //col:1895
	CPUID_ECX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1896
	CPUID_ECX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1897
	CPUID_ECX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1898
	CPUID_EDX_RESERVED_BIT                                                                 = 0                                                //col:1899
	CPUID_EDX_RESERVED_FLAG                                                                = 0xFFFFFFFF                                       //col:1900
	CPUID_EDX_RESERVED_MASK                                                                = 0xFFFFFFFF                                       //col:1901
	CPUID_EDX_RESERVED                                                                 (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1902
	IA32_P5_MC_ADDR                                                                        = 0x00000000                                       //col:1903
	IA32_P5_MC_TYPE                                                                        = 0x00000001                                       //col:1904
	IA32_MONITOR_FILTER_LINE_SIZE                                                          = 0x00000006                                       //col:1905
	IA32_TIME_STAMP_COUNTER                                                                = 0x00000010                                       //col:1906
	IA32_PLATFORM_ID                                                                       = 0x00000017                                       //col:1907
	IA32_PLATFORM_ID_PLATFORM_ID_BIT                                                       = 50                                               //col:1908
	IA32_PLATFORM_ID_PLATFORM_ID_FLAG                                                      = 0x1C000000000000                                 //col:1909
	IA32_PLATFORM_ID_PLATFORM_ID_MASK                                                      = 0x07                                             //col:1910
	IA32_PLATFORM_ID_PLATFORM_ID                                                       (_) = (((_) >> 50) & 0x07)                             //col:1911
	IA32_APIC_BASE                                                                         = 0x0000001B                                       //col:1912
	IA32_APIC_BASE_BSP_FLAG_BIT                                                            = 8                                                //col:1913
	IA32_APIC_BASE_BSP_FLAG_FLAG                                                           = 0x100                                            //col:1914
	IA32_APIC_BASE_BSP_FLAG_MASK                                                           = 0x01                                             //col:1915
	IA32_APIC_BASE_BSP_FLAG                                                            (_) = (((_) >> 8) & 0x01)                              //col:1916
	IA32_APIC_BASE_ENABLE_X2APIC_MODE_BIT                                                  = 10                                               //col:1917
	IA32_APIC_BASE_ENABLE_X2APIC_MODE_FLAG                                                 = 0x400                                            //col:1918
	IA32_APIC_BASE_ENABLE_X2APIC_MODE_MASK                                                 = 0x01                                             //col:1919
	IA32_APIC_BASE_ENABLE_X2APIC_MODE                                                  (_) = (((_) >> 10) & 0x01)                             //col:1920
	IA32_APIC_BASE_APIC_GLOBAL_ENABLE_BIT                                                  = 11                                               //col:1921
	IA32_APIC_BASE_APIC_GLOBAL_ENABLE_FLAG                                                 = 0x800                                            //col:1922
	IA32_APIC_BASE_APIC_GLOBAL_ENABLE_MASK                                                 = 0x01                                             //col:1923
	IA32_APIC_BASE_APIC_GLOBAL_ENABLE                                                  (_) = (((_) >> 11) & 0x01)                             //col:1924
	IA32_APIC_BASE_APIC_BASE_BIT                                                           = 12                                               //col:1925
	IA32_APIC_BASE_APIC_BASE_FLAG                                                          = 0xFFFFFFFFF000                                   //col:1926
	IA32_APIC_BASE_APIC_BASE_MASK                                                          = 0xFFFFFFFFF                                      //col:1927
	IA32_APIC_BASE_APIC_BASE                                                           (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:1928
	IA32_FEATURE_CONTROL                                                                   = 0x0000003A                                       //col:1929
	IA32_FEATURE_CONTROL_LOCK_BIT_BIT                                                      = 0                                                //col:1930
	IA32_FEATURE_CONTROL_LOCK_BIT_FLAG                                                     = 0x01                                             //col:1931
	IA32_FEATURE_CONTROL_LOCK_BIT_MASK                                                     = 0x01                                             //col:1932
	IA32_FEATURE_CONTROL_LOCK_BIT                                                      (_) = (((_) >> 0) & 0x01)                              //col:1933
	IA32_FEATURE_CONTROL_ENABLE_VMX_INSIDE_SMX_BIT                                         = 1                                                //col:1934
	IA32_FEATURE_CONTROL_ENABLE_VMX_INSIDE_SMX_FLAG                                        = 0x02                                             //col:1935
	IA32_FEATURE_CONTROL_ENABLE_VMX_INSIDE_SMX_MASK                                        = 0x01                                             //col:1936
	IA32_FEATURE_CONTROL_ENABLE_VMX_INSIDE_SMX                                         (_) = (((_) >> 1) & 0x01)                              //col:1937
	IA32_FEATURE_CONTROL_ENABLE_VMX_OUTSIDE_SMX_BIT                                        = 2                                                //col:1938
	IA32_FEATURE_CONTROL_ENABLE_VMX_OUTSIDE_SMX_FLAG                                       = 0x04                                             //col:1939
	IA32_FEATURE_CONTROL_ENABLE_VMX_OUTSIDE_SMX_MASK                                       = 0x01                                             //col:1940
	IA32_FEATURE_CONTROL_ENABLE_VMX_OUTSIDE_SMX                                        (_) = (((_) >> 2) & 0x01)                              //col:1941
	IA32_FEATURE_CONTROL_SENTER_LOCAL_FUNCTION_ENABLES_BIT                                 = 8                                                //col:1942
	IA32_FEATURE_CONTROL_SENTER_LOCAL_FUNCTION_ENABLES_FLAG                                = 0x7F00                                           //col:1943
	IA32_FEATURE_CONTROL_SENTER_LOCAL_FUNCTION_ENABLES_MASK                                = 0x7F                                             //col:1944
	IA32_FEATURE_CONTROL_SENTER_LOCAL_FUNCTION_ENABLES                                 (_) = (((_) >> 8) & 0x7F)                              //col:1945
	IA32_FEATURE_CONTROL_SENTER_GLOBAL_ENABLE_BIT                                          = 15                                               //col:1946
	IA32_FEATURE_CONTROL_SENTER_GLOBAL_ENABLE_FLAG                                         = 0x8000                                           //col:1947
	IA32_FEATURE_CONTROL_SENTER_GLOBAL_ENABLE_MASK                                         = 0x01                                             //col:1948
	IA32_FEATURE_CONTROL_SENTER_GLOBAL_ENABLE                                          (_) = (((_) >> 15) & 0x01)                             //col:1949
	IA32_FEATURE_CONTROL_SGX_LAUNCH_CONTROL_ENABLE_BIT                                     = 17                                               //col:1950
	IA32_FEATURE_CONTROL_SGX_LAUNCH_CONTROL_ENABLE_FLAG                                    = 0x20000                                          //col:1951
	IA32_FEATURE_CONTROL_SGX_LAUNCH_CONTROL_ENABLE_MASK                                    = 0x01                                             //col:1952
	IA32_FEATURE_CONTROL_SGX_LAUNCH_CONTROL_ENABLE                                     (_) = (((_) >> 17) & 0x01)                             //col:1953
	IA32_FEATURE_CONTROL_SGX_GLOBAL_ENABLE_BIT                                             = 18                                               //col:1954
	IA32_FEATURE_CONTROL_SGX_GLOBAL_ENABLE_FLAG                                            = 0x40000                                          //col:1955
	IA32_FEATURE_CONTROL_SGX_GLOBAL_ENABLE_MASK                                            = 0x01                                             //col:1956
	IA32_FEATURE_CONTROL_SGX_GLOBAL_ENABLE                                             (_) = (((_) >> 18) & 0x01)                             //col:1957
	IA32_FEATURE_CONTROL_LMCE_ON_BIT                                                       = 20                                               //col:1958
	IA32_FEATURE_CONTROL_LMCE_ON_FLAG                                                      = 0x100000                                         //col:1959
	IA32_FEATURE_CONTROL_LMCE_ON_MASK                                                      = 0x01                                             //col:1960
	IA32_FEATURE_CONTROL_LMCE_ON                                                       (_) = (((_) >> 20) & 0x01)                             //col:1961
	IA32_TSC_ADJUST                                                                        = 0x0000003B                                       //col:1962
	IA32_SPEC_CTRL                                                                         = 0x00000048                                       //col:1963
	IA32_SPEC_CTRL_IBRS_BIT                                                                = 0                                                //col:1964
	IA32_SPEC_CTRL_IBRS_FLAG                                                               = 0x01                                             //col:1965
	IA32_SPEC_CTRL_IBRS_MASK                                                               = 0x01                                             //col:1966
	IA32_SPEC_CTRL_IBRS                                                                (_) = (((_) >> 0) & 0x01)                              //col:1967
	IA32_SPEC_CTRL_STIBP_BIT                                                               = 1                                                //col:1968
	IA32_SPEC_CTRL_STIBP_FLAG                                                              = 0x02                                             //col:1969
	IA32_SPEC_CTRL_STIBP_MASK                                                              = 0x01                                             //col:1970
	IA32_SPEC_CTRL_STIBP                                                               (_) = (((_) >> 1) & 0x01)                              //col:1971
	IA32_SPEC_CTRL_SSBD_BIT                                                                = 2                                                //col:1972
	IA32_SPEC_CTRL_SSBD_FLAG                                                               = 0x04                                             //col:1973
	IA32_SPEC_CTRL_SSBD_MASK                                                               = 0x01                                             //col:1974
	IA32_SPEC_CTRL_SSBD                                                                (_) = (((_) >> 2) & 0x01)                              //col:1975
	IA32_PRED_CMD                                                                          = 0x00000049                                       //col:1976
	IA32_PRED_CMD_IBPB_BIT                                                                 = 0                                                //col:1977
	IA32_PRED_CMD_IBPB_FLAG                                                                = 0x01                                             //col:1978
	IA32_PRED_CMD_IBPB_MASK                                                                = 0x01                                             //col:1979
	IA32_PRED_CMD_IBPB                                                                 (_) = (((_) >> 0) & 0x01)                              //col:1980
	IA32_BIOS_UPDATE_TRIGGER                                                               = 0x00000079                                       //col:1981
	IA32_BIOS_UPDATE_SIGNATURE                                                             = 0x0000008B                                       //col:1982
	IA32_BIOS_UPDATE_SIGNATURE_RESERVED_BIT                                                = 0                                                //col:1983
	IA32_BIOS_UPDATE_SIGNATURE_RESERVED_FLAG                                               = 0xFFFFFFFF                                       //col:1984
	IA32_BIOS_UPDATE_SIGNATURE_RESERVED_MASK                                               = 0xFFFFFFFF                                       //col:1985
	IA32_BIOS_UPDATE_SIGNATURE_RESERVED                                                (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:1986
	IA32_BIOS_UPDATE_SIGNATURE_MICROCODE_UPDATE_SIGNATURE_BIT                              = 32                                               //col:1987
	IA32_BIOS_UPDATE_SIGNATURE_MICROCODE_UPDATE_SIGNATURE_FLAG                             = 0xFFFFFFFF00000000                               //col:1988
	IA32_BIOS_UPDATE_SIGNATURE_MICROCODE_UPDATE_SIGNATURE_MASK                             = 0xFFFFFFFF                                       //col:1989
	IA32_BIOS_UPDATE_SIGNATURE_MICROCODE_UPDATE_SIGNATURE                              (_) = (((_) >> 32) & 0xFFFFFFFF)                       //col:1990
	IA32_SGXLEPUBKEYHASH0                                                                  = 0x0000008C                                       //col:1991
	IA32_SGXLEPUBKEYHASH1                                                                  = 0x0000008D                                       //col:1992
	IA32_SGXLEPUBKEYHASH2                                                                  = 0x0000008E                                       //col:1993
	IA32_SGXLEPUBKEYHASH3                                                                  = 0x0000008F                                       //col:1994
	IA32_SMM_MONITOR_CTL                                                                   = 0x0000009B                                       //col:1995
	IA32_SMM_MONITOR_CTL_VALID_BIT                                                         = 0                                                //col:1996
	IA32_SMM_MONITOR_CTL_VALID_FLAG                                                        = 0x01                                             //col:1997
	IA32_SMM_MONITOR_CTL_VALID_MASK                                                        = 0x01                                             //col:1998
	IA32_SMM_MONITOR_CTL_VALID                                                         (_) = (((_) >> 0) & 0x01)                              //col:1999
	IA32_SMM_MONITOR_CTL_SMI_UNBLOCKING_BY_VMXOFF_BIT                                      = 2                                                //col:2000
	IA32_SMM_MONITOR_CTL_SMI_UNBLOCKING_BY_VMXOFF_FLAG                                     = 0x04                                             //col:2001
	IA32_SMM_MONITOR_CTL_SMI_UNBLOCKING_BY_VMXOFF_MASK                                     = 0x01                                             //col:2002
	IA32_SMM_MONITOR_CTL_SMI_UNBLOCKING_BY_VMXOFF                                      (_) = (((_) >> 2) & 0x01)                              //col:2003
	IA32_SMM_MONITOR_CTL_MSEG_BASE_BIT                                                     = 12                                               //col:2004
	IA32_SMM_MONITOR_CTL_MSEG_BASE_FLAG                                                    = 0xFFFFF000                                       //col:2005
	IA32_SMM_MONITOR_CTL_MSEG_BASE_MASK                                                    = 0xFFFFF                                          //col:2006
	IA32_SMM_MONITOR_CTL_MSEG_BASE                                                     (_) = (((_) >> 12) & 0xFFFFF)                          //col:2007
	IA32_STM_FEATURES_IA32E                                                                = 0x00000001                                       //col:2008
	IA32_SMBASE                                                                            = 0x0000009E                                       //col:2009
	IA32_PMC0                                                                              = 0x000000C1                                       //col:2010
	IA32_PMC1                                                                              = 0x000000C2                                       //col:2011
	IA32_PMC2                                                                              = 0x000000C3                                       //col:2012
	IA32_PMC3                                                                              = 0x000000C4                                       //col:2013
	IA32_PMC4                                                                              = 0x000000C5                                       //col:2014
	IA32_PMC5                                                                              = 0x000000C6                                       //col:2015
	IA32_PMC6                                                                              = 0x000000C7                                       //col:2016
	IA32_PMC7                                                                              = 0x000000C8                                       //col:2017
	IA32_MPERF                                                                             = 0x000000E7                                       //col:2018
	IA32_APERF                                                                             = 0x000000E8                                       //col:2019
	IA32_MTRR_CAPABILITIES                                                                 = 0x000000FE                                       //col:2020
	IA32_MTRR_CAPABILITIES_VARIABLE_RANGE_COUNT_BIT                                        = 0                                                //col:2021
	IA32_MTRR_CAPABILITIES_VARIABLE_RANGE_COUNT_FLAG                                       = 0xFF                                             //col:2022
	IA32_MTRR_CAPABILITIES_VARIABLE_RANGE_COUNT_MASK                                       = 0xFF                                             //col:2023
	IA32_MTRR_CAPABILITIES_VARIABLE_RANGE_COUNT                                        (_) = (((_) >> 0) & 0xFF)                              //col:2024
	IA32_MTRR_CAPABILITIES_FIXED_RANGE_SUPPORTED_BIT                                       = 8                                                //col:2025
	IA32_MTRR_CAPABILITIES_FIXED_RANGE_SUPPORTED_FLAG                                      = 0x100                                            //col:2026
	IA32_MTRR_CAPABILITIES_FIXED_RANGE_SUPPORTED_MASK                                      = 0x01                                             //col:2027
	IA32_MTRR_CAPABILITIES_FIXED_RANGE_SUPPORTED                                       (_) = (((_) >> 8) & 0x01)                              //col:2028
	IA32_MTRR_CAPABILITIES_WC_SUPPORTED_BIT                                                = 10                                               //col:2029
	IA32_MTRR_CAPABILITIES_WC_SUPPORTED_FLAG                                               = 0x400                                            //col:2030
	IA32_MTRR_CAPABILITIES_WC_SUPPORTED_MASK                                               = 0x01                                             //col:2031
	IA32_MTRR_CAPABILITIES_WC_SUPPORTED                                                (_) = (((_) >> 10) & 0x01)                             //col:2032
	IA32_MTRR_CAPABILITIES_SMRR_SUPPORTED_BIT                                              = 11                                               //col:2033
	IA32_MTRR_CAPABILITIES_SMRR_SUPPORTED_FLAG                                             = 0x800                                            //col:2034
	IA32_MTRR_CAPABILITIES_SMRR_SUPPORTED_MASK                                             = 0x01                                             //col:2035
	IA32_MTRR_CAPABILITIES_SMRR_SUPPORTED                                              (_) = (((_) >> 11) & 0x01)                             //col:2036
	IA32_ARCH_CAPABILITIES                                                                 = 0x0000010A                                       //col:2037
	IA32_ARCH_CAPABILITIES_RDCL_NO_BIT                                                     = 0                                                //col:2038
	IA32_ARCH_CAPABILITIES_RDCL_NO_FLAG                                                    = 0x01                                             //col:2039
	IA32_ARCH_CAPABILITIES_RDCL_NO_MASK                                                    = 0x01                                             //col:2040
	IA32_ARCH_CAPABILITIES_RDCL_NO                                                     (_) = (((_) >> 0) & 0x01)                              //col:2041
	IA32_ARCH_CAPABILITIES_IBRS_ALL_BIT                                                    = 1                                                //col:2042
	IA32_ARCH_CAPABILITIES_IBRS_ALL_FLAG                                                   = 0x02                                             //col:2043
	IA32_ARCH_CAPABILITIES_IBRS_ALL_MASK                                                   = 0x01                                             //col:2044
	IA32_ARCH_CAPABILITIES_IBRS_ALL                                                    (_) = (((_) >> 1) & 0x01)                              //col:2045
	IA32_ARCH_CAPABILITIES_RSBA_BIT                                                        = 2                                                //col:2046
	IA32_ARCH_CAPABILITIES_RSBA_FLAG                                                       = 0x04                                             //col:2047
	IA32_ARCH_CAPABILITIES_RSBA_MASK                                                       = 0x01                                             //col:2048
	IA32_ARCH_CAPABILITIES_RSBA                                                        (_) = (((_) >> 2) & 0x01)                              //col:2049
	IA32_ARCH_CAPABILITIES_SKIP_L1DFL_VMENTRY_BIT                                          = 3                                                //col:2050
	IA32_ARCH_CAPABILITIES_SKIP_L1DFL_VMENTRY_FLAG                                         = 0x08                                             //col:2051
	IA32_ARCH_CAPABILITIES_SKIP_L1DFL_VMENTRY_MASK                                         = 0x01                                             //col:2052
	IA32_ARCH_CAPABILITIES_SKIP_L1DFL_VMENTRY                                          (_) = (((_) >> 3) & 0x01)                              //col:2053
	IA32_ARCH_CAPABILITIES_SSB_NO_BIT                                                      = 4                                                //col:2054
	IA32_ARCH_CAPABILITIES_SSB_NO_FLAG                                                     = 0x10                                             //col:2055
	IA32_ARCH_CAPABILITIES_SSB_NO_MASK                                                     = 0x01                                             //col:2056
	IA32_ARCH_CAPABILITIES_SSB_NO                                                      (_) = (((_) >> 4) & 0x01)                              //col:2057
	IA32_ARCH_CAPABILITIES_MDS_NO_BIT                                                      = 5                                                //col:2058
	IA32_ARCH_CAPABILITIES_MDS_NO_FLAG                                                     = 0x20                                             //col:2059
	IA32_ARCH_CAPABILITIES_MDS_NO_MASK                                                     = 0x01                                             //col:2060
	IA32_ARCH_CAPABILITIES_MDS_NO                                                      (_) = (((_) >> 5) & 0x01)                              //col:2061
	IA32_ARCH_CAPABILITIES_IF_PSCHANGE_MC_NO_BIT                                           = 6                                                //col:2062
	IA32_ARCH_CAPABILITIES_IF_PSCHANGE_MC_NO_FLAG                                          = 0x40                                             //col:2063
	IA32_ARCH_CAPABILITIES_IF_PSCHANGE_MC_NO_MASK                                          = 0x01                                             //col:2064
	IA32_ARCH_CAPABILITIES_IF_PSCHANGE_MC_NO                                           (_) = (((_) >> 6) & 0x01)                              //col:2065
	IA32_ARCH_CAPABILITIES_TSX_CTRL_BIT                                                    = 7                                                //col:2066
	IA32_ARCH_CAPABILITIES_TSX_CTRL_FLAG                                                   = 0x80                                             //col:2067
	IA32_ARCH_CAPABILITIES_TSX_CTRL_MASK                                                   = 0x01                                             //col:2068
	IA32_ARCH_CAPABILITIES_TSX_CTRL                                                    (_) = (((_) >> 7) & 0x01)                              //col:2069
	IA32_ARCH_CAPABILITIES_TAA_NO_BIT                                                      = 8                                                //col:2070
	IA32_ARCH_CAPABILITIES_TAA_NO_FLAG                                                     = 0x100                                            //col:2071
	IA32_ARCH_CAPABILITIES_TAA_NO_MASK                                                     = 0x01                                             //col:2072
	IA32_ARCH_CAPABILITIES_TAA_NO                                                      (_) = (((_) >> 8) & 0x01)                              //col:2073
	IA32_FLUSH_CMD                                                                         = 0x0000010B                                       //col:2074
	IA32_FLUSH_CMD_L1D_FLUSH_BIT                                                           = 0                                                //col:2075
	IA32_FLUSH_CMD_L1D_FLUSH_FLAG                                                          = 0x01                                             //col:2076
	IA32_FLUSH_CMD_L1D_FLUSH_MASK                                                          = 0x01                                             //col:2077
	IA32_FLUSH_CMD_L1D_FLUSH                                                           (_) = (((_) >> 0) & 0x01)                              //col:2078
	IA32_TSX_CTRL                                                                          = 0x00000122                                       //col:2079
	IA32_TSX_CTRL_RTM_DISABLE_BIT                                                          = 0                                                //col:2080
	IA32_TSX_CTRL_RTM_DISABLE_FLAG                                                         = 0x01                                             //col:2081
	IA32_TSX_CTRL_RTM_DISABLE_MASK                                                         = 0x01                                             //col:2082
	IA32_TSX_CTRL_RTM_DISABLE                                                          (_) = (((_) >> 0) & 0x01)                              //col:2083
	IA32_TSX_CTRL_TSX_CPUID_CLEAR_BIT                                                      = 1                                                //col:2084
	IA32_TSX_CTRL_TSX_CPUID_CLEAR_FLAG                                                     = 0x02                                             //col:2085
	IA32_TSX_CTRL_TSX_CPUID_CLEAR_MASK                                                     = 0x01                                             //col:2086
	IA32_TSX_CTRL_TSX_CPUID_CLEAR                                                      (_) = (((_) >> 1) & 0x01)                              //col:2087
	IA32_SYSENTER_CS                                                                       = 0x00000174                                       //col:2088
	IA32_SYSENTER_CS_CS_SELECTOR_BIT                                                       = 0                                                //col:2089
	IA32_SYSENTER_CS_CS_SELECTOR_FLAG                                                      = 0xFFFF                                           //col:2090
	IA32_SYSENTER_CS_CS_SELECTOR_MASK                                                      = 0xFFFF                                           //col:2091
	IA32_SYSENTER_CS_CS_SELECTOR                                                       (_) = (((_) >> 0) & 0xFFFF)                            //col:2092
	IA32_SYSENTER_CS_NOT_USED_1_BIT                                                        = 16                                               //col:2093
	IA32_SYSENTER_CS_NOT_USED_1_FLAG                                                       = 0xFFFF0000                                       //col:2094
	IA32_SYSENTER_CS_NOT_USED_1_MASK                                                       = 0xFFFF                                           //col:2095
	IA32_SYSENTER_CS_NOT_USED_1                                                        (_) = (((_) >> 16) & 0xFFFF)                           //col:2096
	IA32_SYSENTER_CS_NOT_USED_2_BIT                                                        = 32                                               //col:2097
	IA32_SYSENTER_CS_NOT_USED_2_FLAG                                                       = 0xFFFFFFFF00000000                               //col:2098
	IA32_SYSENTER_CS_NOT_USED_2_MASK                                                       = 0xFFFFFFFF                                       //col:2099
	IA32_SYSENTER_CS_NOT_USED_2                                                        (_) = (((_) >> 32) & 0xFFFFFFFF)                       //col:2100
	IA32_SYSENTER_ESP                                                                      = 0x00000175                                       //col:2101
	IA32_SYSENTER_EIP                                                                      = 0x00000176                                       //col:2102
	IA32_MCG_CAP                                                                           = 0x00000179                                       //col:2103
	IA32_MCG_CAP_COUNT_BIT                                                                 = 0                                                //col:2104
	IA32_MCG_CAP_COUNT_FLAG                                                                = 0xFF                                             //col:2105
	IA32_MCG_CAP_COUNT_MASK                                                                = 0xFF                                             //col:2106
	IA32_MCG_CAP_COUNT                                                                 (_) = (((_) >> 0) & 0xFF)                              //col:2107
	IA32_MCG_CAP_MCG_CTL_P_BIT                                                             = 8                                                //col:2108
	IA32_MCG_CAP_MCG_CTL_P_FLAG                                                            = 0x100                                            //col:2109
	IA32_MCG_CAP_MCG_CTL_P_MASK                                                            = 0x01                                             //col:2110
	IA32_MCG_CAP_MCG_CTL_P                                                             (_) = (((_) >> 8) & 0x01)                              //col:2111
	IA32_MCG_CAP_MCG_EXT_P_BIT                                                             = 9                                                //col:2112
	IA32_MCG_CAP_MCG_EXT_P_FLAG                                                            = 0x200                                            //col:2113
	IA32_MCG_CAP_MCG_EXT_P_MASK                                                            = 0x01                                             //col:2114
	IA32_MCG_CAP_MCG_EXT_P                                                             (_) = (((_) >> 9) & 0x01)                              //col:2115
	IA32_MCG_CAP_MCP_CMCI_P_BIT                                                            = 10                                               //col:2116
	IA32_MCG_CAP_MCP_CMCI_P_FLAG                                                           = 0x400                                            //col:2117
	IA32_MCG_CAP_MCP_CMCI_P_MASK                                                           = 0x01                                             //col:2118
	IA32_MCG_CAP_MCP_CMCI_P                                                            (_) = (((_) >> 10) & 0x01)                             //col:2119
	IA32_MCG_CAP_MCG_TES_P_BIT                                                             = 11                                               //col:2120
	IA32_MCG_CAP_MCG_TES_P_FLAG                                                            = 0x800                                            //col:2121
	IA32_MCG_CAP_MCG_TES_P_MASK                                                            = 0x01                                             //col:2122
	IA32_MCG_CAP_MCG_TES_P                                                             (_) = (((_) >> 11) & 0x01)                             //col:2123
	IA32_MCG_CAP_MCG_EXT_CNT_BIT                                                           = 16                                               //col:2124
	IA32_MCG_CAP_MCG_EXT_CNT_FLAG                                                          = 0xFF0000                                         //col:2125
	IA32_MCG_CAP_MCG_EXT_CNT_MASK                                                          = 0xFF                                             //col:2126
	IA32_MCG_CAP_MCG_EXT_CNT                                                           (_) = (((_) >> 16) & 0xFF)                             //col:2127
	IA32_MCG_CAP_MCG_SER_P_BIT                                                             = 24                                               //col:2128
	IA32_MCG_CAP_MCG_SER_P_FLAG                                                            = 0x1000000                                        //col:2129
	IA32_MCG_CAP_MCG_SER_P_MASK                                                            = 0x01                                             //col:2130
	IA32_MCG_CAP_MCG_SER_P                                                             (_) = (((_) >> 24) & 0x01)                             //col:2131
	IA32_MCG_CAP_MCG_ELOG_P_BIT                                                            = 26                                               //col:2132
	IA32_MCG_CAP_MCG_ELOG_P_FLAG                                                           = 0x4000000                                        //col:2133
	IA32_MCG_CAP_MCG_ELOG_P_MASK                                                           = 0x01                                             //col:2134
	IA32_MCG_CAP_MCG_ELOG_P                                                            (_) = (((_) >> 26) & 0x01)                             //col:2135
	IA32_MCG_CAP_MCG_LMCE_P_BIT                                                            = 27                                               //col:2136
	IA32_MCG_CAP_MCG_LMCE_P_FLAG                                                           = 0x8000000                                        //col:2137
	IA32_MCG_CAP_MCG_LMCE_P_MASK                                                           = 0x01                                             //col:2138
	IA32_MCG_CAP_MCG_LMCE_P                                                            (_) = (((_) >> 27) & 0x01)                             //col:2139
	IA32_MCG_STATUS                                                                        = 0x0000017A                                       //col:2140
	IA32_MCG_STATUS_RIPV_BIT                                                               = 0                                                //col:2141
	IA32_MCG_STATUS_RIPV_FLAG                                                              = 0x01                                             //col:2142
	IA32_MCG_STATUS_RIPV_MASK                                                              = 0x01                                             //col:2143
	IA32_MCG_STATUS_RIPV                                                               (_) = (((_) >> 0) & 0x01)                              //col:2144
	IA32_MCG_STATUS_EIPV_BIT                                                               = 1                                                //col:2145
	IA32_MCG_STATUS_EIPV_FLAG                                                              = 0x02                                             //col:2146
	IA32_MCG_STATUS_EIPV_MASK                                                              = 0x01                                             //col:2147
	IA32_MCG_STATUS_EIPV                                                               (_) = (((_) >> 1) & 0x01)                              //col:2148
	IA32_MCG_STATUS_MCIP_BIT                                                               = 2                                                //col:2149
	IA32_MCG_STATUS_MCIP_FLAG                                                              = 0x04                                             //col:2150
	IA32_MCG_STATUS_MCIP_MASK                                                              = 0x01                                             //col:2151
	IA32_MCG_STATUS_MCIP                                                               (_) = (((_) >> 2) & 0x01)                              //col:2152
	IA32_MCG_STATUS_LMCE_S_BIT                                                             = 3                                                //col:2153
	IA32_MCG_STATUS_LMCE_S_FLAG                                                            = 0x08                                             //col:2154
	IA32_MCG_STATUS_LMCE_S_MASK                                                            = 0x01                                             //col:2155
	IA32_MCG_STATUS_LMCE_S                                                             (_) = (((_) >> 3) & 0x01)                              //col:2156
	IA32_MCG_CTL                                                                           = 0x0000017B                                       //col:2157
	IA32_PERFEVTSEL0                                                                       = 0x00000186                                       //col:2158
	IA32_PERFEVTSEL1                                                                       = 0x00000187                                       //col:2159
	IA32_PERFEVTSEL2                                                                       = 0x00000188                                       //col:2160
	IA32_PERFEVTSEL3                                                                       = 0x00000189                                       //col:2161
	IA32_PERFEVTSEL_EVENT_SELECT_BIT                                                       = 0                                                //col:2162
	IA32_PERFEVTSEL_EVENT_SELECT_FLAG                                                      = 0xFF                                             //col:2163
	IA32_PERFEVTSEL_EVENT_SELECT_MASK                                                      = 0xFF                                             //col:2164
	IA32_PERFEVTSEL_EVENT_SELECT                                                       (_) = (((_) >> 0) & 0xFF)                              //col:2165
	IA32_PERFEVTSEL_U_MASK_BIT                                                             = 8                                                //col:2166
	IA32_PERFEVTSEL_U_MASK_FLAG                                                            = 0xFF00                                           //col:2167
	IA32_PERFEVTSEL_U_MASK_MASK                                                            = 0xFF                                             //col:2168
	IA32_PERFEVTSEL_U_MASK                                                             (_) = (((_) >> 8) & 0xFF)                              //col:2169
	IA32_PERFEVTSEL_USR_BIT                                                                = 16                                               //col:2170
	IA32_PERFEVTSEL_USR_FLAG                                                               = 0x10000                                          //col:2171
	IA32_PERFEVTSEL_USR_MASK                                                               = 0x01                                             //col:2172
	IA32_PERFEVTSEL_USR                                                                (_) = (((_) >> 16) & 0x01)                             //col:2173
	IA32_PERFEVTSEL_OS_BIT                                                                 = 17                                               //col:2174
	IA32_PERFEVTSEL_OS_FLAG                                                                = 0x20000                                          //col:2175
	IA32_PERFEVTSEL_OS_MASK                                                                = 0x01                                             //col:2176
	IA32_PERFEVTSEL_OS                                                                 (_) = (((_) >> 17) & 0x01)                             //col:2177
	IA32_PERFEVTSEL_EDGE_BIT                                                               = 18                                               //col:2178
	IA32_PERFEVTSEL_EDGE_FLAG                                                              = 0x40000                                          //col:2179
	IA32_PERFEVTSEL_EDGE_MASK                                                              = 0x01                                             //col:2180
	IA32_PERFEVTSEL_EDGE                                                               (_) = (((_) >> 18) & 0x01)                             //col:2181
	IA32_PERFEVTSEL_PC_BIT                                                                 = 19                                               //col:2182
	IA32_PERFEVTSEL_PC_FLAG                                                                = 0x80000                                          //col:2183
	IA32_PERFEVTSEL_PC_MASK                                                                = 0x01                                             //col:2184
	IA32_PERFEVTSEL_PC                                                                 (_) = (((_) >> 19) & 0x01)                             //col:2185
	IA32_PERFEVTSEL_INTR_BIT                                                               = 20                                               //col:2186
	IA32_PERFEVTSEL_INTR_FLAG                                                              = 0x100000                                         //col:2187
	IA32_PERFEVTSEL_INTR_MASK                                                              = 0x01                                             //col:2188
	IA32_PERFEVTSEL_INTR                                                               (_) = (((_) >> 20) & 0x01)                             //col:2189
	IA32_PERFEVTSEL_ANY_THREAD_BIT                                                         = 21                                               //col:2190
	IA32_PERFEVTSEL_ANY_THREAD_FLAG                                                        = 0x200000                                         //col:2191
	IA32_PERFEVTSEL_ANY_THREAD_MASK                                                        = 0x01                                             //col:2192
	IA32_PERFEVTSEL_ANY_THREAD                                                         (_) = (((_) >> 21) & 0x01)                             //col:2193
	IA32_PERFEVTSEL_EN_BIT                                                                 = 22                                               //col:2194
	IA32_PERFEVTSEL_EN_FLAG                                                                = 0x400000                                         //col:2195
	IA32_PERFEVTSEL_EN_MASK                                                                = 0x01                                             //col:2196
	IA32_PERFEVTSEL_EN                                                                 (_) = (((_) >> 22) & 0x01)                             //col:2197
	IA32_PERFEVTSEL_INV_BIT                                                                = 23                                               //col:2198
	IA32_PERFEVTSEL_INV_FLAG                                                               = 0x800000                                         //col:2199
	IA32_PERFEVTSEL_INV_MASK                                                               = 0x01                                             //col:2200
	IA32_PERFEVTSEL_INV                                                                (_) = (((_) >> 23) & 0x01)                             //col:2201
	IA32_PERFEVTSEL_CMASK_BIT                                                              = 24                                               //col:2202
	IA32_PERFEVTSEL_CMASK_FLAG                                                             = 0xFF000000                                       //col:2203
	IA32_PERFEVTSEL_CMASK_MASK                                                             = 0xFF                                             //col:2204
	IA32_PERFEVTSEL_CMASK                                                              (_) = (((_) >> 24) & 0xFF)                             //col:2205
	IA32_PERF_STATUS                                                                       = 0x00000198                                       //col:2206
	IA32_PERF_STATUS_STATE_VALUE_BIT                                                       = 0                                                //col:2207
	IA32_PERF_STATUS_STATE_VALUE_FLAG                                                      = 0xFFFF                                           //col:2208
	IA32_PERF_STATUS_STATE_VALUE_MASK                                                      = 0xFFFF                                           //col:2209
	IA32_PERF_STATUS_STATE_VALUE                                                       (_) = (((_) >> 0) & 0xFFFF)                            //col:2210
	IA32_PERF_CTL                                                                          = 0x00000199                                       //col:2211
	IA32_PERF_CTL_TARGET_STATE_VALUE_BIT                                                   = 0                                                //col:2212
	IA32_PERF_CTL_TARGET_STATE_VALUE_FLAG                                                  = 0xFFFF                                           //col:2213
	IA32_PERF_CTL_TARGET_STATE_VALUE_MASK                                                  = 0xFFFF                                           //col:2214
	IA32_PERF_CTL_TARGET_STATE_VALUE                                                   (_) = (((_) >> 0) & 0xFFFF)                            //col:2215
	IA32_PERF_CTL_IDA_ENGAGE_BIT                                                           = 32                                               //col:2216
	IA32_PERF_CTL_IDA_ENGAGE_FLAG                                                          = 0x100000000                                      //col:2217
	IA32_PERF_CTL_IDA_ENGAGE_MASK                                                          = 0x01                                             //col:2218
	IA32_PERF_CTL_IDA_ENGAGE                                                           (_) = (((_) >> 32) & 0x01)                             //col:2219
	IA32_CLOCK_MODULATION                                                                  = 0x0000019A                                       //col:2220
	IA32_CLOCK_MODULATION_EXTENDED_ON_DEMAND_CLOCK_MODULATION_DUTY_CYCLE_BIT               = 0                                                //col:2221
	IA32_CLOCK_MODULATION_EXTENDED_ON_DEMAND_CLOCK_MODULATION_DUTY_CYCLE_FLAG              = 0x01                                             //col:2222
	IA32_CLOCK_MODULATION_EXTENDED_ON_DEMAND_CLOCK_MODULATION_DUTY_CYCLE_MASK              = 0x01                                             //col:2223
	IA32_CLOCK_MODULATION_EXTENDED_ON_DEMAND_CLOCK_MODULATION_DUTY_CYCLE               (_) = (((_) >> 0) & 0x01)                              //col:2224
	IA32_CLOCK_MODULATION_ON_DEMAND_CLOCK_MODULATION_DUTY_CYCLE_BIT                        = 1                                                //col:2225
	IA32_CLOCK_MODULATION_ON_DEMAND_CLOCK_MODULATION_DUTY_CYCLE_FLAG                       = 0x0E                                             //col:2226
	IA32_CLOCK_MODULATION_ON_DEMAND_CLOCK_MODULATION_DUTY_CYCLE_MASK                       = 0x07                                             //col:2227
	IA32_CLOCK_MODULATION_ON_DEMAND_CLOCK_MODULATION_DUTY_CYCLE                        (_) = (((_) >> 1) & 0x07)                              //col:2228
	IA32_CLOCK_MODULATION_ON_DEMAND_CLOCK_MODULATION_ENABLE_BIT                            = 4                                                //col:2229
	IA32_CLOCK_MODULATION_ON_DEMAND_CLOCK_MODULATION_ENABLE_FLAG                           = 0x10                                             //col:2230
	IA32_CLOCK_MODULATION_ON_DEMAND_CLOCK_MODULATION_ENABLE_MASK                           = 0x01                                             //col:2231
	IA32_CLOCK_MODULATION_ON_DEMAND_CLOCK_MODULATION_ENABLE                            (_) = (((_) >> 4) & 0x01)                              //col:2232
	IA32_THERM_INTERRUPT                                                                   = 0x0000019B                                       //col:2233
	IA32_THERM_INTERRUPT_HIGH_TEMPERATURE_INTERRUPT_ENABLE_BIT                             = 0                                                //col:2234
	IA32_THERM_INTERRUPT_HIGH_TEMPERATURE_INTERRUPT_ENABLE_FLAG                            = 0x01                                             //col:2235
	IA32_THERM_INTERRUPT_HIGH_TEMPERATURE_INTERRUPT_ENABLE_MASK                            = 0x01                                             //col:2236
	IA32_THERM_INTERRUPT_HIGH_TEMPERATURE_INTERRUPT_ENABLE                             (_) = (((_) >> 0) & 0x01)                              //col:2237
	IA32_THERM_INTERRUPT_LOW_TEMPERATURE_INTERRUPT_ENABLE_BIT                              = 1                                                //col:2238
	IA32_THERM_INTERRUPT_LOW_TEMPERATURE_INTERRUPT_ENABLE_FLAG                             = 0x02                                             //col:2239
	IA32_THERM_INTERRUPT_LOW_TEMPERATURE_INTERRUPT_ENABLE_MASK                             = 0x01                                             //col:2240
	IA32_THERM_INTERRUPT_LOW_TEMPERATURE_INTERRUPT_ENABLE                              (_) = (((_) >> 1) & 0x01)                              //col:2241
	IA32_THERM_INTERRUPT_PROCHOT_INTERRUPT_ENABLE_BIT                                      = 2                                                //col:2242
	IA32_THERM_INTERRUPT_PROCHOT_INTERRUPT_ENABLE_FLAG                                     = 0x04                                             //col:2243
	IA32_THERM_INTERRUPT_PROCHOT_INTERRUPT_ENABLE_MASK                                     = 0x01                                             //col:2244
	IA32_THERM_INTERRUPT_PROCHOT_INTERRUPT_ENABLE                                      (_) = (((_) >> 2) & 0x01)                              //col:2245
	IA32_THERM_INTERRUPT_FORCEPR_INTERRUPT_ENABLE_BIT                                      = 3                                                //col:2246
	IA32_THERM_INTERRUPT_FORCEPR_INTERRUPT_ENABLE_FLAG                                     = 0x08                                             //col:2247
	IA32_THERM_INTERRUPT_FORCEPR_INTERRUPT_ENABLE_MASK                                     = 0x01                                             //col:2248
	IA32_THERM_INTERRUPT_FORCEPR_INTERRUPT_ENABLE                                      (_) = (((_) >> 3) & 0x01)                              //col:2249
	IA32_THERM_INTERRUPT_CRITICAL_TEMPERATURE_INTERRUPT_ENABLE_BIT                         = 4                                                //col:2250
	IA32_THERM_INTERRUPT_CRITICAL_TEMPERATURE_INTERRUPT_ENABLE_FLAG                        = 0x10                                             //col:2251
	IA32_THERM_INTERRUPT_CRITICAL_TEMPERATURE_INTERRUPT_ENABLE_MASK                        = 0x01                                             //col:2252
	IA32_THERM_INTERRUPT_CRITICAL_TEMPERATURE_INTERRUPT_ENABLE                         (_) = (((_) >> 4) & 0x01)                              //col:2253
	IA32_THERM_INTERRUPT_THRESHOLD1_VALUE_BIT                                              = 8                                                //col:2254
	IA32_THERM_INTERRUPT_THRESHOLD1_VALUE_FLAG                                             = 0x7F00                                           //col:2255
	IA32_THERM_INTERRUPT_THRESHOLD1_VALUE_MASK                                             = 0x7F                                             //col:2256
	IA32_THERM_INTERRUPT_THRESHOLD1_VALUE                                              (_) = (((_) >> 8) & 0x7F)                              //col:2257
	IA32_THERM_INTERRUPT_THRESHOLD1_INTERRUPT_ENABLE_BIT                                   = 15                                               //col:2258
	IA32_THERM_INTERRUPT_THRESHOLD1_INTERRUPT_ENABLE_FLAG                                  = 0x8000                                           //col:2259
	IA32_THERM_INTERRUPT_THRESHOLD1_INTERRUPT_ENABLE_MASK                                  = 0x01                                             //col:2260
	IA32_THERM_INTERRUPT_THRESHOLD1_INTERRUPT_ENABLE                                   (_) = (((_) >> 15) & 0x01)                             //col:2261
	IA32_THERM_INTERRUPT_THRESHOLD2_VALUE_BIT                                              = 16                                               //col:2262
	IA32_THERM_INTERRUPT_THRESHOLD2_VALUE_FLAG                                             = 0x7F0000                                         //col:2263
	IA32_THERM_INTERRUPT_THRESHOLD2_VALUE_MASK                                             = 0x7F                                             //col:2264
	IA32_THERM_INTERRUPT_THRESHOLD2_VALUE                                              (_) = (((_) >> 16) & 0x7F)                             //col:2265
	IA32_THERM_INTERRUPT_THRESHOLD2_INTERRUPT_ENABLE_BIT                                   = 23                                               //col:2266
	IA32_THERM_INTERRUPT_THRESHOLD2_INTERRUPT_ENABLE_FLAG                                  = 0x800000                                         //col:2267
	IA32_THERM_INTERRUPT_THRESHOLD2_INTERRUPT_ENABLE_MASK                                  = 0x01                                             //col:2268
	IA32_THERM_INTERRUPT_THRESHOLD2_INTERRUPT_ENABLE                                   (_) = (((_) >> 23) & 0x01)                             //col:2269
	IA32_THERM_INTERRUPT_POWER_LIMIT_NOTIFICATION_ENABLE_BIT                               = 24                                               //col:2270
	IA32_THERM_INTERRUPT_POWER_LIMIT_NOTIFICATION_ENABLE_FLAG                              = 0x1000000                                        //col:2271
	IA32_THERM_INTERRUPT_POWER_LIMIT_NOTIFICATION_ENABLE_MASK                              = 0x01                                             //col:2272
	IA32_THERM_INTERRUPT_POWER_LIMIT_NOTIFICATION_ENABLE                               (_) = (((_) >> 24) & 0x01)                             //col:2273
	IA32_THERM_STATUS                                                                      = 0x0000019C                                       //col:2274
	IA32_THERM_STATUS_THERMAL_STATUS_BIT                                                   = 0                                                //col:2275
	IA32_THERM_STATUS_THERMAL_STATUS_FLAG                                                  = 0x01                                             //col:2276
	IA32_THERM_STATUS_THERMAL_STATUS_MASK                                                  = 0x01                                             //col:2277
	IA32_THERM_STATUS_THERMAL_STATUS                                                   (_) = (((_) >> 0) & 0x01)                              //col:2278
	IA32_THERM_STATUS_THERMAL_STATUS_LOG_BIT                                               = 1                                                //col:2279
	IA32_THERM_STATUS_THERMAL_STATUS_LOG_FLAG                                              = 0x02                                             //col:2280
	IA32_THERM_STATUS_THERMAL_STATUS_LOG_MASK                                              = 0x01                                             //col:2281
	IA32_THERM_STATUS_THERMAL_STATUS_LOG                                               (_) = (((_) >> 1) & 0x01)                              //col:2282
	IA32_THERM_STATUS_PROCHOT_FORCEPR_EVENT_BIT                                            = 2                                                //col:2283
	IA32_THERM_STATUS_PROCHOT_FORCEPR_EVENT_FLAG                                           = 0x04                                             //col:2284
	IA32_THERM_STATUS_PROCHOT_FORCEPR_EVENT_MASK                                           = 0x01                                             //col:2285
	IA32_THERM_STATUS_PROCHOT_FORCEPR_EVENT                                            (_) = (((_) >> 2) & 0x01)                              //col:2286
	IA32_THERM_STATUS_PROCHOT_FORCEPR_LOG_BIT                                              = 3                                                //col:2287
	IA32_THERM_STATUS_PROCHOT_FORCEPR_LOG_FLAG                                             = 0x08                                             //col:2288
	IA32_THERM_STATUS_PROCHOT_FORCEPR_LOG_MASK                                             = 0x01                                             //col:2289
	IA32_THERM_STATUS_PROCHOT_FORCEPR_LOG                                              (_) = (((_) >> 3) & 0x01)                              //col:2290
	IA32_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_BIT                                      = 4                                                //col:2291
	IA32_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_FLAG                                     = 0x10                                             //col:2292
	IA32_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_MASK                                     = 0x01                                             //col:2293
	IA32_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS                                      (_) = (((_) >> 4) & 0x01)                              //col:2294
	IA32_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_LOG_BIT                                  = 5                                                //col:2295
	IA32_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_LOG_FLAG                                 = 0x20                                             //col:2296
	IA32_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_LOG_MASK                                 = 0x01                                             //col:2297
	IA32_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_LOG                                  (_) = (((_) >> 5) & 0x01)                              //col:2298
	IA32_THERM_STATUS_THERMAL_THRESHOLD1_STATUS_BIT                                        = 6                                                //col:2299
	IA32_THERM_STATUS_THERMAL_THRESHOLD1_STATUS_FLAG                                       = 0x40                                             //col:2300
	IA32_THERM_STATUS_THERMAL_THRESHOLD1_STATUS_MASK                                       = 0x01                                             //col:2301
	IA32_THERM_STATUS_THERMAL_THRESHOLD1_STATUS                                        (_) = (((_) >> 6) & 0x01)                              //col:2302
	IA32_THERM_STATUS_THERMAL_THRESHOLD1_LOG_BIT                                           = 7                                                //col:2303
	IA32_THERM_STATUS_THERMAL_THRESHOLD1_LOG_FLAG                                          = 0x80                                             //col:2304
	IA32_THERM_STATUS_THERMAL_THRESHOLD1_LOG_MASK                                          = 0x01                                             //col:2305
	IA32_THERM_STATUS_THERMAL_THRESHOLD1_LOG                                           (_) = (((_) >> 7) & 0x01)                              //col:2306
	IA32_THERM_STATUS_THERMAL_THRESHOLD2_STATUS_BIT                                        = 8                                                //col:2307
	IA32_THERM_STATUS_THERMAL_THRESHOLD2_STATUS_FLAG                                       = 0x100                                            //col:2308
	IA32_THERM_STATUS_THERMAL_THRESHOLD2_STATUS_MASK                                       = 0x01                                             //col:2309
	IA32_THERM_STATUS_THERMAL_THRESHOLD2_STATUS                                        (_) = (((_) >> 8) & 0x01)                              //col:2310
	IA32_THERM_STATUS_THERMAL_THRESHOLD2_LOG_BIT                                           = 9                                                //col:2311
	IA32_THERM_STATUS_THERMAL_THRESHOLD2_LOG_FLAG                                          = 0x200                                            //col:2312
	IA32_THERM_STATUS_THERMAL_THRESHOLD2_LOG_MASK                                          = 0x01                                             //col:2313
	IA32_THERM_STATUS_THERMAL_THRESHOLD2_LOG                                           (_) = (((_) >> 9) & 0x01)                              //col:2314
	IA32_THERM_STATUS_POWER_LIMITATION_STATUS_BIT                                          = 10                                               //col:2315
	IA32_THERM_STATUS_POWER_LIMITATION_STATUS_FLAG                                         = 0x400                                            //col:2316
	IA32_THERM_STATUS_POWER_LIMITATION_STATUS_MASK                                         = 0x01                                             //col:2317
	IA32_THERM_STATUS_POWER_LIMITATION_STATUS                                          (_) = (((_) >> 10) & 0x01)                             //col:2318
	IA32_THERM_STATUS_POWER_LIMITATION_LOG_BIT                                             = 11                                               //col:2319
	IA32_THERM_STATUS_POWER_LIMITATION_LOG_FLAG                                            = 0x800                                            //col:2320
	IA32_THERM_STATUS_POWER_LIMITATION_LOG_MASK                                            = 0x01                                             //col:2321
	IA32_THERM_STATUS_POWER_LIMITATION_LOG                                             (_) = (((_) >> 11) & 0x01)                             //col:2322
	IA32_THERM_STATUS_CURRENT_LIMIT_STATUS_BIT                                             = 12                                               //col:2323
	IA32_THERM_STATUS_CURRENT_LIMIT_STATUS_FLAG                                            = 0x1000                                           //col:2324
	IA32_THERM_STATUS_CURRENT_LIMIT_STATUS_MASK                                            = 0x01                                             //col:2325
	IA32_THERM_STATUS_CURRENT_LIMIT_STATUS                                             (_) = (((_) >> 12) & 0x01)                             //col:2326
	IA32_THERM_STATUS_CURRENT_LIMIT_LOG_BIT                                                = 13                                               //col:2327
	IA32_THERM_STATUS_CURRENT_LIMIT_LOG_FLAG                                               = 0x2000                                           //col:2328
	IA32_THERM_STATUS_CURRENT_LIMIT_LOG_MASK                                               = 0x01                                             //col:2329
	IA32_THERM_STATUS_CURRENT_LIMIT_LOG                                                (_) = (((_) >> 13) & 0x01)                             //col:2330
	IA32_THERM_STATUS_CROSS_DOMAIN_LIMIT_STATUS_BIT                                        = 14                                               //col:2331
	IA32_THERM_STATUS_CROSS_DOMAIN_LIMIT_STATUS_FLAG                                       = 0x4000                                           //col:2332
	IA32_THERM_STATUS_CROSS_DOMAIN_LIMIT_STATUS_MASK                                       = 0x01                                             //col:2333
	IA32_THERM_STATUS_CROSS_DOMAIN_LIMIT_STATUS                                        (_) = (((_) >> 14) & 0x01)                             //col:2334
	IA32_THERM_STATUS_CROSS_DOMAIN_LIMIT_LOG_BIT                                           = 15                                               //col:2335
	IA32_THERM_STATUS_CROSS_DOMAIN_LIMIT_LOG_FLAG                                          = 0x8000                                           //col:2336
	IA32_THERM_STATUS_CROSS_DOMAIN_LIMIT_LOG_MASK                                          = 0x01                                             //col:2337
	IA32_THERM_STATUS_CROSS_DOMAIN_LIMIT_LOG                                           (_) = (((_) >> 15) & 0x01)                             //col:2338
	IA32_THERM_STATUS_DIGITAL_READOUT_BIT                                                  = 16                                               //col:2339
	IA32_THERM_STATUS_DIGITAL_READOUT_FLAG                                                 = 0x7F0000                                         //col:2340
	IA32_THERM_STATUS_DIGITAL_READOUT_MASK                                                 = 0x7F                                             //col:2341
	IA32_THERM_STATUS_DIGITAL_READOUT                                                  (_) = (((_) >> 16) & 0x7F)                             //col:2342
	IA32_THERM_STATUS_RESOLUTION_IN_DEGREES_CELSIUS_BIT                                    = 27                                               //col:2343
	IA32_THERM_STATUS_RESOLUTION_IN_DEGREES_CELSIUS_FLAG                                   = 0x78000000                                       //col:2344
	IA32_THERM_STATUS_RESOLUTION_IN_DEGREES_CELSIUS_MASK                                   = 0x0F                                             //col:2345
	IA32_THERM_STATUS_RESOLUTION_IN_DEGREES_CELSIUS                                    (_) = (((_) >> 27) & 0x0F)                             //col:2346
	IA32_THERM_STATUS_READING_VALID_BIT                                                    = 31                                               //col:2347
	IA32_THERM_STATUS_READING_VALID_FLAG                                                   = 0x80000000                                       //col:2348
	IA32_THERM_STATUS_READING_VALID_MASK                                                   = 0x01                                             //col:2349
	IA32_THERM_STATUS_READING_VALID                                                    (_) = (((_) >> 31) & 0x01)                             //col:2350
	IA32_MISC_ENABLE                                                                       = 0x000001A0                                       //col:2351
	IA32_MISC_ENABLE_FAST_STRINGS_ENABLE_BIT                                               = 0                                                //col:2352
	IA32_MISC_ENABLE_FAST_STRINGS_ENABLE_FLAG                                              = 0x01                                             //col:2353
	IA32_MISC_ENABLE_FAST_STRINGS_ENABLE_MASK                                              = 0x01                                             //col:2354
	IA32_MISC_ENABLE_FAST_STRINGS_ENABLE                                               (_) = (((_) >> 0) & 0x01)                              //col:2355
	IA32_MISC_ENABLE_AUTOMATIC_THERMAL_CONTROL_CIRCUIT_ENABLE_BIT                          = 3                                                //col:2356
	IA32_MISC_ENABLE_AUTOMATIC_THERMAL_CONTROL_CIRCUIT_ENABLE_FLAG                         = 0x08                                             //col:2357
	IA32_MISC_ENABLE_AUTOMATIC_THERMAL_CONTROL_CIRCUIT_ENABLE_MASK                         = 0x01                                             //col:2358
	IA32_MISC_ENABLE_AUTOMATIC_THERMAL_CONTROL_CIRCUIT_ENABLE                          (_) = (((_) >> 3) & 0x01)                              //col:2359
	IA32_MISC_ENABLE_PERFORMANCE_MONITORING_AVAILABLE_BIT                                  = 7                                                //col:2360
	IA32_MISC_ENABLE_PERFORMANCE_MONITORING_AVAILABLE_FLAG                                 = 0x80                                             //col:2361
	IA32_MISC_ENABLE_PERFORMANCE_MONITORING_AVAILABLE_MASK                                 = 0x01                                             //col:2362
	IA32_MISC_ENABLE_PERFORMANCE_MONITORING_AVAILABLE                                  (_) = (((_) >> 7) & 0x01)                              //col:2363
	IA32_MISC_ENABLE_BRANCH_TRACE_STORAGE_UNAVAILABLE_BIT                                  = 11                                               //col:2364
	IA32_MISC_ENABLE_BRANCH_TRACE_STORAGE_UNAVAILABLE_FLAG                                 = 0x800                                            //col:2365
	IA32_MISC_ENABLE_BRANCH_TRACE_STORAGE_UNAVAILABLE_MASK                                 = 0x01                                             //col:2366
	IA32_MISC_ENABLE_BRANCH_TRACE_STORAGE_UNAVAILABLE                                  (_) = (((_) >> 11) & 0x01)                             //col:2367
	IA32_MISC_ENABLE_PROCESSOR_EVENT_BASED_SAMPLING_UNAVAILABLE_BIT                        = 12                                               //col:2368
	IA32_MISC_ENABLE_PROCESSOR_EVENT_BASED_SAMPLING_UNAVAILABLE_FLAG                       = 0x1000                                           //col:2369
	IA32_MISC_ENABLE_PROCESSOR_EVENT_BASED_SAMPLING_UNAVAILABLE_MASK                       = 0x01                                             //col:2370
	IA32_MISC_ENABLE_PROCESSOR_EVENT_BASED_SAMPLING_UNAVAILABLE                        (_) = (((_) >> 12) & 0x01)                             //col:2371
	IA32_MISC_ENABLE_ENHANCED_INTEL_SPEEDSTEP_TECHNOLOGY_ENABLE_BIT                        = 16                                               //col:2372
	IA32_MISC_ENABLE_ENHANCED_INTEL_SPEEDSTEP_TECHNOLOGY_ENABLE_FLAG                       = 0x10000                                          //col:2373
	IA32_MISC_ENABLE_ENHANCED_INTEL_SPEEDSTEP_TECHNOLOGY_ENABLE_MASK                       = 0x01                                             //col:2374
	IA32_MISC_ENABLE_ENHANCED_INTEL_SPEEDSTEP_TECHNOLOGY_ENABLE                        (_) = (((_) >> 16) & 0x01)                             //col:2375
	IA32_MISC_ENABLE_ENABLE_MONITOR_FSM_BIT                                                = 18                                               //col:2376
	IA32_MISC_ENABLE_ENABLE_MONITOR_FSM_FLAG                                               = 0x40000                                          //col:2377
	IA32_MISC_ENABLE_ENABLE_MONITOR_FSM_MASK                                               = 0x01                                             //col:2378
	IA32_MISC_ENABLE_ENABLE_MONITOR_FSM                                                (_) = (((_) >> 18) & 0x01)                             //col:2379
	IA32_MISC_ENABLE_LIMIT_CPUID_MAXVAL_BIT                                                = 22                                               //col:2380
	IA32_MISC_ENABLE_LIMIT_CPUID_MAXVAL_FLAG                                               = 0x400000                                         //col:2381
	IA32_MISC_ENABLE_LIMIT_CPUID_MAXVAL_MASK                                               = 0x01                                             //col:2382
	IA32_MISC_ENABLE_LIMIT_CPUID_MAXVAL                                                (_) = (((_) >> 22) & 0x01)                             //col:2383
	IA32_MISC_ENABLE_XTPR_MESSAGE_DISABLE_BIT                                              = 23                                               //col:2384
	IA32_MISC_ENABLE_XTPR_MESSAGE_DISABLE_FLAG                                             = 0x800000                                         //col:2385
	IA32_MISC_ENABLE_XTPR_MESSAGE_DISABLE_MASK                                             = 0x01                                             //col:2386
	IA32_MISC_ENABLE_XTPR_MESSAGE_DISABLE                                              (_) = (((_) >> 23) & 0x01)                             //col:2387
	IA32_MISC_ENABLE_XD_BIT_DISABLE_BIT                                                    = 34                                               //col:2388
	IA32_MISC_ENABLE_XD_BIT_DISABLE_FLAG                                                   = 0x400000000                                      //col:2389
	IA32_MISC_ENABLE_XD_BIT_DISABLE_MASK                                                   = 0x01                                             //col:2390
	IA32_MISC_ENABLE_XD_BIT_DISABLE                                                    (_) = (((_) >> 34) & 0x01)                             //col:2391
	IA32_ENERGY_PERF_BIAS                                                                  = 0x000001B0                                       //col:2392
	IA32_ENERGY_PERF_BIAS_POWER_POLICY_PREFERENCE_BIT                                      = 0                                                //col:2393
	IA32_ENERGY_PERF_BIAS_POWER_POLICY_PREFERENCE_FLAG                                     = 0x0F                                             //col:2394
	IA32_ENERGY_PERF_BIAS_POWER_POLICY_PREFERENCE_MASK                                     = 0x0F                                             //col:2395
	IA32_ENERGY_PERF_BIAS_POWER_POLICY_PREFERENCE                                      (_) = (((_) >> 0) & 0x0F)                              //col:2396
	IA32_PACKAGE_THERM_STATUS                                                              = 0x000001B1                                       //col:2397
	IA32_PACKAGE_THERM_STATUS_THERMAL_STATUS_BIT                                           = 0                                                //col:2398
	IA32_PACKAGE_THERM_STATUS_THERMAL_STATUS_FLAG                                          = 0x01                                             //col:2399
	IA32_PACKAGE_THERM_STATUS_THERMAL_STATUS_MASK                                          = 0x01                                             //col:2400
	IA32_PACKAGE_THERM_STATUS_THERMAL_STATUS                                           (_) = (((_) >> 0) & 0x01)                              //col:2401
	IA32_PACKAGE_THERM_STATUS_THERMAL_STATUS_LOG_BIT                                       = 1                                                //col:2402
	IA32_PACKAGE_THERM_STATUS_THERMAL_STATUS_LOG_FLAG                                      = 0x02                                             //col:2403
	IA32_PACKAGE_THERM_STATUS_THERMAL_STATUS_LOG_MASK                                      = 0x01                                             //col:2404
	IA32_PACKAGE_THERM_STATUS_THERMAL_STATUS_LOG                                       (_) = (((_) >> 1) & 0x01)                              //col:2405
	IA32_PACKAGE_THERM_STATUS_PROCHOT_EVENT_BIT                                            = 2                                                //col:2406
	IA32_PACKAGE_THERM_STATUS_PROCHOT_EVENT_FLAG                                           = 0x04                                             //col:2407
	IA32_PACKAGE_THERM_STATUS_PROCHOT_EVENT_MASK                                           = 0x01                                             //col:2408
	IA32_PACKAGE_THERM_STATUS_PROCHOT_EVENT                                            (_) = (((_) >> 2) & 0x01)                              //col:2409
	IA32_PACKAGE_THERM_STATUS_PROCHOT_LOG_BIT                                              = 3                                                //col:2410
	IA32_PACKAGE_THERM_STATUS_PROCHOT_LOG_FLAG                                             = 0x08                                             //col:2411
	IA32_PACKAGE_THERM_STATUS_PROCHOT_LOG_MASK                                             = 0x01                                             //col:2412
	IA32_PACKAGE_THERM_STATUS_PROCHOT_LOG                                              (_) = (((_) >> 3) & 0x01)                              //col:2413
	IA32_PACKAGE_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_BIT                              = 4                                                //col:2414
	IA32_PACKAGE_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_FLAG                             = 0x10                                             //col:2415
	IA32_PACKAGE_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_MASK                             = 0x01                                             //col:2416
	IA32_PACKAGE_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS                              (_) = (((_) >> 4) & 0x01)                              //col:2417
	IA32_PACKAGE_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_LOG_BIT                          = 5                                                //col:2418
	IA32_PACKAGE_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_LOG_FLAG                         = 0x20                                             //col:2419
	IA32_PACKAGE_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_LOG_MASK                         = 0x01                                             //col:2420
	IA32_PACKAGE_THERM_STATUS_CRITICAL_TEMPERATURE_STATUS_LOG                          (_) = (((_) >> 5) & 0x01)                              //col:2421
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD1_STATUS_BIT                                = 6                                                //col:2422
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD1_STATUS_FLAG                               = 0x40                                             //col:2423
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD1_STATUS_MASK                               = 0x01                                             //col:2424
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD1_STATUS                                (_) = (((_) >> 6) & 0x01)                              //col:2425
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD1_LOG_BIT                                   = 7                                                //col:2426
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD1_LOG_FLAG                                  = 0x80                                             //col:2427
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD1_LOG_MASK                                  = 0x01                                             //col:2428
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD1_LOG                                   (_) = (((_) >> 7) & 0x01)                              //col:2429
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD2_STATUS_BIT                                = 8                                                //col:2430
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD2_STATUS_FLAG                               = 0x100                                            //col:2431
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD2_STATUS_MASK                               = 0x01                                             //col:2432
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD2_STATUS                                (_) = (((_) >> 8) & 0x01)                              //col:2433
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD2_LOG_BIT                                   = 9                                                //col:2434
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD2_LOG_FLAG                                  = 0x200                                            //col:2435
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD2_LOG_MASK                                  = 0x01                                             //col:2436
	IA32_PACKAGE_THERM_STATUS_THERMAL_THRESHOLD2_LOG                                   (_) = (((_) >> 9) & 0x01)                              //col:2437
	IA32_PACKAGE_THERM_STATUS_POWER_LIMITATION_STATUS_BIT                                  = 10                                               //col:2438
	IA32_PACKAGE_THERM_STATUS_POWER_LIMITATION_STATUS_FLAG                                 = 0x400                                            //col:2439
	IA32_PACKAGE_THERM_STATUS_POWER_LIMITATION_STATUS_MASK                                 = 0x01                                             //col:2440
	IA32_PACKAGE_THERM_STATUS_POWER_LIMITATION_STATUS                                  (_) = (((_) >> 10) & 0x01)                             //col:2441
	IA32_PACKAGE_THERM_STATUS_POWER_LIMITATION_LOG_BIT                                     = 11                                               //col:2442
	IA32_PACKAGE_THERM_STATUS_POWER_LIMITATION_LOG_FLAG                                    = 0x800                                            //col:2443
	IA32_PACKAGE_THERM_STATUS_POWER_LIMITATION_LOG_MASK                                    = 0x01                                             //col:2444
	IA32_PACKAGE_THERM_STATUS_POWER_LIMITATION_LOG                                     (_) = (((_) >> 11) & 0x01)                             //col:2445
	IA32_PACKAGE_THERM_STATUS_DIGITAL_READOUT_BIT                                          = 16                                               //col:2446
	IA32_PACKAGE_THERM_STATUS_DIGITAL_READOUT_FLAG                                         = 0x7F0000                                         //col:2447
	IA32_PACKAGE_THERM_STATUS_DIGITAL_READOUT_MASK                                         = 0x7F                                             //col:2448
	IA32_PACKAGE_THERM_STATUS_DIGITAL_READOUT                                          (_) = (((_) >> 16) & 0x7F)                             //col:2449
	IA32_PACKAGE_THERM_INTERRUPT                                                           = 0x000001B2                                       //col:2450
	IA32_PACKAGE_THERM_INTERRUPT_HIGH_TEMPERATURE_INTERRUPT_ENABLE_BIT                     = 0                                                //col:2451
	IA32_PACKAGE_THERM_INTERRUPT_HIGH_TEMPERATURE_INTERRUPT_ENABLE_FLAG                    = 0x01                                             //col:2452
	IA32_PACKAGE_THERM_INTERRUPT_HIGH_TEMPERATURE_INTERRUPT_ENABLE_MASK                    = 0x01                                             //col:2453
	IA32_PACKAGE_THERM_INTERRUPT_HIGH_TEMPERATURE_INTERRUPT_ENABLE                     (_) = (((_) >> 0) & 0x01)                              //col:2454
	IA32_PACKAGE_THERM_INTERRUPT_LOW_TEMPERATURE_INTERRUPT_ENABLE_BIT                      = 1                                                //col:2455
	IA32_PACKAGE_THERM_INTERRUPT_LOW_TEMPERATURE_INTERRUPT_ENABLE_FLAG                     = 0x02                                             //col:2456
	IA32_PACKAGE_THERM_INTERRUPT_LOW_TEMPERATURE_INTERRUPT_ENABLE_MASK                     = 0x01                                             //col:2457
	IA32_PACKAGE_THERM_INTERRUPT_LOW_TEMPERATURE_INTERRUPT_ENABLE                      (_) = (((_) >> 1) & 0x01)                              //col:2458
	IA32_PACKAGE_THERM_INTERRUPT_PROCHOT_INTERRUPT_ENABLE_BIT                              = 2                                                //col:2459
	IA32_PACKAGE_THERM_INTERRUPT_PROCHOT_INTERRUPT_ENABLE_FLAG                             = 0x04                                             //col:2460
	IA32_PACKAGE_THERM_INTERRUPT_PROCHOT_INTERRUPT_ENABLE_MASK                             = 0x01                                             //col:2461
	IA32_PACKAGE_THERM_INTERRUPT_PROCHOT_INTERRUPT_ENABLE                              (_) = (((_) >> 2) & 0x01)                              //col:2462
	IA32_PACKAGE_THERM_INTERRUPT_OVERHEAT_INTERRUPT_ENABLE_BIT                             = 4                                                //col:2463
	IA32_PACKAGE_THERM_INTERRUPT_OVERHEAT_INTERRUPT_ENABLE_FLAG                            = 0x10                                             //col:2464
	IA32_PACKAGE_THERM_INTERRUPT_OVERHEAT_INTERRUPT_ENABLE_MASK                            = 0x01                                             //col:2465
	IA32_PACKAGE_THERM_INTERRUPT_OVERHEAT_INTERRUPT_ENABLE                             (_) = (((_) >> 4) & 0x01)                              //col:2466
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD1_VALUE_BIT                                      = 8                                                //col:2467
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD1_VALUE_FLAG                                     = 0x7F00                                           //col:2468
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD1_VALUE_MASK                                     = 0x7F                                             //col:2469
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD1_VALUE                                      (_) = (((_) >> 8) & 0x7F)                              //col:2470
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD1_INTERRUPT_ENABLE_BIT                           = 15                                               //col:2471
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD1_INTERRUPT_ENABLE_FLAG                          = 0x8000                                           //col:2472
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD1_INTERRUPT_ENABLE_MASK                          = 0x01                                             //col:2473
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD1_INTERRUPT_ENABLE                           (_) = (((_) >> 15) & 0x01)                             //col:2474
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD2_VALUE_BIT                                      = 16                                               //col:2475
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD2_VALUE_FLAG                                     = 0x7F0000                                         //col:2476
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD2_VALUE_MASK                                     = 0x7F                                             //col:2477
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD2_VALUE                                      (_) = (((_) >> 16) & 0x7F)                             //col:2478
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD2_INTERRUPT_ENABLE_BIT                           = 23                                               //col:2479
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD2_INTERRUPT_ENABLE_FLAG                          = 0x800000                                         //col:2480
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD2_INTERRUPT_ENABLE_MASK                          = 0x01                                             //col:2481
	IA32_PACKAGE_THERM_INTERRUPT_THRESHOLD2_INTERRUPT_ENABLE                           (_) = (((_) >> 23) & 0x01)                             //col:2482
	IA32_PACKAGE_THERM_INTERRUPT_POWER_LIMIT_NOTIFICATION_ENABLE_BIT                       = 24                                               //col:2483
	IA32_PACKAGE_THERM_INTERRUPT_POWER_LIMIT_NOTIFICATION_ENABLE_FLAG                      = 0x1000000                                        //col:2484
	IA32_PACKAGE_THERM_INTERRUPT_POWER_LIMIT_NOTIFICATION_ENABLE_MASK                      = 0x01                                             //col:2485
	IA32_PACKAGE_THERM_INTERRUPT_POWER_LIMIT_NOTIFICATION_ENABLE                       (_) = (((_) >> 24) & 0x01)                             //col:2486
	IA32_DEBUGCTL                                                                          = 0x000001D9                                       //col:2487
	IA32_DEBUGCTL_LBR_BIT                                                                  = 0                                                //col:2488
	IA32_DEBUGCTL_LBR_FLAG                                                                 = 0x01                                             //col:2489
	IA32_DEBUGCTL_LBR_MASK                                                                 = 0x01                                             //col:2490
	IA32_DEBUGCTL_LBR                                                                  (_) = (((_) >> 0) & 0x01)                              //col:2491
	IA32_DEBUGCTL_BTF_BIT                                                                  = 1                                                //col:2492
	IA32_DEBUGCTL_BTF_FLAG                                                                 = 0x02                                             //col:2493
	IA32_DEBUGCTL_BTF_MASK                                                                 = 0x01                                             //col:2494
	IA32_DEBUGCTL_BTF                                                                  (_) = (((_) >> 1) & 0x01)                              //col:2495
	IA32_DEBUGCTL_TR_BIT                                                                   = 6                                                //col:2496
	IA32_DEBUGCTL_TR_FLAG                                                                  = 0x40                                             //col:2497
	IA32_DEBUGCTL_TR_MASK                                                                  = 0x01                                             //col:2498
	IA32_DEBUGCTL_TR                                                                   (_) = (((_) >> 6) & 0x01)                              //col:2499
	IA32_DEBUGCTL_BTS_BIT                                                                  = 7                                                //col:2500
	IA32_DEBUGCTL_BTS_FLAG                                                                 = 0x80                                             //col:2501
	IA32_DEBUGCTL_BTS_MASK                                                                 = 0x01                                             //col:2502
	IA32_DEBUGCTL_BTS                                                                  (_) = (((_) >> 7) & 0x01)                              //col:2503
	IA32_DEBUGCTL_BTINT_BIT                                                                = 8                                                //col:2504
	IA32_DEBUGCTL_BTINT_FLAG                                                               = 0x100                                            //col:2505
	IA32_DEBUGCTL_BTINT_MASK                                                               = 0x01                                             //col:2506
	IA32_DEBUGCTL_BTINT                                                                (_) = (((_) >> 8) & 0x01)                              //col:2507
	IA32_DEBUGCTL_BTS_OFF_OS_BIT                                                           = 9                                                //col:2508
	IA32_DEBUGCTL_BTS_OFF_OS_FLAG                                                          = 0x200                                            //col:2509
	IA32_DEBUGCTL_BTS_OFF_OS_MASK                                                          = 0x01                                             //col:2510
	IA32_DEBUGCTL_BTS_OFF_OS                                                           (_) = (((_) >> 9) & 0x01)                              //col:2511
	IA32_DEBUGCTL_BTS_OFF_USR_BIT                                                          = 10                                               //col:2512
	IA32_DEBUGCTL_BTS_OFF_USR_FLAG                                                         = 0x400                                            //col:2513
	IA32_DEBUGCTL_BTS_OFF_USR_MASK                                                         = 0x01                                             //col:2514
	IA32_DEBUGCTL_BTS_OFF_USR                                                          (_) = (((_) >> 10) & 0x01)                             //col:2515
	IA32_DEBUGCTL_FREEZE_LBRS_ON_PMI_BIT                                                   = 11                                               //col:2516
	IA32_DEBUGCTL_FREEZE_LBRS_ON_PMI_FLAG                                                  = 0x800                                            //col:2517
	IA32_DEBUGCTL_FREEZE_LBRS_ON_PMI_MASK                                                  = 0x01                                             //col:2518
	IA32_DEBUGCTL_FREEZE_LBRS_ON_PMI                                                   (_) = (((_) >> 11) & 0x01)                             //col:2519
	IA32_DEBUGCTL_FREEZE_PERFMON_ON_PMI_BIT                                                = 12                                               //col:2520
	IA32_DEBUGCTL_FREEZE_PERFMON_ON_PMI_FLAG                                               = 0x1000                                           //col:2521
	IA32_DEBUGCTL_FREEZE_PERFMON_ON_PMI_MASK                                               = 0x01                                             //col:2522
	IA32_DEBUGCTL_FREEZE_PERFMON_ON_PMI                                                (_) = (((_) >> 12) & 0x01)                             //col:2523
	IA32_DEBUGCTL_ENABLE_UNCORE_PMI_BIT                                                    = 13                                               //col:2524
	IA32_DEBUGCTL_ENABLE_UNCORE_PMI_FLAG                                                   = 0x2000                                           //col:2525
	IA32_DEBUGCTL_ENABLE_UNCORE_PMI_MASK                                                   = 0x01                                             //col:2526
	IA32_DEBUGCTL_ENABLE_UNCORE_PMI                                                    (_) = (((_) >> 13) & 0x01)                             //col:2527
	IA32_DEBUGCTL_FREEZE_WHILE_SMM_BIT                                                     = 14                                               //col:2528
	IA32_DEBUGCTL_FREEZE_WHILE_SMM_FLAG                                                    = 0x4000                                           //col:2529
	IA32_DEBUGCTL_FREEZE_WHILE_SMM_MASK                                                    = 0x01                                             //col:2530
	IA32_DEBUGCTL_FREEZE_WHILE_SMM                                                     (_) = (((_) >> 14) & 0x01)                             //col:2531
	IA32_DEBUGCTL_RTM_DEBUG_BIT                                                            = 15                                               //col:2532
	IA32_DEBUGCTL_RTM_DEBUG_FLAG                                                           = 0x8000                                           //col:2533
	IA32_DEBUGCTL_RTM_DEBUG_MASK                                                           = 0x01                                             //col:2534
	IA32_DEBUGCTL_RTM_DEBUG                                                            (_) = (((_) >> 15) & 0x01)                             //col:2535
	IA32_SMRR_PHYSBASE                                                                     = 0x000001F2                                       //col:2536
	IA32_SMRR_PHYSBASE_TYPE_BIT                                                            = 0                                                //col:2537
	IA32_SMRR_PHYSBASE_TYPE_FLAG                                                           = 0xFF                                             //col:2538
	IA32_SMRR_PHYSBASE_TYPE_MASK                                                           = 0xFF                                             //col:2539
	IA32_SMRR_PHYSBASE_TYPE                                                            (_) = (((_) >> 0) & 0xFF)                              //col:2540
	IA32_SMRR_PHYSBASE_SMRR_PHYSICAL_BASE_ADDRESS_BIT                                      = 12                                               //col:2541
	IA32_SMRR_PHYSBASE_SMRR_PHYSICAL_BASE_ADDRESS_FLAG                                     = 0xFFFFF000                                       //col:2542
	IA32_SMRR_PHYSBASE_SMRR_PHYSICAL_BASE_ADDRESS_MASK                                     = 0xFFFFF                                          //col:2543
	IA32_SMRR_PHYSBASE_SMRR_PHYSICAL_BASE_ADDRESS                                      (_) = (((_) >> 12) & 0xFFFFF)                          //col:2544
	IA32_SMRR_PHYSMASK                                                                     = 0x000001F3                                       //col:2545
	IA32_SMRR_PHYSMASK_ENABLE_RANGE_MASK_BIT                                               = 11                                               //col:2546
	IA32_SMRR_PHYSMASK_ENABLE_RANGE_MASK_FLAG                                              = 0x800                                            //col:2547
	IA32_SMRR_PHYSMASK_ENABLE_RANGE_MASK_MASK                                              = 0x01                                             //col:2548
	IA32_SMRR_PHYSMASK_ENABLE_RANGE_MASK                                               (_) = (((_) >> 11) & 0x01)                             //col:2549
	IA32_SMRR_PHYSMASK_SMRR_ADDRESS_RANGE_MASK_BIT                                         = 12                                               //col:2550
	IA32_SMRR_PHYSMASK_SMRR_ADDRESS_RANGE_MASK_FLAG                                        = 0xFFFFF000                                       //col:2551
	IA32_SMRR_PHYSMASK_SMRR_ADDRESS_RANGE_MASK_MASK                                        = 0xFFFFF                                          //col:2552
	IA32_SMRR_PHYSMASK_SMRR_ADDRESS_RANGE_MASK                                         (_) = (((_) >> 12) & 0xFFFFF)                          //col:2553
	IA32_PLATFORM_DCA_CAP                                                                  = 0x000001F8                                       //col:2554
	IA32_CPU_DCA_CAP                                                                       = 0x000001F9                                       //col:2555
	IA32_DCA_0_CAP                                                                         = 0x000001FA                                       //col:2556
	IA32_DCA_0_CAP_DCA_ACTIVE_BIT                                                          = 0                                                //col:2557
	IA32_DCA_0_CAP_DCA_ACTIVE_FLAG                                                         = 0x01                                             //col:2558
	IA32_DCA_0_CAP_DCA_ACTIVE_MASK                                                         = 0x01                                             //col:2559
	IA32_DCA_0_CAP_DCA_ACTIVE                                                          (_) = (((_) >> 0) & 0x01)                              //col:2560
	IA32_DCA_0_CAP_TRANSACTION_BIT                                                         = 1                                                //col:2561
	IA32_DCA_0_CAP_TRANSACTION_FLAG                                                        = 0x06                                             //col:2562
	IA32_DCA_0_CAP_TRANSACTION_MASK                                                        = 0x03                                             //col:2563
	IA32_DCA_0_CAP_TRANSACTION                                                         (_) = (((_) >> 1) & 0x03)                              //col:2564
	IA32_DCA_0_CAP_DCA_TYPE_BIT                                                            = 3                                                //col:2565
	IA32_DCA_0_CAP_DCA_TYPE_FLAG                                                           = 0x78                                             //col:2566
	IA32_DCA_0_CAP_DCA_TYPE_MASK                                                           = 0x0F                                             //col:2567
	IA32_DCA_0_CAP_DCA_TYPE                                                            (_) = (((_) >> 3) & 0x0F)                              //col:2568
	IA32_DCA_0_CAP_DCA_QUEUE_SIZE_BIT                                                      = 7                                                //col:2569
	IA32_DCA_0_CAP_DCA_QUEUE_SIZE_FLAG                                                     = 0x780                                            //col:2570
	IA32_DCA_0_CAP_DCA_QUEUE_SIZE_MASK                                                     = 0x0F                                             //col:2571
	IA32_DCA_0_CAP_DCA_QUEUE_SIZE                                                      (_) = (((_) >> 7) & 0x0F)                              //col:2572
	IA32_DCA_0_CAP_DCA_DELAY_BIT                                                           = 13                                               //col:2573
	IA32_DCA_0_CAP_DCA_DELAY_FLAG                                                          = 0x1E000                                          //col:2574
	IA32_DCA_0_CAP_DCA_DELAY_MASK                                                          = 0x0F                                             //col:2575
	IA32_DCA_0_CAP_DCA_DELAY                                                           (_) = (((_) >> 13) & 0x0F)                             //col:2576
	IA32_DCA_0_CAP_SW_BLOCK_BIT                                                            = 24                                               //col:2577
	IA32_DCA_0_CAP_SW_BLOCK_FLAG                                                           = 0x1000000                                        //col:2578
	IA32_DCA_0_CAP_SW_BLOCK_MASK                                                           = 0x01                                             //col:2579
	IA32_DCA_0_CAP_SW_BLOCK                                                            (_) = (((_) >> 24) & 0x01)                             //col:2580
	IA32_DCA_0_CAP_HW_BLOCK_BIT                                                            = 26                                               //col:2581
	IA32_DCA_0_CAP_HW_BLOCK_FLAG                                                           = 0x4000000                                        //col:2582
	IA32_DCA_0_CAP_HW_BLOCK_MASK                                                           = 0x01                                             //col:2583
	IA32_DCA_0_CAP_HW_BLOCK                                                            (_) = (((_) >> 26) & 0x01)                             //col:2584
	IA32_MTRR_PHYSBASE_TYPE_BIT                                                            = 0                                                //col:2585
	IA32_MTRR_PHYSBASE_TYPE_FLAG                                                           = 0xFF                                             //col:2586
	IA32_MTRR_PHYSBASE_TYPE_MASK                                                           = 0xFF                                             //col:2587
	IA32_MTRR_PHYSBASE_TYPE                                                            (_) = (((_) >> 0) & 0xFF)                              //col:2588
	IA32_MTRR_PHYSBASE_PAGE_FRAME_NUMBER_BIT                                               = 12                                               //col:2589
	IA32_MTRR_PHYSBASE_PAGE_FRAME_NUMBER_FLAG                                              = 0xFFFFFFFFF000                                   //col:2590
	IA32_MTRR_PHYSBASE_PAGE_FRAME_NUMBER_MASK                                              = 0xFFFFFFFFF                                      //col:2591
	IA32_MTRR_PHYSBASE_PAGE_FRAME_NUMBER                                               (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:2592
	IA32_MTRR_PHYSBASE0                                                                    = 0x00000200                                       //col:2593
	IA32_MTRR_PHYSBASE1                                                                    = 0x00000202                                       //col:2594
	IA32_MTRR_PHYSBASE2                                                                    = 0x00000204                                       //col:2595
	IA32_MTRR_PHYSBASE3                                                                    = 0x00000206                                       //col:2596
	IA32_MTRR_PHYSBASE4                                                                    = 0x00000208                                       //col:2597
	IA32_MTRR_PHYSBASE5                                                                    = 0x0000020A                                       //col:2598
	IA32_MTRR_PHYSBASE6                                                                    = 0x0000020C                                       //col:2599
	IA32_MTRR_PHYSBASE7                                                                    = 0x0000020E                                       //col:2600
	IA32_MTRR_PHYSBASE8                                                                    = 0x00000210                                       //col:2601
	IA32_MTRR_PHYSBASE9                                                                    = 0x00000212                                       //col:2602
	IA32_MTRR_PHYSMASK_VALID_BIT                                                           = 11                                               //col:2603
	IA32_MTRR_PHYSMASK_VALID_FLAG                                                          = 0x800                                            //col:2604
	IA32_MTRR_PHYSMASK_VALID_MASK                                                          = 0x01                                             //col:2605
	IA32_MTRR_PHYSMASK_VALID                                                           (_) = (((_) >> 11) & 0x01)                             //col:2606
	IA32_MTRR_PHYSMASK_PAGE_FRAME_NUMBER_BIT                                               = 12                                               //col:2607
	IA32_MTRR_PHYSMASK_PAGE_FRAME_NUMBER_FLAG                                              = 0xFFFFFFFFF000                                   //col:2608
	IA32_MTRR_PHYSMASK_PAGE_FRAME_NUMBER_MASK                                              = 0xFFFFFFFFF                                      //col:2609
	IA32_MTRR_PHYSMASK_PAGE_FRAME_NUMBER                                               (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:2610
	IA32_MTRR_PHYSMASK0                                                                    = 0x00000201                                       //col:2611
	IA32_MTRR_PHYSMASK1                                                                    = 0x00000203                                       //col:2612
	IA32_MTRR_PHYSMASK2                                                                    = 0x00000205                                       //col:2613
	IA32_MTRR_PHYSMASK3                                                                    = 0x00000207                                       //col:2614
	IA32_MTRR_PHYSMASK4                                                                    = 0x00000209                                       //col:2615
	IA32_MTRR_PHYSMASK5                                                                    = 0x0000020B                                       //col:2616
	IA32_MTRR_PHYSMASK6                                                                    = 0x0000020D                                       //col:2617
	IA32_MTRR_PHYSMASK7                                                                    = 0x0000020F                                       //col:2618
	IA32_MTRR_PHYSMASK8                                                                    = 0x00000211                                       //col:2619
	IA32_MTRR_PHYSMASK9                                                                    = 0x00000213                                       //col:2620
	IA32_MTRR_FIX64K_BASE                                                                  = 0x00000000                                       //col:2621
	IA32_MTRR_FIX64K_SIZE                                                                  = 0x00010000                                       //col:2622
	IA32_MTRR_FIX64K_00000                                                                 = 0x00000250                                       //col:2623
	IA32_MTRR_FIX16K_BASE                                                                  = 0x00080000                                       //col:2624
	IA32_MTRR_FIX16K_SIZE                                                                  = 0x00004000                                       //col:2625
	IA32_MTRR_FIX16K_80000                                                                 = 0x00000258                                       //col:2626
	IA32_MTRR_FIX16K_A0000                                                                 = 0x00000259                                       //col:2627
	IA32_MTRR_FIX4K_BASE                                                                   = 0x000C0000                                       //col:2628
	IA32_MTRR_FIX4K_SIZE                                                                   = 0x00001000                                       //col:2629
	IA32_MTRR_FIX4K_C0000                                                                  = 0x00000268                                       //col:2630
	IA32_MTRR_FIX4K_C8000                                                                  = 0x00000269                                       //col:2631
	IA32_MTRR_FIX4K_D0000                                                                  = 0x0000026A                                       //col:2632
	IA32_MTRR_FIX4K_D8000                                                                  = 0x0000026B                                       //col:2633
	IA32_MTRR_FIX4K_E0000                                                                  = 0x0000026C                                       //col:2634
	IA32_MTRR_FIX4K_E8000                                                                  = 0x0000026D                                       //col:2635
	IA32_MTRR_FIX4K_F0000                                                                  = 0x0000026E                                       //col:2636
	IA32_MTRR_FIX4K_F8000                                                                  = 0x0000026F                                       //col:2637
	IA32_MTRR_FIX_COUNT                                                                    = ((1 + 2 + 8) * 8)                                //col:2638
	IA32_MTRR_VARIABLE_COUNT                                                               = 0x0000000A                                       //col:2639
	IA32_MTRR_COUNT                                                                        = (IA32_MTRR_FIX_COUNT + IA32_MTRR_VARIABLE_COUNT) //col:2640
	IA32_PAT                                                                               = 0x00000277                                       //col:2641
	IA32_PAT_PA0_BIT                                                                       = 0                                                //col:2642
	IA32_PAT_PA0_FLAG                                                                      = 0x07                                             //col:2643
	IA32_PAT_PA0_MASK                                                                      = 0x07                                             //col:2644
	IA32_PAT_PA0                                                                       (_) = (((_) >> 0) & 0x07)                              //col:2645
	IA32_PAT_PA1_BIT                                                                       = 8                                                //col:2646
	IA32_PAT_PA1_FLAG                                                                      = 0x700                                            //col:2647
	IA32_PAT_PA1_MASK                                                                      = 0x07                                             //col:2648
	IA32_PAT_PA1                                                                       (_) = (((_) >> 8) & 0x07)                              //col:2649
	IA32_PAT_PA2_BIT                                                                       = 16                                               //col:2650
	IA32_PAT_PA2_FLAG                                                                      = 0x70000                                          //col:2651
	IA32_PAT_PA2_MASK                                                                      = 0x07                                             //col:2652
	IA32_PAT_PA2                                                                       (_) = (((_) >> 16) & 0x07)                             //col:2653
	IA32_PAT_PA3_BIT                                                                       = 24                                               //col:2654
	IA32_PAT_PA3_FLAG                                                                      = 0x7000000                                        //col:2655
	IA32_PAT_PA3_MASK                                                                      = 0x07                                             //col:2656
	IA32_PAT_PA3                                                                       (_) = (((_) >> 24) & 0x07)                             //col:2657
	IA32_PAT_PA4_BIT                                                                       = 32                                               //col:2658
	IA32_PAT_PA4_FLAG                                                                      = 0x700000000                                      //col:2659
	IA32_PAT_PA4_MASK                                                                      = 0x07                                             //col:2660
	IA32_PAT_PA4                                                                       (_) = (((_) >> 32) & 0x07)                             //col:2661
	IA32_PAT_PA5_BIT                                                                       = 40                                               //col:2662
	IA32_PAT_PA5_FLAG                                                                      = 0x70000000000                                    //col:2663
	IA32_PAT_PA5_MASK                                                                      = 0x07                                             //col:2664
	IA32_PAT_PA5                                                                       (_) = (((_) >> 40) & 0x07)                             //col:2665
	IA32_PAT_PA6_BIT                                                                       = 48                                               //col:2666
	IA32_PAT_PA6_FLAG                                                                      = 0x7000000000000                                  //col:2667
	IA32_PAT_PA6_MASK                                                                      = 0x07                                             //col:2668
	IA32_PAT_PA6                                                                       (_) = (((_) >> 48) & 0x07)                             //col:2669
	IA32_PAT_PA7_BIT                                                                       = 56                                               //col:2670
	IA32_PAT_PA7_FLAG                                                                      = 0x700000000000000                                //col:2671
	IA32_PAT_PA7_MASK                                                                      = 0x07                                             //col:2672
	IA32_PAT_PA7                                                                       (_) = (((_) >> 56) & 0x07)                             //col:2673
	IA32_MC0_CTL2                                                                          = 0x00000280                                       //col:2674
	IA32_MC1_CTL2                                                                          = 0x00000281                                       //col:2675
	IA32_MC2_CTL2                                                                          = 0x00000282                                       //col:2676
	IA32_MC3_CTL2                                                                          = 0x00000283                                       //col:2677
	IA32_MC4_CTL2                                                                          = 0x00000284                                       //col:2678
	IA32_MC5_CTL2                                                                          = 0x00000285                                       //col:2679
	IA32_MC6_CTL2                                                                          = 0x00000286                                       //col:2680
	IA32_MC7_CTL2                                                                          = 0x00000287                                       //col:2681
	IA32_MC8_CTL2                                                                          = 0x00000288                                       //col:2682
	IA32_MC9_CTL2                                                                          = 0x00000289                                       //col:2683
	IA32_MC10_CTL2                                                                         = 0x0000028A                                       //col:2684
	IA32_MC11_CTL2                                                                         = 0x0000028B                                       //col:2685
	IA32_MC12_CTL2                                                                         = 0x0000028C                                       //col:2686
	IA32_MC13_CTL2                                                                         = 0x0000028D                                       //col:2687
	IA32_MC14_CTL2                                                                         = 0x0000028E                                       //col:2688
	IA32_MC15_CTL2                                                                         = 0x0000028F                                       //col:2689
	IA32_MC16_CTL2                                                                         = 0x00000290                                       //col:2690
	IA32_MC17_CTL2                                                                         = 0x00000291                                       //col:2691
	IA32_MC18_CTL2                                                                         = 0x00000292                                       //col:2692
	IA32_MC19_CTL2                                                                         = 0x00000293                                       //col:2693
	IA32_MC20_CTL2                                                                         = 0x00000294                                       //col:2694
	IA32_MC21_CTL2                                                                         = 0x00000295                                       //col:2695
	IA32_MC22_CTL2                                                                         = 0x00000296                                       //col:2696
	IA32_MC23_CTL2                                                                         = 0x00000297                                       //col:2697
	IA32_MC24_CTL2                                                                         = 0x00000298                                       //col:2698
	IA32_MC25_CTL2                                                                         = 0x00000299                                       //col:2699
	IA32_MC26_CTL2                                                                         = 0x0000029A                                       //col:2700
	IA32_MC27_CTL2                                                                         = 0x0000029B                                       //col:2701
	IA32_MC28_CTL2                                                                         = 0x0000029C                                       //col:2702
	IA32_MC29_CTL2                                                                         = 0x0000029D                                       //col:2703
	IA32_MC30_CTL2                                                                         = 0x0000029E                                       //col:2704
	IA32_MC31_CTL2                                                                         = 0x0000029F                                       //col:2705
	IA32_MC_CTL2_CORRECTED_ERROR_COUNT_THRESHOLD_BIT                                       = 0                                                //col:2706
	IA32_MC_CTL2_CORRECTED_ERROR_COUNT_THRESHOLD_FLAG                                      = 0x7FFF                                           //col:2707
	IA32_MC_CTL2_CORRECTED_ERROR_COUNT_THRESHOLD_MASK                                      = 0x7FFF                                           //col:2708
	IA32_MC_CTL2_CORRECTED_ERROR_COUNT_THRESHOLD                                       (_) = (((_) >> 0) & 0x7FFF)                            //col:2709
	IA32_MC_CTL2_CMCI_EN_BIT                                                               = 30                                               //col:2710
	IA32_MC_CTL2_CMCI_EN_FLAG                                                              = 0x40000000                                       //col:2711
	IA32_MC_CTL2_CMCI_EN_MASK                                                              = 0x01                                             //col:2712
	IA32_MC_CTL2_CMCI_EN                                                               (_) = (((_) >> 30) & 0x01)                             //col:2713
	IA32_MTRR_DEF_TYPE                                                                     = 0x000002FF                                       //col:2714
	IA32_MTRR_DEF_TYPE_DEFAULT_MEMORY_TYPE_BIT                                             = 0                                                //col:2715
	IA32_MTRR_DEF_TYPE_DEFAULT_MEMORY_TYPE_FLAG                                            = 0x07                                             //col:2716
	IA32_MTRR_DEF_TYPE_DEFAULT_MEMORY_TYPE_MASK                                            = 0x07                                             //col:2717
	IA32_MTRR_DEF_TYPE_DEFAULT_MEMORY_TYPE                                             (_) = (((_) >> 0) & 0x07)                              //col:2718
	IA32_MTRR_DEF_TYPE_FIXED_RANGE_MTRR_ENABLE_BIT                                         = 10                                               //col:2719
	IA32_MTRR_DEF_TYPE_FIXED_RANGE_MTRR_ENABLE_FLAG                                        = 0x400                                            //col:2720
	IA32_MTRR_DEF_TYPE_FIXED_RANGE_MTRR_ENABLE_MASK                                        = 0x01                                             //col:2721
	IA32_MTRR_DEF_TYPE_FIXED_RANGE_MTRR_ENABLE                                         (_) = (((_) >> 10) & 0x01)                             //col:2722
	IA32_MTRR_DEF_TYPE_MTRR_ENABLE_BIT                                                     = 11                                               //col:2723
	IA32_MTRR_DEF_TYPE_MTRR_ENABLE_FLAG                                                    = 0x800                                            //col:2724
	IA32_MTRR_DEF_TYPE_MTRR_ENABLE_MASK                                                    = 0x01                                             //col:2725
	IA32_MTRR_DEF_TYPE_MTRR_ENABLE                                                     (_) = (((_) >> 11) & 0x01)                             //col:2726
	IA32_FIXED_CTR0                                                                        = 0x00000309                                       //col:2727
	IA32_FIXED_CTR1                                                                        = 0x0000030A                                       //col:2728
	IA32_FIXED_CTR2                                                                        = 0x0000030B                                       //col:2729
	IA32_PERF_CAPABILITIES                                                                 = 0x00000345                                       //col:2730
	IA32_PERF_CAPABILITIES_LBR_FORMAT_BIT                                                  = 0                                                //col:2731
	IA32_PERF_CAPABILITIES_LBR_FORMAT_FLAG                                                 = 0x3F                                             //col:2732
	IA32_PERF_CAPABILITIES_LBR_FORMAT_MASK                                                 = 0x3F                                             //col:2733
	IA32_PERF_CAPABILITIES_LBR_FORMAT                                                  (_) = (((_) >> 0) & 0x3F)                              //col:2734
	IA32_PERF_CAPABILITIES_PEBS_TRAP_BIT                                                   = 6                                                //col:2735
	IA32_PERF_CAPABILITIES_PEBS_TRAP_FLAG                                                  = 0x40                                             //col:2736
	IA32_PERF_CAPABILITIES_PEBS_TRAP_MASK                                                  = 0x01                                             //col:2737
	IA32_PERF_CAPABILITIES_PEBS_TRAP                                                   (_) = (((_) >> 6) & 0x01)                              //col:2738
	IA32_PERF_CAPABILITIES_PEBS_SAVE_ARCH_REGS_BIT                                         = 7                                                //col:2739
	IA32_PERF_CAPABILITIES_PEBS_SAVE_ARCH_REGS_FLAG                                        = 0x80                                             //col:2740
	IA32_PERF_CAPABILITIES_PEBS_SAVE_ARCH_REGS_MASK                                        = 0x01                                             //col:2741
	IA32_PERF_CAPABILITIES_PEBS_SAVE_ARCH_REGS                                         (_) = (((_) >> 7) & 0x01)                              //col:2742
	IA32_PERF_CAPABILITIES_PEBS_RECORD_FORMAT_BIT                                          = 8                                                //col:2743
	IA32_PERF_CAPABILITIES_PEBS_RECORD_FORMAT_FLAG                                         = 0xF00                                            //col:2744
	IA32_PERF_CAPABILITIES_PEBS_RECORD_FORMAT_MASK                                         = 0x0F                                             //col:2745
	IA32_PERF_CAPABILITIES_PEBS_RECORD_FORMAT                                          (_) = (((_) >> 8) & 0x0F)                              //col:2746
	IA32_PERF_CAPABILITIES_FREEZE_WHILE_SMM_IS_SUPPORTED_BIT                               = 12                                               //col:2747
	IA32_PERF_CAPABILITIES_FREEZE_WHILE_SMM_IS_SUPPORTED_FLAG                              = 0x1000                                           //col:2748
	IA32_PERF_CAPABILITIES_FREEZE_WHILE_SMM_IS_SUPPORTED_MASK                              = 0x01                                             //col:2749
	IA32_PERF_CAPABILITIES_FREEZE_WHILE_SMM_IS_SUPPORTED                               (_) = (((_) >> 12) & 0x01)                             //col:2750
	IA32_PERF_CAPABILITIES_FULL_WIDTH_COUNTER_WRITE_BIT                                    = 13                                               //col:2751
	IA32_PERF_CAPABILITIES_FULL_WIDTH_COUNTER_WRITE_FLAG                                   = 0x2000                                           //col:2752
	IA32_PERF_CAPABILITIES_FULL_WIDTH_COUNTER_WRITE_MASK                                   = 0x01                                             //col:2753
	IA32_PERF_CAPABILITIES_FULL_WIDTH_COUNTER_WRITE                                    (_) = (((_) >> 13) & 0x01)                             //col:2754
	IA32_FIXED_CTR_CTRL                                                                    = 0x0000038D                                       //col:2755
	IA32_FIXED_CTR_CTRL_EN0_OS_BIT                                                         = 0                                                //col:2756
	IA32_FIXED_CTR_CTRL_EN0_OS_FLAG                                                        = 0x01                                             //col:2757
	IA32_FIXED_CTR_CTRL_EN0_OS_MASK                                                        = 0x01                                             //col:2758
	IA32_FIXED_CTR_CTRL_EN0_OS                                                         (_) = (((_) >> 0) & 0x01)                              //col:2759
	IA32_FIXED_CTR_CTRL_EN0_USR_BIT                                                        = 1                                                //col:2760
	IA32_FIXED_CTR_CTRL_EN0_USR_FLAG                                                       = 0x02                                             //col:2761
	IA32_FIXED_CTR_CTRL_EN0_USR_MASK                                                       = 0x01                                             //col:2762
	IA32_FIXED_CTR_CTRL_EN0_USR                                                        (_) = (((_) >> 1) & 0x01)                              //col:2763
	IA32_FIXED_CTR_CTRL_ANY_THREAD0_BIT                                                    = 2                                                //col:2764
	IA32_FIXED_CTR_CTRL_ANY_THREAD0_FLAG                                                   = 0x04                                             //col:2765
	IA32_FIXED_CTR_CTRL_ANY_THREAD0_MASK                                                   = 0x01                                             //col:2766
	IA32_FIXED_CTR_CTRL_ANY_THREAD0                                                    (_) = (((_) >> 2) & 0x01)                              //col:2767
	IA32_FIXED_CTR_CTRL_EN0_PMI_BIT                                                        = 3                                                //col:2768
	IA32_FIXED_CTR_CTRL_EN0_PMI_FLAG                                                       = 0x08                                             //col:2769
	IA32_FIXED_CTR_CTRL_EN0_PMI_MASK                                                       = 0x01                                             //col:2770
	IA32_FIXED_CTR_CTRL_EN0_PMI                                                        (_) = (((_) >> 3) & 0x01)                              //col:2771
	IA32_FIXED_CTR_CTRL_EN1_OS_BIT                                                         = 4                                                //col:2772
	IA32_FIXED_CTR_CTRL_EN1_OS_FLAG                                                        = 0x10                                             //col:2773
	IA32_FIXED_CTR_CTRL_EN1_OS_MASK                                                        = 0x01                                             //col:2774
	IA32_FIXED_CTR_CTRL_EN1_OS                                                         (_) = (((_) >> 4) & 0x01)                              //col:2775
	IA32_FIXED_CTR_CTRL_EN1_USR_BIT                                                        = 5                                                //col:2776
	IA32_FIXED_CTR_CTRL_EN1_USR_FLAG                                                       = 0x20                                             //col:2777
	IA32_FIXED_CTR_CTRL_EN1_USR_MASK                                                       = 0x01                                             //col:2778
	IA32_FIXED_CTR_CTRL_EN1_USR                                                        (_) = (((_) >> 5) & 0x01)                              //col:2779
	IA32_FIXED_CTR_CTRL_ANY_THREAD1_BIT                                                    = 6                                                //col:2780
	IA32_FIXED_CTR_CTRL_ANY_THREAD1_FLAG                                                   = 0x40                                             //col:2781
	IA32_FIXED_CTR_CTRL_ANY_THREAD1_MASK                                                   = 0x01                                             //col:2782
	IA32_FIXED_CTR_CTRL_ANY_THREAD1                                                    (_) = (((_) >> 6) & 0x01)                              //col:2783
	IA32_FIXED_CTR_CTRL_EN1_PMI_BIT                                                        = 7                                                //col:2784
	IA32_FIXED_CTR_CTRL_EN1_PMI_FLAG                                                       = 0x80                                             //col:2785
	IA32_FIXED_CTR_CTRL_EN1_PMI_MASK                                                       = 0x01                                             //col:2786
	IA32_FIXED_CTR_CTRL_EN1_PMI                                                        (_) = (((_) >> 7) & 0x01)                              //col:2787
	IA32_FIXED_CTR_CTRL_EN2_OS_BIT                                                         = 8                                                //col:2788
	IA32_FIXED_CTR_CTRL_EN2_OS_FLAG                                                        = 0x100                                            //col:2789
	IA32_FIXED_CTR_CTRL_EN2_OS_MASK                                                        = 0x01                                             //col:2790
	IA32_FIXED_CTR_CTRL_EN2_OS                                                         (_) = (((_) >> 8) & 0x01)                              //col:2791
	IA32_FIXED_CTR_CTRL_EN2_USR_BIT                                                        = 9                                                //col:2792
	IA32_FIXED_CTR_CTRL_EN2_USR_FLAG                                                       = 0x200                                            //col:2793
	IA32_FIXED_CTR_CTRL_EN2_USR_MASK                                                       = 0x01                                             //col:2794
	IA32_FIXED_CTR_CTRL_EN2_USR                                                        (_) = (((_) >> 9) & 0x01)                              //col:2795
	IA32_FIXED_CTR_CTRL_ANY_THREAD2_BIT                                                    = 10                                               //col:2796
	IA32_FIXED_CTR_CTRL_ANY_THREAD2_FLAG                                                   = 0x400                                            //col:2797
	IA32_FIXED_CTR_CTRL_ANY_THREAD2_MASK                                                   = 0x01                                             //col:2798
	IA32_FIXED_CTR_CTRL_ANY_THREAD2                                                    (_) = (((_) >> 10) & 0x01)                             //col:2799
	IA32_FIXED_CTR_CTRL_EN2_PMI_BIT                                                        = 11                                               //col:2800
	IA32_FIXED_CTR_CTRL_EN2_PMI_FLAG                                                       = 0x800                                            //col:2801
	IA32_FIXED_CTR_CTRL_EN2_PMI_MASK                                                       = 0x01                                             //col:2802
	IA32_FIXED_CTR_CTRL_EN2_PMI                                                        (_) = (((_) >> 11) & 0x01)                             //col:2803
	IA32_PERF_GLOBAL_STATUS                                                                = 0x0000038E                                       //col:2804
	IA32_PERF_GLOBAL_STATUS_OVF_PMC0_BIT                                                   = 0                                                //col:2805
	IA32_PERF_GLOBAL_STATUS_OVF_PMC0_FLAG                                                  = 0x01                                             //col:2806
	IA32_PERF_GLOBAL_STATUS_OVF_PMC0_MASK                                                  = 0x01                                             //col:2807
	IA32_PERF_GLOBAL_STATUS_OVF_PMC0                                                   (_) = (((_) >> 0) & 0x01)                              //col:2808
	IA32_PERF_GLOBAL_STATUS_OVF_PMC1_BIT                                                   = 1                                                //col:2809
	IA32_PERF_GLOBAL_STATUS_OVF_PMC1_FLAG                                                  = 0x02                                             //col:2810
	IA32_PERF_GLOBAL_STATUS_OVF_PMC1_MASK                                                  = 0x01                                             //col:2811
	IA32_PERF_GLOBAL_STATUS_OVF_PMC1                                                   (_) = (((_) >> 1) & 0x01)                              //col:2812
	IA32_PERF_GLOBAL_STATUS_OVF_PMC2_BIT                                                   = 2                                                //col:2813
	IA32_PERF_GLOBAL_STATUS_OVF_PMC2_FLAG                                                  = 0x04                                             //col:2814
	IA32_PERF_GLOBAL_STATUS_OVF_PMC2_MASK                                                  = 0x01                                             //col:2815
	IA32_PERF_GLOBAL_STATUS_OVF_PMC2                                                   (_) = (((_) >> 2) & 0x01)                              //col:2816
	IA32_PERF_GLOBAL_STATUS_OVF_PMC3_BIT                                                   = 3                                                //col:2817
	IA32_PERF_GLOBAL_STATUS_OVF_PMC3_FLAG                                                  = 0x08                                             //col:2818
	IA32_PERF_GLOBAL_STATUS_OVF_PMC3_MASK                                                  = 0x01                                             //col:2819
	IA32_PERF_GLOBAL_STATUS_OVF_PMC3                                                   (_) = (((_) >> 3) & 0x01)                              //col:2820
	IA32_PERF_GLOBAL_STATUS_OVF_FIXEDCTR0_BIT                                              = 32                                               //col:2821
	IA32_PERF_GLOBAL_STATUS_OVF_FIXEDCTR0_FLAG                                             = 0x100000000                                      //col:2822
	IA32_PERF_GLOBAL_STATUS_OVF_FIXEDCTR0_MASK                                             = 0x01                                             //col:2823
	IA32_PERF_GLOBAL_STATUS_OVF_FIXEDCTR0                                              (_) = (((_) >> 32) & 0x01)                             //col:2824
	IA32_PERF_GLOBAL_STATUS_OVF_FIXEDCTR1_BIT                                              = 33                                               //col:2825
	IA32_PERF_GLOBAL_STATUS_OVF_FIXEDCTR1_FLAG                                             = 0x200000000                                      //col:2826
	IA32_PERF_GLOBAL_STATUS_OVF_FIXEDCTR1_MASK                                             = 0x01                                             //col:2827
	IA32_PERF_GLOBAL_STATUS_OVF_FIXEDCTR1                                              (_) = (((_) >> 33) & 0x01)                             //col:2828
	IA32_PERF_GLOBAL_STATUS_OVF_FIXEDCTR2_BIT                                              = 34                                               //col:2829
	IA32_PERF_GLOBAL_STATUS_OVF_FIXEDCTR2_FLAG                                             = 0x400000000                                      //col:2830
	IA32_PERF_GLOBAL_STATUS_OVF_FIXEDCTR2_MASK                                             = 0x01                                             //col:2831
	IA32_PERF_GLOBAL_STATUS_OVF_FIXEDCTR2                                              (_) = (((_) >> 34) & 0x01)                             //col:2832
	IA32_PERF_GLOBAL_STATUS_TRACE_TOPA_PMI_BIT                                             = 55                                               //col:2833
	IA32_PERF_GLOBAL_STATUS_TRACE_TOPA_PMI_FLAG                                            = 0x80000000000000                                 //col:2834
	IA32_PERF_GLOBAL_STATUS_TRACE_TOPA_PMI_MASK                                            = 0x01                                             //col:2835
	IA32_PERF_GLOBAL_STATUS_TRACE_TOPA_PMI                                             (_) = (((_) >> 55) & 0x01)                             //col:2836
	IA32_PERF_GLOBAL_STATUS_LBR_FRZ_BIT                                                    = 58                                               //col:2837
	IA32_PERF_GLOBAL_STATUS_LBR_FRZ_FLAG                                                   = 0x400000000000000                                //col:2838
	IA32_PERF_GLOBAL_STATUS_LBR_FRZ_MASK                                                   = 0x01                                             //col:2839
	IA32_PERF_GLOBAL_STATUS_LBR_FRZ                                                    (_) = (((_) >> 58) & 0x01)                             //col:2840
	IA32_PERF_GLOBAL_STATUS_CTR_FRZ_BIT                                                    = 59                                               //col:2841
	IA32_PERF_GLOBAL_STATUS_CTR_FRZ_FLAG                                                   = 0x800000000000000                                //col:2842
	IA32_PERF_GLOBAL_STATUS_CTR_FRZ_MASK                                                   = 0x01                                             //col:2843
	IA32_PERF_GLOBAL_STATUS_CTR_FRZ                                                    (_) = (((_) >> 59) & 0x01)                             //col:2844
	IA32_PERF_GLOBAL_STATUS_ASCI_BIT                                                       = 60                                               //col:2845
	IA32_PERF_GLOBAL_STATUS_ASCI_FLAG                                                      = 0x1000000000000000                               //col:2846
	IA32_PERF_GLOBAL_STATUS_ASCI_MASK                                                      = 0x01                                             //col:2847
	IA32_PERF_GLOBAL_STATUS_ASCI                                                       (_) = (((_) >> 60) & 0x01)                             //col:2848
	IA32_PERF_GLOBAL_STATUS_OVF_UNCORE_BIT                                                 = 61                                               //col:2849
	IA32_PERF_GLOBAL_STATUS_OVF_UNCORE_FLAG                                                = 0x2000000000000000                               //col:2850
	IA32_PERF_GLOBAL_STATUS_OVF_UNCORE_MASK                                                = 0x01                                             //col:2851
	IA32_PERF_GLOBAL_STATUS_OVF_UNCORE                                                 (_) = (((_) >> 61) & 0x01)                             //col:2852
	IA32_PERF_GLOBAL_STATUS_OVF_BUF_BIT                                                    = 62                                               //col:2853
	IA32_PERF_GLOBAL_STATUS_OVF_BUF_FLAG                                                   = 0x4000000000000000                               //col:2854
	IA32_PERF_GLOBAL_STATUS_OVF_BUF_MASK                                                   = 0x01                                             //col:2855
	IA32_PERF_GLOBAL_STATUS_OVF_BUF                                                    (_) = (((_) >> 62) & 0x01)                             //col:2856
	IA32_PERF_GLOBAL_STATUS_COND_CHGD_BIT                                                  = 63                                               //col:2857
	IA32_PERF_GLOBAL_STATUS_COND_CHGD_FLAG                                                 = 0x8000000000000000                               //col:2858
	IA32_PERF_GLOBAL_STATUS_COND_CHGD_MASK                                                 = 0x01                                             //col:2859
	IA32_PERF_GLOBAL_STATUS_COND_CHGD                                                  (_) = (((_) >> 63) & 0x01)                             //col:2860
	IA32_PERF_GLOBAL_CTRL                                                                  = 0x0000038F                                       //col:2861
	IA32_PERF_GLOBAL_CTRL_EN_PMCN_BIT                                                      = 0                                                //col:2862
	IA32_PERF_GLOBAL_CTRL_EN_PMCN_FLAG                                                     = 0xFFFFFFFF                                       //col:2863
	IA32_PERF_GLOBAL_CTRL_EN_PMCN_MASK                                                     = 0xFFFFFFFF                                       //col:2864
	IA32_PERF_GLOBAL_CTRL_EN_PMCN                                                      (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:2865
	IA32_PERF_GLOBAL_CTRL_EN_FIXED_CTRN_BIT                                                = 32                                               //col:2866
	IA32_PERF_GLOBAL_CTRL_EN_FIXED_CTRN_FLAG                                               = 0xFFFFFFFF00000000                               //col:2867
	IA32_PERF_GLOBAL_CTRL_EN_FIXED_CTRN_MASK                                               = 0xFFFFFFFF                                       //col:2868
	IA32_PERF_GLOBAL_CTRL_EN_FIXED_CTRN                                                (_) = (((_) >> 32) & 0xFFFFFFFF)                       //col:2869
	IA32_PERF_GLOBAL_STATUS_RESET                                                          = 0x00000390                                       //col:2870
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_PMCN_BIT                                       = 0                                                //col:2871
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_PMCN_FLAG                                      = 0xFFFFFFFF                                       //col:2872
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_PMCN_MASK                                      = 0xFFFFFFFF                                       //col:2873
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_PMCN                                       (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:2874
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_FIXED_CTRN_BIT                                 = 32                                               //col:2875
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_FIXED_CTRN_FLAG                                = 0x700000000                                      //col:2876
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_FIXED_CTRN_MASK                                = 0x07                                             //col:2877
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_FIXED_CTRN                                 (_) = (((_) >> 32) & 0x07)                             //col:2878
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_TRACE_TOPA_PMI_BIT                                 = 55                                               //col:2879
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_TRACE_TOPA_PMI_FLAG                                = 0x80000000000000                                 //col:2880
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_TRACE_TOPA_PMI_MASK                                = 0x01                                             //col:2881
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_TRACE_TOPA_PMI                                 (_) = (((_) >> 55) & 0x01)                             //col:2882
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_LBR_FRZ_BIT                                        = 58                                               //col:2883
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_LBR_FRZ_FLAG                                       = 0x400000000000000                                //col:2884
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_LBR_FRZ_MASK                                       = 0x01                                             //col:2885
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_LBR_FRZ                                        (_) = (((_) >> 58) & 0x01)                             //col:2886
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_CTR_FRZ_BIT                                        = 59                                               //col:2887
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_CTR_FRZ_FLAG                                       = 0x800000000000000                                //col:2888
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_CTR_FRZ_MASK                                       = 0x01                                             //col:2889
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_CTR_FRZ                                        (_) = (((_) >> 59) & 0x01)                             //col:2890
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_ASCI_BIT                                           = 60                                               //col:2891
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_ASCI_FLAG                                          = 0x1000000000000000                               //col:2892
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_ASCI_MASK                                          = 0x01                                             //col:2893
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_ASCI                                           (_) = (((_) >> 60) & 0x01)                             //col:2894
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_UNCORE_BIT                                     = 61                                               //col:2895
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_UNCORE_FLAG                                    = 0x2000000000000000                               //col:2896
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_UNCORE_MASK                                    = 0x01                                             //col:2897
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_UNCORE                                     (_) = (((_) >> 61) & 0x01)                             //col:2898
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_BUF_BIT                                        = 62                                               //col:2899
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_BUF_FLAG                                       = 0x4000000000000000                               //col:2900
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_BUF_MASK                                       = 0x01                                             //col:2901
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_OVF_BUF                                        (_) = (((_) >> 62) & 0x01)                             //col:2902
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_COND_CHGD_BIT                                      = 63                                               //col:2903
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_COND_CHGD_FLAG                                     = 0x8000000000000000                               //col:2904
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_COND_CHGD_MASK                                     = 0x01                                             //col:2905
	IA32_PERF_GLOBAL_STATUS_RESET_CLEAR_COND_CHGD                                      (_) = (((_) >> 63) & 0x01)                             //col:2906
	IA32_PERF_GLOBAL_STATUS_SET                                                            = 0x00000391                                       //col:2907
	IA32_PERF_GLOBAL_STATUS_SET_OVF_PMCN_BIT                                               = 0                                                //col:2908
	IA32_PERF_GLOBAL_STATUS_SET_OVF_PMCN_FLAG                                              = 0xFFFFFFFF                                       //col:2909
	IA32_PERF_GLOBAL_STATUS_SET_OVF_PMCN_MASK                                              = 0xFFFFFFFF                                       //col:2910
	IA32_PERF_GLOBAL_STATUS_SET_OVF_PMCN                                               (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:2911
	IA32_PERF_GLOBAL_STATUS_SET_OVF_FIXED_CTRN_BIT                                         = 32                                               //col:2912
	IA32_PERF_GLOBAL_STATUS_SET_OVF_FIXED_CTRN_FLAG                                        = 0x700000000                                      //col:2913
	IA32_PERF_GLOBAL_STATUS_SET_OVF_FIXED_CTRN_MASK                                        = 0x07                                             //col:2914
	IA32_PERF_GLOBAL_STATUS_SET_OVF_FIXED_CTRN                                         (_) = (((_) >> 32) & 0x07)                             //col:2915
	IA32_PERF_GLOBAL_STATUS_SET_TRACE_TOPA_PMI_BIT                                         = 55                                               //col:2916
	IA32_PERF_GLOBAL_STATUS_SET_TRACE_TOPA_PMI_FLAG                                        = 0x80000000000000                                 //col:2917
	IA32_PERF_GLOBAL_STATUS_SET_TRACE_TOPA_PMI_MASK                                        = 0x01                                             //col:2918
	IA32_PERF_GLOBAL_STATUS_SET_TRACE_TOPA_PMI                                         (_) = (((_) >> 55) & 0x01)                             //col:2919
	IA32_PERF_GLOBAL_STATUS_SET_LBR_FRZ_BIT                                                = 58                                               //col:2920
	IA32_PERF_GLOBAL_STATUS_SET_LBR_FRZ_FLAG                                               = 0x400000000000000                                //col:2921
	IA32_PERF_GLOBAL_STATUS_SET_LBR_FRZ_MASK                                               = 0x01                                             //col:2922
	IA32_PERF_GLOBAL_STATUS_SET_LBR_FRZ                                                (_) = (((_) >> 58) & 0x01)                             //col:2923
	IA32_PERF_GLOBAL_STATUS_SET_CTR_FRZ_BIT                                                = 59                                               //col:2924
	IA32_PERF_GLOBAL_STATUS_SET_CTR_FRZ_FLAG                                               = 0x800000000000000                                //col:2925
	IA32_PERF_GLOBAL_STATUS_SET_CTR_FRZ_MASK                                               = 0x01                                             //col:2926
	IA32_PERF_GLOBAL_STATUS_SET_CTR_FRZ                                                (_) = (((_) >> 59) & 0x01)                             //col:2927
	IA32_PERF_GLOBAL_STATUS_SET_ASCI_BIT                                                   = 60                                               //col:2928
	IA32_PERF_GLOBAL_STATUS_SET_ASCI_FLAG                                                  = 0x1000000000000000                               //col:2929
	IA32_PERF_GLOBAL_STATUS_SET_ASCI_MASK                                                  = 0x01                                             //col:2930
	IA32_PERF_GLOBAL_STATUS_SET_ASCI                                                   (_) = (((_) >> 60) & 0x01)                             //col:2931
	IA32_PERF_GLOBAL_STATUS_SET_OVF_UNCORE_BIT                                             = 61                                               //col:2932
	IA32_PERF_GLOBAL_STATUS_SET_OVF_UNCORE_FLAG                                            = 0x2000000000000000                               //col:2933
	IA32_PERF_GLOBAL_STATUS_SET_OVF_UNCORE_MASK                                            = 0x01                                             //col:2934
	IA32_PERF_GLOBAL_STATUS_SET_OVF_UNCORE                                             (_) = (((_) >> 61) & 0x01)                             //col:2935
	IA32_PERF_GLOBAL_STATUS_SET_OVF_BUF_BIT                                                = 62                                               //col:2936
	IA32_PERF_GLOBAL_STATUS_SET_OVF_BUF_FLAG                                               = 0x4000000000000000                               //col:2937
	IA32_PERF_GLOBAL_STATUS_SET_OVF_BUF_MASK                                               = 0x01                                             //col:2938
	IA32_PERF_GLOBAL_STATUS_SET_OVF_BUF                                                (_) = (((_) >> 62) & 0x01)                             //col:2939
	IA32_PERF_GLOBAL_INUSE                                                                 = 0x00000392                                       //col:2940
	IA32_PERF_GLOBAL_INUSE_IA32_PERFEVTSELN_IN_USE_BIT                                     = 0                                                //col:2941
	IA32_PERF_GLOBAL_INUSE_IA32_PERFEVTSELN_IN_USE_FLAG                                    = 0xFFFFFFFF                                       //col:2942
	IA32_PERF_GLOBAL_INUSE_IA32_PERFEVTSELN_IN_USE_MASK                                    = 0xFFFFFFFF                                       //col:2943
	IA32_PERF_GLOBAL_INUSE_IA32_PERFEVTSELN_IN_USE                                     (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:2944
	IA32_PERF_GLOBAL_INUSE_IA32_FIXED_CTRN_IN_USE_BIT                                      = 32                                               //col:2945
	IA32_PERF_GLOBAL_INUSE_IA32_FIXED_CTRN_IN_USE_FLAG                                     = 0x700000000                                      //col:2946
	IA32_PERF_GLOBAL_INUSE_IA32_FIXED_CTRN_IN_USE_MASK                                     = 0x07                                             //col:2947
	IA32_PERF_GLOBAL_INUSE_IA32_FIXED_CTRN_IN_USE                                      (_) = (((_) >> 32) & 0x07)                             //col:2948
	IA32_PERF_GLOBAL_INUSE_PMI_IN_USE_BIT                                                  = 63                                               //col:2949
	IA32_PERF_GLOBAL_INUSE_PMI_IN_USE_FLAG                                                 = 0x8000000000000000                               //col:2950
	IA32_PERF_GLOBAL_INUSE_PMI_IN_USE_MASK                                                 = 0x01                                             //col:2951
	IA32_PERF_GLOBAL_INUSE_PMI_IN_USE                                                  (_) = (((_) >> 63) & 0x01)                             //col:2952
	IA32_PEBS_ENABLE                                                                       = 0x000003F1                                       //col:2953
	IA32_PEBS_ENABLE_ENABLE_PEBS_BIT                                                       = 0                                                //col:2954
	IA32_PEBS_ENABLE_ENABLE_PEBS_FLAG                                                      = 0x01                                             //col:2955
	IA32_PEBS_ENABLE_ENABLE_PEBS_MASK                                                      = 0x01                                             //col:2956
	IA32_PEBS_ENABLE_ENABLE_PEBS                                                       (_) = (((_) >> 0) & 0x01)                              //col:2957
	IA32_PEBS_ENABLE_RESERVEDORMODELSPECIFIC1_BIT                                          = 1                                                //col:2958
	IA32_PEBS_ENABLE_RESERVEDORMODELSPECIFIC1_FLAG                                         = 0x0E                                             //col:2959
	IA32_PEBS_ENABLE_RESERVEDORMODELSPECIFIC1_MASK                                         = 0x07                                             //col:2960
	IA32_PEBS_ENABLE_RESERVEDORMODELSPECIFIC1                                          (_) = (((_) >> 1) & 0x07)                              //col:2961
	IA32_PEBS_ENABLE_RESERVEDORMODELSPECIFIC2_BIT                                          = 32                                               //col:2962
	IA32_PEBS_ENABLE_RESERVEDORMODELSPECIFIC2_FLAG                                         = 0xF00000000                                      //col:2963
	IA32_PEBS_ENABLE_RESERVEDORMODELSPECIFIC2_MASK                                         = 0x0F                                             //col:2964
	IA32_PEBS_ENABLE_RESERVEDORMODELSPECIFIC2                                          (_) = (((_) >> 32) & 0x0F)                             //col:2965
	IA32_MC0_CTL                                                                           = 0x00000400                                       //col:2966
	IA32_MC1_CTL                                                                           = 0x00000404                                       //col:2967
	IA32_MC2_CTL                                                                           = 0x00000408                                       //col:2968
	IA32_MC3_CTL                                                                           = 0x0000040C                                       //col:2969
	IA32_MC4_CTL                                                                           = 0x00000410                                       //col:2970
	IA32_MC5_CTL                                                                           = 0x00000414                                       //col:2971
	IA32_MC6_CTL                                                                           = 0x00000418                                       //col:2972
	IA32_MC7_CTL                                                                           = 0x0000041C                                       //col:2973
	IA32_MC8_CTL                                                                           = 0x00000420                                       //col:2974
	IA32_MC9_CTL                                                                           = 0x00000424                                       //col:2975
	IA32_MC10_CTL                                                                          = 0x00000428                                       //col:2976
	IA32_MC11_CTL                                                                          = 0x0000042C                                       //col:2977
	IA32_MC12_CTL                                                                          = 0x00000430                                       //col:2978
	IA32_MC13_CTL                                                                          = 0x00000434                                       //col:2979
	IA32_MC14_CTL                                                                          = 0x00000438                                       //col:2980
	IA32_MC15_CTL                                                                          = 0x0000043C                                       //col:2981
	IA32_MC16_CTL                                                                          = 0x00000440                                       //col:2982
	IA32_MC17_CTL                                                                          = 0x00000444                                       //col:2983
	IA32_MC18_CTL                                                                          = 0x00000448                                       //col:2984
	IA32_MC19_CTL                                                                          = 0x0000044C                                       //col:2985
	IA32_MC20_CTL                                                                          = 0x00000450                                       //col:2986
	IA32_MC21_CTL                                                                          = 0x00000454                                       //col:2987
	IA32_MC22_CTL                                                                          = 0x00000458                                       //col:2988
	IA32_MC23_CTL                                                                          = 0x0000045C                                       //col:2989
	IA32_MC24_CTL                                                                          = 0x00000460                                       //col:2990
	IA32_MC25_CTL                                                                          = 0x00000464                                       //col:2991
	IA32_MC26_CTL                                                                          = 0x00000468                                       //col:2992
	IA32_MC27_CTL                                                                          = 0x0000046C                                       //col:2993
	IA32_MC28_CTL                                                                          = 0x00000470                                       //col:2994
	IA32_MC0_STATUS                                                                        = 0x00000401                                       //col:2995
	IA32_MC1_STATUS                                                                        = 0x00000405                                       //col:2996
	IA32_MC2_STATUS                                                                        = 0x00000409                                       //col:2997
	IA32_MC3_STATUS                                                                        = 0x0000040D                                       //col:2998
	IA32_MC4_STATUS                                                                        = 0x00000411                                       //col:2999
	IA32_MC5_STATUS                                                                        = 0x00000415                                       //col:3000
	IA32_MC6_STATUS                                                                        = 0x00000419                                       //col:3001
	IA32_MC7_STATUS                                                                        = 0x0000041D                                       //col:3002
	IA32_MC8_STATUS                                                                        = 0x00000421                                       //col:3003
	IA32_MC9_STATUS                                                                        = 0x00000425                                       //col:3004
	IA32_MC10_STATUS                                                                       = 0x00000429                                       //col:3005
	IA32_MC11_STATUS                                                                       = 0x0000042D                                       //col:3006
	IA32_MC12_STATUS                                                                       = 0x00000431                                       //col:3007
	IA32_MC13_STATUS                                                                       = 0x00000435                                       //col:3008
	IA32_MC14_STATUS                                                                       = 0x00000439                                       //col:3009
	IA32_MC15_STATUS                                                                       = 0x0000043D                                       //col:3010
	IA32_MC16_STATUS                                                                       = 0x00000441                                       //col:3011
	IA32_MC17_STATUS                                                                       = 0x00000445                                       //col:3012
	IA32_MC18_STATUS                                                                       = 0x00000449                                       //col:3013
	IA32_MC19_STATUS                                                                       = 0x0000044D                                       //col:3014
	IA32_MC20_STATUS                                                                       = 0x00000451                                       //col:3015
	IA32_MC21_STATUS                                                                       = 0x00000455                                       //col:3016
	IA32_MC22_STATUS                                                                       = 0x00000459                                       //col:3017
	IA32_MC23_STATUS                                                                       = 0x0000045D                                       //col:3018
	IA32_MC24_STATUS                                                                       = 0x00000461                                       //col:3019
	IA32_MC25_STATUS                                                                       = 0x00000465                                       //col:3020
	IA32_MC26_STATUS                                                                       = 0x00000469                                       //col:3021
	IA32_MC27_STATUS                                                                       = 0x0000046D                                       //col:3022
	IA32_MC28_STATUS                                                                       = 0x00000471                                       //col:3023
	IA32_MC0_ADDR                                                                          = 0x00000402                                       //col:3024
	IA32_MC1_ADDR                                                                          = 0x00000406                                       //col:3025
	IA32_MC2_ADDR                                                                          = 0x0000040A                                       //col:3026
	IA32_MC3_ADDR                                                                          = 0x0000040E                                       //col:3027
	IA32_MC4_ADDR                                                                          = 0x00000412                                       //col:3028
	IA32_MC5_ADDR                                                                          = 0x00000416                                       //col:3029
	IA32_MC6_ADDR                                                                          = 0x0000041A                                       //col:3030
	IA32_MC7_ADDR                                                                          = 0x0000041E                                       //col:3031
	IA32_MC8_ADDR                                                                          = 0x00000422                                       //col:3032
	IA32_MC9_ADDR                                                                          = 0x00000426                                       //col:3033
	IA32_MC10_ADDR                                                                         = 0x0000042A                                       //col:3034
	IA32_MC11_ADDR                                                                         = 0x0000042E                                       //col:3035
	IA32_MC12_ADDR                                                                         = 0x00000432                                       //col:3036
	IA32_MC13_ADDR                                                                         = 0x00000436                                       //col:3037
	IA32_MC14_ADDR                                                                         = 0x0000043A                                       //col:3038
	IA32_MC15_ADDR                                                                         = 0x0000043E                                       //col:3039
	IA32_MC16_ADDR                                                                         = 0x00000442                                       //col:3040
	IA32_MC17_ADDR                                                                         = 0x00000446                                       //col:3041
	IA32_MC18_ADDR                                                                         = 0x0000044A                                       //col:3042
	IA32_MC19_ADDR                                                                         = 0x0000044E                                       //col:3043
	IA32_MC20_ADDR                                                                         = 0x00000452                                       //col:3044
	IA32_MC21_ADDR                                                                         = 0x00000456                                       //col:3045
	IA32_MC22_ADDR                                                                         = 0x0000045A                                       //col:3046
	IA32_MC23_ADDR                                                                         = 0x0000045E                                       //col:3047
	IA32_MC24_ADDR                                                                         = 0x00000462                                       //col:3048
	IA32_MC25_ADDR                                                                         = 0x00000466                                       //col:3049
	IA32_MC26_ADDR                                                                         = 0x0000046A                                       //col:3050
	IA32_MC27_ADDR                                                                         = 0x0000046E                                       //col:3051
	IA32_MC28_ADDR                                                                         = 0x00000472                                       //col:3052
	IA32_MC0_MISC                                                                          = 0x00000403                                       //col:3053
	IA32_MC1_MISC                                                                          = 0x00000407                                       //col:3054
	IA32_MC2_MISC                                                                          = 0x0000040B                                       //col:3055
	IA32_MC3_MISC                                                                          = 0x0000040F                                       //col:3056
	IA32_MC4_MISC                                                                          = 0x00000413                                       //col:3057
	IA32_MC5_MISC                                                                          = 0x00000417                                       //col:3058
	IA32_MC6_MISC                                                                          = 0x0000041B                                       //col:3059
	IA32_MC7_MISC                                                                          = 0x0000041F                                       //col:3060
	IA32_MC8_MISC                                                                          = 0x00000423                                       //col:3061
	IA32_MC9_MISC                                                                          = 0x00000427                                       //col:3062
	IA32_MC10_MISC                                                                         = 0x0000042B                                       //col:3063
	IA32_MC11_MISC                                                                         = 0x0000042F                                       //col:3064
	IA32_MC12_MISC                                                                         = 0x00000433                                       //col:3065
	IA32_MC13_MISC                                                                         = 0x00000437                                       //col:3066
	IA32_MC14_MISC                                                                         = 0x0000043B                                       //col:3067
	IA32_MC15_MISC                                                                         = 0x0000043F                                       //col:3068
	IA32_MC16_MISC                                                                         = 0x00000443                                       //col:3069
	IA32_MC17_MISC                                                                         = 0x00000447                                       //col:3070
	IA32_MC18_MISC                                                                         = 0x0000044B                                       //col:3071
	IA32_MC19_MISC                                                                         = 0x0000044F                                       //col:3072
	IA32_MC20_MISC                                                                         = 0x00000453                                       //col:3073
	IA32_MC21_MISC                                                                         = 0x00000457                                       //col:3074
	IA32_MC22_MISC                                                                         = 0x0000045B                                       //col:3075
	IA32_MC23_MISC                                                                         = 0x0000045F                                       //col:3076
	IA32_MC24_MISC                                                                         = 0x00000463                                       //col:3077
	IA32_MC25_MISC                                                                         = 0x00000467                                       //col:3078
	IA32_MC26_MISC                                                                         = 0x0000046B                                       //col:3079
	IA32_MC27_MISC                                                                         = 0x0000046F                                       //col:3080
	IA32_MC28_MISC                                                                         = 0x00000473                                       //col:3081
	IA32_VMX_BASIC                                                                         = 0x00000480                                       //col:3082
	IA32_VMX_BASIC_VMCS_REVISION_ID_BIT                                                    = 0                                                //col:3083
	IA32_VMX_BASIC_VMCS_REVISION_ID_FLAG                                                   = 0x7FFFFFFF                                       //col:3084
	IA32_VMX_BASIC_VMCS_REVISION_ID_MASK                                                   = 0x7FFFFFFF                                       //col:3085
	IA32_VMX_BASIC_VMCS_REVISION_ID                                                    (_) = (((_) >> 0) & 0x7FFFFFFF)                        //col:3086
	IA32_VMX_BASIC_MUST_BE_ZERO_BIT                                                        = 31                                               //col:3087
	IA32_VMX_BASIC_MUST_BE_ZERO_FLAG                                                       = 0x80000000                                       //col:3088
	IA32_VMX_BASIC_MUST_BE_ZERO_MASK                                                       = 0x01                                             //col:3089
	IA32_VMX_BASIC_MUST_BE_ZERO                                                        (_) = (((_) >> 31) & 0x01)                             //col:3090
	IA32_VMX_BASIC_VMCS_SIZE_IN_BYTES_BIT                                                  = 32                                               //col:3091
	IA32_VMX_BASIC_VMCS_SIZE_IN_BYTES_FLAG                                                 = 0x1FFF00000000                                   //col:3092
	IA32_VMX_BASIC_VMCS_SIZE_IN_BYTES_MASK                                                 = 0x1FFF                                           //col:3093
	IA32_VMX_BASIC_VMCS_SIZE_IN_BYTES                                                  (_) = (((_) >> 32) & 0x1FFF)                           //col:3094
	IA32_VMX_BASIC_VMCS_PHYSICAL_ADDRESS_WIDTH_BIT                                         = 48                                               //col:3095
	IA32_VMX_BASIC_VMCS_PHYSICAL_ADDRESS_WIDTH_FLAG                                        = 0x1000000000000                                  //col:3096
	IA32_VMX_BASIC_VMCS_PHYSICAL_ADDRESS_WIDTH_MASK                                        = 0x01                                             //col:3097
	IA32_VMX_BASIC_VMCS_PHYSICAL_ADDRESS_WIDTH                                         (_) = (((_) >> 48) & 0x01)                             //col:3098
	IA32_VMX_BASIC_DUAL_MONITOR_SUPPORT_BIT                                                = 49                                               //col:3099
	IA32_VMX_BASIC_DUAL_MONITOR_SUPPORT_FLAG                                               = 0x2000000000000                                  //col:3100
	IA32_VMX_BASIC_DUAL_MONITOR_SUPPORT_MASK                                               = 0x01                                             //col:3101
	IA32_VMX_BASIC_DUAL_MONITOR_SUPPORT                                                (_) = (((_) >> 49) & 0x01)                             //col:3102
	IA32_VMX_BASIC_MEMORY_TYPE_BIT                                                         = 50                                               //col:3103
	IA32_VMX_BASIC_MEMORY_TYPE_FLAG                                                        = 0x3C000000000000                                 //col:3104
	IA32_VMX_BASIC_MEMORY_TYPE_MASK                                                        = 0x0F                                             //col:3105
	IA32_VMX_BASIC_MEMORY_TYPE                                                         (_) = (((_) >> 50) & 0x0F)                             //col:3106
	IA32_VMX_BASIC_INS_OUTS_REPORTING_BIT                                                  = 54                                               //col:3107
	IA32_VMX_BASIC_INS_OUTS_REPORTING_FLAG                                                 = 0x40000000000000                                 //col:3108
	IA32_VMX_BASIC_INS_OUTS_REPORTING_MASK                                                 = 0x01                                             //col:3109
	IA32_VMX_BASIC_INS_OUTS_REPORTING                                                  (_) = (((_) >> 54) & 0x01)                             //col:3110
	IA32_VMX_BASIC_VMX_CONTROLS_BIT                                                        = 55                                               //col:3111
	IA32_VMX_BASIC_VMX_CONTROLS_FLAG                                                       = 0x80000000000000                                 //col:3112
	IA32_VMX_BASIC_VMX_CONTROLS_MASK                                                       = 0x01                                             //col:3113
	IA32_VMX_BASIC_VMX_CONTROLS                                                        (_) = (((_) >> 55) & 0x01)                             //col:3114
	IA32_VMX_PINBASED_CTLS                                                                 = 0x00000481                                       //col:3115
	IA32_VMX_PINBASED_CTLS_EXTERNAL_INTERRUPT_EXITING_BIT                                  = 0                                                //col:3116
	IA32_VMX_PINBASED_CTLS_EXTERNAL_INTERRUPT_EXITING_FLAG                                 = 0x01                                             //col:3117
	IA32_VMX_PINBASED_CTLS_EXTERNAL_INTERRUPT_EXITING_MASK                                 = 0x01                                             //col:3118
	IA32_VMX_PINBASED_CTLS_EXTERNAL_INTERRUPT_EXITING                                  (_) = (((_) >> 0) & 0x01)                              //col:3119
	IA32_VMX_PINBASED_CTLS_NMI_EXITING_BIT                                                 = 3                                                //col:3120
	IA32_VMX_PINBASED_CTLS_NMI_EXITING_FLAG                                                = 0x08                                             //col:3121
	IA32_VMX_PINBASED_CTLS_NMI_EXITING_MASK                                                = 0x01                                             //col:3122
	IA32_VMX_PINBASED_CTLS_NMI_EXITING                                                 (_) = (((_) >> 3) & 0x01)                              //col:3123
	IA32_VMX_PINBASED_CTLS_VIRTUAL_NMI_BIT                                                 = 5                                                //col:3124
	IA32_VMX_PINBASED_CTLS_VIRTUAL_NMI_FLAG                                                = 0x20                                             //col:3125
	IA32_VMX_PINBASED_CTLS_VIRTUAL_NMI_MASK                                                = 0x01                                             //col:3126
	IA32_VMX_PINBASED_CTLS_VIRTUAL_NMI                                                 (_) = (((_) >> 5) & 0x01)                              //col:3127
	IA32_VMX_PINBASED_CTLS_ACTIVATE_VMX_PREEMPTION_TIMER_BIT                               = 6                                                //col:3128
	IA32_VMX_PINBASED_CTLS_ACTIVATE_VMX_PREEMPTION_TIMER_FLAG                              = 0x40                                             //col:3129
	IA32_VMX_PINBASED_CTLS_ACTIVATE_VMX_PREEMPTION_TIMER_MASK                              = 0x01                                             //col:3130
	IA32_VMX_PINBASED_CTLS_ACTIVATE_VMX_PREEMPTION_TIMER                               (_) = (((_) >> 6) & 0x01)                              //col:3131
	IA32_VMX_PINBASED_CTLS_PROCESS_POSTED_INTERRUPTS_BIT                                   = 7                                                //col:3132
	IA32_VMX_PINBASED_CTLS_PROCESS_POSTED_INTERRUPTS_FLAG                                  = 0x80                                             //col:3133
	IA32_VMX_PINBASED_CTLS_PROCESS_POSTED_INTERRUPTS_MASK                                  = 0x01                                             //col:3134
	IA32_VMX_PINBASED_CTLS_PROCESS_POSTED_INTERRUPTS                                   (_) = (((_) >> 7) & 0x01)                              //col:3135
	IA32_VMX_PROCBASED_CTLS                                                                = 0x00000482                                       //col:3136
	IA32_VMX_PROCBASED_CTLS_INTERRUPT_WINDOW_EXITING_BIT                                   = 2                                                //col:3137
	IA32_VMX_PROCBASED_CTLS_INTERRUPT_WINDOW_EXITING_FLAG                                  = 0x04                                             //col:3138
	IA32_VMX_PROCBASED_CTLS_INTERRUPT_WINDOW_EXITING_MASK                                  = 0x01                                             //col:3139
	IA32_VMX_PROCBASED_CTLS_INTERRUPT_WINDOW_EXITING                                   (_) = (((_) >> 2) & 0x01)                              //col:3140
	IA32_VMX_PROCBASED_CTLS_USE_TSC_OFFSETTING_BIT                                         = 3                                                //col:3141
	IA32_VMX_PROCBASED_CTLS_USE_TSC_OFFSETTING_FLAG                                        = 0x08                                             //col:3142
	IA32_VMX_PROCBASED_CTLS_USE_TSC_OFFSETTING_MASK                                        = 0x01                                             //col:3143
	IA32_VMX_PROCBASED_CTLS_USE_TSC_OFFSETTING                                         (_) = (((_) >> 3) & 0x01)                              //col:3144
	IA32_VMX_PROCBASED_CTLS_HLT_EXITING_BIT                                                = 7                                                //col:3145
	IA32_VMX_PROCBASED_CTLS_HLT_EXITING_FLAG                                               = 0x80                                             //col:3146
	IA32_VMX_PROCBASED_CTLS_HLT_EXITING_MASK                                               = 0x01                                             //col:3147
	IA32_VMX_PROCBASED_CTLS_HLT_EXITING                                                (_) = (((_) >> 7) & 0x01)                              //col:3148
	IA32_VMX_PROCBASED_CTLS_INVLPG_EXITING_BIT                                             = 9                                                //col:3149
	IA32_VMX_PROCBASED_CTLS_INVLPG_EXITING_FLAG                                            = 0x200                                            //col:3150
	IA32_VMX_PROCBASED_CTLS_INVLPG_EXITING_MASK                                            = 0x01                                             //col:3151
	IA32_VMX_PROCBASED_CTLS_INVLPG_EXITING                                             (_) = (((_) >> 9) & 0x01)                              //col:3152
	IA32_VMX_PROCBASED_CTLS_MWAIT_EXITING_BIT                                              = 10                                               //col:3153
	IA32_VMX_PROCBASED_CTLS_MWAIT_EXITING_FLAG                                             = 0x400                                            //col:3154
	IA32_VMX_PROCBASED_CTLS_MWAIT_EXITING_MASK                                             = 0x01                                             //col:3155
	IA32_VMX_PROCBASED_CTLS_MWAIT_EXITING                                              (_) = (((_) >> 10) & 0x01)                             //col:3156
	IA32_VMX_PROCBASED_CTLS_RDPMC_EXITING_BIT                                              = 11                                               //col:3157
	IA32_VMX_PROCBASED_CTLS_RDPMC_EXITING_FLAG                                             = 0x800                                            //col:3158
	IA32_VMX_PROCBASED_CTLS_RDPMC_EXITING_MASK                                             = 0x01                                             //col:3159
	IA32_VMX_PROCBASED_CTLS_RDPMC_EXITING                                              (_) = (((_) >> 11) & 0x01)                             //col:3160
	IA32_VMX_PROCBASED_CTLS_RDTSC_EXITING_BIT                                              = 12                                               //col:3161
	IA32_VMX_PROCBASED_CTLS_RDTSC_EXITING_FLAG                                             = 0x1000                                           //col:3162
	IA32_VMX_PROCBASED_CTLS_RDTSC_EXITING_MASK                                             = 0x01                                             //col:3163
	IA32_VMX_PROCBASED_CTLS_RDTSC_EXITING                                              (_) = (((_) >> 12) & 0x01)                             //col:3164
	IA32_VMX_PROCBASED_CTLS_CR3_LOAD_EXITING_BIT                                           = 15                                               //col:3165
	IA32_VMX_PROCBASED_CTLS_CR3_LOAD_EXITING_FLAG                                          = 0x8000                                           //col:3166
	IA32_VMX_PROCBASED_CTLS_CR3_LOAD_EXITING_MASK                                          = 0x01                                             //col:3167
	IA32_VMX_PROCBASED_CTLS_CR3_LOAD_EXITING                                           (_) = (((_) >> 15) & 0x01)                             //col:3168
	IA32_VMX_PROCBASED_CTLS_CR3_STORE_EXITING_BIT                                          = 16                                               //col:3169
	IA32_VMX_PROCBASED_CTLS_CR3_STORE_EXITING_FLAG                                         = 0x10000                                          //col:3170
	IA32_VMX_PROCBASED_CTLS_CR3_STORE_EXITING_MASK                                         = 0x01                                             //col:3171
	IA32_VMX_PROCBASED_CTLS_CR3_STORE_EXITING                                          (_) = (((_) >> 16) & 0x01)                             //col:3172
	IA32_VMX_PROCBASED_CTLS_ACTIVATE_TERTIARY_CONTROLS_BIT                                 = 17                                               //col:3173
	IA32_VMX_PROCBASED_CTLS_ACTIVATE_TERTIARY_CONTROLS_FLAG                                = 0x20000                                          //col:3174
	IA32_VMX_PROCBASED_CTLS_ACTIVATE_TERTIARY_CONTROLS_MASK                                = 0x01                                             //col:3175
	IA32_VMX_PROCBASED_CTLS_ACTIVATE_TERTIARY_CONTROLS                                 (_) = (((_) >> 17) & 0x01)                             //col:3176
	IA32_VMX_PROCBASED_CTLS_CR8_LOAD_EXITING_BIT                                           = 19                                               //col:3177
	IA32_VMX_PROCBASED_CTLS_CR8_LOAD_EXITING_FLAG                                          = 0x80000                                          //col:3178
	IA32_VMX_PROCBASED_CTLS_CR8_LOAD_EXITING_MASK                                          = 0x01                                             //col:3179
	IA32_VMX_PROCBASED_CTLS_CR8_LOAD_EXITING                                           (_) = (((_) >> 19) & 0x01)                             //col:3180
	IA32_VMX_PROCBASED_CTLS_CR8_STORE_EXITING_BIT                                          = 20                                               //col:3181
	IA32_VMX_PROCBASED_CTLS_CR8_STORE_EXITING_FLAG                                         = 0x100000                                         //col:3182
	IA32_VMX_PROCBASED_CTLS_CR8_STORE_EXITING_MASK                                         = 0x01                                             //col:3183
	IA32_VMX_PROCBASED_CTLS_CR8_STORE_EXITING                                          (_) = (((_) >> 20) & 0x01)                             //col:3184
	IA32_VMX_PROCBASED_CTLS_USE_TPR_SHADOW_BIT                                             = 21                                               //col:3185
	IA32_VMX_PROCBASED_CTLS_USE_TPR_SHADOW_FLAG                                            = 0x200000                                         //col:3186
	IA32_VMX_PROCBASED_CTLS_USE_TPR_SHADOW_MASK                                            = 0x01                                             //col:3187
	IA32_VMX_PROCBASED_CTLS_USE_TPR_SHADOW                                             (_) = (((_) >> 21) & 0x01)                             //col:3188
	IA32_VMX_PROCBASED_CTLS_NMI_WINDOW_EXITING_BIT                                         = 22                                               //col:3189
	IA32_VMX_PROCBASED_CTLS_NMI_WINDOW_EXITING_FLAG                                        = 0x400000                                         //col:3190
	IA32_VMX_PROCBASED_CTLS_NMI_WINDOW_EXITING_MASK                                        = 0x01                                             //col:3191
	IA32_VMX_PROCBASED_CTLS_NMI_WINDOW_EXITING                                         (_) = (((_) >> 22) & 0x01)                             //col:3192
	IA32_VMX_PROCBASED_CTLS_MOV_DR_EXITING_BIT                                             = 23                                               //col:3193
	IA32_VMX_PROCBASED_CTLS_MOV_DR_EXITING_FLAG                                            = 0x800000                                         //col:3194
	IA32_VMX_PROCBASED_CTLS_MOV_DR_EXITING_MASK                                            = 0x01                                             //col:3195
	IA32_VMX_PROCBASED_CTLS_MOV_DR_EXITING                                             (_) = (((_) >> 23) & 0x01)                             //col:3196
	IA32_VMX_PROCBASED_CTLS_UNCONDITIONAL_IO_EXITING_BIT                                   = 24                                               //col:3197
	IA32_VMX_PROCBASED_CTLS_UNCONDITIONAL_IO_EXITING_FLAG                                  = 0x1000000                                        //col:3198
	IA32_VMX_PROCBASED_CTLS_UNCONDITIONAL_IO_EXITING_MASK                                  = 0x01                                             //col:3199
	IA32_VMX_PROCBASED_CTLS_UNCONDITIONAL_IO_EXITING                                   (_) = (((_) >> 24) & 0x01)                             //col:3200
	IA32_VMX_PROCBASED_CTLS_USE_IO_BITMAPS_BIT                                             = 25                                               //col:3201
	IA32_VMX_PROCBASED_CTLS_USE_IO_BITMAPS_FLAG                                            = 0x2000000                                        //col:3202
	IA32_VMX_PROCBASED_CTLS_USE_IO_BITMAPS_MASK                                            = 0x01                                             //col:3203
	IA32_VMX_PROCBASED_CTLS_USE_IO_BITMAPS                                             (_) = (((_) >> 25) & 0x01)                             //col:3204
	IA32_VMX_PROCBASED_CTLS_MONITOR_TRAP_FLAG_BIT                                          = 27                                               //col:3205
	IA32_VMX_PROCBASED_CTLS_MONITOR_TRAP_FLAG_FLAG                                         = 0x8000000                                        //col:3206
	IA32_VMX_PROCBASED_CTLS_MONITOR_TRAP_FLAG_MASK                                         = 0x01                                             //col:3207
	IA32_VMX_PROCBASED_CTLS_MONITOR_TRAP_FLAG                                          (_) = (((_) >> 27) & 0x01)                             //col:3208
	IA32_VMX_PROCBASED_CTLS_USE_MSR_BITMAPS_BIT                                            = 28                                               //col:3209
	IA32_VMX_PROCBASED_CTLS_USE_MSR_BITMAPS_FLAG                                           = 0x10000000                                       //col:3210
	IA32_VMX_PROCBASED_CTLS_USE_MSR_BITMAPS_MASK                                           = 0x01                                             //col:3211
	IA32_VMX_PROCBASED_CTLS_USE_MSR_BITMAPS                                            (_) = (((_) >> 28) & 0x01)                             //col:3212
	IA32_VMX_PROCBASED_CTLS_MONITOR_EXITING_BIT                                            = 29                                               //col:3213
	IA32_VMX_PROCBASED_CTLS_MONITOR_EXITING_FLAG                                           = 0x20000000                                       //col:3214
	IA32_VMX_PROCBASED_CTLS_MONITOR_EXITING_MASK                                           = 0x01                                             //col:3215
	IA32_VMX_PROCBASED_CTLS_MONITOR_EXITING                                            (_) = (((_) >> 29) & 0x01)                             //col:3216
	IA32_VMX_PROCBASED_CTLS_PAUSE_EXITING_BIT                                              = 30                                               //col:3217
	IA32_VMX_PROCBASED_CTLS_PAUSE_EXITING_FLAG                                             = 0x40000000                                       //col:3218
	IA32_VMX_PROCBASED_CTLS_PAUSE_EXITING_MASK                                             = 0x01                                             //col:3219
	IA32_VMX_PROCBASED_CTLS_PAUSE_EXITING                                              (_) = (((_) >> 30) & 0x01)                             //col:3220
	IA32_VMX_PROCBASED_CTLS_ACTIVATE_SECONDARY_CONTROLS_BIT                                = 31                                               //col:3221
	IA32_VMX_PROCBASED_CTLS_ACTIVATE_SECONDARY_CONTROLS_FLAG                               = 0x80000000                                       //col:3222
	IA32_VMX_PROCBASED_CTLS_ACTIVATE_SECONDARY_CONTROLS_MASK                               = 0x01                                             //col:3223
	IA32_VMX_PROCBASED_CTLS_ACTIVATE_SECONDARY_CONTROLS                                (_) = (((_) >> 31) & 0x01)                             //col:3224
	IA32_VMX_EXIT_CTLS                                                                     = 0x00000483                                       //col:3225
	IA32_VMX_EXIT_CTLS_SAVE_DEBUG_CONTROLS_BIT                                             = 2                                                //col:3226
	IA32_VMX_EXIT_CTLS_SAVE_DEBUG_CONTROLS_FLAG                                            = 0x04                                             //col:3227
	IA32_VMX_EXIT_CTLS_SAVE_DEBUG_CONTROLS_MASK                                            = 0x01                                             //col:3228
	IA32_VMX_EXIT_CTLS_SAVE_DEBUG_CONTROLS                                             (_) = (((_) >> 2) & 0x01)                              //col:3229
	IA32_VMX_EXIT_CTLS_HOST_ADDRESS_SPACE_SIZE_BIT                                         = 9                                                //col:3230
	IA32_VMX_EXIT_CTLS_HOST_ADDRESS_SPACE_SIZE_FLAG                                        = 0x200                                            //col:3231
	IA32_VMX_EXIT_CTLS_HOST_ADDRESS_SPACE_SIZE_MASK                                        = 0x01                                             //col:3232
	IA32_VMX_EXIT_CTLS_HOST_ADDRESS_SPACE_SIZE                                         (_) = (((_) >> 9) & 0x01)                              //col:3233
	IA32_VMX_EXIT_CTLS_LOAD_IA32_PERF_GLOBAL_CTRL_BIT                                      = 12                                               //col:3234
	IA32_VMX_EXIT_CTLS_LOAD_IA32_PERF_GLOBAL_CTRL_FLAG                                     = 0x1000                                           //col:3235
	IA32_VMX_EXIT_CTLS_LOAD_IA32_PERF_GLOBAL_CTRL_MASK                                     = 0x01                                             //col:3236
	IA32_VMX_EXIT_CTLS_LOAD_IA32_PERF_GLOBAL_CTRL                                      (_) = (((_) >> 12) & 0x01)                             //col:3237
	IA32_VMX_EXIT_CTLS_ACKNOWLEDGE_INTERRUPT_ON_EXIT_BIT                                   = 15                                               //col:3238
	IA32_VMX_EXIT_CTLS_ACKNOWLEDGE_INTERRUPT_ON_EXIT_FLAG                                  = 0x8000                                           //col:3239
	IA32_VMX_EXIT_CTLS_ACKNOWLEDGE_INTERRUPT_ON_EXIT_MASK                                  = 0x01                                             //col:3240
	IA32_VMX_EXIT_CTLS_ACKNOWLEDGE_INTERRUPT_ON_EXIT                                   (_) = (((_) >> 15) & 0x01)                             //col:3241
	IA32_VMX_EXIT_CTLS_SAVE_IA32_PAT_BIT                                                   = 18                                               //col:3242
	IA32_VMX_EXIT_CTLS_SAVE_IA32_PAT_FLAG                                                  = 0x40000                                          //col:3243
	IA32_VMX_EXIT_CTLS_SAVE_IA32_PAT_MASK                                                  = 0x01                                             //col:3244
	IA32_VMX_EXIT_CTLS_SAVE_IA32_PAT                                                   (_) = (((_) >> 18) & 0x01)                             //col:3245
	IA32_VMX_EXIT_CTLS_LOAD_IA32_PAT_BIT                                                   = 19                                               //col:3246
	IA32_VMX_EXIT_CTLS_LOAD_IA32_PAT_FLAG                                                  = 0x80000                                          //col:3247
	IA32_VMX_EXIT_CTLS_LOAD_IA32_PAT_MASK                                                  = 0x01                                             //col:3248
	IA32_VMX_EXIT_CTLS_LOAD_IA32_PAT                                                   (_) = (((_) >> 19) & 0x01)                             //col:3249
	IA32_VMX_EXIT_CTLS_SAVE_IA32_EFER_BIT                                                  = 20                                               //col:3250
	IA32_VMX_EXIT_CTLS_SAVE_IA32_EFER_FLAG                                                 = 0x100000                                         //col:3251
	IA32_VMX_EXIT_CTLS_SAVE_IA32_EFER_MASK                                                 = 0x01                                             //col:3252
	IA32_VMX_EXIT_CTLS_SAVE_IA32_EFER                                                  (_) = (((_) >> 20) & 0x01)                             //col:3253
	IA32_VMX_EXIT_CTLS_LOAD_IA32_EFER_BIT                                                  = 21                                               //col:3254
	IA32_VMX_EXIT_CTLS_LOAD_IA32_EFER_FLAG                                                 = 0x200000                                         //col:3255
	IA32_VMX_EXIT_CTLS_LOAD_IA32_EFER_MASK                                                 = 0x01                                             //col:3256
	IA32_VMX_EXIT_CTLS_LOAD_IA32_EFER                                                  (_) = (((_) >> 21) & 0x01)                             //col:3257
	IA32_VMX_EXIT_CTLS_SAVE_VMX_PREEMPTION_TIMER_VALUE_BIT                                 = 22                                               //col:3258
	IA32_VMX_EXIT_CTLS_SAVE_VMX_PREEMPTION_TIMER_VALUE_FLAG                                = 0x400000                                         //col:3259
	IA32_VMX_EXIT_CTLS_SAVE_VMX_PREEMPTION_TIMER_VALUE_MASK                                = 0x01                                             //col:3260
	IA32_VMX_EXIT_CTLS_SAVE_VMX_PREEMPTION_TIMER_VALUE                                 (_) = (((_) >> 22) & 0x01)                             //col:3261
	IA32_VMX_EXIT_CTLS_CLEAR_IA32_BNDCFGS_BIT                                              = 23                                               //col:3262
	IA32_VMX_EXIT_CTLS_CLEAR_IA32_BNDCFGS_FLAG                                             = 0x800000                                         //col:3263
	IA32_VMX_EXIT_CTLS_CLEAR_IA32_BNDCFGS_MASK                                             = 0x01                                             //col:3264
	IA32_VMX_EXIT_CTLS_CLEAR_IA32_BNDCFGS                                              (_) = (((_) >> 23) & 0x01)                             //col:3265
	IA32_VMX_EXIT_CTLS_CONCEAL_VMX_FROM_PT_BIT                                             = 24                                               //col:3266
	IA32_VMX_EXIT_CTLS_CONCEAL_VMX_FROM_PT_FLAG                                            = 0x1000000                                        //col:3267
	IA32_VMX_EXIT_CTLS_CONCEAL_VMX_FROM_PT_MASK                                            = 0x01                                             //col:3268
	IA32_VMX_EXIT_CTLS_CONCEAL_VMX_FROM_PT                                             (_) = (((_) >> 24) & 0x01)                             //col:3269
	IA32_VMX_EXIT_CTLS_CLEAR_IA32_RTIT_CTL_BIT                                             = 25                                               //col:3270
	IA32_VMX_EXIT_CTLS_CLEAR_IA32_RTIT_CTL_FLAG                                            = 0x2000000                                        //col:3271
	IA32_VMX_EXIT_CTLS_CLEAR_IA32_RTIT_CTL_MASK                                            = 0x01                                             //col:3272
	IA32_VMX_EXIT_CTLS_CLEAR_IA32_RTIT_CTL                                             (_) = (((_) >> 25) & 0x01)                             //col:3273
	IA32_VMX_EXIT_CTLS_CLEAR_IA32_LBR_CTL_BIT                                              = 26                                               //col:3274
	IA32_VMX_EXIT_CTLS_CLEAR_IA32_LBR_CTL_FLAG                                             = 0x4000000                                        //col:3275
	IA32_VMX_EXIT_CTLS_CLEAR_IA32_LBR_CTL_MASK                                             = 0x01                                             //col:3276
	IA32_VMX_EXIT_CTLS_CLEAR_IA32_LBR_CTL                                              (_) = (((_) >> 26) & 0x01)                             //col:3277
	IA32_VMX_EXIT_CTLS_LOAD_IA32_CET_STATE_BIT                                             = 28                                               //col:3278
	IA32_VMX_EXIT_CTLS_LOAD_IA32_CET_STATE_FLAG                                            = 0x10000000                                       //col:3279
	IA32_VMX_EXIT_CTLS_LOAD_IA32_CET_STATE_MASK                                            = 0x01                                             //col:3280
	IA32_VMX_EXIT_CTLS_LOAD_IA32_CET_STATE                                             (_) = (((_) >> 28) & 0x01)                             //col:3281
	IA32_VMX_EXIT_CTLS_LOAD_IA32_PKRS_BIT                                                  = 29                                               //col:3282
	IA32_VMX_EXIT_CTLS_LOAD_IA32_PKRS_FLAG                                                 = 0x20000000                                       //col:3283
	IA32_VMX_EXIT_CTLS_LOAD_IA32_PKRS_MASK                                                 = 0x01                                             //col:3284
	IA32_VMX_EXIT_CTLS_LOAD_IA32_PKRS                                                  (_) = (((_) >> 29) & 0x01)                             //col:3285
	IA32_VMX_EXIT_CTLS_ACTIVATE_SECONDARY_CONTROLS_BIT                                     = 31                                               //col:3286
	IA32_VMX_EXIT_CTLS_ACTIVATE_SECONDARY_CONTROLS_FLAG                                    = 0x80000000                                       //col:3287
	IA32_VMX_EXIT_CTLS_ACTIVATE_SECONDARY_CONTROLS_MASK                                    = 0x01                                             //col:3288
	IA32_VMX_EXIT_CTLS_ACTIVATE_SECONDARY_CONTROLS                                     (_) = (((_) >> 31) & 0x01)                             //col:3289
	IA32_VMX_ENTRY_CTLS                                                                    = 0x00000484                                       //col:3290
	IA32_VMX_ENTRY_CTLS_LOAD_DEBUG_CONTROLS_BIT                                            = 2                                                //col:3291
	IA32_VMX_ENTRY_CTLS_LOAD_DEBUG_CONTROLS_FLAG                                           = 0x04                                             //col:3292
	IA32_VMX_ENTRY_CTLS_LOAD_DEBUG_CONTROLS_MASK                                           = 0x01                                             //col:3293
	IA32_VMX_ENTRY_CTLS_LOAD_DEBUG_CONTROLS                                            (_) = (((_) >> 2) & 0x01)                              //col:3294
	IA32_VMX_ENTRY_CTLS_IA32E_MODE_GUEST_BIT                                               = 9                                                //col:3295
	IA32_VMX_ENTRY_CTLS_IA32E_MODE_GUEST_FLAG                                              = 0x200                                            //col:3296
	IA32_VMX_ENTRY_CTLS_IA32E_MODE_GUEST_MASK                                              = 0x01                                             //col:3297
	IA32_VMX_ENTRY_CTLS_IA32E_MODE_GUEST                                               (_) = (((_) >> 9) & 0x01)                              //col:3298
	IA32_VMX_ENTRY_CTLS_ENTRY_TO_SMM_BIT                                                   = 10                                               //col:3299
	IA32_VMX_ENTRY_CTLS_ENTRY_TO_SMM_FLAG                                                  = 0x400                                            //col:3300
	IA32_VMX_ENTRY_CTLS_ENTRY_TO_SMM_MASK                                                  = 0x01                                             //col:3301
	IA32_VMX_ENTRY_CTLS_ENTRY_TO_SMM                                                   (_) = (((_) >> 10) & 0x01)                             //col:3302
	IA32_VMX_ENTRY_CTLS_DEACTIVATE_DUAL_MONITOR_TREATMENT_BIT                              = 11                                               //col:3303
	IA32_VMX_ENTRY_CTLS_DEACTIVATE_DUAL_MONITOR_TREATMENT_FLAG                             = 0x800                                            //col:3304
	IA32_VMX_ENTRY_CTLS_DEACTIVATE_DUAL_MONITOR_TREATMENT_MASK                             = 0x01                                             //col:3305
	IA32_VMX_ENTRY_CTLS_DEACTIVATE_DUAL_MONITOR_TREATMENT                              (_) = (((_) >> 11) & 0x01)                             //col:3306
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_PERF_GLOBAL_CTRL_BIT                                     = 13                                               //col:3307
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_PERF_GLOBAL_CTRL_FLAG                                    = 0x2000                                           //col:3308
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_PERF_GLOBAL_CTRL_MASK                                    = 0x01                                             //col:3309
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_PERF_GLOBAL_CTRL                                     (_) = (((_) >> 13) & 0x01)                             //col:3310
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_PAT_BIT                                                  = 14                                               //col:3311
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_PAT_FLAG                                                 = 0x4000                                           //col:3312
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_PAT_MASK                                                 = 0x01                                             //col:3313
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_PAT                                                  (_) = (((_) >> 14) & 0x01)                             //col:3314
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_EFER_BIT                                                 = 15                                               //col:3315
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_EFER_FLAG                                                = 0x8000                                           //col:3316
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_EFER_MASK                                                = 0x01                                             //col:3317
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_EFER                                                 (_) = (((_) >> 15) & 0x01)                             //col:3318
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_BNDCFGS_BIT                                              = 16                                               //col:3319
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_BNDCFGS_FLAG                                             = 0x10000                                          //col:3320
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_BNDCFGS_MASK                                             = 0x01                                             //col:3321
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_BNDCFGS                                              (_) = (((_) >> 16) & 0x01)                             //col:3322
	IA32_VMX_ENTRY_CTLS_CONCEAL_VMX_FROM_PT_BIT                                            = 17                                               //col:3323
	IA32_VMX_ENTRY_CTLS_CONCEAL_VMX_FROM_PT_FLAG                                           = 0x20000                                          //col:3324
	IA32_VMX_ENTRY_CTLS_CONCEAL_VMX_FROM_PT_MASK                                           = 0x01                                             //col:3325
	IA32_VMX_ENTRY_CTLS_CONCEAL_VMX_FROM_PT                                            (_) = (((_) >> 17) & 0x01)                             //col:3326
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_RTIT_CTL_BIT                                             = 18                                               //col:3327
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_RTIT_CTL_FLAG                                            = 0x40000                                          //col:3328
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_RTIT_CTL_MASK                                            = 0x01                                             //col:3329
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_RTIT_CTL                                             (_) = (((_) >> 18) & 0x01)                             //col:3330
	IA32_VMX_ENTRY_CTLS_LOAD_CET_STATE_BIT                                                 = 20                                               //col:3331
	IA32_VMX_ENTRY_CTLS_LOAD_CET_STATE_FLAG                                                = 0x100000                                         //col:3332
	IA32_VMX_ENTRY_CTLS_LOAD_CET_STATE_MASK                                                = 0x01                                             //col:3333
	IA32_VMX_ENTRY_CTLS_LOAD_CET_STATE                                                 (_) = (((_) >> 20) & 0x01)                             //col:3334
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_LBR_CTL_BIT                                              = 21                                               //col:3335
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_LBR_CTL_FLAG                                             = 0x200000                                         //col:3336
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_LBR_CTL_MASK                                             = 0x01                                             //col:3337
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_LBR_CTL                                              (_) = (((_) >> 21) & 0x01)                             //col:3338
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_PKRS_BIT                                                 = 22                                               //col:3339
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_PKRS_FLAG                                                = 0x400000                                         //col:3340
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_PKRS_MASK                                                = 0x01                                             //col:3341
	IA32_VMX_ENTRY_CTLS_LOAD_IA32_PKRS                                                 (_) = (((_) >> 22) & 0x01)                             //col:3342
	IA32_VMX_MISC                                                                          = 0x00000485                                       //col:3343
	IA32_VMX_MISC_PREEMPTION_TIMER_TSC_RELATIONSHIP_BIT                                    = 0                                                //col:3344
	IA32_VMX_MISC_PREEMPTION_TIMER_TSC_RELATIONSHIP_FLAG                                   = 0x1F                                             //col:3345
	IA32_VMX_MISC_PREEMPTION_TIMER_TSC_RELATIONSHIP_MASK                                   = 0x1F                                             //col:3346
	IA32_VMX_MISC_PREEMPTION_TIMER_TSC_RELATIONSHIP                                    (_) = (((_) >> 0) & 0x1F)                              //col:3347
	IA32_VMX_MISC_STORE_EFER_LMA_ON_VMEXIT_BIT                                             = 5                                                //col:3348
	IA32_VMX_MISC_STORE_EFER_LMA_ON_VMEXIT_FLAG                                            = 0x20                                             //col:3349
	IA32_VMX_MISC_STORE_EFER_LMA_ON_VMEXIT_MASK                                            = 0x01                                             //col:3350
	IA32_VMX_MISC_STORE_EFER_LMA_ON_VMEXIT                                             (_) = (((_) >> 5) & 0x01)                              //col:3351
	IA32_VMX_MISC_ACTIVITY_STATES_BIT                                                      = 6                                                //col:3352
	IA32_VMX_MISC_ACTIVITY_STATES_FLAG                                                     = 0x1C0                                            //col:3353
	IA32_VMX_MISC_ACTIVITY_STATES_MASK                                                     = 0x07                                             //col:3354
	IA32_VMX_MISC_ACTIVITY_STATES                                                      (_) = (((_) >> 6) & 0x07)                              //col:3355
	IA32_VMX_MISC_INTEL_PT_AVAILABLE_IN_VMX_BIT                                            = 14                                               //col:3356
	IA32_VMX_MISC_INTEL_PT_AVAILABLE_IN_VMX_FLAG                                           = 0x4000                                           //col:3357
	IA32_VMX_MISC_INTEL_PT_AVAILABLE_IN_VMX_MASK                                           = 0x01                                             //col:3358
	IA32_VMX_MISC_INTEL_PT_AVAILABLE_IN_VMX                                            (_) = (((_) >> 14) & 0x01)                             //col:3359
	IA32_VMX_MISC_RDMSR_CAN_READ_IA32_SMBASE_MSR_IN_SMM_BIT                                = 15                                               //col:3360
	IA32_VMX_MISC_RDMSR_CAN_READ_IA32_SMBASE_MSR_IN_SMM_FLAG                               = 0x8000                                           //col:3361
	IA32_VMX_MISC_RDMSR_CAN_READ_IA32_SMBASE_MSR_IN_SMM_MASK                               = 0x01                                             //col:3362
	IA32_VMX_MISC_RDMSR_CAN_READ_IA32_SMBASE_MSR_IN_SMM                                (_) = (((_) >> 15) & 0x01)                             //col:3363
	IA32_VMX_MISC_CR3_TARGET_COUNT_BIT                                                     = 16                                               //col:3364
	IA32_VMX_MISC_CR3_TARGET_COUNT_FLAG                                                    = 0x1FF0000                                        //col:3365
	IA32_VMX_MISC_CR3_TARGET_COUNT_MASK                                                    = 0x1FF                                            //col:3366
	IA32_VMX_MISC_CR3_TARGET_COUNT                                                     (_) = (((_) >> 16) & 0x1FF)                            //col:3367
	IA32_VMX_MISC_MAX_NUMBER_OF_MSR_BIT                                                    = 25                                               //col:3368
	IA32_VMX_MISC_MAX_NUMBER_OF_MSR_FLAG                                                   = 0xE000000                                        //col:3369
	IA32_VMX_MISC_MAX_NUMBER_OF_MSR_MASK                                                   = 0x07                                             //col:3370
	IA32_VMX_MISC_MAX_NUMBER_OF_MSR                                                    (_) = (((_) >> 25) & 0x07)                             //col:3371
	IA32_VMX_MISC_SMM_MONITOR_CTL_B2_BIT                                                   = 28                                               //col:3372
	IA32_VMX_MISC_SMM_MONITOR_CTL_B2_FLAG                                                  = 0x10000000                                       //col:3373
	IA32_VMX_MISC_SMM_MONITOR_CTL_B2_MASK                                                  = 0x01                                             //col:3374
	IA32_VMX_MISC_SMM_MONITOR_CTL_B2                                                   (_) = (((_) >> 28) & 0x01)                             //col:3375
	IA32_VMX_MISC_VMWRITE_VMEXIT_INFO_BIT                                                  = 29                                               //col:3376
	IA32_VMX_MISC_VMWRITE_VMEXIT_INFO_FLAG                                                 = 0x20000000                                       //col:3377
	IA32_VMX_MISC_VMWRITE_VMEXIT_INFO_MASK                                                 = 0x01                                             //col:3378
	IA32_VMX_MISC_VMWRITE_VMEXIT_INFO                                                  (_) = (((_) >> 29) & 0x01)                             //col:3379
	IA32_VMX_MISC_ZERO_LENGTH_INSTRUCTION_VMENTRY_INJECTION_BIT                            = 30                                               //col:3380
	IA32_VMX_MISC_ZERO_LENGTH_INSTRUCTION_VMENTRY_INJECTION_FLAG                           = 0x40000000                                       //col:3381
	IA32_VMX_MISC_ZERO_LENGTH_INSTRUCTION_VMENTRY_INJECTION_MASK                           = 0x01                                             //col:3382
	IA32_VMX_MISC_ZERO_LENGTH_INSTRUCTION_VMENTRY_INJECTION                            (_) = (((_) >> 30) & 0x01)                             //col:3383
	IA32_VMX_MISC_MSEG_ID_BIT                                                              = 32                                               //col:3384
	IA32_VMX_MISC_MSEG_ID_FLAG                                                             = 0xFFFFFFFF00000000                               //col:3385
	IA32_VMX_MISC_MSEG_ID_MASK                                                             = 0xFFFFFFFF                                       //col:3386
	IA32_VMX_MISC_MSEG_ID                                                              (_) = (((_) >> 32) & 0xFFFFFFFF)                       //col:3387
	IA32_VMX_CR0_FIXED0                                                                    = 0x00000486                                       //col:3388
	IA32_VMX_CR0_FIXED1                                                                    = 0x00000487                                       //col:3389
	IA32_VMX_CR4_FIXED0                                                                    = 0x00000488                                       //col:3390
	IA32_VMX_CR4_FIXED1                                                                    = 0x00000489                                       //col:3391
	IA32_VMX_VMCS_ENUM                                                                     = 0x0000048A                                       //col:3392
	IA32_VMX_VMCS_ENUM_ACCESS_TYPE_BIT                                                     = 0                                                //col:3393
	IA32_VMX_VMCS_ENUM_ACCESS_TYPE_FLAG                                                    = 0x01                                             //col:3394
	IA32_VMX_VMCS_ENUM_ACCESS_TYPE_MASK                                                    = 0x01                                             //col:3395
	IA32_VMX_VMCS_ENUM_ACCESS_TYPE                                                     (_) = (((_) >> 0) & 0x01)                              //col:3396
	IA32_VMX_VMCS_ENUM_HIGHEST_INDEX_VALUE_BIT                                             = 1                                                //col:3397
	IA32_VMX_VMCS_ENUM_HIGHEST_INDEX_VALUE_FLAG                                            = 0x3FE                                            //col:3398
	IA32_VMX_VMCS_ENUM_HIGHEST_INDEX_VALUE_MASK                                            = 0x1FF                                            //col:3399
	IA32_VMX_VMCS_ENUM_HIGHEST_INDEX_VALUE                                             (_) = (((_) >> 1) & 0x1FF)                             //col:3400
	IA32_VMX_VMCS_ENUM_FIELD_TYPE_BIT                                                      = 10                                               //col:3401
	IA32_VMX_VMCS_ENUM_FIELD_TYPE_FLAG                                                     = 0xC00                                            //col:3402
	IA32_VMX_VMCS_ENUM_FIELD_TYPE_MASK                                                     = 0x03                                             //col:3403
	IA32_VMX_VMCS_ENUM_FIELD_TYPE                                                      (_) = (((_) >> 10) & 0x03)                             //col:3404
	IA32_VMX_VMCS_ENUM_FIELD_WIDTH_BIT                                                     = 13                                               //col:3405
	IA32_VMX_VMCS_ENUM_FIELD_WIDTH_FLAG                                                    = 0x6000                                           //col:3406
	IA32_VMX_VMCS_ENUM_FIELD_WIDTH_MASK                                                    = 0x03                                             //col:3407
	IA32_VMX_VMCS_ENUM_FIELD_WIDTH                                                     (_) = (((_) >> 13) & 0x03)                             //col:3408
	IA32_VMX_PROCBASED_CTLS2                                                               = 0x0000048B                                       //col:3409
	IA32_VMX_PROCBASED_CTLS2_VIRTUALIZE_APIC_ACCESSES_BIT                                  = 0                                                //col:3410
	IA32_VMX_PROCBASED_CTLS2_VIRTUALIZE_APIC_ACCESSES_FLAG                                 = 0x01                                             //col:3411
	IA32_VMX_PROCBASED_CTLS2_VIRTUALIZE_APIC_ACCESSES_MASK                                 = 0x01                                             //col:3412
	IA32_VMX_PROCBASED_CTLS2_VIRTUALIZE_APIC_ACCESSES                                  (_) = (((_) >> 0) & 0x01)                              //col:3413
	IA32_VMX_PROCBASED_CTLS2_ENABLE_EPT_BIT                                                = 1                                                //col:3414
	IA32_VMX_PROCBASED_CTLS2_ENABLE_EPT_FLAG                                               = 0x02                                             //col:3415
	IA32_VMX_PROCBASED_CTLS2_ENABLE_EPT_MASK                                               = 0x01                                             //col:3416
	IA32_VMX_PROCBASED_CTLS2_ENABLE_EPT                                                (_) = (((_) >> 1) & 0x01)                              //col:3417
	IA32_VMX_PROCBASED_CTLS2_DESCRIPTOR_TABLE_EXITING_BIT                                  = 2                                                //col:3418
	IA32_VMX_PROCBASED_CTLS2_DESCRIPTOR_TABLE_EXITING_FLAG                                 = 0x04                                             //col:3419
	IA32_VMX_PROCBASED_CTLS2_DESCRIPTOR_TABLE_EXITING_MASK                                 = 0x01                                             //col:3420
	IA32_VMX_PROCBASED_CTLS2_DESCRIPTOR_TABLE_EXITING                                  (_) = (((_) >> 2) & 0x01)                              //col:3421
	IA32_VMX_PROCBASED_CTLS2_ENABLE_RDTSCP_BIT                                             = 3                                                //col:3422
	IA32_VMX_PROCBASED_CTLS2_ENABLE_RDTSCP_FLAG                                            = 0x08                                             //col:3423
	IA32_VMX_PROCBASED_CTLS2_ENABLE_RDTSCP_MASK                                            = 0x01                                             //col:3424
	IA32_VMX_PROCBASED_CTLS2_ENABLE_RDTSCP                                             (_) = (((_) >> 3) & 0x01)                              //col:3425
	IA32_VMX_PROCBASED_CTLS2_VIRTUALIZE_X2APIC_MODE_BIT                                    = 4                                                //col:3426
	IA32_VMX_PROCBASED_CTLS2_VIRTUALIZE_X2APIC_MODE_FLAG                                   = 0x10                                             //col:3427
	IA32_VMX_PROCBASED_CTLS2_VIRTUALIZE_X2APIC_MODE_MASK                                   = 0x01                                             //col:3428
	IA32_VMX_PROCBASED_CTLS2_VIRTUALIZE_X2APIC_MODE                                    (_) = (((_) >> 4) & 0x01)                              //col:3429
	IA32_VMX_PROCBASED_CTLS2_ENABLE_VPID_BIT                                               = 5                                                //col:3430
	IA32_VMX_PROCBASED_CTLS2_ENABLE_VPID_FLAG                                              = 0x20                                             //col:3431
	IA32_VMX_PROCBASED_CTLS2_ENABLE_VPID_MASK                                              = 0x01                                             //col:3432
	IA32_VMX_PROCBASED_CTLS2_ENABLE_VPID                                               (_) = (((_) >> 5) & 0x01)                              //col:3433
	IA32_VMX_PROCBASED_CTLS2_WBINVD_EXITING_BIT                                            = 6                                                //col:3434
	IA32_VMX_PROCBASED_CTLS2_WBINVD_EXITING_FLAG                                           = 0x40                                             //col:3435
	IA32_VMX_PROCBASED_CTLS2_WBINVD_EXITING_MASK                                           = 0x01                                             //col:3436
	IA32_VMX_PROCBASED_CTLS2_WBINVD_EXITING                                            (_) = (((_) >> 6) & 0x01)                              //col:3437
	IA32_VMX_PROCBASED_CTLS2_UNRESTRICTED_GUEST_BIT                                        = 7                                                //col:3438
	IA32_VMX_PROCBASED_CTLS2_UNRESTRICTED_GUEST_FLAG                                       = 0x80                                             //col:3439
	IA32_VMX_PROCBASED_CTLS2_UNRESTRICTED_GUEST_MASK                                       = 0x01                                             //col:3440
	IA32_VMX_PROCBASED_CTLS2_UNRESTRICTED_GUEST                                        (_) = (((_) >> 7) & 0x01)                              //col:3441
	IA32_VMX_PROCBASED_CTLS2_APIC_REGISTER_VIRTUALIZATION_BIT                              = 8                                                //col:3442
	IA32_VMX_PROCBASED_CTLS2_APIC_REGISTER_VIRTUALIZATION_FLAG                             = 0x100                                            //col:3443
	IA32_VMX_PROCBASED_CTLS2_APIC_REGISTER_VIRTUALIZATION_MASK                             = 0x01                                             //col:3444
	IA32_VMX_PROCBASED_CTLS2_APIC_REGISTER_VIRTUALIZATION                              (_) = (((_) >> 8) & 0x01)                              //col:3445
	IA32_VMX_PROCBASED_CTLS2_VIRTUAL_INTERRUPT_DELIVERY_BIT                                = 9                                                //col:3446
	IA32_VMX_PROCBASED_CTLS2_VIRTUAL_INTERRUPT_DELIVERY_FLAG                               = 0x200                                            //col:3447
	IA32_VMX_PROCBASED_CTLS2_VIRTUAL_INTERRUPT_DELIVERY_MASK                               = 0x01                                             //col:3448
	IA32_VMX_PROCBASED_CTLS2_VIRTUAL_INTERRUPT_DELIVERY                                (_) = (((_) >> 9) & 0x01)                              //col:3449
	IA32_VMX_PROCBASED_CTLS2_PAUSE_LOOP_EXITING_BIT                                        = 10                                               //col:3450
	IA32_VMX_PROCBASED_CTLS2_PAUSE_LOOP_EXITING_FLAG                                       = 0x400                                            //col:3451
	IA32_VMX_PROCBASED_CTLS2_PAUSE_LOOP_EXITING_MASK                                       = 0x01                                             //col:3452
	IA32_VMX_PROCBASED_CTLS2_PAUSE_LOOP_EXITING                                        (_) = (((_) >> 10) & 0x01)                             //col:3453
	IA32_VMX_PROCBASED_CTLS2_RDRAND_EXITING_BIT                                            = 11                                               //col:3454
	IA32_VMX_PROCBASED_CTLS2_RDRAND_EXITING_FLAG                                           = 0x800                                            //col:3455
	IA32_VMX_PROCBASED_CTLS2_RDRAND_EXITING_MASK                                           = 0x01                                             //col:3456
	IA32_VMX_PROCBASED_CTLS2_RDRAND_EXITING                                            (_) = (((_) >> 11) & 0x01)                             //col:3457
	IA32_VMX_PROCBASED_CTLS2_ENABLE_INVPCID_BIT                                            = 12                                               //col:3458
	IA32_VMX_PROCBASED_CTLS2_ENABLE_INVPCID_FLAG                                           = 0x1000                                           //col:3459
	IA32_VMX_PROCBASED_CTLS2_ENABLE_INVPCID_MASK                                           = 0x01                                             //col:3460
	IA32_VMX_PROCBASED_CTLS2_ENABLE_INVPCID                                            (_) = (((_) >> 12) & 0x01)                             //col:3461
	IA32_VMX_PROCBASED_CTLS2_ENABLE_VM_FUNCTIONS_BIT                                       = 13                                               //col:3462
	IA32_VMX_PROCBASED_CTLS2_ENABLE_VM_FUNCTIONS_FLAG                                      = 0x2000                                           //col:3463
	IA32_VMX_PROCBASED_CTLS2_ENABLE_VM_FUNCTIONS_MASK                                      = 0x01                                             //col:3464
	IA32_VMX_PROCBASED_CTLS2_ENABLE_VM_FUNCTIONS                                       (_) = (((_) >> 13) & 0x01)                             //col:3465
	IA32_VMX_PROCBASED_CTLS2_VMCS_SHADOWING_BIT                                            = 14                                               //col:3466
	IA32_VMX_PROCBASED_CTLS2_VMCS_SHADOWING_FLAG                                           = 0x4000                                           //col:3467
	IA32_VMX_PROCBASED_CTLS2_VMCS_SHADOWING_MASK                                           = 0x01                                             //col:3468
	IA32_VMX_PROCBASED_CTLS2_VMCS_SHADOWING                                            (_) = (((_) >> 14) & 0x01)                             //col:3469
	IA32_VMX_PROCBASED_CTLS2_ENABLE_ENCLS_EXITING_BIT                                      = 15                                               //col:3470
	IA32_VMX_PROCBASED_CTLS2_ENABLE_ENCLS_EXITING_FLAG                                     = 0x8000                                           //col:3471
	IA32_VMX_PROCBASED_CTLS2_ENABLE_ENCLS_EXITING_MASK                                     = 0x01                                             //col:3472
	IA32_VMX_PROCBASED_CTLS2_ENABLE_ENCLS_EXITING                                      (_) = (((_) >> 15) & 0x01)                             //col:3473
	IA32_VMX_PROCBASED_CTLS2_RDSEED_EXITING_BIT                                            = 16                                               //col:3474
	IA32_VMX_PROCBASED_CTLS2_RDSEED_EXITING_FLAG                                           = 0x10000                                          //col:3475
	IA32_VMX_PROCBASED_CTLS2_RDSEED_EXITING_MASK                                           = 0x01                                             //col:3476
	IA32_VMX_PROCBASED_CTLS2_RDSEED_EXITING                                            (_) = (((_) >> 16) & 0x01)                             //col:3477
	IA32_VMX_PROCBASED_CTLS2_ENABLE_PML_BIT                                                = 17                                               //col:3478
	IA32_VMX_PROCBASED_CTLS2_ENABLE_PML_FLAG                                               = 0x20000                                          //col:3479
	IA32_VMX_PROCBASED_CTLS2_ENABLE_PML_MASK                                               = 0x01                                             //col:3480
	IA32_VMX_PROCBASED_CTLS2_ENABLE_PML                                                (_) = (((_) >> 17) & 0x01)                             //col:3481
	IA32_VMX_PROCBASED_CTLS2_EPT_VIOLATION_BIT                                             = 18                                               //col:3482
	IA32_VMX_PROCBASED_CTLS2_EPT_VIOLATION_FLAG                                            = 0x40000                                          //col:3483
	IA32_VMX_PROCBASED_CTLS2_EPT_VIOLATION_MASK                                            = 0x01                                             //col:3484
	IA32_VMX_PROCBASED_CTLS2_EPT_VIOLATION                                             (_) = (((_) >> 18) & 0x01)                             //col:3485
	IA32_VMX_PROCBASED_CTLS2_CONCEAL_VMX_FROM_PT_BIT                                       = 19                                               //col:3486
	IA32_VMX_PROCBASED_CTLS2_CONCEAL_VMX_FROM_PT_FLAG                                      = 0x80000                                          //col:3487
	IA32_VMX_PROCBASED_CTLS2_CONCEAL_VMX_FROM_PT_MASK                                      = 0x01                                             //col:3488
	IA32_VMX_PROCBASED_CTLS2_CONCEAL_VMX_FROM_PT                                       (_) = (((_) >> 19) & 0x01)                             //col:3489
	IA32_VMX_PROCBASED_CTLS2_ENABLE_XSAVES_BIT                                             = 20                                               //col:3490
	IA32_VMX_PROCBASED_CTLS2_ENABLE_XSAVES_FLAG                                            = 0x100000                                         //col:3491
	IA32_VMX_PROCBASED_CTLS2_ENABLE_XSAVES_MASK                                            = 0x01                                             //col:3492
	IA32_VMX_PROCBASED_CTLS2_ENABLE_XSAVES                                             (_) = (((_) >> 20) & 0x01)                             //col:3493
	IA32_VMX_PROCBASED_CTLS2_MODE_BASED_EXECUTE_CONTROL_FOR_EPT_BIT                        = 22                                               //col:3494
	IA32_VMX_PROCBASED_CTLS2_MODE_BASED_EXECUTE_CONTROL_FOR_EPT_FLAG                       = 0x400000                                         //col:3495
	IA32_VMX_PROCBASED_CTLS2_MODE_BASED_EXECUTE_CONTROL_FOR_EPT_MASK                       = 0x01                                             //col:3496
	IA32_VMX_PROCBASED_CTLS2_MODE_BASED_EXECUTE_CONTROL_FOR_EPT                        (_) = (((_) >> 22) & 0x01)                             //col:3497
	IA32_VMX_PROCBASED_CTLS2_SUB_PAGE_WRITE_PERMISSIONS_FOR_EPT_BIT                        = 23                                               //col:3498
	IA32_VMX_PROCBASED_CTLS2_SUB_PAGE_WRITE_PERMISSIONS_FOR_EPT_FLAG                       = 0x800000                                         //col:3499
	IA32_VMX_PROCBASED_CTLS2_SUB_PAGE_WRITE_PERMISSIONS_FOR_EPT_MASK                       = 0x01                                             //col:3500
	IA32_VMX_PROCBASED_CTLS2_SUB_PAGE_WRITE_PERMISSIONS_FOR_EPT                        (_) = (((_) >> 23) & 0x01)                             //col:3501
	IA32_VMX_PROCBASED_CTLS2_PT_USES_GUEST_PHYSICAL_ADDRESSES_BIT                          = 24                                               //col:3502
	IA32_VMX_PROCBASED_CTLS2_PT_USES_GUEST_PHYSICAL_ADDRESSES_FLAG                         = 0x1000000                                        //col:3503
	IA32_VMX_PROCBASED_CTLS2_PT_USES_GUEST_PHYSICAL_ADDRESSES_MASK                         = 0x01                                             //col:3504
	IA32_VMX_PROCBASED_CTLS2_PT_USES_GUEST_PHYSICAL_ADDRESSES                          (_) = (((_) >> 24) & 0x01)                             //col:3505
	IA32_VMX_PROCBASED_CTLS2_USE_TSC_SCALING_BIT                                           = 25                                               //col:3506
	IA32_VMX_PROCBASED_CTLS2_USE_TSC_SCALING_FLAG                                          = 0x2000000                                        //col:3507
	IA32_VMX_PROCBASED_CTLS2_USE_TSC_SCALING_MASK                                          = 0x01                                             //col:3508
	IA32_VMX_PROCBASED_CTLS2_USE_TSC_SCALING                                           (_) = (((_) >> 25) & 0x01)                             //col:3509
	IA32_VMX_PROCBASED_CTLS2_ENABLE_USER_WAIT_PAUSE_BIT                                    = 26                                               //col:3510
	IA32_VMX_PROCBASED_CTLS2_ENABLE_USER_WAIT_PAUSE_FLAG                                   = 0x4000000                                        //col:3511
	IA32_VMX_PROCBASED_CTLS2_ENABLE_USER_WAIT_PAUSE_MASK                                   = 0x01                                             //col:3512
	IA32_VMX_PROCBASED_CTLS2_ENABLE_USER_WAIT_PAUSE                                    (_) = (((_) >> 26) & 0x01)                             //col:3513
	IA32_VMX_PROCBASED_CTLS2_ENABLE_ENCLV_EXITING_BIT                                      = 28                                               //col:3514
	IA32_VMX_PROCBASED_CTLS2_ENABLE_ENCLV_EXITING_FLAG                                     = 0x10000000                                       //col:3515
	IA32_VMX_PROCBASED_CTLS2_ENABLE_ENCLV_EXITING_MASK                                     = 0x01                                             //col:3516
	IA32_VMX_PROCBASED_CTLS2_ENABLE_ENCLV_EXITING                                      (_) = (((_) >> 28) & 0x01)                             //col:3517
	IA32_VMX_EPT_VPID_CAP                                                                  = 0x0000048C                                       //col:3518
	IA32_VMX_EPT_VPID_CAP_EXECUTE_ONLY_PAGES_BIT                                           = 0                                                //col:3519
	IA32_VMX_EPT_VPID_CAP_EXECUTE_ONLY_PAGES_FLAG                                          = 0x01                                             //col:3520
	IA32_VMX_EPT_VPID_CAP_EXECUTE_ONLY_PAGES_MASK                                          = 0x01                                             //col:3521
	IA32_VMX_EPT_VPID_CAP_EXECUTE_ONLY_PAGES                                           (_) = (((_) >> 0) & 0x01)                              //col:3522
	IA32_VMX_EPT_VPID_CAP_PAGE_WALK_LENGTH_4_BIT                                           = 6                                                //col:3523
	IA32_VMX_EPT_VPID_CAP_PAGE_WALK_LENGTH_4_FLAG                                          = 0x40                                             //col:3524
	IA32_VMX_EPT_VPID_CAP_PAGE_WALK_LENGTH_4_MASK                                          = 0x01                                             //col:3525
	IA32_VMX_EPT_VPID_CAP_PAGE_WALK_LENGTH_4                                           (_) = (((_) >> 6) & 0x01)                              //col:3526
	IA32_VMX_EPT_VPID_CAP_MEMORY_TYPE_UNCACHEABLE_BIT                                      = 8                                                //col:3527
	IA32_VMX_EPT_VPID_CAP_MEMORY_TYPE_UNCACHEABLE_FLAG                                     = 0x100                                            //col:3528
	IA32_VMX_EPT_VPID_CAP_MEMORY_TYPE_UNCACHEABLE_MASK                                     = 0x01                                             //col:3529
	IA32_VMX_EPT_VPID_CAP_MEMORY_TYPE_UNCACHEABLE                                      (_) = (((_) >> 8) & 0x01)                              //col:3530
	IA32_VMX_EPT_VPID_CAP_MEMORY_TYPE_WRITE_BACK_BIT                                       = 14                                               //col:3531
	IA32_VMX_EPT_VPID_CAP_MEMORY_TYPE_WRITE_BACK_FLAG                                      = 0x4000                                           //col:3532
	IA32_VMX_EPT_VPID_CAP_MEMORY_TYPE_WRITE_BACK_MASK                                      = 0x01                                             //col:3533
	IA32_VMX_EPT_VPID_CAP_MEMORY_TYPE_WRITE_BACK                                       (_) = (((_) >> 14) & 0x01)                             //col:3534
	IA32_VMX_EPT_VPID_CAP_PDE_2MB_PAGES_BIT                                                = 16                                               //col:3535
	IA32_VMX_EPT_VPID_CAP_PDE_2MB_PAGES_FLAG                                               = 0x10000                                          //col:3536
	IA32_VMX_EPT_VPID_CAP_PDE_2MB_PAGES_MASK                                               = 0x01                                             //col:3537
	IA32_VMX_EPT_VPID_CAP_PDE_2MB_PAGES                                                (_) = (((_) >> 16) & 0x01)                             //col:3538
	IA32_VMX_EPT_VPID_CAP_PDPTE_1GB_PAGES_BIT                                              = 17                                               //col:3539
	IA32_VMX_EPT_VPID_CAP_PDPTE_1GB_PAGES_FLAG                                             = 0x20000                                          //col:3540
	IA32_VMX_EPT_VPID_CAP_PDPTE_1GB_PAGES_MASK                                             = 0x01                                             //col:3541
	IA32_VMX_EPT_VPID_CAP_PDPTE_1GB_PAGES                                              (_) = (((_) >> 17) & 0x01)                             //col:3542
	IA32_VMX_EPT_VPID_CAP_INVEPT_BIT                                                       = 20                                               //col:3543
	IA32_VMX_EPT_VPID_CAP_INVEPT_FLAG                                                      = 0x100000                                         //col:3544
	IA32_VMX_EPT_VPID_CAP_INVEPT_MASK                                                      = 0x01                                             //col:3545
	IA32_VMX_EPT_VPID_CAP_INVEPT                                                       (_) = (((_) >> 20) & 0x01)                             //col:3546
	IA32_VMX_EPT_VPID_CAP_EPT_ACCESSED_AND_DIRTY_FLAGS_BIT                                 = 21                                               //col:3547
	IA32_VMX_EPT_VPID_CAP_EPT_ACCESSED_AND_DIRTY_FLAGS_FLAG                                = 0x200000                                         //col:3548
	IA32_VMX_EPT_VPID_CAP_EPT_ACCESSED_AND_DIRTY_FLAGS_MASK                                = 0x01                                             //col:3549
	IA32_VMX_EPT_VPID_CAP_EPT_ACCESSED_AND_DIRTY_FLAGS                                 (_) = (((_) >> 21) & 0x01)                             //col:3550
	IA32_VMX_EPT_VPID_CAP_ADVANCED_VMEXIT_EPT_VIOLATIONS_INFORMATION_BIT                   = 22                                               //col:3551
	IA32_VMX_EPT_VPID_CAP_ADVANCED_VMEXIT_EPT_VIOLATIONS_INFORMATION_FLAG                  = 0x400000                                         //col:3552
	IA32_VMX_EPT_VPID_CAP_ADVANCED_VMEXIT_EPT_VIOLATIONS_INFORMATION_MASK                  = 0x01                                             //col:3553
	IA32_VMX_EPT_VPID_CAP_ADVANCED_VMEXIT_EPT_VIOLATIONS_INFORMATION                   (_) = (((_) >> 22) & 0x01)                             //col:3554
	IA32_VMX_EPT_VPID_CAP_SUPERVISOR_SHADOW_STACK_BIT                                      = 23                                               //col:3555
	IA32_VMX_EPT_VPID_CAP_SUPERVISOR_SHADOW_STACK_FLAG                                     = 0x800000                                         //col:3556
	IA32_VMX_EPT_VPID_CAP_SUPERVISOR_SHADOW_STACK_MASK                                     = 0x01                                             //col:3557
	IA32_VMX_EPT_VPID_CAP_SUPERVISOR_SHADOW_STACK                                      (_) = (((_) >> 23) & 0x01)                             //col:3558
	IA32_VMX_EPT_VPID_CAP_INVEPT_SINGLE_CONTEXT_BIT                                        = 25                                               //col:3559
	IA32_VMX_EPT_VPID_CAP_INVEPT_SINGLE_CONTEXT_FLAG                                       = 0x2000000                                        //col:3560
	IA32_VMX_EPT_VPID_CAP_INVEPT_SINGLE_CONTEXT_MASK                                       = 0x01                                             //col:3561
	IA32_VMX_EPT_VPID_CAP_INVEPT_SINGLE_CONTEXT                                        (_) = (((_) >> 25) & 0x01)                             //col:3562
	IA32_VMX_EPT_VPID_CAP_INVEPT_ALL_CONTEXTS_BIT                                          = 26                                               //col:3563
	IA32_VMX_EPT_VPID_CAP_INVEPT_ALL_CONTEXTS_FLAG                                         = 0x4000000                                        //col:3564
	IA32_VMX_EPT_VPID_CAP_INVEPT_ALL_CONTEXTS_MASK                                         = 0x01                                             //col:3565
	IA32_VMX_EPT_VPID_CAP_INVEPT_ALL_CONTEXTS                                          (_) = (((_) >> 26) & 0x01)                             //col:3566
	IA32_VMX_EPT_VPID_CAP_INVVPID_BIT                                                      = 32                                               //col:3567
	IA32_VMX_EPT_VPID_CAP_INVVPID_FLAG                                                     = 0x100000000                                      //col:3568
	IA32_VMX_EPT_VPID_CAP_INVVPID_MASK                                                     = 0x01                                             //col:3569
	IA32_VMX_EPT_VPID_CAP_INVVPID                                                      (_) = (((_) >> 32) & 0x01)                             //col:3570
	IA32_VMX_EPT_VPID_CAP_INVVPID_INDIVIDUAL_ADDRESS_BIT                                   = 40                                               //col:3571
	IA32_VMX_EPT_VPID_CAP_INVVPID_INDIVIDUAL_ADDRESS_FLAG                                  = 0x10000000000                                    //col:3572
	IA32_VMX_EPT_VPID_CAP_INVVPID_INDIVIDUAL_ADDRESS_MASK                                  = 0x01                                             //col:3573
	IA32_VMX_EPT_VPID_CAP_INVVPID_INDIVIDUAL_ADDRESS                                   (_) = (((_) >> 40) & 0x01)                             //col:3574
	IA32_VMX_EPT_VPID_CAP_INVVPID_SINGLE_CONTEXT_BIT                                       = 41                                               //col:3575
	IA32_VMX_EPT_VPID_CAP_INVVPID_SINGLE_CONTEXT_FLAG                                      = 0x20000000000                                    //col:3576
	IA32_VMX_EPT_VPID_CAP_INVVPID_SINGLE_CONTEXT_MASK                                      = 0x01                                             //col:3577
	IA32_VMX_EPT_VPID_CAP_INVVPID_SINGLE_CONTEXT                                       (_) = (((_) >> 41) & 0x01)                             //col:3578
	IA32_VMX_EPT_VPID_CAP_INVVPID_ALL_CONTEXTS_BIT                                         = 42                                               //col:3579
	IA32_VMX_EPT_VPID_CAP_INVVPID_ALL_CONTEXTS_FLAG                                        = 0x40000000000                                    //col:3580
	IA32_VMX_EPT_VPID_CAP_INVVPID_ALL_CONTEXTS_MASK                                        = 0x01                                             //col:3581
	IA32_VMX_EPT_VPID_CAP_INVVPID_ALL_CONTEXTS                                         (_) = (((_) >> 42) & 0x01)                             //col:3582
	IA32_VMX_EPT_VPID_CAP_INVVPID_SINGLE_CONTEXT_RETAIN_GLOBALS_BIT                        = 43                                               //col:3583
	IA32_VMX_EPT_VPID_CAP_INVVPID_SINGLE_CONTEXT_RETAIN_GLOBALS_FLAG                       = 0x80000000000                                    //col:3584
	IA32_VMX_EPT_VPID_CAP_INVVPID_SINGLE_CONTEXT_RETAIN_GLOBALS_MASK                       = 0x01                                             //col:3585
	IA32_VMX_EPT_VPID_CAP_INVVPID_SINGLE_CONTEXT_RETAIN_GLOBALS                        (_) = (((_) >> 43) & 0x01)                             //col:3586
	IA32_VMX_EPT_VPID_CAP_MAX_HLAT_PREFIX_SIZE_BIT                                         = 48                                               //col:3587
	IA32_VMX_EPT_VPID_CAP_MAX_HLAT_PREFIX_SIZE_FLAG                                        = 0x3F000000000000                                 //col:3588
	IA32_VMX_EPT_VPID_CAP_MAX_HLAT_PREFIX_SIZE_MASK                                        = 0x3F                                             //col:3589
	IA32_VMX_EPT_VPID_CAP_MAX_HLAT_PREFIX_SIZE                                         (_) = (((_) >> 48) & 0x3F)                             //col:3590
	IA32_VMX_TRUE_PINBASED_CTLS                                                            = 0x0000048D                                       //col:3591
	IA32_VMX_TRUE_PROCBASED_CTLS                                                           = 0x0000048E                                       //col:3592
	IA32_VMX_TRUE_EXIT_CTLS                                                                = 0x0000048F                                       //col:3593
	IA32_VMX_TRUE_ENTRY_CTLS                                                               = 0x00000490                                       //col:3594
	IA32_VMX_TRUE_CTLS_ALLOWED_0_SETTINGS_BIT                                              = 0                                                //col:3595
	IA32_VMX_TRUE_CTLS_ALLOWED_0_SETTINGS_FLAG                                             = 0xFFFFFFFF                                       //col:3596
	IA32_VMX_TRUE_CTLS_ALLOWED_0_SETTINGS_MASK                                             = 0xFFFFFFFF                                       //col:3597
	IA32_VMX_TRUE_CTLS_ALLOWED_0_SETTINGS                                              (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:3598
	IA32_VMX_TRUE_CTLS_ALLOWED_1_SETTINGS_BIT                                              = 32                                               //col:3599
	IA32_VMX_TRUE_CTLS_ALLOWED_1_SETTINGS_FLAG                                             = 0xFFFFFFFF00000000                               //col:3600
	IA32_VMX_TRUE_CTLS_ALLOWED_1_SETTINGS_MASK                                             = 0xFFFFFFFF                                       //col:3601
	IA32_VMX_TRUE_CTLS_ALLOWED_1_SETTINGS                                              (_) = (((_) >> 32) & 0xFFFFFFFF)                       //col:3602
	IA32_VMX_VMFUNC                                                                        = 0x00000491                                       //col:3603
	IA32_VMX_VMFUNC_EPTP_SWITCHING_BIT                                                     = 0                                                //col:3604
	IA32_VMX_VMFUNC_EPTP_SWITCHING_FLAG                                                    = 0x01                                             //col:3605
	IA32_VMX_VMFUNC_EPTP_SWITCHING_MASK                                                    = 0x01                                             //col:3606
	IA32_VMX_VMFUNC_EPTP_SWITCHING                                                     (_) = (((_) >> 0) & 0x01)                              //col:3607
	IA32_VMX_PROCBASED_CTLS3                                                               = 0x00000492                                       //col:3608
	IA32_VMX_PROCBASED_CTLS3_LOADIWKEY_EXITING_BIT                                         = 0                                                //col:3609
	IA32_VMX_PROCBASED_CTLS3_LOADIWKEY_EXITING_FLAG                                        = 0x01                                             //col:3610
	IA32_VMX_PROCBASED_CTLS3_LOADIWKEY_EXITING_MASK                                        = 0x01                                             //col:3611
	IA32_VMX_PROCBASED_CTLS3_LOADIWKEY_EXITING                                         (_) = (((_) >> 0) & 0x01)                              //col:3612
	IA32_VMX_PROCBASED_CTLS3_ENABLE_HLAT_BIT                                               = 1                                                //col:3613
	IA32_VMX_PROCBASED_CTLS3_ENABLE_HLAT_FLAG                                              = 0x02                                             //col:3614
	IA32_VMX_PROCBASED_CTLS3_ENABLE_HLAT_MASK                                              = 0x01                                             //col:3615
	IA32_VMX_PROCBASED_CTLS3_ENABLE_HLAT                                               (_) = (((_) >> 1) & 0x01)                              //col:3616
	IA32_VMX_PROCBASED_CTLS3_EPT_PAGING_WRITE_BIT                                          = 2                                                //col:3617
	IA32_VMX_PROCBASED_CTLS3_EPT_PAGING_WRITE_FLAG                                         = 0x04                                             //col:3618
	IA32_VMX_PROCBASED_CTLS3_EPT_PAGING_WRITE_MASK                                         = 0x01                                             //col:3619
	IA32_VMX_PROCBASED_CTLS3_EPT_PAGING_WRITE                                          (_) = (((_) >> 2) & 0x01)                              //col:3620
	IA32_VMX_PROCBASED_CTLS3_GUEST_PAGING_BIT                                              = 3                                                //col:3621
	IA32_VMX_PROCBASED_CTLS3_GUEST_PAGING_FLAG                                             = 0x08                                             //col:3622
	IA32_VMX_PROCBASED_CTLS3_GUEST_PAGING_MASK                                             = 0x01                                             //col:3623
	IA32_VMX_PROCBASED_CTLS3_GUEST_PAGING                                              (_) = (((_) >> 3) & 0x01)                              //col:3624
	IA32_VMX_EXIT_CTLS2                                                                    = 0x00000493                                       //col:3625
	IA32_VMX_EXIT_CTLS2_RESERVED_BIT                                                       = 0                                                //col:3626
	IA32_VMX_EXIT_CTLS2_RESERVED_FLAG                                                      = 0xFFFFFFFFFFFFFFFF                               //col:3627
	IA32_VMX_EXIT_CTLS2_RESERVED_MASK                                                      = 0xFFFFFFFFFFFFFFFF                               //col:3628
	IA32_VMX_EXIT_CTLS2_RESERVED                                                       (_) = (((_) >> 0) & 0xFFFFFFFFFFFFFFFF)                //col:3629
	IA32_A_PMC0                                                                            = 0x000004C1                                       //col:3630
	IA32_A_PMC1                                                                            = 0x000004C2                                       //col:3631
	IA32_A_PMC2                                                                            = 0x000004C3                                       //col:3632
	IA32_A_PMC3                                                                            = 0x000004C4                                       //col:3633
	IA32_A_PMC4                                                                            = 0x000004C5                                       //col:3634
	IA32_A_PMC5                                                                            = 0x000004C6                                       //col:3635
	IA32_A_PMC6                                                                            = 0x000004C7                                       //col:3636
	IA32_A_PMC7                                                                            = 0x000004C8                                       //col:3637
	IA32_MCG_EXT_CTL                                                                       = 0x000004D0                                       //col:3638
	IA32_MCG_EXT_CTL_LMCE_EN_BIT                                                           = 0                                                //col:3639
	IA32_MCG_EXT_CTL_LMCE_EN_FLAG                                                          = 0x01                                             //col:3640
	IA32_MCG_EXT_CTL_LMCE_EN_MASK                                                          = 0x01                                             //col:3641
	IA32_MCG_EXT_CTL_LMCE_EN                                                           (_) = (((_) >> 0) & 0x01)                              //col:3642
	IA32_SGX_SVN_STATUS                                                                    = 0x00000500                                       //col:3643
	IA32_SGX_SVN_STATUS_LOCK_BIT                                                           = 0                                                //col:3644
	IA32_SGX_SVN_STATUS_LOCK_FLAG                                                          = 0x01                                             //col:3645
	IA32_SGX_SVN_STATUS_LOCK_MASK                                                          = 0x01                                             //col:3646
	IA32_SGX_SVN_STATUS_LOCK                                                           (_) = (((_) >> 0) & 0x01)                              //col:3647
	IA32_SGX_SVN_STATUS_SGX_SVN_SINIT_BIT                                                  = 16                                               //col:3648
	IA32_SGX_SVN_STATUS_SGX_SVN_SINIT_FLAG                                                 = 0xFF0000                                         //col:3649
	IA32_SGX_SVN_STATUS_SGX_SVN_SINIT_MASK                                                 = 0xFF                                             //col:3650
	IA32_SGX_SVN_STATUS_SGX_SVN_SINIT                                                  (_) = (((_) >> 16) & 0xFF)                             //col:3651
	IA32_RTIT_OUTPUT_BASE                                                                  = 0x00000560                                       //col:3652
	IA32_RTIT_OUTPUT_BASE_BASE_PHYSICAL_ADDRESS_BIT                                        = 7                                                //col:3653
	IA32_RTIT_OUTPUT_BASE_BASE_PHYSICAL_ADDRESS_FLAG                                       = 0xFFFFFFFFFF80                                   //col:3654
	IA32_RTIT_OUTPUT_BASE_BASE_PHYSICAL_ADDRESS_MASK                                       = 0x1FFFFFFFFFF                                    //col:3655
	IA32_RTIT_OUTPUT_BASE_BASE_PHYSICAL_ADDRESS                                        (_) = (((_) >> 7) & 0x1FFFFFFFFFF)                     //col:3656
	IA32_RTIT_OUTPUT_MASK_PTRS                                                             = 0x00000561                                       //col:3657
	IA32_RTIT_OUTPUT_MASK_PTRS_LOWER_MASK_BIT                                              = 0                                                //col:3658
	IA32_RTIT_OUTPUT_MASK_PTRS_LOWER_MASK_FLAG                                             = 0x7F                                             //col:3659
	IA32_RTIT_OUTPUT_MASK_PTRS_LOWER_MASK_MASK                                             = 0x7F                                             //col:3660
	IA32_RTIT_OUTPUT_MASK_PTRS_LOWER_MASK                                              (_) = (((_) >> 0) & 0x7F)                              //col:3661
	IA32_RTIT_OUTPUT_MASK_PTRS_MASK_OR_TABLE_OFFSET_BIT                                    = 7                                                //col:3662
	IA32_RTIT_OUTPUT_MASK_PTRS_MASK_OR_TABLE_OFFSET_FLAG                                   = 0xFFFFFF80                                       //col:3663
	IA32_RTIT_OUTPUT_MASK_PTRS_MASK_OR_TABLE_OFFSET_MASK                                   = 0x1FFFFFF                                        //col:3664
	IA32_RTIT_OUTPUT_MASK_PTRS_MASK_OR_TABLE_OFFSET                                    (_) = (((_) >> 7) & 0x1FFFFFF)                         //col:3665
	IA32_RTIT_OUTPUT_MASK_PTRS_OUTPUT_OFFSET_BIT                                           = 32                                               //col:3666
	IA32_RTIT_OUTPUT_MASK_PTRS_OUTPUT_OFFSET_FLAG                                          = 0xFFFFFFFF00000000                               //col:3667
	IA32_RTIT_OUTPUT_MASK_PTRS_OUTPUT_OFFSET_MASK                                          = 0xFFFFFFFF                                       //col:3668
	IA32_RTIT_OUTPUT_MASK_PTRS_OUTPUT_OFFSET                                           (_) = (((_) >> 32) & 0xFFFFFFFF)                       //col:3669
	IA32_RTIT_CTL                                                                          = 0x00000570                                       //col:3670
	IA32_RTIT_CTL_TRACE_ENABLED_BIT                                                        = 0                                                //col:3671
	IA32_RTIT_CTL_TRACE_ENABLED_FLAG                                                       = 0x01                                             //col:3672
	IA32_RTIT_CTL_TRACE_ENABLED_MASK                                                       = 0x01                                             //col:3673
	IA32_RTIT_CTL_TRACE_ENABLED                                                        (_) = (((_) >> 0) & 0x01)                              //col:3674
	IA32_RTIT_CTL_CYC_ENABLED_BIT                                                          = 1                                                //col:3675
	IA32_RTIT_CTL_CYC_ENABLED_FLAG                                                         = 0x02                                             //col:3676
	IA32_RTIT_CTL_CYC_ENABLED_MASK                                                         = 0x01                                             //col:3677
	IA32_RTIT_CTL_CYC_ENABLED                                                          (_) = (((_) >> 1) & 0x01)                              //col:3678
	IA32_RTIT_CTL_OS_BIT                                                                   = 2                                                //col:3679
	IA32_RTIT_CTL_OS_FLAG                                                                  = 0x04                                             //col:3680
	IA32_RTIT_CTL_OS_MASK                                                                  = 0x01                                             //col:3681
	IA32_RTIT_CTL_OS                                                                   (_) = (((_) >> 2) & 0x01)                              //col:3682
	IA32_RTIT_CTL_USER_BIT                                                                 = 3                                                //col:3683
	IA32_RTIT_CTL_USER_FLAG                                                                = 0x08                                             //col:3684
	IA32_RTIT_CTL_USER_MASK                                                                = 0x01                                             //col:3685
	IA32_RTIT_CTL_USER                                                                 (_) = (((_) >> 3) & 0x01)                              //col:3686
	IA32_RTIT_CTL_POWER_EVENT_TRACE_ENABLED_BIT                                            = 4                                                //col:3687
	IA32_RTIT_CTL_POWER_EVENT_TRACE_ENABLED_FLAG                                           = 0x10                                             //col:3688
	IA32_RTIT_CTL_POWER_EVENT_TRACE_ENABLED_MASK                                           = 0x01                                             //col:3689
	IA32_RTIT_CTL_POWER_EVENT_TRACE_ENABLED                                            (_) = (((_) >> 4) & 0x01)                              //col:3690
	IA32_RTIT_CTL_FUP_ON_PTW_BIT                                                           = 5                                                //col:3691
	IA32_RTIT_CTL_FUP_ON_PTW_FLAG                                                          = 0x20                                             //col:3692
	IA32_RTIT_CTL_FUP_ON_PTW_MASK                                                          = 0x01                                             //col:3693
	IA32_RTIT_CTL_FUP_ON_PTW                                                           (_) = (((_) >> 5) & 0x01)                              //col:3694
	IA32_RTIT_CTL_FABRIC_ENABLED_BIT                                                       = 6                                                //col:3695
	IA32_RTIT_CTL_FABRIC_ENABLED_FLAG                                                      = 0x40                                             //col:3696
	IA32_RTIT_CTL_FABRIC_ENABLED_MASK                                                      = 0x01                                             //col:3697
	IA32_RTIT_CTL_FABRIC_ENABLED                                                       (_) = (((_) >> 6) & 0x01)                              //col:3698
	IA32_RTIT_CTL_CR3_FILTER_BIT                                                           = 7                                                //col:3699
	IA32_RTIT_CTL_CR3_FILTER_FLAG                                                          = 0x80                                             //col:3700
	IA32_RTIT_CTL_CR3_FILTER_MASK                                                          = 0x01                                             //col:3701
	IA32_RTIT_CTL_CR3_FILTER                                                           (_) = (((_) >> 7) & 0x01)                              //col:3702
	IA32_RTIT_CTL_TOPA_BIT                                                                 = 8                                                //col:3703
	IA32_RTIT_CTL_TOPA_FLAG                                                                = 0x100                                            //col:3704
	IA32_RTIT_CTL_TOPA_MASK                                                                = 0x01                                             //col:3705
	IA32_RTIT_CTL_TOPA                                                                 (_) = (((_) >> 8) & 0x01)                              //col:3706
	IA32_RTIT_CTL_MTC_ENABLED_BIT                                                          = 9                                                //col:3707
	IA32_RTIT_CTL_MTC_ENABLED_FLAG                                                         = 0x200                                            //col:3708
	IA32_RTIT_CTL_MTC_ENABLED_MASK                                                         = 0x01                                             //col:3709
	IA32_RTIT_CTL_MTC_ENABLED                                                          (_) = (((_) >> 9) & 0x01)                              //col:3710
	IA32_RTIT_CTL_TSC_ENABLED_BIT                                                          = 10                                               //col:3711
	IA32_RTIT_CTL_TSC_ENABLED_FLAG                                                         = 0x400                                            //col:3712
	IA32_RTIT_CTL_TSC_ENABLED_MASK                                                         = 0x01                                             //col:3713
	IA32_RTIT_CTL_TSC_ENABLED                                                          (_) = (((_) >> 10) & 0x01)                             //col:3714
	IA32_RTIT_CTL_RET_COMPRESSION_DISABLED_BIT                                             = 11                                               //col:3715
	IA32_RTIT_CTL_RET_COMPRESSION_DISABLED_FLAG                                            = 0x800                                            //col:3716
	IA32_RTIT_CTL_RET_COMPRESSION_DISABLED_MASK                                            = 0x01                                             //col:3717
	IA32_RTIT_CTL_RET_COMPRESSION_DISABLED                                             (_) = (((_) >> 11) & 0x01)                             //col:3718
	IA32_RTIT_CTL_PTW_ENABLED_BIT                                                          = 12                                               //col:3719
	IA32_RTIT_CTL_PTW_ENABLED_FLAG                                                         = 0x1000                                           //col:3720
	IA32_RTIT_CTL_PTW_ENABLED_MASK                                                         = 0x01                                             //col:3721
	IA32_RTIT_CTL_PTW_ENABLED                                                          (_) = (((_) >> 12) & 0x01)                             //col:3722
	IA32_RTIT_CTL_BRANCH_ENABLED_BIT                                                       = 13                                               //col:3723
	IA32_RTIT_CTL_BRANCH_ENABLED_FLAG                                                      = 0x2000                                           //col:3724
	IA32_RTIT_CTL_BRANCH_ENABLED_MASK                                                      = 0x01                                             //col:3725
	IA32_RTIT_CTL_BRANCH_ENABLED                                                       (_) = (((_) >> 13) & 0x01)                             //col:3726
	IA32_RTIT_CTL_MTC_FREQUENCY_BIT                                                        = 14                                               //col:3727
	IA32_RTIT_CTL_MTC_FREQUENCY_FLAG                                                       = 0x3C000                                          //col:3728
	IA32_RTIT_CTL_MTC_FREQUENCY_MASK                                                       = 0x0F                                             //col:3729
	IA32_RTIT_CTL_MTC_FREQUENCY                                                        (_) = (((_) >> 14) & 0x0F)                             //col:3730
	IA32_RTIT_CTL_CYC_THRESHOLD_BIT                                                        = 19                                               //col:3731
	IA32_RTIT_CTL_CYC_THRESHOLD_FLAG                                                       = 0x780000                                         //col:3732
	IA32_RTIT_CTL_CYC_THRESHOLD_MASK                                                       = 0x0F                                             //col:3733
	IA32_RTIT_CTL_CYC_THRESHOLD                                                        (_) = (((_) >> 19) & 0x0F)                             //col:3734
	IA32_RTIT_CTL_PSB_FREQUENCY_BIT                                                        = 24                                               //col:3735
	IA32_RTIT_CTL_PSB_FREQUENCY_FLAG                                                       = 0xF000000                                        //col:3736
	IA32_RTIT_CTL_PSB_FREQUENCY_MASK                                                       = 0x0F                                             //col:3737
	IA32_RTIT_CTL_PSB_FREQUENCY                                                        (_) = (((_) >> 24) & 0x0F)                             //col:3738
	IA32_RTIT_CTL_ADDR0_CFG_BIT                                                            = 32                                               //col:3739
	IA32_RTIT_CTL_ADDR0_CFG_FLAG                                                           = 0xF00000000                                      //col:3740
	IA32_RTIT_CTL_ADDR0_CFG_MASK                                                           = 0x0F                                             //col:3741
	IA32_RTIT_CTL_ADDR0_CFG                                                            (_) = (((_) >> 32) & 0x0F)                             //col:3742
	IA32_RTIT_CTL_ADDR1_CFG_BIT                                                            = 36                                               //col:3743
	IA32_RTIT_CTL_ADDR1_CFG_FLAG                                                           = 0xF000000000                                     //col:3744
	IA32_RTIT_CTL_ADDR1_CFG_MASK                                                           = 0x0F                                             //col:3745
	IA32_RTIT_CTL_ADDR1_CFG                                                            (_) = (((_) >> 36) & 0x0F)                             //col:3746
	IA32_RTIT_CTL_ADDR2_CFG_BIT                                                            = 40                                               //col:3747
	IA32_RTIT_CTL_ADDR2_CFG_FLAG                                                           = 0xF0000000000                                    //col:3748
	IA32_RTIT_CTL_ADDR2_CFG_MASK                                                           = 0x0F                                             //col:3749
	IA32_RTIT_CTL_ADDR2_CFG                                                            (_) = (((_) >> 40) & 0x0F)                             //col:3750
	IA32_RTIT_CTL_ADDR3_CFG_BIT                                                            = 44                                               //col:3751
	IA32_RTIT_CTL_ADDR3_CFG_FLAG                                                           = 0xF00000000000                                   //col:3752
	IA32_RTIT_CTL_ADDR3_CFG_MASK                                                           = 0x0F                                             //col:3753
	IA32_RTIT_CTL_ADDR3_CFG                                                            (_) = (((_) >> 44) & 0x0F)                             //col:3754
	IA32_RTIT_CTL_INJECT_PSB_PMI_ON_ENABLE_BIT                                             = 56                                               //col:3755
	IA32_RTIT_CTL_INJECT_PSB_PMI_ON_ENABLE_FLAG                                            = 0x100000000000000                                //col:3756
	IA32_RTIT_CTL_INJECT_PSB_PMI_ON_ENABLE_MASK                                            = 0x01                                             //col:3757
	IA32_RTIT_CTL_INJECT_PSB_PMI_ON_ENABLE                                             (_) = (((_) >> 56) & 0x01)                             //col:3758
	IA32_RTIT_STATUS                                                                       = 0x00000571                                       //col:3759
	IA32_RTIT_STATUS_FILTER_ENABLED_BIT                                                    = 0                                                //col:3760
	IA32_RTIT_STATUS_FILTER_ENABLED_FLAG                                                   = 0x01                                             //col:3761
	IA32_RTIT_STATUS_FILTER_ENABLED_MASK                                                   = 0x01                                             //col:3762
	IA32_RTIT_STATUS_FILTER_ENABLED                                                    (_) = (((_) >> 0) & 0x01)                              //col:3763
	IA32_RTIT_STATUS_CONTEXT_ENABLED_BIT                                                   = 1                                                //col:3764
	IA32_RTIT_STATUS_CONTEXT_ENABLED_FLAG                                                  = 0x02                                             //col:3765
	IA32_RTIT_STATUS_CONTEXT_ENABLED_MASK                                                  = 0x01                                             //col:3766
	IA32_RTIT_STATUS_CONTEXT_ENABLED                                                   (_) = (((_) >> 1) & 0x01)                              //col:3767
	IA32_RTIT_STATUS_TRIGGER_ENABLED_BIT                                                   = 2                                                //col:3768
	IA32_RTIT_STATUS_TRIGGER_ENABLED_FLAG                                                  = 0x04                                             //col:3769
	IA32_RTIT_STATUS_TRIGGER_ENABLED_MASK                                                  = 0x01                                             //col:3770
	IA32_RTIT_STATUS_TRIGGER_ENABLED                                                   (_) = (((_) >> 2) & 0x01)                              //col:3771
	IA32_RTIT_STATUS_ERROR_BIT                                                             = 4                                                //col:3772
	IA32_RTIT_STATUS_ERROR_FLAG                                                            = 0x10                                             //col:3773
	IA32_RTIT_STATUS_ERROR_MASK                                                            = 0x01                                             //col:3774
	IA32_RTIT_STATUS_ERROR                                                             (_) = (((_) >> 4) & 0x01)                              //col:3775
	IA32_RTIT_STATUS_STOPPED_BIT                                                           = 5                                                //col:3776
	IA32_RTIT_STATUS_STOPPED_FLAG                                                          = 0x20                                             //col:3777
	IA32_RTIT_STATUS_STOPPED_MASK                                                          = 0x01                                             //col:3778
	IA32_RTIT_STATUS_STOPPED                                                           (_) = (((_) >> 5) & 0x01)                              //col:3779
	IA32_RTIT_STATUS_PEND_PSB_BIT                                                          = 6                                                //col:3780
	IA32_RTIT_STATUS_PEND_PSB_FLAG                                                         = 0x40                                             //col:3781
	IA32_RTIT_STATUS_PEND_PSB_MASK                                                         = 0x01                                             //col:3782
	IA32_RTIT_STATUS_PEND_PSB                                                          (_) = (((_) >> 6) & 0x01)                              //col:3783
	IA32_RTIT_STATUS_PEND_TOPA_PMI_BIT                                                     = 7                                                //col:3784
	IA32_RTIT_STATUS_PEND_TOPA_PMI_FLAG                                                    = 0x80                                             //col:3785
	IA32_RTIT_STATUS_PEND_TOPA_PMI_MASK                                                    = 0x01                                             //col:3786
	IA32_RTIT_STATUS_PEND_TOPA_PMI                                                     (_) = (((_) >> 7) & 0x01)                              //col:3787
	IA32_RTIT_STATUS_PACKET_BYTE_COUNT_BIT                                                 = 32                                               //col:3788
	IA32_RTIT_STATUS_PACKET_BYTE_COUNT_FLAG                                                = 0x1FFFF00000000                                  //col:3789
	IA32_RTIT_STATUS_PACKET_BYTE_COUNT_MASK                                                = 0x1FFFF                                          //col:3790
	IA32_RTIT_STATUS_PACKET_BYTE_COUNT                                                 (_) = (((_) >> 32) & 0x1FFFF)                          //col:3791
	IA32_RTIT_CR3_MATCH                                                                    = 0x00000572                                       //col:3792
	IA32_RTIT_CR3_MATCH_CR3_VALUE_TO_MATCH_BIT                                             = 5                                                //col:3793
	IA32_RTIT_CR3_MATCH_CR3_VALUE_TO_MATCH_FLAG                                            = 0xFFFFFFFFFFFFFFE0                               //col:3794
	IA32_RTIT_CR3_MATCH_CR3_VALUE_TO_MATCH_MASK                                            = 0x7FFFFFFFFFFFFFF                                //col:3795
	IA32_RTIT_CR3_MATCH_CR3_VALUE_TO_MATCH                                             (_) = (((_) >> 5) & 0x7FFFFFFFFFFFFFF)                 //col:3796
	IA32_RTIT_ADDR0_A                                                                      = 0x00000580                                       //col:3797
	IA32_RTIT_ADDR1_A                                                                      = 0x00000582                                       //col:3798
	IA32_RTIT_ADDR2_A                                                                      = 0x00000584                                       //col:3799
	IA32_RTIT_ADDR3_A                                                                      = 0x00000586                                       //col:3800
	IA32_RTIT_ADDR0_B                                                                      = 0x00000581                                       //col:3801
	IA32_RTIT_ADDR1_B                                                                      = 0x00000583                                       //col:3802
	IA32_RTIT_ADDR2_B                                                                      = 0x00000585                                       //col:3803
	IA32_RTIT_ADDR3_B                                                                      = 0x00000587                                       //col:3804
	IA32_RTIT_ADDR_VIRTUAL_ADDRESS_BIT                                                     = 0                                                //col:3805
	IA32_RTIT_ADDR_VIRTUAL_ADDRESS_FLAG                                                    = 0xFFFFFFFFFFFF                                   //col:3806
	IA32_RTIT_ADDR_VIRTUAL_ADDRESS_MASK                                                    = 0xFFFFFFFFFFFF                                   //col:3807
	IA32_RTIT_ADDR_VIRTUAL_ADDRESS                                                     (_) = (((_) >> 0) & 0xFFFFFFFFFFFF)                    //col:3808
	IA32_RTIT_ADDR_SIGN_EXT_VA_BIT                                                         = 48                                               //col:3809
	IA32_RTIT_ADDR_SIGN_EXT_VA_FLAG                                                        = 0xFFFF000000000000                               //col:3810
	IA32_RTIT_ADDR_SIGN_EXT_VA_MASK                                                        = 0xFFFF                                           //col:3811
	IA32_RTIT_ADDR_SIGN_EXT_VA                                                         (_) = (((_) >> 48) & 0xFFFF)                           //col:3812
	IA32_DS_AREA                                                                           = 0x00000600                                       //col:3813
	IA32_U_CET                                                                             = 0x000006A0                                       //col:3814
	IA32_U_CET_SH_STK_EN_BIT                                                               = 0                                                //col:3815
	IA32_U_CET_SH_STK_EN_FLAG                                                              = 0x01                                             //col:3816
	IA32_U_CET_SH_STK_EN_MASK                                                              = 0x01                                             //col:3817
	IA32_U_CET_SH_STK_EN                                                               (_) = (((_) >> 0) & 0x01)                              //col:3818
	IA32_U_CET_WR_SHSTK_EN_BIT                                                             = 1                                                //col:3819
	IA32_U_CET_WR_SHSTK_EN_FLAG                                                            = 0x02                                             //col:3820
	IA32_U_CET_WR_SHSTK_EN_MASK                                                            = 0x01                                             //col:3821
	IA32_U_CET_WR_SHSTK_EN                                                             (_) = (((_) >> 1) & 0x01)                              //col:3822
	IA32_U_CET_ENDBR_EN_BIT                                                                = 2                                                //col:3823
	IA32_U_CET_ENDBR_EN_FLAG                                                               = 0x04                                             //col:3824
	IA32_U_CET_ENDBR_EN_MASK                                                               = 0x01                                             //col:3825
	IA32_U_CET_ENDBR_EN                                                                (_) = (((_) >> 2) & 0x01)                              //col:3826
	IA32_U_CET_LEG_IW_EN_BIT                                                               = 3                                                //col:3827
	IA32_U_CET_LEG_IW_EN_FLAG                                                              = 0x08                                             //col:3828
	IA32_U_CET_LEG_IW_EN_MASK                                                              = 0x01                                             //col:3829
	IA32_U_CET_LEG_IW_EN                                                               (_) = (((_) >> 3) & 0x01)                              //col:3830
	IA32_U_CET_NO_TRACK_EN_BIT                                                             = 4                                                //col:3831
	IA32_U_CET_NO_TRACK_EN_FLAG                                                            = 0x10                                             //col:3832
	IA32_U_CET_NO_TRACK_EN_MASK                                                            = 0x01                                             //col:3833
	IA32_U_CET_NO_TRACK_EN                                                             (_) = (((_) >> 4) & 0x01)                              //col:3834
	IA32_U_CET_SUPPRESS_DIS_BIT                                                            = 5                                                //col:3835
	IA32_U_CET_SUPPRESS_DIS_FLAG                                                           = 0x20                                             //col:3836
	IA32_U_CET_SUPPRESS_DIS_MASK                                                           = 0x01                                             //col:3837
	IA32_U_CET_SUPPRESS_DIS                                                            (_) = (((_) >> 5) & 0x01)                              //col:3838
	IA32_U_CET_SUPPRESS_BIT                                                                = 10                                               //col:3839
	IA32_U_CET_SUPPRESS_FLAG                                                               = 0x400                                            //col:3840
	IA32_U_CET_SUPPRESS_MASK                                                               = 0x01                                             //col:3841
	IA32_U_CET_SUPPRESS                                                                (_) = (((_) >> 10) & 0x01)                             //col:3842
	IA32_U_CET_TRACKER_BIT                                                                 = 11                                               //col:3843
	IA32_U_CET_TRACKER_FLAG                                                                = 0x800                                            //col:3844
	IA32_U_CET_TRACKER_MASK                                                                = 0x01                                             //col:3845
	IA32_U_CET_TRACKER                                                                 (_) = (((_) >> 11) & 0x01)                             //col:3846
	IA32_U_CET_EB_LEG_BITMAP_BASE_BIT                                                      = 12                                               //col:3847
	IA32_U_CET_EB_LEG_BITMAP_BASE_FLAG                                                     = 0xFFFFFFFFFFFFF000                               //col:3848
	IA32_U_CET_EB_LEG_BITMAP_BASE_MASK                                                     = 0xFFFFFFFFFFFFF                                  //col:3849
	IA32_U_CET_EB_LEG_BITMAP_BASE                                                      (_) = (((_) >> 12) & 0xFFFFFFFFFFFFF)                  //col:3850
	IA32_S_CET                                                                             = 0x000006A2                                       //col:3851
	IA32_S_CET_SH_STK_EN_BIT                                                               = 0                                                //col:3852
	IA32_S_CET_SH_STK_EN_FLAG                                                              = 0x01                                             //col:3853
	IA32_S_CET_SH_STK_EN_MASK                                                              = 0x01                                             //col:3854
	IA32_S_CET_SH_STK_EN                                                               (_) = (((_) >> 0) & 0x01)                              //col:3855
	IA32_S_CET_WR_SHSTK_EN_BIT                                                             = 1                                                //col:3856
	IA32_S_CET_WR_SHSTK_EN_FLAG                                                            = 0x02                                             //col:3857
	IA32_S_CET_WR_SHSTK_EN_MASK                                                            = 0x01                                             //col:3858
	IA32_S_CET_WR_SHSTK_EN                                                             (_) = (((_) >> 1) & 0x01)                              //col:3859
	IA32_S_CET_ENDBR_EN_BIT                                                                = 2                                                //col:3860
	IA32_S_CET_ENDBR_EN_FLAG                                                               = 0x04                                             //col:3861
	IA32_S_CET_ENDBR_EN_MASK                                                               = 0x01                                             //col:3862
	IA32_S_CET_ENDBR_EN                                                                (_) = (((_) >> 2) & 0x01)                              //col:3863
	IA32_S_CET_LEG_IW_EN_BIT                                                               = 3                                                //col:3864
	IA32_S_CET_LEG_IW_EN_FLAG                                                              = 0x08                                             //col:3865
	IA32_S_CET_LEG_IW_EN_MASK                                                              = 0x01                                             //col:3866
	IA32_S_CET_LEG_IW_EN                                                               (_) = (((_) >> 3) & 0x01)                              //col:3867
	IA32_S_CET_NO_TRACK_EN_BIT                                                             = 4                                                //col:3868
	IA32_S_CET_NO_TRACK_EN_FLAG                                                            = 0x10                                             //col:3869
	IA32_S_CET_NO_TRACK_EN_MASK                                                            = 0x01                                             //col:3870
	IA32_S_CET_NO_TRACK_EN                                                             (_) = (((_) >> 4) & 0x01)                              //col:3871
	IA32_S_CET_SUPPRESS_DIS_BIT                                                            = 5                                                //col:3872
	IA32_S_CET_SUPPRESS_DIS_FLAG                                                           = 0x20                                             //col:3873
	IA32_S_CET_SUPPRESS_DIS_MASK                                                           = 0x01                                             //col:3874
	IA32_S_CET_SUPPRESS_DIS                                                            (_) = (((_) >> 5) & 0x01)                              //col:3875
	IA32_S_CET_SUPPRESS_BIT                                                                = 10                                               //col:3876
	IA32_S_CET_SUPPRESS_FLAG                                                               = 0x400                                            //col:3877
	IA32_S_CET_SUPPRESS_MASK                                                               = 0x01                                             //col:3878
	IA32_S_CET_SUPPRESS                                                                (_) = (((_) >> 10) & 0x01)                             //col:3879
	IA32_S_CET_TRACKER_BIT                                                                 = 11                                               //col:3880
	IA32_S_CET_TRACKER_FLAG                                                                = 0x800                                            //col:3881
	IA32_S_CET_TRACKER_MASK                                                                = 0x01                                             //col:3882
	IA32_S_CET_TRACKER                                                                 (_) = (((_) >> 11) & 0x01)                             //col:3883
	IA32_S_CET_EB_LEG_BITMAP_BASE_BIT                                                      = 12                                               //col:3884
	IA32_S_CET_EB_LEG_BITMAP_BASE_FLAG                                                     = 0xFFFFFFFFFFFFF000                               //col:3885
	IA32_S_CET_EB_LEG_BITMAP_BASE_MASK                                                     = 0xFFFFFFFFFFFFF                                  //col:3886
	IA32_S_CET_EB_LEG_BITMAP_BASE                                                      (_) = (((_) >> 12) & 0xFFFFFFFFFFFFF)                  //col:3887
	IA32_PL0_SSP                                                                           = 0x000006A4                                       //col:3888
	IA32_PL1_SSP                                                                           = 0x000006A5                                       //col:3889
	IA32_PL2_SSP                                                                           = 0x000006A6                                       //col:3890
	IA32_PL3_SSP                                                                           = 0x000006A7                                       //col:3891
	IA32_INTERRUPT_SSP_TABLE_ADDR                                                          = 0x000006A8                                       //col:3892
	IA32_TSC_DEADLINE                                                                      = 0x000006E0                                       //col:3893
	IA32_PM_ENABLE                                                                         = 0x00000770                                       //col:3894
	IA32_PM_ENABLE_HWP_ENABLE_BIT                                                          = 0                                                //col:3895
	IA32_PM_ENABLE_HWP_ENABLE_FLAG                                                         = 0x01                                             //col:3896
	IA32_PM_ENABLE_HWP_ENABLE_MASK                                                         = 0x01                                             //col:3897
	IA32_PM_ENABLE_HWP_ENABLE                                                          (_) = (((_) >> 0) & 0x01)                              //col:3898
	IA32_HWP_CAPABILITIES                                                                  = 0x00000771                                       //col:3899
	IA32_HWP_CAPABILITIES_HIGHEST_PERFORMANCE_BIT                                          = 0                                                //col:3900
	IA32_HWP_CAPABILITIES_HIGHEST_PERFORMANCE_FLAG                                         = 0xFF                                             //col:3901
	IA32_HWP_CAPABILITIES_HIGHEST_PERFORMANCE_MASK                                         = 0xFF                                             //col:3902
	IA32_HWP_CAPABILITIES_HIGHEST_PERFORMANCE                                          (_) = (((_) >> 0) & 0xFF)                              //col:3903
	IA32_HWP_CAPABILITIES_GUARANTEED_PERFORMANCE_BIT                                       = 8                                                //col:3904
	IA32_HWP_CAPABILITIES_GUARANTEED_PERFORMANCE_FLAG                                      = 0xFF00                                           //col:3905
	IA32_HWP_CAPABILITIES_GUARANTEED_PERFORMANCE_MASK                                      = 0xFF                                             //col:3906
	IA32_HWP_CAPABILITIES_GUARANTEED_PERFORMANCE                                       (_) = (((_) >> 8) & 0xFF)                              //col:3907
	IA32_HWP_CAPABILITIES_MOST_EFFICIENT_PERFORMANCE_BIT                                   = 16                                               //col:3908
	IA32_HWP_CAPABILITIES_MOST_EFFICIENT_PERFORMANCE_FLAG                                  = 0xFF0000                                         //col:3909
	IA32_HWP_CAPABILITIES_MOST_EFFICIENT_PERFORMANCE_MASK                                  = 0xFF                                             //col:3910
	IA32_HWP_CAPABILITIES_MOST_EFFICIENT_PERFORMANCE                                   (_) = (((_) >> 16) & 0xFF)                             //col:3911
	IA32_HWP_CAPABILITIES_LOWEST_PERFORMANCE_BIT                                           = 24                                               //col:3912
	IA32_HWP_CAPABILITIES_LOWEST_PERFORMANCE_FLAG                                          = 0xFF000000                                       //col:3913
	IA32_HWP_CAPABILITIES_LOWEST_PERFORMANCE_MASK                                          = 0xFF                                             //col:3914
	IA32_HWP_CAPABILITIES_LOWEST_PERFORMANCE                                           (_) = (((_) >> 24) & 0xFF)                             //col:3915
	IA32_HWP_REQUEST_PKG                                                                   = 0x00000772                                       //col:3916
	IA32_HWP_REQUEST_PKG_MINIMUM_PERFORMANCE_BIT                                           = 0                                                //col:3917
	IA32_HWP_REQUEST_PKG_MINIMUM_PERFORMANCE_FLAG                                          = 0xFF                                             //col:3918
	IA32_HWP_REQUEST_PKG_MINIMUM_PERFORMANCE_MASK                                          = 0xFF                                             //col:3919
	IA32_HWP_REQUEST_PKG_MINIMUM_PERFORMANCE                                           (_) = (((_) >> 0) & 0xFF)                              //col:3920
	IA32_HWP_REQUEST_PKG_MAXIMUM_PERFORMANCE_BIT                                           = 8                                                //col:3921
	IA32_HWP_REQUEST_PKG_MAXIMUM_PERFORMANCE_FLAG                                          = 0xFF00                                           //col:3922
	IA32_HWP_REQUEST_PKG_MAXIMUM_PERFORMANCE_MASK                                          = 0xFF                                             //col:3923
	IA32_HWP_REQUEST_PKG_MAXIMUM_PERFORMANCE                                           (_) = (((_) >> 8) & 0xFF)                              //col:3924
	IA32_HWP_REQUEST_PKG_DESIRED_PERFORMANCE_BIT                                           = 16                                               //col:3925
	IA32_HWP_REQUEST_PKG_DESIRED_PERFORMANCE_FLAG                                          = 0xFF0000                                         //col:3926
	IA32_HWP_REQUEST_PKG_DESIRED_PERFORMANCE_MASK                                          = 0xFF                                             //col:3927
	IA32_HWP_REQUEST_PKG_DESIRED_PERFORMANCE                                           (_) = (((_) >> 16) & 0xFF)                             //col:3928
	IA32_HWP_REQUEST_PKG_ENERGY_PERFORMANCE_PREFERENCE_BIT                                 = 24                                               //col:3929
	IA32_HWP_REQUEST_PKG_ENERGY_PERFORMANCE_PREFERENCE_FLAG                                = 0xFF000000                                       //col:3930
	IA32_HWP_REQUEST_PKG_ENERGY_PERFORMANCE_PREFERENCE_MASK                                = 0xFF                                             //col:3931
	IA32_HWP_REQUEST_PKG_ENERGY_PERFORMANCE_PREFERENCE                                 (_) = (((_) >> 24) & 0xFF)                             //col:3932
	IA32_HWP_REQUEST_PKG_ACTIVITY_WINDOW_BIT                                               = 32                                               //col:3933
	IA32_HWP_REQUEST_PKG_ACTIVITY_WINDOW_FLAG                                              = 0x3FF00000000                                    //col:3934
	IA32_HWP_REQUEST_PKG_ACTIVITY_WINDOW_MASK                                              = 0x3FF                                            //col:3935
	IA32_HWP_REQUEST_PKG_ACTIVITY_WINDOW                                               (_) = (((_) >> 32) & 0x3FF)                            //col:3936
	IA32_HWP_INTERRUPT                                                                     = 0x00000773                                       //col:3937
	IA32_HWP_INTERRUPT_EN_GUARANTEED_PERFORMANCE_CHANGE_BIT                                = 0                                                //col:3938
	IA32_HWP_INTERRUPT_EN_GUARANTEED_PERFORMANCE_CHANGE_FLAG                               = 0x01                                             //col:3939
	IA32_HWP_INTERRUPT_EN_GUARANTEED_PERFORMANCE_CHANGE_MASK                               = 0x01                                             //col:3940
	IA32_HWP_INTERRUPT_EN_GUARANTEED_PERFORMANCE_CHANGE                                (_) = (((_) >> 0) & 0x01)                              //col:3941
	IA32_HWP_INTERRUPT_EN_EXCURSION_MINIMUM_BIT                                            = 1                                                //col:3942
	IA32_HWP_INTERRUPT_EN_EXCURSION_MINIMUM_FLAG                                           = 0x02                                             //col:3943
	IA32_HWP_INTERRUPT_EN_EXCURSION_MINIMUM_MASK                                           = 0x01                                             //col:3944
	IA32_HWP_INTERRUPT_EN_EXCURSION_MINIMUM                                            (_) = (((_) >> 1) & 0x01)                              //col:3945
	IA32_HWP_REQUEST                                                                       = 0x00000774                                       //col:3946
	IA32_HWP_REQUEST_MINIMUM_PERFORMANCE_BIT                                               = 0                                                //col:3947
	IA32_HWP_REQUEST_MINIMUM_PERFORMANCE_FLAG                                              = 0xFF                                             //col:3948
	IA32_HWP_REQUEST_MINIMUM_PERFORMANCE_MASK                                              = 0xFF                                             //col:3949
	IA32_HWP_REQUEST_MINIMUM_PERFORMANCE                                               (_) = (((_) >> 0) & 0xFF)                              //col:3950
	IA32_HWP_REQUEST_MAXIMUM_PERFORMANCE_BIT                                               = 8                                                //col:3951
	IA32_HWP_REQUEST_MAXIMUM_PERFORMANCE_FLAG                                              = 0xFF00                                           //col:3952
	IA32_HWP_REQUEST_MAXIMUM_PERFORMANCE_MASK                                              = 0xFF                                             //col:3953
	IA32_HWP_REQUEST_MAXIMUM_PERFORMANCE                                               (_) = (((_) >> 8) & 0xFF)                              //col:3954
	IA32_HWP_REQUEST_DESIRED_PERFORMANCE_BIT                                               = 16                                               //col:3955
	IA32_HWP_REQUEST_DESIRED_PERFORMANCE_FLAG                                              = 0xFF0000                                         //col:3956
	IA32_HWP_REQUEST_DESIRED_PERFORMANCE_MASK                                              = 0xFF                                             //col:3957
	IA32_HWP_REQUEST_DESIRED_PERFORMANCE                                               (_) = (((_) >> 16) & 0xFF)                             //col:3958
	IA32_HWP_REQUEST_ENERGY_PERFORMANCE_PREFERENCE_BIT                                     = 24                                               //col:3959
	IA32_HWP_REQUEST_ENERGY_PERFORMANCE_PREFERENCE_FLAG                                    = 0xFF000000                                       //col:3960
	IA32_HWP_REQUEST_ENERGY_PERFORMANCE_PREFERENCE_MASK                                    = 0xFF                                             //col:3961
	IA32_HWP_REQUEST_ENERGY_PERFORMANCE_PREFERENCE                                     (_) = (((_) >> 24) & 0xFF)                             //col:3962
	IA32_HWP_REQUEST_ACTIVITY_WINDOW_BIT                                                   = 32                                               //col:3963
	IA32_HWP_REQUEST_ACTIVITY_WINDOW_FLAG                                                  = 0x3FF00000000                                    //col:3964
	IA32_HWP_REQUEST_ACTIVITY_WINDOW_MASK                                                  = 0x3FF                                            //col:3965
	IA32_HWP_REQUEST_ACTIVITY_WINDOW                                                   (_) = (((_) >> 32) & 0x3FF)                            //col:3966
	IA32_HWP_REQUEST_PACKAGE_CONTROL_BIT                                                   = 42                                               //col:3967
	IA32_HWP_REQUEST_PACKAGE_CONTROL_FLAG                                                  = 0x40000000000                                    //col:3968
	IA32_HWP_REQUEST_PACKAGE_CONTROL_MASK                                                  = 0x01                                             //col:3969
	IA32_HWP_REQUEST_PACKAGE_CONTROL                                                   (_) = (((_) >> 42) & 0x01)                             //col:3970
	IA32_HWP_STATUS                                                                        = 0x00000777                                       //col:3971
	IA32_HWP_STATUS_GUARANTEED_PERFORMANCE_CHANGE_BIT                                      = 0                                                //col:3972
	IA32_HWP_STATUS_GUARANTEED_PERFORMANCE_CHANGE_FLAG                                     = 0x01                                             //col:3973
	IA32_HWP_STATUS_GUARANTEED_PERFORMANCE_CHANGE_MASK                                     = 0x01                                             //col:3974
	IA32_HWP_STATUS_GUARANTEED_PERFORMANCE_CHANGE                                      (_) = (((_) >> 0) & 0x01)                              //col:3975
	IA32_HWP_STATUS_EXCURSION_TO_MINIMUM_BIT                                               = 2                                                //col:3976
	IA32_HWP_STATUS_EXCURSION_TO_MINIMUM_FLAG                                              = 0x04                                             //col:3977
	IA32_HWP_STATUS_EXCURSION_TO_MINIMUM_MASK                                              = 0x01                                             //col:3978
	IA32_HWP_STATUS_EXCURSION_TO_MINIMUM                                               (_) = (((_) >> 2) & 0x01)                              //col:3979
	IA32_X2APIC_APICID                                                                     = 0x00000802                                       //col:3980
	IA32_X2APIC_VERSION                                                                    = 0x00000803                                       //col:3981
	IA32_X2APIC_TPR                                                                        = 0x00000808                                       //col:3982
	IA32_X2APIC_PPR                                                                        = 0x0000080A                                       //col:3983
	IA32_X2APIC_EOI                                                                        = 0x0000080B                                       //col:3984
	IA32_X2APIC_LDR                                                                        = 0x0000080D                                       //col:3985
	IA32_X2APIC_SIVR                                                                       = 0x0000080F                                       //col:3986
	IA32_X2APIC_ISR0                                                                       = 0x00000810                                       //col:3987
	IA32_X2APIC_ISR1                                                                       = 0x00000811                                       //col:3988
	IA32_X2APIC_ISR2                                                                       = 0x00000812                                       //col:3989
	IA32_X2APIC_ISR3                                                                       = 0x00000813                                       //col:3990
	IA32_X2APIC_ISR4                                                                       = 0x00000814                                       //col:3991
	IA32_X2APIC_ISR5                                                                       = 0x00000815                                       //col:3992
	IA32_X2APIC_ISR6                                                                       = 0x00000816                                       //col:3993
	IA32_X2APIC_ISR7                                                                       = 0x00000817                                       //col:3994
	IA32_X2APIC_TMR0                                                                       = 0x00000818                                       //col:3995
	IA32_X2APIC_TMR1                                                                       = 0x00000819                                       //col:3996
	IA32_X2APIC_TMR2                                                                       = 0x0000081A                                       //col:3997
	IA32_X2APIC_TMR3                                                                       = 0x0000081B                                       //col:3998
	IA32_X2APIC_TMR4                                                                       = 0x0000081C                                       //col:3999
	IA32_X2APIC_TMR5                                                                       = 0x0000081D                                       //col:4000
	IA32_X2APIC_TMR6                                                                       = 0x0000081E                                       //col:4001
	IA32_X2APIC_TMR7                                                                       = 0x0000081F                                       //col:4002
	IA32_X2APIC_IRR0                                                                       = 0x00000820                                       //col:4003
	IA32_X2APIC_IRR1                                                                       = 0x00000821                                       //col:4004
	IA32_X2APIC_IRR2                                                                       = 0x00000822                                       //col:4005
	IA32_X2APIC_IRR3                                                                       = 0x00000823                                       //col:4006
	IA32_X2APIC_IRR4                                                                       = 0x00000824                                       //col:4007
	IA32_X2APIC_IRR5                                                                       = 0x00000825                                       //col:4008
	IA32_X2APIC_IRR6                                                                       = 0x00000826                                       //col:4009
	IA32_X2APIC_IRR7                                                                       = 0x00000827                                       //col:4010
	IA32_X2APIC_ESR                                                                        = 0x00000828                                       //col:4011
	IA32_X2APIC_LVT_CMCI                                                                   = 0x0000082F                                       //col:4012
	IA32_X2APIC_ICR                                                                        = 0x00000830                                       //col:4013
	IA32_X2APIC_LVT_TIMER                                                                  = 0x00000832                                       //col:4014
	IA32_X2APIC_LVT_THERMAL                                                                = 0x00000833                                       //col:4015
	IA32_X2APIC_LVT_PMI                                                                    = 0x00000834                                       //col:4016
	IA32_X2APIC_LVT_LINT0                                                                  = 0x00000835                                       //col:4017
	IA32_X2APIC_LVT_LINT1                                                                  = 0x00000836                                       //col:4018
	IA32_X2APIC_LVT_ERROR                                                                  = 0x00000837                                       //col:4019
	IA32_X2APIC_INIT_COUNT                                                                 = 0x00000838                                       //col:4020
	IA32_X2APIC_CUR_COUNT                                                                  = 0x00000839                                       //col:4021
	IA32_X2APIC_DIV_CONF                                                                   = 0x0000083E                                       //col:4022
	IA32_X2APIC_SELF_IPI                                                                   = 0x0000083F                                       //col:4023
	IA32_DEBUG_INTERFACE                                                                   = 0x00000C80                                       //col:4024
	IA32_DEBUG_INTERFACE_ENABLE_BIT                                                        = 0                                                //col:4025
	IA32_DEBUG_INTERFACE_ENABLE_FLAG                                                       = 0x01                                             //col:4026
	IA32_DEBUG_INTERFACE_ENABLE_MASK                                                       = 0x01                                             //col:4027
	IA32_DEBUG_INTERFACE_ENABLE                                                        (_) = (((_) >> 0) & 0x01)                              //col:4028
	IA32_DEBUG_INTERFACE_LOCK_BIT                                                          = 30                                               //col:4029
	IA32_DEBUG_INTERFACE_LOCK_FLAG                                                         = 0x40000000                                       //col:4030
	IA32_DEBUG_INTERFACE_LOCK_MASK                                                         = 0x01                                             //col:4031
	IA32_DEBUG_INTERFACE_LOCK                                                          (_) = (((_) >> 30) & 0x01)                             //col:4032
	IA32_DEBUG_INTERFACE_DEBUG_OCCURRED_BIT                                                = 31                                               //col:4033
	IA32_DEBUG_INTERFACE_DEBUG_OCCURRED_FLAG                                               = 0x80000000                                       //col:4034
	IA32_DEBUG_INTERFACE_DEBUG_OCCURRED_MASK                                               = 0x01                                             //col:4035
	IA32_DEBUG_INTERFACE_DEBUG_OCCURRED                                                (_) = (((_) >> 31) & 0x01)                             //col:4036
	IA32_L3_QOS_CFG                                                                        = 0x00000C81                                       //col:4037
	IA32_L3_QOS_CFG_ENABLE_BIT                                                             = 0                                                //col:4038
	IA32_L3_QOS_CFG_ENABLE_FLAG                                                            = 0x01                                             //col:4039
	IA32_L3_QOS_CFG_ENABLE_MASK                                                            = 0x01                                             //col:4040
	IA32_L3_QOS_CFG_ENABLE                                                             (_) = (((_) >> 0) & 0x01)                              //col:4041
	IA32_L2_QOS_CFG                                                                        = 0x00000C82                                       //col:4042
	IA32_L2_QOS_CFG_ENABLE_BIT                                                             = 0                                                //col:4043
	IA32_L2_QOS_CFG_ENABLE_FLAG                                                            = 0x01                                             //col:4044
	IA32_L2_QOS_CFG_ENABLE_MASK                                                            = 0x01                                             //col:4045
	IA32_L2_QOS_CFG_ENABLE                                                             (_) = (((_) >> 0) & 0x01)                              //col:4046
	IA32_QM_EVTSEL                                                                         = 0x00000C8D                                       //col:4047
	IA32_QM_EVTSEL_EVENT_ID_BIT                                                            = 0                                                //col:4048
	IA32_QM_EVTSEL_EVENT_ID_FLAG                                                           = 0xFF                                             //col:4049
	IA32_QM_EVTSEL_EVENT_ID_MASK                                                           = 0xFF                                             //col:4050
	IA32_QM_EVTSEL_EVENT_ID                                                            (_) = (((_) >> 0) & 0xFF)                              //col:4051
	IA32_QM_EVTSEL_RESOURCE_MONITORING_ID_BIT                                              = 32                                               //col:4052
	IA32_QM_EVTSEL_RESOURCE_MONITORING_ID_FLAG                                             = 0xFFFFFFFF00000000                               //col:4053
	IA32_QM_EVTSEL_RESOURCE_MONITORING_ID_MASK                                             = 0xFFFFFFFF                                       //col:4054
	IA32_QM_EVTSEL_RESOURCE_MONITORING_ID                                              (_) = (((_) >> 32) & 0xFFFFFFFF)                       //col:4055
	IA32_QM_CTR                                                                            = 0x00000C8E                                       //col:4056
	IA32_QM_CTR_RESOURCE_MONITORED_DATA_BIT                                                = 0                                                //col:4057
	IA32_QM_CTR_RESOURCE_MONITORED_DATA_FLAG                                               = 0x3FFFFFFFFFFFFFFF                               //col:4058
	IA32_QM_CTR_RESOURCE_MONITORED_DATA_MASK                                               = 0x3FFFFFFFFFFFFFFF                               //col:4059
	IA32_QM_CTR_RESOURCE_MONITORED_DATA                                                (_) = (((_) >> 0) & 0x3FFFFFFFFFFFFFFF)                //col:4060
	IA32_QM_CTR_UNAVAILABLE_BIT                                                            = 62                                               //col:4061
	IA32_QM_CTR_UNAVAILABLE_FLAG                                                           = 0x4000000000000000                               //col:4062
	IA32_QM_CTR_UNAVAILABLE_MASK                                                           = 0x01                                             //col:4063
	IA32_QM_CTR_UNAVAILABLE                                                            (_) = (((_) >> 62) & 0x01)                             //col:4064
	IA32_QM_CTR_ERROR_BIT                                                                  = 63                                               //col:4065
	IA32_QM_CTR_ERROR_FLAG                                                                 = 0x8000000000000000                               //col:4066
	IA32_QM_CTR_ERROR_MASK                                                                 = 0x01                                             //col:4067
	IA32_QM_CTR_ERROR                                                                  (_) = (((_) >> 63) & 0x01)                             //col:4068
	IA32_PQR_ASSOC                                                                         = 0x00000C8F                                       //col:4069
	IA32_PQR_ASSOC_RESOURCE_MONITORING_ID_BIT                                              = 0                                                //col:4070
	IA32_PQR_ASSOC_RESOURCE_MONITORING_ID_FLAG                                             = 0xFFFFFFFF                                       //col:4071
	IA32_PQR_ASSOC_RESOURCE_MONITORING_ID_MASK                                             = 0xFFFFFFFF                                       //col:4072
	IA32_PQR_ASSOC_RESOURCE_MONITORING_ID                                              (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:4073
	IA32_PQR_ASSOC_COS_BIT                                                                 = 32                                               //col:4074
	IA32_PQR_ASSOC_COS_FLAG                                                                = 0xFFFFFFFF00000000                               //col:4075
	IA32_PQR_ASSOC_COS_MASK                                                                = 0xFFFFFFFF                                       //col:4076
	IA32_PQR_ASSOC_COS                                                                 (_) = (((_) >> 32) & 0xFFFFFFFF)                       //col:4077
	IA32_BNDCFGS                                                                           = 0x00000D90                                       //col:4078
	IA32_BNDCFGS_ENABLE_BIT                                                                = 0                                                //col:4079
	IA32_BNDCFGS_ENABLE_FLAG                                                               = 0x01                                             //col:4080
	IA32_BNDCFGS_ENABLE_MASK                                                               = 0x01                                             //col:4081
	IA32_BNDCFGS_ENABLE                                                                (_) = (((_) >> 0) & 0x01)                              //col:4082
	IA32_BNDCFGS_BND_PRESERVE_BIT                                                          = 1                                                //col:4083
	IA32_BNDCFGS_BND_PRESERVE_FLAG                                                         = 0x02                                             //col:4084
	IA32_BNDCFGS_BND_PRESERVE_MASK                                                         = 0x01                                             //col:4085
	IA32_BNDCFGS_BND_PRESERVE                                                          (_) = (((_) >> 1) & 0x01)                              //col:4086
	IA32_BNDCFGS_BOUND_DIRECTORY_BASE_ADDRESS_BIT                                          = 12                                               //col:4087
	IA32_BNDCFGS_BOUND_DIRECTORY_BASE_ADDRESS_FLAG                                         = 0xFFFFFFFFFFFFF000                               //col:4088
	IA32_BNDCFGS_BOUND_DIRECTORY_BASE_ADDRESS_MASK                                         = 0xFFFFFFFFFFFFF                                  //col:4089
	IA32_BNDCFGS_BOUND_DIRECTORY_BASE_ADDRESS                                          (_) = (((_) >> 12) & 0xFFFFFFFFFFFFF)                  //col:4090
	IA32_XSS                                                                               = 0x00000DA0                                       //col:4091
	IA32_XSS_TRACE_PACKET_CONFIGURATION_STATE_BIT                                          = 8                                                //col:4092
	IA32_XSS_TRACE_PACKET_CONFIGURATION_STATE_FLAG                                         = 0x100                                            //col:4093
	IA32_XSS_TRACE_PACKET_CONFIGURATION_STATE_MASK                                         = 0x01                                             //col:4094
	IA32_XSS_TRACE_PACKET_CONFIGURATION_STATE                                          (_) = (((_) >> 8) & 0x01)                              //col:4095
	IA32_PKG_HDC_CTL                                                                       = 0x00000DB0                                       //col:4096
	IA32_PKG_HDC_CTL_HDC_PKG_ENABLE_BIT                                                    = 0                                                //col:4097
	IA32_PKG_HDC_CTL_HDC_PKG_ENABLE_FLAG                                                   = 0x01                                             //col:4098
	IA32_PKG_HDC_CTL_HDC_PKG_ENABLE_MASK                                                   = 0x01                                             //col:4099
	IA32_PKG_HDC_CTL_HDC_PKG_ENABLE                                                    (_) = (((_) >> 0) & 0x01)                              //col:4100
	IA32_PM_CTL1                                                                           = 0x00000DB1                                       //col:4101
	IA32_PM_CTL1_HDC_ALLOW_BLOCK_BIT                                                       = 0                                                //col:4102
	IA32_PM_CTL1_HDC_ALLOW_BLOCK_FLAG                                                      = 0x01                                             //col:4103
	IA32_PM_CTL1_HDC_ALLOW_BLOCK_MASK                                                      = 0x01                                             //col:4104
	IA32_PM_CTL1_HDC_ALLOW_BLOCK                                                       (_) = (((_) >> 0) & 0x01)                              //col:4105
	IA32_THREAD_STALL                                                                      = 0x00000DB2                                       //col:4106
	IA32_EFER                                                                              = 0xC0000080                                       //col:4107
	IA32_EFER_SYSCALL_ENABLE_BIT                                                           = 0                                                //col:4108
	IA32_EFER_SYSCALL_ENABLE_FLAG                                                          = 0x01                                             //col:4109
	IA32_EFER_SYSCALL_ENABLE_MASK                                                          = 0x01                                             //col:4110
	IA32_EFER_SYSCALL_ENABLE                                                           (_) = (((_) >> 0) & 0x01)                              //col:4111
	IA32_EFER_IA32E_MODE_ENABLE_BIT                                                        = 8                                                //col:4112
	IA32_EFER_IA32E_MODE_ENABLE_FLAG                                                       = 0x100                                            //col:4113
	IA32_EFER_IA32E_MODE_ENABLE_MASK                                                       = 0x01                                             //col:4114
	IA32_EFER_IA32E_MODE_ENABLE                                                        (_) = (((_) >> 8) & 0x01)                              //col:4115
	IA32_EFER_IA32E_MODE_ACTIVE_BIT                                                        = 10                                               //col:4116
	IA32_EFER_IA32E_MODE_ACTIVE_FLAG                                                       = 0x400                                            //col:4117
	IA32_EFER_IA32E_MODE_ACTIVE_MASK                                                       = 0x01                                             //col:4118
	IA32_EFER_IA32E_MODE_ACTIVE                                                        (_) = (((_) >> 10) & 0x01)                             //col:4119
	IA32_EFER_EXECUTE_DISABLE_BIT_ENABLE_BIT                                               = 11                                               //col:4120
	IA32_EFER_EXECUTE_DISABLE_BIT_ENABLE_FLAG                                              = 0x800                                            //col:4121
	IA32_EFER_EXECUTE_DISABLE_BIT_ENABLE_MASK                                              = 0x01                                             //col:4122
	IA32_EFER_EXECUTE_DISABLE_BIT_ENABLE                                               (_) = (((_) >> 11) & 0x01)                             //col:4123
	IA32_STAR                                                                              = 0xC0000081                                       //col:4124
	IA32_LSTAR                                                                             = 0xC0000082                                       //col:4125
	IA32_CSTAR                                                                             = 0xC0000083                                       //col:4126
	IA32_FMASK                                                                             = 0xC0000084                                       //col:4127
	IA32_FS_BASE                                                                           = 0xC0000100                                       //col:4128
	IA32_GS_BASE                                                                           = 0xC0000101                                       //col:4129
	IA32_KERNEL_GS_BASE                                                                    = 0xC0000102                                       //col:4130
	IA32_TSC_AUX                                                                           = 0xC0000103                                       //col:4131
	IA32_TSC_AUX_TSC_AUXILIARY_SIGNATURE_BIT                                               = 0                                                //col:4132
	IA32_TSC_AUX_TSC_AUXILIARY_SIGNATURE_FLAG                                              = 0xFFFFFFFF                                       //col:4133
	IA32_TSC_AUX_TSC_AUXILIARY_SIGNATURE_MASK                                              = 0xFFFFFFFF                                       //col:4134
	IA32_TSC_AUX_TSC_AUXILIARY_SIGNATURE                                               (_) = (((_) >> 0) & 0xFFFFFFFF)                        //col:4135
	PDE_4MB_32_PRESENT_BIT                                                                 = 0                                                //col:4136
	PDE_4MB_32_PRESENT_FLAG                                                                = 0x01                                             //col:4137
	PDE_4MB_32_PRESENT_MASK                                                                = 0x01                                             //col:4138
	PDE_4MB_32_PRESENT                                                                 (_) = (((_) >> 0) & 0x01)                              //col:4139
	PDE_4MB_32_WRITE_BIT                                                                   = 1                                                //col:4140
	PDE_4MB_32_WRITE_FLAG                                                                  = 0x02                                             //col:4141
	PDE_4MB_32_WRITE_MASK                                                                  = 0x01                                             //col:4142
	PDE_4MB_32_WRITE                                                                   (_) = (((_) >> 1) & 0x01)                              //col:4143
	PDE_4MB_32_SUPERVISOR_BIT                                                              = 2                                                //col:4144
	PDE_4MB_32_SUPERVISOR_FLAG                                                             = 0x04                                             //col:4145
	PDE_4MB_32_SUPERVISOR_MASK                                                             = 0x01                                             //col:4146
	PDE_4MB_32_SUPERVISOR                                                              (_) = (((_) >> 2) & 0x01)                              //col:4147
	PDE_4MB_32_PAGE_LEVEL_WRITE_THROUGH_BIT                                                = 3                                                //col:4148
	PDE_4MB_32_PAGE_LEVEL_WRITE_THROUGH_FLAG                                               = 0x08                                             //col:4149
	PDE_4MB_32_PAGE_LEVEL_WRITE_THROUGH_MASK                                               = 0x01                                             //col:4150
	PDE_4MB_32_PAGE_LEVEL_WRITE_THROUGH                                                (_) = (((_) >> 3) & 0x01)                              //col:4151
	PDE_4MB_32_PAGE_LEVEL_CACHE_DISABLE_BIT                                                = 4                                                //col:4152
	PDE_4MB_32_PAGE_LEVEL_CACHE_DISABLE_FLAG                                               = 0x10                                             //col:4153
	PDE_4MB_32_PAGE_LEVEL_CACHE_DISABLE_MASK                                               = 0x01                                             //col:4154
	PDE_4MB_32_PAGE_LEVEL_CACHE_DISABLE                                                (_) = (((_) >> 4) & 0x01)                              //col:4155
	PDE_4MB_32_ACCESSED_BIT                                                                = 5                                                //col:4156
	PDE_4MB_32_ACCESSED_FLAG                                                               = 0x20                                             //col:4157
	PDE_4MB_32_ACCESSED_MASK                                                               = 0x01                                             //col:4158
	PDE_4MB_32_ACCESSED                                                                (_) = (((_) >> 5) & 0x01)                              //col:4159
	PDE_4MB_32_DIRTY_BIT                                                                   = 6                                                //col:4160
	PDE_4MB_32_DIRTY_FLAG                                                                  = 0x40                                             //col:4161
	PDE_4MB_32_DIRTY_MASK                                                                  = 0x01                                             //col:4162
	PDE_4MB_32_DIRTY                                                                   (_) = (((_) >> 6) & 0x01)                              //col:4163
	PDE_4MB_32_LARGE_PAGE_BIT                                                              = 7                                                //col:4164
	PDE_4MB_32_LARGE_PAGE_FLAG                                                             = 0x80                                             //col:4165
	PDE_4MB_32_LARGE_PAGE_MASK                                                             = 0x01                                             //col:4166
	PDE_4MB_32_LARGE_PAGE                                                              (_) = (((_) >> 7) & 0x01)                              //col:4167
	PDE_4MB_32_GLOBAL_BIT                                                                  = 8                                                //col:4168
	PDE_4MB_32_GLOBAL_FLAG                                                                 = 0x100                                            //col:4169
	PDE_4MB_32_GLOBAL_MASK                                                                 = 0x01                                             //col:4170
	PDE_4MB_32_GLOBAL                                                                  (_) = (((_) >> 8) & 0x01)                              //col:4171
	PDE_4MB_32_IGNORED_1_BIT                                                               = 9                                                //col:4172
	PDE_4MB_32_IGNORED_1_FLAG                                                              = 0xE00                                            //col:4173
	PDE_4MB_32_IGNORED_1_MASK                                                              = 0x07                                             //col:4174
	PDE_4MB_32_IGNORED_1                                                               (_) = (((_) >> 9) & 0x07)                              //col:4175
	PDE_4MB_32_PAT_BIT                                                                     = 12                                               //col:4176
	PDE_4MB_32_PAT_FLAG                                                                    = 0x1000                                           //col:4177
	PDE_4MB_32_PAT_MASK                                                                    = 0x01                                             //col:4178
	PDE_4MB_32_PAT                                                                     (_) = (((_) >> 12) & 0x01)                             //col:4179
	PDE_4MB_32_PAGE_FRAME_NUMBER_LOW_BIT                                                   = 13                                               //col:4180
	PDE_4MB_32_PAGE_FRAME_NUMBER_LOW_FLAG                                                  = 0x1FE000                                         //col:4181
	PDE_4MB_32_PAGE_FRAME_NUMBER_LOW_MASK                                                  = 0xFF                                             //col:4182
	PDE_4MB_32_PAGE_FRAME_NUMBER_LOW                                                   (_) = (((_) >> 13) & 0xFF)                             //col:4183
	PDE_4MB_32_PAGE_FRAME_NUMBER_HIGH_BIT                                                  = 22                                               //col:4184
	PDE_4MB_32_PAGE_FRAME_NUMBER_HIGH_FLAG                                                 = 0xFFC00000                                       //col:4185
	PDE_4MB_32_PAGE_FRAME_NUMBER_HIGH_MASK                                                 = 0x3FF                                            //col:4186
	PDE_4MB_32_PAGE_FRAME_NUMBER_HIGH                                                  (_) = (((_) >> 22) & 0x3FF)                            //col:4187
	PDE_32_PRESENT_BIT                                                                     = 0                                                //col:4188
	PDE_32_PRESENT_FLAG                                                                    = 0x01                                             //col:4189
	PDE_32_PRESENT_MASK                                                                    = 0x01                                             //col:4190
	PDE_32_PRESENT                                                                     (_) = (((_) >> 0) & 0x01)                              //col:4191
	PDE_32_WRITE_BIT                                                                       = 1                                                //col:4192
	PDE_32_WRITE_FLAG                                                                      = 0x02                                             //col:4193
	PDE_32_WRITE_MASK                                                                      = 0x01                                             //col:4194
	PDE_32_WRITE                                                                       (_) = (((_) >> 1) & 0x01)                              //col:4195
	PDE_32_SUPERVISOR_BIT                                                                  = 2                                                //col:4196
	PDE_32_SUPERVISOR_FLAG                                                                 = 0x04                                             //col:4197
	PDE_32_SUPERVISOR_MASK                                                                 = 0x01                                             //col:4198
	PDE_32_SUPERVISOR                                                                  (_) = (((_) >> 2) & 0x01)                              //col:4199
	PDE_32_PAGE_LEVEL_WRITE_THROUGH_BIT                                                    = 3                                                //col:4200
	PDE_32_PAGE_LEVEL_WRITE_THROUGH_FLAG                                                   = 0x08                                             //col:4201
	PDE_32_PAGE_LEVEL_WRITE_THROUGH_MASK                                                   = 0x01                                             //col:4202
	PDE_32_PAGE_LEVEL_WRITE_THROUGH                                                    (_) = (((_) >> 3) & 0x01)                              //col:4203
	PDE_32_PAGE_LEVEL_CACHE_DISABLE_BIT                                                    = 4                                                //col:4204
	PDE_32_PAGE_LEVEL_CACHE_DISABLE_FLAG                                                   = 0x10                                             //col:4205
	PDE_32_PAGE_LEVEL_CACHE_DISABLE_MASK                                                   = 0x01                                             //col:4206
	PDE_32_PAGE_LEVEL_CACHE_DISABLE                                                    (_) = (((_) >> 4) & 0x01)                              //col:4207
	PDE_32_ACCESSED_BIT                                                                    = 5                                                //col:4208
	PDE_32_ACCESSED_FLAG                                                                   = 0x20                                             //col:4209
	PDE_32_ACCESSED_MASK                                                                   = 0x01                                             //col:4210
	PDE_32_ACCESSED                                                                    (_) = (((_) >> 5) & 0x01)                              //col:4211
	PDE_32_IGNORED_1_BIT                                                                   = 6                                                //col:4212
	PDE_32_IGNORED_1_FLAG                                                                  = 0x40                                             //col:4213
	PDE_32_IGNORED_1_MASK                                                                  = 0x01                                             //col:4214
	PDE_32_IGNORED_1                                                                   (_) = (((_) >> 6) & 0x01)                              //col:4215
	PDE_32_LARGE_PAGE_BIT                                                                  = 7                                                //col:4216
	PDE_32_LARGE_PAGE_FLAG                                                                 = 0x80                                             //col:4217
	PDE_32_LARGE_PAGE_MASK                                                                 = 0x01                                             //col:4218
	PDE_32_LARGE_PAGE                                                                  (_) = (((_) >> 7) & 0x01)                              //col:4219
	PDE_32_IGNORED_2_BIT                                                                   = 8                                                //col:4220
	PDE_32_IGNORED_2_FLAG                                                                  = 0xF00                                            //col:4221
	PDE_32_IGNORED_2_MASK                                                                  = 0x0F                                             //col:4222
	PDE_32_IGNORED_2                                                                   (_) = (((_) >> 8) & 0x0F)                              //col:4223
	PDE_32_PAGE_FRAME_NUMBER_BIT                                                           = 12                                               //col:4224
	PDE_32_PAGE_FRAME_NUMBER_FLAG                                                          = 0xFFFFF000                                       //col:4225
	PDE_32_PAGE_FRAME_NUMBER_MASK                                                          = 0xFFFFF                                          //col:4226
	PDE_32_PAGE_FRAME_NUMBER                                                           (_) = (((_) >> 12) & 0xFFFFF)                          //col:4227
	PTE_32_PRESENT_BIT                                                                     = 0                                                //col:4228
	PTE_32_PRESENT_FLAG                                                                    = 0x01                                             //col:4229
	PTE_32_PRESENT_MASK                                                                    = 0x01                                             //col:4230
	PTE_32_PRESENT                                                                     (_) = (((_) >> 0) & 0x01)                              //col:4231
	PTE_32_WRITE_BIT                                                                       = 1                                                //col:4232
	PTE_32_WRITE_FLAG                                                                      = 0x02                                             //col:4233
	PTE_32_WRITE_MASK                                                                      = 0x01                                             //col:4234
	PTE_32_WRITE                                                                       (_) = (((_) >> 1) & 0x01)                              //col:4235
	PTE_32_SUPERVISOR_BIT                                                                  = 2                                                //col:4236
	PTE_32_SUPERVISOR_FLAG                                                                 = 0x04                                             //col:4237
	PTE_32_SUPERVISOR_MASK                                                                 = 0x01                                             //col:4238
	PTE_32_SUPERVISOR                                                                  (_) = (((_) >> 2) & 0x01)                              //col:4239
	PTE_32_PAGE_LEVEL_WRITE_THROUGH_BIT                                                    = 3                                                //col:4240
	PTE_32_PAGE_LEVEL_WRITE_THROUGH_FLAG                                                   = 0x08                                             //col:4241
	PTE_32_PAGE_LEVEL_WRITE_THROUGH_MASK                                                   = 0x01                                             //col:4242
	PTE_32_PAGE_LEVEL_WRITE_THROUGH                                                    (_) = (((_) >> 3) & 0x01)                              //col:4243
	PTE_32_PAGE_LEVEL_CACHE_DISABLE_BIT                                                    = 4                                                //col:4244
	PTE_32_PAGE_LEVEL_CACHE_DISABLE_FLAG                                                   = 0x10                                             //col:4245
	PTE_32_PAGE_LEVEL_CACHE_DISABLE_MASK                                                   = 0x01                                             //col:4246
	PTE_32_PAGE_LEVEL_CACHE_DISABLE                                                    (_) = (((_) >> 4) & 0x01)                              //col:4247
	PTE_32_ACCESSED_BIT                                                                    = 5                                                //col:4248
	PTE_32_ACCESSED_FLAG                                                                   = 0x20                                             //col:4249
	PTE_32_ACCESSED_MASK                                                                   = 0x01                                             //col:4250
	PTE_32_ACCESSED                                                                    (_) = (((_) >> 5) & 0x01)                              //col:4251
	PTE_32_DIRTY_BIT                                                                       = 6                                                //col:4252
	PTE_32_DIRTY_FLAG                                                                      = 0x40                                             //col:4253
	PTE_32_DIRTY_MASK                                                                      = 0x01                                             //col:4254
	PTE_32_DIRTY                                                                       (_) = (((_) >> 6) & 0x01)                              //col:4255
	PTE_32_PAT_BIT                                                                         = 7                                                //col:4256
	PTE_32_PAT_FLAG                                                                        = 0x80                                             //col:4257
	PTE_32_PAT_MASK                                                                        = 0x01                                             //col:4258
	PTE_32_PAT                                                                         (_) = (((_) >> 7) & 0x01)                              //col:4259
	PTE_32_GLOBAL_BIT                                                                      = 8                                                //col:4260
	PTE_32_GLOBAL_FLAG                                                                     = 0x100                                            //col:4261
	PTE_32_GLOBAL_MASK                                                                     = 0x01                                             //col:4262
	PTE_32_GLOBAL                                                                      (_) = (((_) >> 8) & 0x01)                              //col:4263
	PTE_32_IGNORED_1_BIT                                                                   = 9                                                //col:4264
	PTE_32_IGNORED_1_FLAG                                                                  = 0xE00                                            //col:4265
	PTE_32_IGNORED_1_MASK                                                                  = 0x07                                             //col:4266
	PTE_32_IGNORED_1                                                                   (_) = (((_) >> 9) & 0x07)                              //col:4267
	PTE_32_PAGE_FRAME_NUMBER_BIT                                                           = 12                                               //col:4268
	PTE_32_PAGE_FRAME_NUMBER_FLAG                                                          = 0xFFFFF000                                       //col:4269
	PTE_32_PAGE_FRAME_NUMBER_MASK                                                          = 0xFFFFF                                          //col:4270
	PTE_32_PAGE_FRAME_NUMBER                                                           (_) = (((_) >> 12) & 0xFFFFF)                          //col:4271
	PT_ENTRY_32_PRESENT_BIT                                                                = 0                                                //col:4272
	PT_ENTRY_32_PRESENT_FLAG                                                               = 0x01                                             //col:4273
	PT_ENTRY_32_PRESENT_MASK                                                               = 0x01                                             //col:4274
	PT_ENTRY_32_PRESENT                                                                (_) = (((_) >> 0) & 0x01)                              //col:4275
	PT_ENTRY_32_WRITE_BIT                                                                  = 1                                                //col:4276
	PT_ENTRY_32_WRITE_FLAG                                                                 = 0x02                                             //col:4277
	PT_ENTRY_32_WRITE_MASK                                                                 = 0x01                                             //col:4278
	PT_ENTRY_32_WRITE                                                                  (_) = (((_) >> 1) & 0x01)                              //col:4279
	PT_ENTRY_32_SUPERVISOR_BIT                                                             = 2                                                //col:4280
	PT_ENTRY_32_SUPERVISOR_FLAG                                                            = 0x04                                             //col:4281
	PT_ENTRY_32_SUPERVISOR_MASK                                                            = 0x01                                             //col:4282
	PT_ENTRY_32_SUPERVISOR                                                             (_) = (((_) >> 2) & 0x01)                              //col:4283
	PT_ENTRY_32_PAGE_LEVEL_WRITE_THROUGH_BIT                                               = 3                                                //col:4284
	PT_ENTRY_32_PAGE_LEVEL_WRITE_THROUGH_FLAG                                              = 0x08                                             //col:4285
	PT_ENTRY_32_PAGE_LEVEL_WRITE_THROUGH_MASK                                              = 0x01                                             //col:4286
	PT_ENTRY_32_PAGE_LEVEL_WRITE_THROUGH                                               (_) = (((_) >> 3) & 0x01)                              //col:4287
	PT_ENTRY_32_PAGE_LEVEL_CACHE_DISABLE_BIT                                               = 4                                                //col:4288
	PT_ENTRY_32_PAGE_LEVEL_CACHE_DISABLE_FLAG                                              = 0x10                                             //col:4289
	PT_ENTRY_32_PAGE_LEVEL_CACHE_DISABLE_MASK                                              = 0x01                                             //col:4290
	PT_ENTRY_32_PAGE_LEVEL_CACHE_DISABLE                                               (_) = (((_) >> 4) & 0x01)                              //col:4291
	PT_ENTRY_32_ACCESSED_BIT                                                               = 5                                                //col:4292
	PT_ENTRY_32_ACCESSED_FLAG                                                              = 0x20                                             //col:4293
	PT_ENTRY_32_ACCESSED_MASK                                                              = 0x01                                             //col:4294
	PT_ENTRY_32_ACCESSED                                                               (_) = (((_) >> 5) & 0x01)                              //col:4295
	PT_ENTRY_32_DIRTY_BIT                                                                  = 6                                                //col:4296
	PT_ENTRY_32_DIRTY_FLAG                                                                 = 0x40                                             //col:4297
	PT_ENTRY_32_DIRTY_MASK                                                                 = 0x01                                             //col:4298
	PT_ENTRY_32_DIRTY                                                                  (_) = (((_) >> 6) & 0x01)                              //col:4299
	PT_ENTRY_32_LARGE_PAGE_BIT                                                             = 7                                                //col:4300
	PT_ENTRY_32_LARGE_PAGE_FLAG                                                            = 0x80                                             //col:4301
	PT_ENTRY_32_LARGE_PAGE_MASK                                                            = 0x01                                             //col:4302
	PT_ENTRY_32_LARGE_PAGE                                                             (_) = (((_) >> 7) & 0x01)                              //col:4303
	PT_ENTRY_32_GLOBAL_BIT                                                                 = 8                                                //col:4304
	PT_ENTRY_32_GLOBAL_FLAG                                                                = 0x100                                            //col:4305
	PT_ENTRY_32_GLOBAL_MASK                                                                = 0x01                                             //col:4306
	PT_ENTRY_32_GLOBAL                                                                 (_) = (((_) >> 8) & 0x01)                              //col:4307
	PT_ENTRY_32_IGNORED_1_BIT                                                              = 9                                                //col:4308
	PT_ENTRY_32_IGNORED_1_FLAG                                                             = 0xE00                                            //col:4309
	PT_ENTRY_32_IGNORED_1_MASK                                                             = 0x07                                             //col:4310
	PT_ENTRY_32_IGNORED_1                                                              (_) = (((_) >> 9) & 0x07)                              //col:4311
	PT_ENTRY_32_PAGE_FRAME_NUMBER_BIT                                                      = 12                                               //col:4312
	PT_ENTRY_32_PAGE_FRAME_NUMBER_FLAG                                                     = 0xFFFFF000                                       //col:4313
	PT_ENTRY_32_PAGE_FRAME_NUMBER_MASK                                                     = 0xFFFFF                                          //col:4314
	PT_ENTRY_32_PAGE_FRAME_NUMBER                                                      (_) = (((_) >> 12) & 0xFFFFF)                          //col:4315
	PDE_ENTRY_COUNT_32                                                                     = 0x00000400                                       //col:4316
	PTE_ENTRY_COUNT_32                                                                     = 0x00000400                                       //col:4317
	PML4E_64_PRESENT_BIT                                                                   = 0                                                //col:4318
	PML4E_64_PRESENT_FLAG                                                                  = 0x01                                             //col:4319
	PML4E_64_PRESENT_MASK                                                                  = 0x01                                             //col:4320
	PML4E_64_PRESENT                                                                   (_) = (((_) >> 0) & 0x01)                              //col:4321
	PML4E_64_WRITE_BIT                                                                     = 1                                                //col:4322
	PML4E_64_WRITE_FLAG                                                                    = 0x02                                             //col:4323
	PML4E_64_WRITE_MASK                                                                    = 0x01                                             //col:4324
	PML4E_64_WRITE                                                                     (_) = (((_) >> 1) & 0x01)                              //col:4325
	PML4E_64_SUPERVISOR_BIT                                                                = 2                                                //col:4326
	PML4E_64_SUPERVISOR_FLAG                                                               = 0x04                                             //col:4327
	PML4E_64_SUPERVISOR_MASK                                                               = 0x01                                             //col:4328
	PML4E_64_SUPERVISOR                                                                (_) = (((_) >> 2) & 0x01)                              //col:4329
	PML4E_64_PAGE_LEVEL_WRITE_THROUGH_BIT                                                  = 3                                                //col:4330
	PML4E_64_PAGE_LEVEL_WRITE_THROUGH_FLAG                                                 = 0x08                                             //col:4331
	PML4E_64_PAGE_LEVEL_WRITE_THROUGH_MASK                                                 = 0x01                                             //col:4332
	PML4E_64_PAGE_LEVEL_WRITE_THROUGH                                                  (_) = (((_) >> 3) & 0x01)                              //col:4333
	PML4E_64_PAGE_LEVEL_CACHE_DISABLE_BIT                                                  = 4                                                //col:4334
	PML4E_64_PAGE_LEVEL_CACHE_DISABLE_FLAG                                                 = 0x10                                             //col:4335
	PML4E_64_PAGE_LEVEL_CACHE_DISABLE_MASK                                                 = 0x01                                             //col:4336
	PML4E_64_PAGE_LEVEL_CACHE_DISABLE                                                  (_) = (((_) >> 4) & 0x01)                              //col:4337
	PML4E_64_ACCESSED_BIT                                                                  = 5                                                //col:4338
	PML4E_64_ACCESSED_FLAG                                                                 = 0x20                                             //col:4339
	PML4E_64_ACCESSED_MASK                                                                 = 0x01                                             //col:4340
	PML4E_64_ACCESSED                                                                  (_) = (((_) >> 5) & 0x01)                              //col:4341
	PML4E_64_MUST_BE_ZERO_BIT                                                              = 7                                                //col:4342
	PML4E_64_MUST_BE_ZERO_FLAG                                                             = 0x80                                             //col:4343
	PML4E_64_MUST_BE_ZERO_MASK                                                             = 0x01                                             //col:4344
	PML4E_64_MUST_BE_ZERO                                                              (_) = (((_) >> 7) & 0x01)                              //col:4345
	PML4E_64_IGNORED_1_BIT                                                                 = 8                                                //col:4346
	PML4E_64_IGNORED_1_FLAG                                                                = 0x700                                            //col:4347
	PML4E_64_IGNORED_1_MASK                                                                = 0x07                                             //col:4348
	PML4E_64_IGNORED_1                                                                 (_) = (((_) >> 8) & 0x07)                              //col:4349
	PML4E_64_RESTART_BIT                                                                   = 11                                               //col:4350
	PML4E_64_RESTART_FLAG                                                                  = 0x800                                            //col:4351
	PML4E_64_RESTART_MASK                                                                  = 0x01                                             //col:4352
	PML4E_64_RESTART                                                                   (_) = (((_) >> 11) & 0x01)                             //col:4353
	PML4E_64_PAGE_FRAME_NUMBER_BIT                                                         = 12                                               //col:4354
	PML4E_64_PAGE_FRAME_NUMBER_FLAG                                                        = 0xFFFFFFFFF000                                   //col:4355
	PML4E_64_PAGE_FRAME_NUMBER_MASK                                                        = 0xFFFFFFFFF                                      //col:4356
	PML4E_64_PAGE_FRAME_NUMBER                                                         (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:4357
	PML4E_64_IGNORED_2_BIT                                                                 = 52                                               //col:4358
	PML4E_64_IGNORED_2_FLAG                                                                = 0x7FF0000000000000                               //col:4359
	PML4E_64_IGNORED_2_MASK                                                                = 0x7FF                                            //col:4360
	PML4E_64_IGNORED_2                                                                 (_) = (((_) >> 52) & 0x7FF)                            //col:4361
	PML4E_64_EXECUTE_DISABLE_BIT                                                           = 63                                               //col:4362
	PML4E_64_EXECUTE_DISABLE_FLAG                                                          = 0x8000000000000000                               //col:4363
	PML4E_64_EXECUTE_DISABLE_MASK                                                          = 0x01                                             //col:4364
	PML4E_64_EXECUTE_DISABLE                                                           (_) = (((_) >> 63) & 0x01)                             //col:4365
	PDPTE_1GB_64_PRESENT_BIT                                                               = 0                                                //col:4366
	PDPTE_1GB_64_PRESENT_FLAG                                                              = 0x01                                             //col:4367
	PDPTE_1GB_64_PRESENT_MASK                                                              = 0x01                                             //col:4368
	PDPTE_1GB_64_PRESENT                                                               (_) = (((_) >> 0) & 0x01)                              //col:4369
	PDPTE_1GB_64_WRITE_BIT                                                                 = 1                                                //col:4370
	PDPTE_1GB_64_WRITE_FLAG                                                                = 0x02                                             //col:4371
	PDPTE_1GB_64_WRITE_MASK                                                                = 0x01                                             //col:4372
	PDPTE_1GB_64_WRITE                                                                 (_) = (((_) >> 1) & 0x01)                              //col:4373
	PDPTE_1GB_64_SUPERVISOR_BIT                                                            = 2                                                //col:4374
	PDPTE_1GB_64_SUPERVISOR_FLAG                                                           = 0x04                                             //col:4375
	PDPTE_1GB_64_SUPERVISOR_MASK                                                           = 0x01                                             //col:4376
	PDPTE_1GB_64_SUPERVISOR                                                            (_) = (((_) >> 2) & 0x01)                              //col:4377
	PDPTE_1GB_64_PAGE_LEVEL_WRITE_THROUGH_BIT                                              = 3                                                //col:4378
	PDPTE_1GB_64_PAGE_LEVEL_WRITE_THROUGH_FLAG                                             = 0x08                                             //col:4379
	PDPTE_1GB_64_PAGE_LEVEL_WRITE_THROUGH_MASK                                             = 0x01                                             //col:4380
	PDPTE_1GB_64_PAGE_LEVEL_WRITE_THROUGH                                              (_) = (((_) >> 3) & 0x01)                              //col:4381
	PDPTE_1GB_64_PAGE_LEVEL_CACHE_DISABLE_BIT                                              = 4                                                //col:4382
	PDPTE_1GB_64_PAGE_LEVEL_CACHE_DISABLE_FLAG                                             = 0x10                                             //col:4383
	PDPTE_1GB_64_PAGE_LEVEL_CACHE_DISABLE_MASK                                             = 0x01                                             //col:4384
	PDPTE_1GB_64_PAGE_LEVEL_CACHE_DISABLE                                              (_) = (((_) >> 4) & 0x01)                              //col:4385
	PDPTE_1GB_64_ACCESSED_BIT                                                              = 5                                                //col:4386
	PDPTE_1GB_64_ACCESSED_FLAG                                                             = 0x20                                             //col:4387
	PDPTE_1GB_64_ACCESSED_MASK                                                             = 0x01                                             //col:4388
	PDPTE_1GB_64_ACCESSED                                                              (_) = (((_) >> 5) & 0x01)                              //col:4389
	PDPTE_1GB_64_DIRTY_BIT                                                                 = 6                                                //col:4390
	PDPTE_1GB_64_DIRTY_FLAG                                                                = 0x40                                             //col:4391
	PDPTE_1GB_64_DIRTY_MASK                                                                = 0x01                                             //col:4392
	PDPTE_1GB_64_DIRTY                                                                 (_) = (((_) >> 6) & 0x01)                              //col:4393
	PDPTE_1GB_64_LARGE_PAGE_BIT                                                            = 7                                                //col:4394
	PDPTE_1GB_64_LARGE_PAGE_FLAG                                                           = 0x80                                             //col:4395
	PDPTE_1GB_64_LARGE_PAGE_MASK                                                           = 0x01                                             //col:4396
	PDPTE_1GB_64_LARGE_PAGE                                                            (_) = (((_) >> 7) & 0x01)                              //col:4397
	PDPTE_1GB_64_GLOBAL_BIT                                                                = 8                                                //col:4398
	PDPTE_1GB_64_GLOBAL_FLAG                                                               = 0x100                                            //col:4399
	PDPTE_1GB_64_GLOBAL_MASK                                                               = 0x01                                             //col:4400
	PDPTE_1GB_64_GLOBAL                                                                (_) = (((_) >> 8) & 0x01)                              //col:4401
	PDPTE_1GB_64_IGNORED_1_BIT                                                             = 9                                                //col:4402
	PDPTE_1GB_64_IGNORED_1_FLAG                                                            = 0x600                                            //col:4403
	PDPTE_1GB_64_IGNORED_1_MASK                                                            = 0x03                                             //col:4404
	PDPTE_1GB_64_IGNORED_1                                                             (_) = (((_) >> 9) & 0x03)                              //col:4405
	PDPTE_1GB_64_RESTART_BIT                                                               = 11                                               //col:4406
	PDPTE_1GB_64_RESTART_FLAG                                                              = 0x800                                            //col:4407
	PDPTE_1GB_64_RESTART_MASK                                                              = 0x01                                             //col:4408
	PDPTE_1GB_64_RESTART                                                               (_) = (((_) >> 11) & 0x01)                             //col:4409
	PDPTE_1GB_64_PAT_BIT                                                                   = 12                                               //col:4410
	PDPTE_1GB_64_PAT_FLAG                                                                  = 0x1000                                           //col:4411
	PDPTE_1GB_64_PAT_MASK                                                                  = 0x01                                             //col:4412
	PDPTE_1GB_64_PAT                                                                   (_) = (((_) >> 12) & 0x01)                             //col:4413
	PDPTE_1GB_64_PAGE_FRAME_NUMBER_BIT                                                     = 30                                               //col:4414
	PDPTE_1GB_64_PAGE_FRAME_NUMBER_FLAG                                                    = 0xFFFFC0000000                                   //col:4415
	PDPTE_1GB_64_PAGE_FRAME_NUMBER_MASK                                                    = 0x3FFFF                                          //col:4416
	PDPTE_1GB_64_PAGE_FRAME_NUMBER                                                     (_) = (((_) >> 30) & 0x3FFFF)                          //col:4417
	PDPTE_1GB_64_IGNORED_2_BIT                                                             = 52                                               //col:4418
	PDPTE_1GB_64_IGNORED_2_FLAG                                                            = 0x7F0000000000000                                //col:4419
	PDPTE_1GB_64_IGNORED_2_MASK                                                            = 0x7F                                             //col:4420
	PDPTE_1GB_64_IGNORED_2                                                             (_) = (((_) >> 52) & 0x7F)                             //col:4421
	PDPTE_1GB_64_PROTECTION_KEY_BIT                                                        = 59                                               //col:4422
	PDPTE_1GB_64_PROTECTION_KEY_FLAG                                                       = 0x7800000000000000                               //col:4423
	PDPTE_1GB_64_PROTECTION_KEY_MASK                                                       = 0x0F                                             //col:4424
	PDPTE_1GB_64_PROTECTION_KEY                                                        (_) = (((_) >> 59) & 0x0F)                             //col:4425
	PDPTE_1GB_64_EXECUTE_DISABLE_BIT                                                       = 63                                               //col:4426
	PDPTE_1GB_64_EXECUTE_DISABLE_FLAG                                                      = 0x8000000000000000                               //col:4427
	PDPTE_1GB_64_EXECUTE_DISABLE_MASK                                                      = 0x01                                             //col:4428
	PDPTE_1GB_64_EXECUTE_DISABLE                                                       (_) = (((_) >> 63) & 0x01)                             //col:4429
	PDPTE_64_PRESENT_BIT                                                                   = 0                                                //col:4430
	PDPTE_64_PRESENT_FLAG                                                                  = 0x01                                             //col:4431
	PDPTE_64_PRESENT_MASK                                                                  = 0x01                                             //col:4432
	PDPTE_64_PRESENT                                                                   (_) = (((_) >> 0) & 0x01)                              //col:4433
	PDPTE_64_WRITE_BIT                                                                     = 1                                                //col:4434
	PDPTE_64_WRITE_FLAG                                                                    = 0x02                                             //col:4435
	PDPTE_64_WRITE_MASK                                                                    = 0x01                                             //col:4436
	PDPTE_64_WRITE                                                                     (_) = (((_) >> 1) & 0x01)                              //col:4437
	PDPTE_64_SUPERVISOR_BIT                                                                = 2                                                //col:4438
	PDPTE_64_SUPERVISOR_FLAG                                                               = 0x04                                             //col:4439
	PDPTE_64_SUPERVISOR_MASK                                                               = 0x01                                             //col:4440
	PDPTE_64_SUPERVISOR                                                                (_) = (((_) >> 2) & 0x01)                              //col:4441
	PDPTE_64_PAGE_LEVEL_WRITE_THROUGH_BIT                                                  = 3                                                //col:4442
	PDPTE_64_PAGE_LEVEL_WRITE_THROUGH_FLAG                                                 = 0x08                                             //col:4443
	PDPTE_64_PAGE_LEVEL_WRITE_THROUGH_MASK                                                 = 0x01                                             //col:4444
	PDPTE_64_PAGE_LEVEL_WRITE_THROUGH                                                  (_) = (((_) >> 3) & 0x01)                              //col:4445
	PDPTE_64_PAGE_LEVEL_CACHE_DISABLE_BIT                                                  = 4                                                //col:4446
	PDPTE_64_PAGE_LEVEL_CACHE_DISABLE_FLAG                                                 = 0x10                                             //col:4447
	PDPTE_64_PAGE_LEVEL_CACHE_DISABLE_MASK                                                 = 0x01                                             //col:4448
	PDPTE_64_PAGE_LEVEL_CACHE_DISABLE                                                  (_) = (((_) >> 4) & 0x01)                              //col:4449
	PDPTE_64_ACCESSED_BIT                                                                  = 5                                                //col:4450
	PDPTE_64_ACCESSED_FLAG                                                                 = 0x20                                             //col:4451
	PDPTE_64_ACCESSED_MASK                                                                 = 0x01                                             //col:4452
	PDPTE_64_ACCESSED                                                                  (_) = (((_) >> 5) & 0x01)                              //col:4453
	PDPTE_64_LARGE_PAGE_BIT                                                                = 7                                                //col:4454
	PDPTE_64_LARGE_PAGE_FLAG                                                               = 0x80                                             //col:4455
	PDPTE_64_LARGE_PAGE_MASK                                                               = 0x01                                             //col:4456
	PDPTE_64_LARGE_PAGE                                                                (_) = (((_) >> 7) & 0x01)                              //col:4457
	PDPTE_64_IGNORED_1_BIT                                                                 = 8                                                //col:4458
	PDPTE_64_IGNORED_1_FLAG                                                                = 0x700                                            //col:4459
	PDPTE_64_IGNORED_1_MASK                                                                = 0x07                                             //col:4460
	PDPTE_64_IGNORED_1                                                                 (_) = (((_) >> 8) & 0x07)                              //col:4461
	PDPTE_64_RESTART_BIT                                                                   = 11                                               //col:4462
	PDPTE_64_RESTART_FLAG                                                                  = 0x800                                            //col:4463
	PDPTE_64_RESTART_MASK                                                                  = 0x01                                             //col:4464
	PDPTE_64_RESTART                                                                   (_) = (((_) >> 11) & 0x01)                             //col:4465
	PDPTE_64_PAGE_FRAME_NUMBER_BIT                                                         = 12                                               //col:4466
	PDPTE_64_PAGE_FRAME_NUMBER_FLAG                                                        = 0xFFFFFFFFF000                                   //col:4467
	PDPTE_64_PAGE_FRAME_NUMBER_MASK                                                        = 0xFFFFFFFFF                                      //col:4468
	PDPTE_64_PAGE_FRAME_NUMBER                                                         (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:4469
	PDPTE_64_IGNORED_2_BIT                                                                 = 52                                               //col:4470
	PDPTE_64_IGNORED_2_FLAG                                                                = 0x7FF0000000000000                               //col:4471
	PDPTE_64_IGNORED_2_MASK                                                                = 0x7FF                                            //col:4472
	PDPTE_64_IGNORED_2                                                                 (_) = (((_) >> 52) & 0x7FF)                            //col:4473
	PDPTE_64_EXECUTE_DISABLE_BIT                                                           = 63                                               //col:4474
	PDPTE_64_EXECUTE_DISABLE_FLAG                                                          = 0x8000000000000000                               //col:4475
	PDPTE_64_EXECUTE_DISABLE_MASK                                                          = 0x01                                             //col:4476
	PDPTE_64_EXECUTE_DISABLE                                                           (_) = (((_) >> 63) & 0x01)                             //col:4477
	PDE_2MB_64_PRESENT_BIT                                                                 = 0                                                //col:4478
	PDE_2MB_64_PRESENT_FLAG                                                                = 0x01                                             //col:4479
	PDE_2MB_64_PRESENT_MASK                                                                = 0x01                                             //col:4480
	PDE_2MB_64_PRESENT                                                                 (_) = (((_) >> 0) & 0x01)                              //col:4481
	PDE_2MB_64_WRITE_BIT                                                                   = 1                                                //col:4482
	PDE_2MB_64_WRITE_FLAG                                                                  = 0x02                                             //col:4483
	PDE_2MB_64_WRITE_MASK                                                                  = 0x01                                             //col:4484
	PDE_2MB_64_WRITE                                                                   (_) = (((_) >> 1) & 0x01)                              //col:4485
	PDE_2MB_64_SUPERVISOR_BIT                                                              = 2                                                //col:4486
	PDE_2MB_64_SUPERVISOR_FLAG                                                             = 0x04                                             //col:4487
	PDE_2MB_64_SUPERVISOR_MASK                                                             = 0x01                                             //col:4488
	PDE_2MB_64_SUPERVISOR                                                              (_) = (((_) >> 2) & 0x01)                              //col:4489
	PDE_2MB_64_PAGE_LEVEL_WRITE_THROUGH_BIT                                                = 3                                                //col:4490
	PDE_2MB_64_PAGE_LEVEL_WRITE_THROUGH_FLAG                                               = 0x08                                             //col:4491
	PDE_2MB_64_PAGE_LEVEL_WRITE_THROUGH_MASK                                               = 0x01                                             //col:4492
	PDE_2MB_64_PAGE_LEVEL_WRITE_THROUGH                                                (_) = (((_) >> 3) & 0x01)                              //col:4493
	PDE_2MB_64_PAGE_LEVEL_CACHE_DISABLE_BIT                                                = 4                                                //col:4494
	PDE_2MB_64_PAGE_LEVEL_CACHE_DISABLE_FLAG                                               = 0x10                                             //col:4495
	PDE_2MB_64_PAGE_LEVEL_CACHE_DISABLE_MASK                                               = 0x01                                             //col:4496
	PDE_2MB_64_PAGE_LEVEL_CACHE_DISABLE                                                (_) = (((_) >> 4) & 0x01)                              //col:4497
	PDE_2MB_64_ACCESSED_BIT                                                                = 5                                                //col:4498
	PDE_2MB_64_ACCESSED_FLAG                                                               = 0x20                                             //col:4499
	PDE_2MB_64_ACCESSED_MASK                                                               = 0x01                                             //col:4500
	PDE_2MB_64_ACCESSED                                                                (_) = (((_) >> 5) & 0x01)                              //col:4501
	PDE_2MB_64_DIRTY_BIT                                                                   = 6                                                //col:4502
	PDE_2MB_64_DIRTY_FLAG                                                                  = 0x40                                             //col:4503
	PDE_2MB_64_DIRTY_MASK                                                                  = 0x01                                             //col:4504
	PDE_2MB_64_DIRTY                                                                   (_) = (((_) >> 6) & 0x01)                              //col:4505
	PDE_2MB_64_LARGE_PAGE_BIT                                                              = 7                                                //col:4506
	PDE_2MB_64_LARGE_PAGE_FLAG                                                             = 0x80                                             //col:4507
	PDE_2MB_64_LARGE_PAGE_MASK                                                             = 0x01                                             //col:4508
	PDE_2MB_64_LARGE_PAGE                                                              (_) = (((_) >> 7) & 0x01)                              //col:4509
	PDE_2MB_64_GLOBAL_BIT                                                                  = 8                                                //col:4510
	PDE_2MB_64_GLOBAL_FLAG                                                                 = 0x100                                            //col:4511
	PDE_2MB_64_GLOBAL_MASK                                                                 = 0x01                                             //col:4512
	PDE_2MB_64_GLOBAL                                                                  (_) = (((_) >> 8) & 0x01)                              //col:4513
	PDE_2MB_64_IGNORED_1_BIT                                                               = 9                                                //col:4514
	PDE_2MB_64_IGNORED_1_FLAG                                                              = 0x600                                            //col:4515
	PDE_2MB_64_IGNORED_1_MASK                                                              = 0x03                                             //col:4516
	PDE_2MB_64_IGNORED_1                                                               (_) = (((_) >> 9) & 0x03)                              //col:4517
	PDE_2MB_64_RESTART_BIT                                                                 = 11                                               //col:4518
	PDE_2MB_64_RESTART_FLAG                                                                = 0x800                                            //col:4519
	PDE_2MB_64_RESTART_MASK                                                                = 0x01                                             //col:4520
	PDE_2MB_64_RESTART                                                                 (_) = (((_) >> 11) & 0x01)                             //col:4521
	PDE_2MB_64_PAT_BIT                                                                     = 12                                               //col:4522
	PDE_2MB_64_PAT_FLAG                                                                    = 0x1000                                           //col:4523
	PDE_2MB_64_PAT_MASK                                                                    = 0x01                                             //col:4524
	PDE_2MB_64_PAT                                                                     (_) = (((_) >> 12) & 0x01)                             //col:4525
	PDE_2MB_64_PAGE_FRAME_NUMBER_BIT                                                       = 21                                               //col:4526
	PDE_2MB_64_PAGE_FRAME_NUMBER_FLAG                                                      = 0xFFFFFFE00000                                   //col:4527
	PDE_2MB_64_PAGE_FRAME_NUMBER_MASK                                                      = 0x7FFFFFF                                        //col:4528
	PDE_2MB_64_PAGE_FRAME_NUMBER                                                       (_) = (((_) >> 21) & 0x7FFFFFF)                        //col:4529
	PDE_2MB_64_IGNORED_2_BIT                                                               = 52                                               //col:4530
	PDE_2MB_64_IGNORED_2_FLAG                                                              = 0x7F0000000000000                                //col:4531
	PDE_2MB_64_IGNORED_2_MASK                                                              = 0x7F                                             //col:4532
	PDE_2MB_64_IGNORED_2                                                               (_) = (((_) >> 52) & 0x7F)                             //col:4533
	PDE_2MB_64_PROTECTION_KEY_BIT                                                          = 59                                               //col:4534
	PDE_2MB_64_PROTECTION_KEY_FLAG                                                         = 0x7800000000000000                               //col:4535
	PDE_2MB_64_PROTECTION_KEY_MASK                                                         = 0x0F                                             //col:4536
	PDE_2MB_64_PROTECTION_KEY                                                          (_) = (((_) >> 59) & 0x0F)                             //col:4537
	PDE_2MB_64_EXECUTE_DISABLE_BIT                                                         = 63                                               //col:4538
	PDE_2MB_64_EXECUTE_DISABLE_FLAG                                                        = 0x8000000000000000                               //col:4539
	PDE_2MB_64_EXECUTE_DISABLE_MASK                                                        = 0x01                                             //col:4540
	PDE_2MB_64_EXECUTE_DISABLE                                                         (_) = (((_) >> 63) & 0x01)                             //col:4541
	PDE_64_PRESENT_BIT                                                                     = 0                                                //col:4542
	PDE_64_PRESENT_FLAG                                                                    = 0x01                                             //col:4543
	PDE_64_PRESENT_MASK                                                                    = 0x01                                             //col:4544
	PDE_64_PRESENT                                                                     (_) = (((_) >> 0) & 0x01)                              //col:4545
	PDE_64_WRITE_BIT                                                                       = 1                                                //col:4546
	PDE_64_WRITE_FLAG                                                                      = 0x02                                             //col:4547
	PDE_64_WRITE_MASK                                                                      = 0x01                                             //col:4548
	PDE_64_WRITE                                                                       (_) = (((_) >> 1) & 0x01)                              //col:4549
	PDE_64_SUPERVISOR_BIT                                                                  = 2                                                //col:4550
	PDE_64_SUPERVISOR_FLAG                                                                 = 0x04                                             //col:4551
	PDE_64_SUPERVISOR_MASK                                                                 = 0x01                                             //col:4552
	PDE_64_SUPERVISOR                                                                  (_) = (((_) >> 2) & 0x01)                              //col:4553
	PDE_64_PAGE_LEVEL_WRITE_THROUGH_BIT                                                    = 3                                                //col:4554
	PDE_64_PAGE_LEVEL_WRITE_THROUGH_FLAG                                                   = 0x08                                             //col:4555
	PDE_64_PAGE_LEVEL_WRITE_THROUGH_MASK                                                   = 0x01                                             //col:4556
	PDE_64_PAGE_LEVEL_WRITE_THROUGH                                                    (_) = (((_) >> 3) & 0x01)                              //col:4557
	PDE_64_PAGE_LEVEL_CACHE_DISABLE_BIT                                                    = 4                                                //col:4558
	PDE_64_PAGE_LEVEL_CACHE_DISABLE_FLAG                                                   = 0x10                                             //col:4559
	PDE_64_PAGE_LEVEL_CACHE_DISABLE_MASK                                                   = 0x01                                             //col:4560
	PDE_64_PAGE_LEVEL_CACHE_DISABLE                                                    (_) = (((_) >> 4) & 0x01)                              //col:4561
	PDE_64_ACCESSED_BIT                                                                    = 5                                                //col:4562
	PDE_64_ACCESSED_FLAG                                                                   = 0x20                                             //col:4563
	PDE_64_ACCESSED_MASK                                                                   = 0x01                                             //col:4564
	PDE_64_ACCESSED                                                                    (_) = (((_) >> 5) & 0x01)                              //col:4565
	PDE_64_LARGE_PAGE_BIT                                                                  = 7                                                //col:4566
	PDE_64_LARGE_PAGE_FLAG                                                                 = 0x80                                             //col:4567
	PDE_64_LARGE_PAGE_MASK                                                                 = 0x01                                             //col:4568
	PDE_64_LARGE_PAGE                                                                  (_) = (((_) >> 7) & 0x01)                              //col:4569
	PDE_64_IGNORED_1_BIT                                                                   = 8                                                //col:4570
	PDE_64_IGNORED_1_FLAG                                                                  = 0x700                                            //col:4571
	PDE_64_IGNORED_1_MASK                                                                  = 0x07                                             //col:4572
	PDE_64_IGNORED_1                                                                   (_) = (((_) >> 8) & 0x07)                              //col:4573
	PDE_64_RESTART_BIT                                                                     = 11                                               //col:4574
	PDE_64_RESTART_FLAG                                                                    = 0x800                                            //col:4575
	PDE_64_RESTART_MASK                                                                    = 0x01                                             //col:4576
	PDE_64_RESTART                                                                     (_) = (((_) >> 11) & 0x01)                             //col:4577
	PDE_64_PAGE_FRAME_NUMBER_BIT                                                           = 12                                               //col:4578
	PDE_64_PAGE_FRAME_NUMBER_FLAG                                                          = 0xFFFFFFFFF000                                   //col:4579
	PDE_64_PAGE_FRAME_NUMBER_MASK                                                          = 0xFFFFFFFFF                                      //col:4580
	PDE_64_PAGE_FRAME_NUMBER                                                           (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:4581
	PDE_64_IGNORED_2_BIT                                                                   = 52                                               //col:4582
	PDE_64_IGNORED_2_FLAG                                                                  = 0x7FF0000000000000                               //col:4583
	PDE_64_IGNORED_2_MASK                                                                  = 0x7FF                                            //col:4584
	PDE_64_IGNORED_2                                                                   (_) = (((_) >> 52) & 0x7FF)                            //col:4585
	PDE_64_EXECUTE_DISABLE_BIT                                                             = 63                                               //col:4586
	PDE_64_EXECUTE_DISABLE_FLAG                                                            = 0x8000000000000000                               //col:4587
	PDE_64_EXECUTE_DISABLE_MASK                                                            = 0x01                                             //col:4588
	PDE_64_EXECUTE_DISABLE                                                             (_) = (((_) >> 63) & 0x01)                             //col:4589
	PTE_64_PRESENT_BIT                                                                     = 0                                                //col:4590
	PTE_64_PRESENT_FLAG                                                                    = 0x01                                             //col:4591
	PTE_64_PRESENT_MASK                                                                    = 0x01                                             //col:4592
	PTE_64_PRESENT                                                                     (_) = (((_) >> 0) & 0x01)                              //col:4593
	PTE_64_WRITE_BIT                                                                       = 1                                                //col:4594
	PTE_64_WRITE_FLAG                                                                      = 0x02                                             //col:4595
	PTE_64_WRITE_MASK                                                                      = 0x01                                             //col:4596
	PTE_64_WRITE                                                                       (_) = (((_) >> 1) & 0x01)                              //col:4597
	PTE_64_SUPERVISOR_BIT                                                                  = 2                                                //col:4598
	PTE_64_SUPERVISOR_FLAG                                                                 = 0x04                                             //col:4599
	PTE_64_SUPERVISOR_MASK                                                                 = 0x01                                             //col:4600
	PTE_64_SUPERVISOR                                                                  (_) = (((_) >> 2) & 0x01)                              //col:4601
	PTE_64_PAGE_LEVEL_WRITE_THROUGH_BIT                                                    = 3                                                //col:4602
	PTE_64_PAGE_LEVEL_WRITE_THROUGH_FLAG                                                   = 0x08                                             //col:4603
	PTE_64_PAGE_LEVEL_WRITE_THROUGH_MASK                                                   = 0x01                                             //col:4604
	PTE_64_PAGE_LEVEL_WRITE_THROUGH                                                    (_) = (((_) >> 3) & 0x01)                              //col:4605
	PTE_64_PAGE_LEVEL_CACHE_DISABLE_BIT                                                    = 4                                                //col:4606
	PTE_64_PAGE_LEVEL_CACHE_DISABLE_FLAG                                                   = 0x10                                             //col:4607
	PTE_64_PAGE_LEVEL_CACHE_DISABLE_MASK                                                   = 0x01                                             //col:4608
	PTE_64_PAGE_LEVEL_CACHE_DISABLE                                                    (_) = (((_) >> 4) & 0x01)                              //col:4609
	PTE_64_ACCESSED_BIT                                                                    = 5                                                //col:4610
	PTE_64_ACCESSED_FLAG                                                                   = 0x20                                             //col:4611
	PTE_64_ACCESSED_MASK                                                                   = 0x01                                             //col:4612
	PTE_64_ACCESSED                                                                    (_) = (((_) >> 5) & 0x01)                              //col:4613
	PTE_64_DIRTY_BIT                                                                       = 6                                                //col:4614
	PTE_64_DIRTY_FLAG                                                                      = 0x40                                             //col:4615
	PTE_64_DIRTY_MASK                                                                      = 0x01                                             //col:4616
	PTE_64_DIRTY                                                                       (_) = (((_) >> 6) & 0x01)                              //col:4617
	PTE_64_PAT_BIT                                                                         = 7                                                //col:4618
	PTE_64_PAT_FLAG                                                                        = 0x80                                             //col:4619
	PTE_64_PAT_MASK                                                                        = 0x01                                             //col:4620
	PTE_64_PAT                                                                         (_) = (((_) >> 7) & 0x01)                              //col:4621
	PTE_64_GLOBAL_BIT                                                                      = 8                                                //col:4622
	PTE_64_GLOBAL_FLAG                                                                     = 0x100                                            //col:4623
	PTE_64_GLOBAL_MASK                                                                     = 0x01                                             //col:4624
	PTE_64_GLOBAL                                                                      (_) = (((_) >> 8) & 0x01)                              //col:4625
	PTE_64_IGNORED_1_BIT                                                                   = 9                                                //col:4626
	PTE_64_IGNORED_1_FLAG                                                                  = 0x600                                            //col:4627
	PTE_64_IGNORED_1_MASK                                                                  = 0x03                                             //col:4628
	PTE_64_IGNORED_1                                                                   (_) = (((_) >> 9) & 0x03)                              //col:4629
	PTE_64_RESTART_BIT                                                                     = 11                                               //col:4630
	PTE_64_RESTART_FLAG                                                                    = 0x800                                            //col:4631
	PTE_64_RESTART_MASK                                                                    = 0x01                                             //col:4632
	PTE_64_RESTART                                                                     (_) = (((_) >> 11) & 0x01)                             //col:4633
	PTE_64_PAGE_FRAME_NUMBER_BIT                                                           = 12                                               //col:4634
	PTE_64_PAGE_FRAME_NUMBER_FLAG                                                          = 0xFFFFFFFFF000                                   //col:4635
	PTE_64_PAGE_FRAME_NUMBER_MASK                                                          = 0xFFFFFFFFF                                      //col:4636
	PTE_64_PAGE_FRAME_NUMBER                                                           (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:4637
	PTE_64_IGNORED_2_BIT                                                                   = 52                                               //col:4638
	PTE_64_IGNORED_2_FLAG                                                                  = 0x7F0000000000000                                //col:4639
	PTE_64_IGNORED_2_MASK                                                                  = 0x7F                                             //col:4640
	PTE_64_IGNORED_2                                                                   (_) = (((_) >> 52) & 0x7F)                             //col:4641
	PTE_64_PROTECTION_KEY_BIT                                                              = 59                                               //col:4642
	PTE_64_PROTECTION_KEY_FLAG                                                             = 0x7800000000000000                               //col:4643
	PTE_64_PROTECTION_KEY_MASK                                                             = 0x0F                                             //col:4644
	PTE_64_PROTECTION_KEY                                                              (_) = (((_) >> 59) & 0x0F)                             //col:4645
	PTE_64_EXECUTE_DISABLE_BIT                                                             = 63                                               //col:4646
	PTE_64_EXECUTE_DISABLE_FLAG                                                            = 0x8000000000000000                               //col:4647
	PTE_64_EXECUTE_DISABLE_MASK                                                            = 0x01                                             //col:4648
	PTE_64_EXECUTE_DISABLE                                                             (_) = (((_) >> 63) & 0x01)                             //col:4649
	PT_ENTRY_64_PRESENT_BIT                                                                = 0                                                //col:4650
	PT_ENTRY_64_PRESENT_FLAG                                                               = 0x01                                             //col:4651
	PT_ENTRY_64_PRESENT_MASK                                                               = 0x01                                             //col:4652
	PT_ENTRY_64_PRESENT                                                                (_) = (((_) >> 0) & 0x01)                              //col:4653
	PT_ENTRY_64_WRITE_BIT                                                                  = 1                                                //col:4654
	PT_ENTRY_64_WRITE_FLAG                                                                 = 0x02                                             //col:4655
	PT_ENTRY_64_WRITE_MASK                                                                 = 0x01                                             //col:4656
	PT_ENTRY_64_WRITE                                                                  (_) = (((_) >> 1) & 0x01)                              //col:4657
	PT_ENTRY_64_SUPERVISOR_BIT                                                             = 2                                                //col:4658
	PT_ENTRY_64_SUPERVISOR_FLAG                                                            = 0x04                                             //col:4659
	PT_ENTRY_64_SUPERVISOR_MASK                                                            = 0x01                                             //col:4660
	PT_ENTRY_64_SUPERVISOR                                                             (_) = (((_) >> 2) & 0x01)                              //col:4661
	PT_ENTRY_64_PAGE_LEVEL_WRITE_THROUGH_BIT                                               = 3                                                //col:4662
	PT_ENTRY_64_PAGE_LEVEL_WRITE_THROUGH_FLAG                                              = 0x08                                             //col:4663
	PT_ENTRY_64_PAGE_LEVEL_WRITE_THROUGH_MASK                                              = 0x01                                             //col:4664
	PT_ENTRY_64_PAGE_LEVEL_WRITE_THROUGH                                               (_) = (((_) >> 3) & 0x01)                              //col:4665
	PT_ENTRY_64_PAGE_LEVEL_CACHE_DISABLE_BIT                                               = 4                                                //col:4666
	PT_ENTRY_64_PAGE_LEVEL_CACHE_DISABLE_FLAG                                              = 0x10                                             //col:4667
	PT_ENTRY_64_PAGE_LEVEL_CACHE_DISABLE_MASK                                              = 0x01                                             //col:4668
	PT_ENTRY_64_PAGE_LEVEL_CACHE_DISABLE                                               (_) = (((_) >> 4) & 0x01)                              //col:4669
	PT_ENTRY_64_ACCESSED_BIT                                                               = 5                                                //col:4670
	PT_ENTRY_64_ACCESSED_FLAG                                                              = 0x20                                             //col:4671
	PT_ENTRY_64_ACCESSED_MASK                                                              = 0x01                                             //col:4672
	PT_ENTRY_64_ACCESSED                                                               (_) = (((_) >> 5) & 0x01)                              //col:4673
	PT_ENTRY_64_DIRTY_BIT                                                                  = 6                                                //col:4674
	PT_ENTRY_64_DIRTY_FLAG                                                                 = 0x40                                             //col:4675
	PT_ENTRY_64_DIRTY_MASK                                                                 = 0x01                                             //col:4676
	PT_ENTRY_64_DIRTY                                                                  (_) = (((_) >> 6) & 0x01)                              //col:4677
	PT_ENTRY_64_LARGE_PAGE_BIT                                                             = 7                                                //col:4678
	PT_ENTRY_64_LARGE_PAGE_FLAG                                                            = 0x80                                             //col:4679
	PT_ENTRY_64_LARGE_PAGE_MASK                                                            = 0x01                                             //col:4680
	PT_ENTRY_64_LARGE_PAGE                                                             (_) = (((_) >> 7) & 0x01)                              //col:4681
	PT_ENTRY_64_GLOBAL_BIT                                                                 = 8                                                //col:4682
	PT_ENTRY_64_GLOBAL_FLAG                                                                = 0x100                                            //col:4683
	PT_ENTRY_64_GLOBAL_MASK                                                                = 0x01                                             //col:4684
	PT_ENTRY_64_GLOBAL                                                                 (_) = (((_) >> 8) & 0x01)                              //col:4685
	PT_ENTRY_64_IGNORED_1_BIT                                                              = 9                                                //col:4686
	PT_ENTRY_64_IGNORED_1_FLAG                                                             = 0x600                                            //col:4687
	PT_ENTRY_64_IGNORED_1_MASK                                                             = 0x03                                             //col:4688
	PT_ENTRY_64_IGNORED_1                                                              (_) = (((_) >> 9) & 0x03)                              //col:4689
	PT_ENTRY_64_RESTART_BIT                                                                = 11                                               //col:4690
	PT_ENTRY_64_RESTART_FLAG                                                               = 0x800                                            //col:4691
	PT_ENTRY_64_RESTART_MASK                                                               = 0x01                                             //col:4692
	PT_ENTRY_64_RESTART                                                                (_) = (((_) >> 11) & 0x01)                             //col:4693
	PT_ENTRY_64_PAGE_FRAME_NUMBER_BIT                                                      = 12                                               //col:4694
	PT_ENTRY_64_PAGE_FRAME_NUMBER_FLAG                                                     = 0xFFFFFFFFF000                                   //col:4695
	PT_ENTRY_64_PAGE_FRAME_NUMBER_MASK                                                     = 0xFFFFFFFFF                                      //col:4696
	PT_ENTRY_64_PAGE_FRAME_NUMBER                                                      (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:4697
	PT_ENTRY_64_IGNORED_2_BIT                                                              = 52                                               //col:4698
	PT_ENTRY_64_IGNORED_2_FLAG                                                             = 0x7F0000000000000                                //col:4699
	PT_ENTRY_64_IGNORED_2_MASK                                                             = 0x7F                                             //col:4700
	PT_ENTRY_64_IGNORED_2                                                              (_) = (((_) >> 52) & 0x7F)                             //col:4701
	PT_ENTRY_64_PROTECTION_KEY_BIT                                                         = 59                                               //col:4702
	PT_ENTRY_64_PROTECTION_KEY_FLAG                                                        = 0x7800000000000000                               //col:4703
	PT_ENTRY_64_PROTECTION_KEY_MASK                                                        = 0x0F                                             //col:4704
	PT_ENTRY_64_PROTECTION_KEY                                                         (_) = (((_) >> 59) & 0x0F)                             //col:4705
	PT_ENTRY_64_EXECUTE_DISABLE_BIT                                                        = 63                                               //col:4706
	PT_ENTRY_64_EXECUTE_DISABLE_FLAG                                                       = 0x8000000000000000                               //col:4707
	PT_ENTRY_64_EXECUTE_DISABLE_MASK                                                       = 0x01                                             //col:4708
	PT_ENTRY_64_EXECUTE_DISABLE                                                        (_) = (((_) >> 63) & 0x01)                             //col:4709
	PML4E_ENTRY_COUNT_64                                                                   = 0x00000200                                       //col:4710
	PDPTE_ENTRY_COUNT_64                                                                   = 0x00000200                                       //col:4711
	PDE_ENTRY_COUNT_64                                                                     = 0x00000200                                       //col:4712
	PTE_ENTRY_COUNT_64                                                                     = 0x00000200                                       //col:4713
	INVPCID_DESCRIPTOR_PCID_BIT                                                            = 0                                                //col:4714
	INVPCID_DESCRIPTOR_PCID_FLAG                                                           = 0xFFF                                            //col:4715
	INVPCID_DESCRIPTOR_PCID_MASK                                                           = 0xFFF                                            //col:4716
	INVPCID_DESCRIPTOR_PCID                                                            (_) = (((_) >> 0) & 0xFFF)                             //col:4717
	INVPCID_DESCRIPTOR_RESERVED1_BIT                                                       = 12                                               //col:4718
	INVPCID_DESCRIPTOR_RESERVED1_FLAG                                                      = 0xFFFFFFFFFFFFF000                               //col:4719
	INVPCID_DESCRIPTOR_RESERVED1_MASK                                                      = 0xFFFFFFFFFFFFF                                  //col:4720
	INVPCID_DESCRIPTOR_RESERVED1                                                       (_) = (((_) >> 12) & 0xFFFFFFFFFFFFF)                  //col:4721
	INVPCID_DESCRIPTOR_LINEAR_ADDRESS_BIT                                                  = 64                                               //col:4722
	INVPCID_DESCRIPTOR_LINEAR_ADDRESS_FLAG                                                 = 0xFFFFFFFFFFFFFFFF0000000000000000               //col:4723
	INVPCID_DESCRIPTOR_LINEAR_ADDRESS_MASK                                                 = 0xFFFFFFFFFFFFFFFF                               //col:4724
	INVPCID_DESCRIPTOR_LINEAR_ADDRESS                                                  (_) = (((_) >> 64) & 0xFFFFFFFFFFFFFFFF)               //col:4725
	SEGMENT_ACCESS_RIGHTS_TYPE_BIT                                                         = 8                                                //col:4726
	SEGMENT_ACCESS_RIGHTS_TYPE_FLAG                                                        = 0xF00                                            //col:4727
	SEGMENT_ACCESS_RIGHTS_TYPE_MASK                                                        = 0x0F                                             //col:4728
	SEGMENT_ACCESS_RIGHTS_TYPE                                                         (_) = (((_) >> 8) & 0x0F)                              //col:4729
	SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_TYPE_BIT                                              = 12                                               //col:4730
	SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_TYPE_FLAG                                             = 0x1000                                           //col:4731
	SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_TYPE_MASK                                             = 0x01                                             //col:4732
	SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_TYPE                                              (_) = (((_) >> 12) & 0x01)                             //col:4733
	SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_PRIVILEGE_LEVEL_BIT                                   = 13                                               //col:4734
	SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_PRIVILEGE_LEVEL_FLAG                                  = 0x6000                                           //col:4735
	SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_PRIVILEGE_LEVEL_MASK                                  = 0x03                                             //col:4736
	SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_PRIVILEGE_LEVEL                                   (_) = (((_) >> 13) & 0x03)                             //col:4737
	SEGMENT_ACCESS_RIGHTS_PRESENT_BIT                                                      = 15                                               //col:4738
	SEGMENT_ACCESS_RIGHTS_PRESENT_FLAG                                                     = 0x8000                                           //col:4739
	SEGMENT_ACCESS_RIGHTS_PRESENT_MASK                                                     = 0x01                                             //col:4740
	SEGMENT_ACCESS_RIGHTS_PRESENT                                                      (_) = (((_) >> 15) & 0x01)                             //col:4741
	SEGMENT_ACCESS_RIGHTS_SYSTEM_BIT                                                       = 20                                               //col:4742
	SEGMENT_ACCESS_RIGHTS_SYSTEM_FLAG                                                      = 0x100000                                         //col:4743
	SEGMENT_ACCESS_RIGHTS_SYSTEM_MASK                                                      = 0x01                                             //col:4744
	SEGMENT_ACCESS_RIGHTS_SYSTEM                                                       (_) = (((_) >> 20) & 0x01)                             //col:4745
	SEGMENT_ACCESS_RIGHTS_LONG_MODE_BIT                                                    = 21                                               //col:4746
	SEGMENT_ACCESS_RIGHTS_LONG_MODE_FLAG                                                   = 0x200000                                         //col:4747
	SEGMENT_ACCESS_RIGHTS_LONG_MODE_MASK                                                   = 0x01                                             //col:4748
	SEGMENT_ACCESS_RIGHTS_LONG_MODE                                                    (_) = (((_) >> 21) & 0x01)                             //col:4749
	SEGMENT_ACCESS_RIGHTS_DEFAULT_BIG_BIT                                                  = 22                                               //col:4750
	SEGMENT_ACCESS_RIGHTS_DEFAULT_BIG_FLAG                                                 = 0x400000                                         //col:4751
	SEGMENT_ACCESS_RIGHTS_DEFAULT_BIG_MASK                                                 = 0x01                                             //col:4752
	SEGMENT_ACCESS_RIGHTS_DEFAULT_BIG                                                  (_) = (((_) >> 22) & 0x01)                             //col:4753
	SEGMENT_ACCESS_RIGHTS_GRANULARITY_BIT                                                  = 23                                               //col:4754
	SEGMENT_ACCESS_RIGHTS_GRANULARITY_FLAG                                                 = 0x800000                                         //col:4755
	SEGMENT_ACCESS_RIGHTS_GRANULARITY_MASK                                                 = 0x01                                             //col:4756
	SEGMENT_ACCESS_RIGHTS_GRANULARITY                                                  (_) = (((_) >> 23) & 0x01)                             //col:4757
	SEGMENT__BASE_ADDRESS_MIDDLE_BIT                                                       = 0                                                //col:4758
	SEGMENT__BASE_ADDRESS_MIDDLE_FLAG                                                      = 0xFF                                             //col:4759
	SEGMENT__BASE_ADDRESS_MIDDLE_MASK                                                      = 0xFF                                             //col:4760
	SEGMENT__BASE_ADDRESS_MIDDLE                                                       (_) = (((_) >> 0) & 0xFF)                              //col:4761
	SEGMENT__TYPE_BIT                                                                      = 8                                                //col:4762
	SEGMENT__TYPE_FLAG                                                                     = 0xF00                                            //col:4763
	SEGMENT__TYPE_MASK                                                                     = 0x0F                                             //col:4764
	SEGMENT__TYPE                                                                      (_) = (((_) >> 8) & 0x0F)                              //col:4765
	SEGMENT__DESCRIPTOR_TYPE_BIT                                                           = 12                                               //col:4766
	SEGMENT__DESCRIPTOR_TYPE_FLAG                                                          = 0x1000                                           //col:4767
	SEGMENT__DESCRIPTOR_TYPE_MASK                                                          = 0x01                                             //col:4768
	SEGMENT__DESCRIPTOR_TYPE                                                           (_) = (((_) >> 12) & 0x01)                             //col:4769
	SEGMENT__DESCRIPTOR_PRIVILEGE_LEVEL_BIT                                                = 13                                               //col:4770
	SEGMENT__DESCRIPTOR_PRIVILEGE_LEVEL_FLAG                                               = 0x6000                                           //col:4771
	SEGMENT__DESCRIPTOR_PRIVILEGE_LEVEL_MASK                                               = 0x03                                             //col:4772
	SEGMENT__DESCRIPTOR_PRIVILEGE_LEVEL                                                (_) = (((_) >> 13) & 0x03)                             //col:4773
	SEGMENT__PRESENT_BIT                                                                   = 15                                               //col:4774
	SEGMENT__PRESENT_FLAG                                                                  = 0x8000                                           //col:4775
	SEGMENT__PRESENT_MASK                                                                  = 0x01                                             //col:4776
	SEGMENT__PRESENT                                                                   (_) = (((_) >> 15) & 0x01)                             //col:4777
	SEGMENT__SEGMENT_LIMIT_HIGH_BIT                                                        = 16                                               //col:4778
	SEGMENT__SEGMENT_LIMIT_HIGH_FLAG                                                       = 0xF0000                                          //col:4779
	SEGMENT__SEGMENT_LIMIT_HIGH_MASK                                                       = 0x0F                                             //col:4780
	SEGMENT__SEGMENT_LIMIT_HIGH                                                        (_) = (((_) >> 16) & 0x0F)                             //col:4781
	SEGMENT__SYSTEM_BIT                                                                    = 20                                               //col:4782
	SEGMENT__SYSTEM_FLAG                                                                   = 0x100000                                         //col:4783
	SEGMENT__SYSTEM_MASK                                                                   = 0x01                                             //col:4784
	SEGMENT__SYSTEM                                                                    (_) = (((_) >> 20) & 0x01)                             //col:4785
	SEGMENT__LONG_MODE_BIT                                                                 = 21                                               //col:4786
	SEGMENT__LONG_MODE_FLAG                                                                = 0x200000                                         //col:4787
	SEGMENT__LONG_MODE_MASK                                                                = 0x01                                             //col:4788
	SEGMENT__LONG_MODE                                                                 (_) = (((_) >> 21) & 0x01)                             //col:4789
	SEGMENT__DEFAULT_BIG_BIT                                                               = 22                                               //col:4790
	SEGMENT__DEFAULT_BIG_FLAG                                                              = 0x400000                                         //col:4791
	SEGMENT__DEFAULT_BIG_MASK                                                              = 0x01                                             //col:4792
	SEGMENT__DEFAULT_BIG                                                               (_) = (((_) >> 22) & 0x01)                             //col:4793
	SEGMENT__GRANULARITY_BIT                                                               = 23                                               //col:4794
	SEGMENT__GRANULARITY_FLAG                                                              = 0x800000                                         //col:4795
	SEGMENT__GRANULARITY_MASK                                                              = 0x01                                             //col:4796
	SEGMENT__GRANULARITY                                                               (_) = (((_) >> 23) & 0x01)                             //col:4797
	SEGMENT__BASE_ADDRESS_HIGH_BIT                                                         = 24                                               //col:4798
	SEGMENT__BASE_ADDRESS_HIGH_FLAG                                                        = 0xFF000000                                       //col:4799
	SEGMENT__BASE_ADDRESS_HIGH_MASK                                                        = 0xFF                                             //col:4800
	SEGMENT__BASE_ADDRESS_HIGH                                                         (_) = (((_) >> 24) & 0xFF)                             //col:4801
	SEGMENT__BASE_ADDRESS_MIDDLE_BIT                                                       = 0                                                //col:4802
	SEGMENT__BASE_ADDRESS_MIDDLE_FLAG                                                      = 0xFF                                             //col:4803
	SEGMENT__BASE_ADDRESS_MIDDLE_MASK                                                      = 0xFF                                             //col:4804
	SEGMENT__BASE_ADDRESS_MIDDLE                                                       (_) = (((_) >> 0) & 0xFF)                              //col:4805
	SEGMENT__TYPE_BIT                                                                      = 8                                                //col:4806
	SEGMENT__TYPE_FLAG                                                                     = 0xF00                                            //col:4807
	SEGMENT__TYPE_MASK                                                                     = 0x0F                                             //col:4808
	SEGMENT__TYPE                                                                      (_) = (((_) >> 8) & 0x0F)                              //col:4809
	SEGMENT__DESCRIPTOR_TYPE_BIT                                                           = 12                                               //col:4810
	SEGMENT__DESCRIPTOR_TYPE_FLAG                                                          = 0x1000                                           //col:4811
	SEGMENT__DESCRIPTOR_TYPE_MASK                                                          = 0x01                                             //col:4812
	SEGMENT__DESCRIPTOR_TYPE                                                           (_) = (((_) >> 12) & 0x01)                             //col:4813
	SEGMENT__DESCRIPTOR_PRIVILEGE_LEVEL_BIT                                                = 13                                               //col:4814
	SEGMENT__DESCRIPTOR_PRIVILEGE_LEVEL_FLAG                                               = 0x6000                                           //col:4815
	SEGMENT__DESCRIPTOR_PRIVILEGE_LEVEL_MASK                                               = 0x03                                             //col:4816
	SEGMENT__DESCRIPTOR_PRIVILEGE_LEVEL                                                (_) = (((_) >> 13) & 0x03)                             //col:4817
	SEGMENT__PRESENT_BIT                                                                   = 15                                               //col:4818
	SEGMENT__PRESENT_FLAG                                                                  = 0x8000                                           //col:4819
	SEGMENT__PRESENT_MASK                                                                  = 0x01                                             //col:4820
	SEGMENT__PRESENT                                                                   (_) = (((_) >> 15) & 0x01)                             //col:4821
	SEGMENT__SEGMENT_LIMIT_HIGH_BIT                                                        = 16                                               //col:4822
	SEGMENT__SEGMENT_LIMIT_HIGH_FLAG                                                       = 0xF0000                                          //col:4823
	SEGMENT__SEGMENT_LIMIT_HIGH_MASK                                                       = 0x0F                                             //col:4824
	SEGMENT__SEGMENT_LIMIT_HIGH                                                        (_) = (((_) >> 16) & 0x0F)                             //col:4825
	SEGMENT__SYSTEM_BIT                                                                    = 20                                               //col:4826
	SEGMENT__SYSTEM_FLAG                                                                   = 0x100000                                         //col:4827
	SEGMENT__SYSTEM_MASK                                                                   = 0x01                                             //col:4828
	SEGMENT__SYSTEM                                                                    (_) = (((_) >> 20) & 0x01)                             //col:4829
	SEGMENT__LONG_MODE_BIT                                                                 = 21                                               //col:4830
	SEGMENT__LONG_MODE_FLAG                                                                = 0x200000                                         //col:4831
	SEGMENT__LONG_MODE_MASK                                                                = 0x01                                             //col:4832
	SEGMENT__LONG_MODE                                                                 (_) = (((_) >> 21) & 0x01)                             //col:4833
	SEGMENT__DEFAULT_BIG_BIT                                                               = 22                                               //col:4834
	SEGMENT__DEFAULT_BIG_FLAG                                                              = 0x400000                                         //col:4835
	SEGMENT__DEFAULT_BIG_MASK                                                              = 0x01                                             //col:4836
	SEGMENT__DEFAULT_BIG                                                               (_) = (((_) >> 22) & 0x01)                             //col:4837
	SEGMENT__GRANULARITY_BIT                                                               = 23                                               //col:4838
	SEGMENT__GRANULARITY_FLAG                                                              = 0x800000                                         //col:4839
	SEGMENT__GRANULARITY_MASK                                                              = 0x01                                             //col:4840
	SEGMENT__GRANULARITY                                                               (_) = (((_) >> 23) & 0x01)                             //col:4841
	SEGMENT__BASE_ADDRESS_HIGH_BIT                                                         = 24                                               //col:4842
	SEGMENT__BASE_ADDRESS_HIGH_FLAG                                                        = 0xFF000000                                       //col:4843
	SEGMENT__BASE_ADDRESS_HIGH_MASK                                                        = 0xFF                                             //col:4844
	SEGMENT__BASE_ADDRESS_HIGH                                                         (_) = (((_) >> 24) & 0xFF)                             //col:4845
	SEGMENT__INTERRUPT_STACK_TABLE_BIT                                                     = 0                                                //col:4846
	SEGMENT__INTERRUPT_STACK_TABLE_FLAG                                                    = 0x07                                             //col:4847
	SEGMENT__INTERRUPT_STACK_TABLE_MASK                                                    = 0x07                                             //col:4848
	SEGMENT__INTERRUPT_STACK_TABLE                                                     (_) = (((_) >> 0) & 0x07)                              //col:4849
	SEGMENT__MUST_BE_ZERO_0_BIT                                                            = 3                                                //col:4850
	SEGMENT__MUST_BE_ZERO_0_FLAG                                                           = 0xF8                                             //col:4851
	SEGMENT__MUST_BE_ZERO_0_MASK                                                           = 0x1F                                             //col:4852
	SEGMENT__MUST_BE_ZERO_0                                                            (_) = (((_) >> 3) & 0x1F)                              //col:4853
	SEGMENT__TYPE_BIT                                                                      = 8                                                //col:4854
	SEGMENT__TYPE_FLAG                                                                     = 0xF00                                            //col:4855
	SEGMENT__TYPE_MASK                                                                     = 0x0F                                             //col:4856
	SEGMENT__TYPE                                                                      (_) = (((_) >> 8) & 0x0F)                              //col:4857
	SEGMENT__MUST_BE_ZERO_1_BIT                                                            = 12                                               //col:4858
	SEGMENT__MUST_BE_ZERO_1_FLAG                                                           = 0x1000                                           //col:4859
	SEGMENT__MUST_BE_ZERO_1_MASK                                                           = 0x01                                             //col:4860
	SEGMENT__MUST_BE_ZERO_1                                                            (_) = (((_) >> 12) & 0x01)                             //col:4861
	SEGMENT__DESCRIPTOR_PRIVILEGE_LEVEL_BIT                                                = 13                                               //col:4862
	SEGMENT__DESCRIPTOR_PRIVILEGE_LEVEL_FLAG                                               = 0x6000                                           //col:4863
	SEGMENT__DESCRIPTOR_PRIVILEGE_LEVEL_MASK                                               = 0x03                                             //col:4864
	SEGMENT__DESCRIPTOR_PRIVILEGE_LEVEL                                                (_) = (((_) >> 13) & 0x03)                             //col:4865
	SEGMENT__PRESENT_BIT                                                                   = 15                                               //col:4866
	SEGMENT__PRESENT_FLAG                                                                  = 0x8000                                           //col:4867
	SEGMENT__PRESENT_MASK                                                                  = 0x01                                             //col:4868
	SEGMENT__PRESENT                                                                   (_) = (((_) >> 15) & 0x01)                             //col:4869
	SEGMENT__OFFSET_MIDDLE_BIT                                                             = 16                                               //col:4870
	SEGMENT__OFFSET_MIDDLE_FLAG                                                            = 0xFFFF0000                                       //col:4871
	SEGMENT__OFFSET_MIDDLE_MASK                                                            = 0xFFFF                                           //col:4872
	SEGMENT__OFFSET_MIDDLE                                                             (_) = (((_) >> 16) & 0xFFFF)                           //col:4873
	SEGMENT_DESCRIPTOR_TYPE_SYSTEM                                                         = 0x00000000                                       //col:4874
	SEGMENT_DESCRIPTOR_TYPE_CODE_OR_DATA                                                   = 0x00000001                                       //col:4875
	SEGMENT_DESCRIPTOR_TYPE_DATA_READ_ONLY                                                 = 0x00000000                                       //col:4876
	SEGMENT_DESCRIPTOR_TYPE_DATA_READ_ONLY_ACCESSED                                        = 0x00000001                                       //col:4877
	SEGMENT_DESCRIPTOR_TYPE_DATA_READ_WRITE                                                = 0x00000002                                       //col:4878
	SEGMENT_DESCRIPTOR_TYPE_DATA_READ_WRITE_ACCESSED                                       = 0x00000003                                       //col:4879
	SEGMENT_DESCRIPTOR_TYPE_DATA_READ_ONLY_EXPAND_DOWN                                     = 0x00000004                                       //col:4880
	SEGMENT_DESCRIPTOR_TYPE_DATA_READ_ONLY_EXPAND_DOWN_ACCESSED                            = 0x00000005                                       //col:4881
	SEGMENT_DESCRIPTOR_TYPE_DATA_READ_WRITE_EXPAND_DOWN                                    = 0x00000006                                       //col:4882
	SEGMENT_DESCRIPTOR_TYPE_DATA_READ_WRITE_EXPAND_DOWN_ACCESSED                           = 0x00000007                                       //col:4883
	SEGMENT_DESCRIPTOR_TYPE_CODE_EXECUTE_ONLY                                              = 0x00000008                                       //col:4884
	SEGMENT_DESCRIPTOR_TYPE_CODE_EXECUTE_ONLY_ACCESSED                                     = 0x00000009                                       //col:4885
	SEGMENT_DESCRIPTOR_TYPE_CODE_EXECUTE_READ                                              = 0x0000000A                                       //col:4886
	SEGMENT_DESCRIPTOR_TYPE_CODE_EXECUTE_READ_ACCESSED                                     = 0x0000000B                                       //col:4887
	SEGMENT_DESCRIPTOR_TYPE_CODE_EXECUTE_ONLY_CONFORMING                                   = 0x0000000C                                       //col:4888
	SEGMENT_DESCRIPTOR_TYPE_CODE_EXECUTE_ONLY_CONFORMING_ACCESSED                          = 0x0000000D                                       //col:4889
	SEGMENT_DESCRIPTOR_TYPE_CODE_EXECUTE_READ_CONFORMING                                   = 0x0000000E                                       //col:4890
	SEGMENT_DESCRIPTOR_TYPE_CODE_EXECUTE_READ_CONFORMING_ACCESSED                          = 0x0000000F                                       //col:4891
	SEGMENT_DESCRIPTOR_TYPE_RESERVED_1                                                     = 0x00000000                                       //col:4892
	SEGMENT_DESCRIPTOR_TYPE_TSS_16_AVAILABLE                                               = 0x00000001                                       //col:4893
	SEGMENT_DESCRIPTOR_TYPE_LDT                                                            = 0x00000002                                       //col:4894
	SEGMENT_DESCRIPTOR_TYPE_TSS_16_BUSY                                                    = 0x00000003                                       //col:4895
	SEGMENT_DESCRIPTOR_TYPE_CALL_GATE_16                                                   = 0x00000004                                       //col:4896
	SEGMENT_DESCRIPTOR_TYPE_TASK_GATE                                                      = 0x00000005                                       //col:4897
	SEGMENT_DESCRIPTOR_TYPE_INTERRUPT_GATE_16                                              = 0x00000006                                       //col:4898
	SEGMENT_DESCRIPTOR_TYPE_TRAP_GATE_16                                                   = 0x00000007                                       //col:4899
	SEGMENT_DESCRIPTOR_TYPE_RESERVED_2                                                     = 0x00000008                                       //col:4900
	SEGMENT_DESCRIPTOR_TYPE_TSS_AVAILABLE                                                  = 0x00000009                                       //col:4901
	SEGMENT_DESCRIPTOR_TYPE_RESERVED_3                                                     = 0x0000000A                                       //col:4902
	SEGMENT_DESCRIPTOR_TYPE_TSS_BUSY                                                       = 0x0000000B                                       //col:4903
	SEGMENT_DESCRIPTOR_TYPE_CALL_GATE                                                      = 0x0000000C                                       //col:4904
	SEGMENT_DESCRIPTOR_TYPE_RESERVED_4                                                     = 0x0000000D                                       //col:4905
	SEGMENT_DESCRIPTOR_TYPE_INTERRUPT_GATE                                                 = 0x0000000E                                       //col:4906
	SEGMENT_DESCRIPTOR_TYPE_TRAP_GATE                                                      = 0x0000000F                                       //col:4907
	SEGMENT_SELECTOR_REQUEST_PRIVILEGE_LEVEL_BIT                                           = 0                                                //col:4908
	SEGMENT_SELECTOR_REQUEST_PRIVILEGE_LEVEL_FLAG                                          = 0x03                                             //col:4909
	SEGMENT_SELECTOR_REQUEST_PRIVILEGE_LEVEL_MASK                                          = 0x03                                             //col:4910
	SEGMENT_SELECTOR_REQUEST_PRIVILEGE_LEVEL                                           (_) = (((_) >> 0) & 0x03)                              //col:4911
	SEGMENT_SELECTOR_TABLE_BIT                                                             = 2                                                //col:4912
	SEGMENT_SELECTOR_TABLE_FLAG                                                            = 0x04                                             //col:4913
	SEGMENT_SELECTOR_TABLE_MASK                                                            = 0x01                                             //col:4914
	SEGMENT_SELECTOR_TABLE                                                             (_) = (((_) >> 2) & 0x01)                              //col:4915
	SEGMENT_SELECTOR_INDEX_BIT                                                             = 3                                                //col:4916
	SEGMENT_SELECTOR_INDEX_FLAG                                                            = 0xFFF8                                           //col:4917
	SEGMENT_SELECTOR_INDEX_MASK                                                            = 0x1FFF                                           //col:4918
	SEGMENT_SELECTOR_INDEX                                                             (_) = (((_) >> 3) & 0x1FFF)                            //col:4919
	VMX_EXIT_REASON_EXCEPTION_OR_NMI                                                       = 0x00000000                                       //col:4920
	VMX_EXIT_REASON_EXTERNAL_INTERRUPT                                                     = 0x00000001                                       //col:4921
	VMX_EXIT_REASON_TRIPLE_FAULT                                                           = 0x00000002                                       //col:4922
	VMX_EXIT_REASON_INIT_SIGNAL                                                            = 0x00000003                                       //col:4923
	VMX_EXIT_REASON_STARTUP_IPI                                                            = 0x00000004                                       //col:4924
	VMX_EXIT_REASON_IO_SMI                                                                 = 0x00000005                                       //col:4925
	VMX_EXIT_REASON_SMI                                                                    = 0x00000006                                       //col:4926
	VMX_EXIT_REASON_INTERRUPT_WINDOW                                                       = 0x00000007                                       //col:4927
	VMX_EXIT_REASON_NMI_WINDOW                                                             = 0x00000008                                       //col:4928
	VMX_EXIT_REASON_TASK_SWITCH                                                            = 0x00000009                                       //col:4929
	VMX_EXIT_REASON_EXECUTE_CPUID                                                          = 0x0000000A                                       //col:4930
	VMX_EXIT_REASON_EXECUTE_GETSEC                                                         = 0x0000000B                                       //col:4931
	VMX_EXIT_REASON_EXECUTE_HLT                                                            = 0x0000000C                                       //col:4932
	VMX_EXIT_REASON_EXECUTE_INVD                                                           = 0x0000000D                                       //col:4933
	VMX_EXIT_REASON_EXECUTE_INVLPG                                                         = 0x0000000E                                       //col:4934
	VMX_EXIT_REASON_EXECUTE_RDPMC                                                          = 0x0000000F                                       //col:4935
	VMX_EXIT_REASON_EXECUTE_RDTSC                                                          = 0x00000010                                       //col:4936
	VMX_EXIT_REASON_EXECUTE_RSM_IN_SMM                                                     = 0x00000011                                       //col:4937
	VMX_EXIT_REASON_EXECUTE_VMCALL                                                         = 0x00000012                                       //col:4938
	VMX_EXIT_REASON_EXECUTE_VMCLEAR                                                        = 0x00000013                                       //col:4939
	VMX_EXIT_REASON_EXECUTE_VMLAUNCH                                                       = 0x00000014                                       //col:4940
	VMX_EXIT_REASON_EXECUTE_VMPTRLD                                                        = 0x00000015                                       //col:4941
	VMX_EXIT_REASON_EXECUTE_VMPTRST                                                        = 0x00000016                                       //col:4942
	VMX_EXIT_REASON_EXECUTE_VMREAD                                                         = 0x00000017                                       //col:4943
	VMX_EXIT_REASON_EXECUTE_VMRESUME                                                       = 0x00000018                                       //col:4944
	VMX_EXIT_REASON_EXECUTE_VMWRITE                                                        = 0x00000019                                       //col:4945
	VMX_EXIT_REASON_EXECUTE_VMXOFF                                                         = 0x0000001A                                       //col:4946
	VMX_EXIT_REASON_EXECUTE_VMXON                                                          = 0x0000001B                                       //col:4947
	VMX_EXIT_REASON_MOV_CR                                                                 = 0x0000001C                                       //col:4948
	VMX_EXIT_REASON_MOV_DR                                                                 = 0x0000001D                                       //col:4949
	VMX_EXIT_REASON_EXECUTE_IO_INSTRUCTION                                                 = 0x0000001E                                       //col:4950
	VMX_EXIT_REASON_EXECUTE_RDMSR                                                          = 0x0000001F                                       //col:4951
	VMX_EXIT_REASON_EXECUTE_WRMSR                                                          = 0x00000020                                       //col:4952
	VMX_EXIT_REASON_ERROR_INVALID_GUEST_STATE                                              = 0x00000021                                       //col:4953
	VMX_EXIT_REASON_ERROR_MSR_LOAD                                                         = 0x00000022                                       //col:4954
	VMX_EXIT_REASON_EXECUTE_MWAIT                                                          = 0x00000024                                       //col:4955
	VMX_EXIT_REASON_MONITOR_TRAP_FLAG                                                      = 0x00000025                                       //col:4956
	VMX_EXIT_REASON_EXECUTE_MONITOR                                                        = 0x00000027                                       //col:4957
	VMX_EXIT_REASON_EXECUTE_PAUSE                                                          = 0x00000028                                       //col:4958
	VMX_EXIT_REASON_ERROR_MACHINE_CHECK                                                    = 0x00000029                                       //col:4959
	VMX_EXIT_REASON_TPR_BELOW_THRESHOLD                                                    = 0x0000002B                                       //col:4960
	VMX_EXIT_REASON_APIC_ACCESS                                                            = 0x0000002C                                       //col:4961
	VMX_EXIT_REASON_VIRTUALIZED_EOI                                                        = 0x0000002D                                       //col:4962
	VMX_EXIT_REASON_GDTR_IDTR_ACCESS                                                       = 0x0000002E                                       //col:4963
	VMX_EXIT_REASON_LDTR_TR_ACCESS                                                         = 0x0000002F                                       //col:4964
	VMX_EXIT_REASON_EPT_VIOLATION                                                          = 0x00000030                                       //col:4965
	VMX_EXIT_REASON_EPT_MISCONFIGURATION                                                   = 0x00000031                                       //col:4966
	VMX_EXIT_REASON_EXECUTE_INVEPT                                                         = 0x00000032                                       //col:4967
	VMX_EXIT_REASON_EXECUTE_RDTSCP                                                         = 0x00000033                                       //col:4968
	VMX_EXIT_REASON_VMX_PREEMPTION_TIMER_EXPIRED                                           = 0x00000034                                       //col:4969
	VMX_EXIT_REASON_EXECUTE_INVVPID                                                        = 0x00000035                                       //col:4970
	VMX_EXIT_REASON_EXECUTE_WBINVD                                                         = 0x00000036                                       //col:4971
	VMX_EXIT_REASON_EXECUTE_XSETBV                                                         = 0x00000037                                       //col:4972
	VMX_EXIT_REASON_APIC_WRITE                                                             = 0x00000038                                       //col:4973
	VMX_EXIT_REASON_EXECUTE_RDRAND                                                         = 0x00000039                                       //col:4974
	VMX_EXIT_REASON_EXECUTE_INVPCID                                                        = 0x0000003A                                       //col:4975
	VMX_EXIT_REASON_EXECUTE_VMFUNC                                                         = 0x0000003B                                       //col:4976
	VMX_EXIT_REASON_EXECUTE_ENCLS                                                          = 0x0000003C                                       //col:4977
	VMX_EXIT_REASON_EXECUTE_RDSEED                                                         = 0x0000003D                                       //col:4978
	VMX_EXIT_REASON_PAGE_MODIFICATION_LOG_FULL                                             = 0x0000003E                                       //col:4979
	VMX_EXIT_REASON_EXECUTE_XSAVES                                                         = 0x0000003F                                       //col:4980
	VMX_EXIT_REASON_EXECUTE_XRSTORS                                                        = 0x00000040                                       //col:4981
	VMX_ERROR_VMCALL_IN_VMX_ROOT_OPERATION                                                 = 0x00000001                                       //col:4982
	VMX_ERROR_VMCLEAR_INVALID_PHYSICAL_ADDRESS                                             = 0x00000002                                       //col:4983
	VMX_ERROR_VMCLEAR_INVALID_VMXON_POINTER                                                = 0x00000003                                       //col:4984
	VMX_ERROR_VMLAUCH_NON_CLEAR_VMCS                                                       = 0x00000004                                       //col:4985
	VMX_ERROR_VMRESUME_NON_LAUNCHED_VMCS                                                   = 0x00000005                                       //col:4986
	VMX_ERROR_VMRESUME_AFTER_VMXOFF                                                        = 0x00000006                                       //col:4987
	VMX_ERROR_VMENTRY_INVALID_CONTROL_FIELDS                                               = 0x00000007                                       //col:4988
	VMX_ERROR_VMENTRY_INVALID_HOST_STATE                                                   = 0x00000008                                       //col:4989
	VMX_ERROR_VMPTRLD_INVALID_PHYSICAL_ADDRESS                                             = 0x00000009                                       //col:4990
	VMX_ERROR_VMPTRLD_VMXON_POINTER                                                        = 0x0000000A                                       //col:4991
	VMX_ERROR_VMPTRLD_INCORRECT_VMCS_REVISION_ID                                           = 0x0000000B                                       //col:4992
	VMX_ERROR_VMREAD_VMWRITE_INVALID_COMPONENT                                             = 0x0000000C                                       //col:4993
	VMX_ERROR_VMWRITE_READONLY_COMPONENT                                                   = 0x0000000D                                       //col:4994
	VMX_ERROR_VMXON_IN_VMX_ROOT_OP                                                         = 0x0000000F                                       //col:4995
	VMX_ERROR_VMENTRY_INVALID_VMCS_EXECUTIVE_POINTER                                       = 0x00000010                                       //col:4996
	VMX_ERROR_VMENTRY_NON_LAUNCHED_EXECUTIVE_VMCS                                          = 0x00000011                                       //col:4997
	VMX_ERROR_VMENTRY_EXECUTIVE_VMCS_PTR                                                   = 0x00000012                                       //col:4998
	VMX_ERROR_VMCALL_NON_CLEAR_VMCS                                                        = 0x00000013                                       //col:4999
	VMX_ERROR_VMCALL_INVALID_VMEXIT_FIELDS                                                 = 0x00000014                                       //col:5000
	VMX_ERROR_VMCALL_INVALID_MSEG_REVISION_ID                                              = 0x00000016                                       //col:5001
	VMX_ERROR_VMXOFF_DUAL_MONITOR                                                          = 0x00000017                                       //col:5002
	VMX_ERROR_VMCALL_INVALID_SMM_MONITOR                                                   = 0x00000018                                       //col:5003
	VMX_ERROR_VMENTRY_INVALID_VM_EXECUTION_CONTROL                                         = 0x00000019                                       //col:5004
	VMX_ERROR_VMENTRY_MOV_SS                                                               = 0x0000001A                                       //col:5005
	VMX_ERROR_INVEPT_INVVPID_INVALID_OPERAND                                               = 0x0000001C                                       //col:5006
	VMX_EXIT_QUALIFICATION_DEBUG_EXCEPTION_BREAKPOINT_CONDITION_BIT                        = 0                                                //col:5007
	VMX_EXIT_QUALIFICATION_DEBUG_EXCEPTION_BREAKPOINT_CONDITION_FLAG                       = 0x0F                                             //col:5008
	VMX_EXIT_QUALIFICATION_DEBUG_EXCEPTION_BREAKPOINT_CONDITION_MASK                       = 0x0F                                             //col:5009
	VMX_EXIT_QUALIFICATION_DEBUG_EXCEPTION_BREAKPOINT_CONDITION                        (_) = (((_) >> 0) & 0x0F)                              //col:5010
	VMX_EXIT_QUALIFICATION_DEBUG_EXCEPTION_DEBUG_REGISTER_ACCESS_DETECTED_BIT              = 13                                               //col:5011
	VMX_EXIT_QUALIFICATION_DEBUG_EXCEPTION_DEBUG_REGISTER_ACCESS_DETECTED_FLAG             = 0x2000                                           //col:5012
	VMX_EXIT_QUALIFICATION_DEBUG_EXCEPTION_DEBUG_REGISTER_ACCESS_DETECTED_MASK             = 0x01                                             //col:5013
	VMX_EXIT_QUALIFICATION_DEBUG_EXCEPTION_DEBUG_REGISTER_ACCESS_DETECTED              (_) = (((_) >> 13) & 0x01)                             //col:5014
	VMX_EXIT_QUALIFICATION_DEBUG_EXCEPTION_SINGLE_INSTRUCTION_BIT                          = 14                                               //col:5015
	VMX_EXIT_QUALIFICATION_DEBUG_EXCEPTION_SINGLE_INSTRUCTION_FLAG                         = 0x4000                                           //col:5016
	VMX_EXIT_QUALIFICATION_DEBUG_EXCEPTION_SINGLE_INSTRUCTION_MASK                         = 0x01                                             //col:5017
	VMX_EXIT_QUALIFICATION_DEBUG_EXCEPTION_SINGLE_INSTRUCTION                          (_) = (((_) >> 14) & 0x01)                             //col:5018
	VMX_EXIT_QUALIFICATION_TASK_SWITCH_SELECTOR_BIT                                        = 0                                                //col:5019
	VMX_EXIT_QUALIFICATION_TASK_SWITCH_SELECTOR_FLAG                                       = 0xFFFF                                           //col:5020
	VMX_EXIT_QUALIFICATION_TASK_SWITCH_SELECTOR_MASK                                       = 0xFFFF                                           //col:5021
	VMX_EXIT_QUALIFICATION_TASK_SWITCH_SELECTOR                                        (_) = (((_) >> 0) & 0xFFFF)                            //col:5022
	VMX_EXIT_QUALIFICATION_TASK_SWITCH_SOURCE_BIT                                          = 30                                               //col:5023
	VMX_EXIT_QUALIFICATION_TASK_SWITCH_SOURCE_FLAG                                         = 0xC0000000                                       //col:5024
	VMX_EXIT_QUALIFICATION_TASK_SWITCH_SOURCE_MASK                                         = 0x03                                             //col:5025
	VMX_EXIT_QUALIFICATION_TASK_SWITCH_SOURCE                                          (_) = (((_) >> 30) & 0x03)                             //col:5026
	VMX_EXIT_QUALIFICATION_TYPE_CALL_INSTRUCTION                                           = 0x00000000                                       //col:5027
	VMX_EXIT_QUALIFICATION_TYPE_IRET_INSTRUCTION                                           = 0x00000001                                       //col:5028
	VMX_EXIT_QUALIFICATION_TYPE_JMP_INSTRUCTION                                            = 0x00000002                                       //col:5029
	VMX_EXIT_QUALIFICATION_TYPE_TASK_GATE_IN_IDT                                           = 0x00000003                                       //col:5030
	VMX_EXIT_QUALIFICATION_MOV_CR_CONTROL_REGISTER_BIT                                     = 0                                                //col:5031
	VMX_EXIT_QUALIFICATION_MOV_CR_CONTROL_REGISTER_FLAG                                    = 0x0F                                             //col:5032
	VMX_EXIT_QUALIFICATION_MOV_CR_CONTROL_REGISTER_MASK                                    = 0x0F                                             //col:5033
	VMX_EXIT_QUALIFICATION_MOV_CR_CONTROL_REGISTER                                     (_) = (((_) >> 0) & 0x0F)                              //col:5034
	VMX_EXIT_QUALIFICATION_REGISTER_CR0                                                    = 0x00000000                                       //col:5035
	VMX_EXIT_QUALIFICATION_REGISTER_CR2                                                    = 0x00000002                                       //col:5036
	VMX_EXIT_QUALIFICATION_REGISTER_CR3                                                    = 0x00000003                                       //col:5037
	VMX_EXIT_QUALIFICATION_REGISTER_CR4                                                    = 0x00000004                                       //col:5038
	VMX_EXIT_QUALIFICATION_REGISTER_CR8                                                    = 0x00000008                                       //col:5039
	VMX_EXIT_QUALIFICATION_MOV_CR_ACCESS_TYPE_BIT                                          = 4                                                //col:5040
	VMX_EXIT_QUALIFICATION_MOV_CR_ACCESS_TYPE_FLAG                                         = 0x30                                             //col:5041
	VMX_EXIT_QUALIFICATION_MOV_CR_ACCESS_TYPE_MASK                                         = 0x03                                             //col:5042
	VMX_EXIT_QUALIFICATION_MOV_CR_ACCESS_TYPE                                          (_) = (((_) >> 4) & 0x03)                              //col:5043
	VMX_EXIT_QUALIFICATION_ACCESS_MOV_TO_CR                                                = 0x00000000                                       //col:5044
	VMX_EXIT_QUALIFICATION_ACCESS_MOV_FROM_CR                                              = 0x00000001                                       //col:5045
	VMX_EXIT_QUALIFICATION_ACCESS_CLTS                                                     = 0x00000002                                       //col:5046
	VMX_EXIT_QUALIFICATION_ACCESS_LMSW                                                     = 0x00000003                                       //col:5047
	VMX_EXIT_QUALIFICATION_MOV_CR_LMSW_OPERAND_TYPE_BIT                                    = 6                                                //col:5048
	VMX_EXIT_QUALIFICATION_MOV_CR_LMSW_OPERAND_TYPE_FLAG                                   = 0x40                                             //col:5049
	VMX_EXIT_QUALIFICATION_MOV_CR_LMSW_OPERAND_TYPE_MASK                                   = 0x01                                             //col:5050
	VMX_EXIT_QUALIFICATION_MOV_CR_LMSW_OPERAND_TYPE                                    (_) = (((_) >> 6) & 0x01)                              //col:5051
	VMX_EXIT_QUALIFICATION_LMSW_OP_REGISTER                                                = 0x00000000                                       //col:5052
	VMX_EXIT_QUALIFICATION_LMSW_OP_MEMORY                                                  = 0x00000001                                       //col:5053
	VMX_EXIT_QUALIFICATION_MOV_CR_GENERAL_PURPOSE_REGISTER_BIT                             = 8                                                //col:5054
	VMX_EXIT_QUALIFICATION_MOV_CR_GENERAL_PURPOSE_REGISTER_FLAG                            = 0xF00                                            //col:5055
	VMX_EXIT_QUALIFICATION_MOV_CR_GENERAL_PURPOSE_REGISTER_MASK                            = 0x0F                                             //col:5056
	VMX_EXIT_QUALIFICATION_MOV_CR_GENERAL_PURPOSE_REGISTER                             (_) = (((_) >> 8) & 0x0F)                              //col:5057
	VMX_EXIT_QUALIFICATION_GENREG_RAX                                                      = 0x00000000                                       //col:5058
	VMX_EXIT_QUALIFICATION_GENREG_RCX                                                      = 0x00000001                                       //col:5059
	VMX_EXIT_QUALIFICATION_GENREG_RDX                                                      = 0x00000002                                       //col:5060
	VMX_EXIT_QUALIFICATION_GENREG_RBX                                                      = 0x00000003                                       //col:5061
	VMX_EXIT_QUALIFICATION_GENREG_RSP                                                      = 0x00000004                                       //col:5062
	VMX_EXIT_QUALIFICATION_GENREG_RBP                                                      = 0x00000005                                       //col:5063
	VMX_EXIT_QUALIFICATION_GENREG_RSI                                                      = 0x00000006                                       //col:5064
	VMX_EXIT_QUALIFICATION_GENREG_RDI                                                      = 0x00000007                                       //col:5065
	VMX_EXIT_QUALIFICATION_GENREG_R8                                                       = 0x00000008                                       //col:5066
	VMX_EXIT_QUALIFICATION_GENREG_R9                                                       = 0x00000009                                       //col:5067
	VMX_EXIT_QUALIFICATION_GENREG_R10                                                      = 0x0000000A                                       //col:5068
	VMX_EXIT_QUALIFICATION_GENREG_R11                                                      = 0x0000000B                                       //col:5069
	VMX_EXIT_QUALIFICATION_GENREG_R12                                                      = 0x0000000C                                       //col:5070
	VMX_EXIT_QUALIFICATION_GENREG_R13                                                      = 0x0000000D                                       //col:5071
	VMX_EXIT_QUALIFICATION_GENREG_R14                                                      = 0x0000000E                                       //col:5072
	VMX_EXIT_QUALIFICATION_GENREG_R15                                                      = 0x0000000F                                       //col:5073
	VMX_EXIT_QUALIFICATION_MOV_CR_LMSW_SOURCE_DATA_BIT                                     = 16                                               //col:5074
	VMX_EXIT_QUALIFICATION_MOV_CR_LMSW_SOURCE_DATA_FLAG                                    = 0xFFFF0000                                       //col:5075
	VMX_EXIT_QUALIFICATION_MOV_CR_LMSW_SOURCE_DATA_MASK                                    = 0xFFFF                                           //col:5076
	VMX_EXIT_QUALIFICATION_MOV_CR_LMSW_SOURCE_DATA                                     (_) = (((_) >> 16) & 0xFFFF)                           //col:5077
	VMX_EXIT_QUALIFICATION_MOV_DR_DEBUG_REGISTER_BIT                                       = 0                                                //col:5078
	VMX_EXIT_QUALIFICATION_MOV_DR_DEBUG_REGISTER_FLAG                                      = 0x07                                             //col:5079
	VMX_EXIT_QUALIFICATION_MOV_DR_DEBUG_REGISTER_MASK                                      = 0x07                                             //col:5080
	VMX_EXIT_QUALIFICATION_MOV_DR_DEBUG_REGISTER                                       (_) = (((_) >> 0) & 0x07)                              //col:5081
	VMX_EXIT_QUALIFICATION_REGISTER_DR0                                                    = 0x00000000                                       //col:5082
	VMX_EXIT_QUALIFICATION_REGISTER_DR1                                                    = 0x00000001                                       //col:5083
	VMX_EXIT_QUALIFICATION_REGISTER_DR2                                                    = 0x00000002                                       //col:5084
	VMX_EXIT_QUALIFICATION_REGISTER_DR3                                                    = 0x00000003                                       //col:5085
	VMX_EXIT_QUALIFICATION_REGISTER_DR6                                                    = 0x00000006                                       //col:5086
	VMX_EXIT_QUALIFICATION_REGISTER_DR7                                                    = 0x00000007                                       //col:5087
	VMX_EXIT_QUALIFICATION_MOV_DR_DIRECTION_OF_ACCESS_BIT                                  = 4                                                //col:5088
	VMX_EXIT_QUALIFICATION_MOV_DR_DIRECTION_OF_ACCESS_FLAG                                 = 0x10                                             //col:5089
	VMX_EXIT_QUALIFICATION_MOV_DR_DIRECTION_OF_ACCESS_MASK                                 = 0x01                                             //col:5090
	VMX_EXIT_QUALIFICATION_MOV_DR_DIRECTION_OF_ACCESS                                  (_) = (((_) >> 4) & 0x01)                              //col:5091
	VMX_EXIT_QUALIFICATION_DIRECTION_MOV_TO_DR                                             = 0x00000000                                       //col:5092
	VMX_EXIT_QUALIFICATION_DIRECTION_MOV_FROM_DR                                           = 0x00000001                                       //col:5093
	VMX_EXIT_QUALIFICATION_MOV_DR_GENERAL_PURPOSE_REGISTER_BIT                             = 8                                                //col:5094
	VMX_EXIT_QUALIFICATION_MOV_DR_GENERAL_PURPOSE_REGISTER_FLAG                            = 0xF00                                            //col:5095
	VMX_EXIT_QUALIFICATION_MOV_DR_GENERAL_PURPOSE_REGISTER_MASK                            = 0x0F                                             //col:5096
	VMX_EXIT_QUALIFICATION_MOV_DR_GENERAL_PURPOSE_REGISTER                             (_) = (((_) >> 8) & 0x0F)                              //col:5097
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_SIZE_OF_ACCESS_BIT                               = 0                                                //col:5098
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_SIZE_OF_ACCESS_FLAG                              = 0x07                                             //col:5099
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_SIZE_OF_ACCESS_MASK                              = 0x07                                             //col:5100
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_SIZE_OF_ACCESS                               (_) = (((_) >> 0) & 0x07)                              //col:5101
	VMX_EXIT_QUALIFICATION_WIDTH_1_BYTE                                                    = 0x00000000                                       //col:5102
	VMX_EXIT_QUALIFICATION_WIDTH_2_BYTE                                                    = 0x00000001                                       //col:5103
	VMX_EXIT_QUALIFICATION_WIDTH_4_BYTE                                                    = 0x00000003                                       //col:5104
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_DIRECTION_OF_ACCESS_BIT                          = 3                                                //col:5105
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_DIRECTION_OF_ACCESS_FLAG                         = 0x08                                             //col:5106
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_DIRECTION_OF_ACCESS_MASK                         = 0x01                                             //col:5107
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_DIRECTION_OF_ACCESS                          (_) = (((_) >> 3) & 0x01)                              //col:5108
	VMX_EXIT_QUALIFICATION_DIRECTION_OUT                                                   = 0x00000000                                       //col:5109
	VMX_EXIT_QUALIFICATION_DIRECTION_IN                                                    = 0x00000001                                       //col:5110
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_STRING_INSTRUCTION_BIT                           = 4                                                //col:5111
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_STRING_INSTRUCTION_FLAG                          = 0x10                                             //col:5112
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_STRING_INSTRUCTION_MASK                          = 0x01                                             //col:5113
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_STRING_INSTRUCTION                           (_) = (((_) >> 4) & 0x01)                              //col:5114
	VMX_EXIT_QUALIFICATION_IS_STRING_NOT_STRING                                            = 0x00000000                                       //col:5115
	VMX_EXIT_QUALIFICATION_IS_STRING_STRING                                                = 0x00000001                                       //col:5116
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_REP_PREFIXED_BIT                                 = 5                                                //col:5117
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_REP_PREFIXED_FLAG                                = 0x20                                             //col:5118
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_REP_PREFIXED_MASK                                = 0x01                                             //col:5119
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_REP_PREFIXED                                 (_) = (((_) >> 5) & 0x01)                              //col:5120
	VMX_EXIT_QUALIFICATION_IS_REP_NOT_REP                                                  = 0x00000000                                       //col:5121
	VMX_EXIT_QUALIFICATION_IS_REP_REP                                                      = 0x00000001                                       //col:5122
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_OPERAND_ENCODING_BIT                             = 6                                                //col:5123
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_OPERAND_ENCODING_FLAG                            = 0x40                                             //col:5124
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_OPERAND_ENCODING_MASK                            = 0x01                                             //col:5125
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_OPERAND_ENCODING                             (_) = (((_) >> 6) & 0x01)                              //col:5126
	VMX_EXIT_QUALIFICATION_ENCODING_DX                                                     = 0x00000000                                       //col:5127
	VMX_EXIT_QUALIFICATION_ENCODING_IMMEDIATE                                              = 0x00000001                                       //col:5128
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_PORT_NUMBER_BIT                                  = 16                                               //col:5129
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_PORT_NUMBER_FLAG                                 = 0xFFFF0000                                       //col:5130
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_PORT_NUMBER_MASK                                 = 0xFFFF                                           //col:5131
	VMX_EXIT_QUALIFICATION_IO_INSTRUCTION_PORT_NUMBER                                  (_) = (((_) >> 16) & 0xFFFF)                           //col:5132
	VMX_EXIT_QUALIFICATION_APIC_ACCESS_PAGE_OFFSET_BIT                                     = 0                                                //col:5133
	VMX_EXIT_QUALIFICATION_APIC_ACCESS_PAGE_OFFSET_FLAG                                    = 0xFFF                                            //col:5134
	VMX_EXIT_QUALIFICATION_APIC_ACCESS_PAGE_OFFSET_MASK                                    = 0xFFF                                            //col:5135
	VMX_EXIT_QUALIFICATION_APIC_ACCESS_PAGE_OFFSET                                     (_) = (((_) >> 0) & 0xFFF)                             //col:5136
	VMX_EXIT_QUALIFICATION_APIC_ACCESS_ACCESS_TYPE_BIT                                     = 12                                               //col:5137
	VMX_EXIT_QUALIFICATION_APIC_ACCESS_ACCESS_TYPE_FLAG                                    = 0xF000                                           //col:5138
	VMX_EXIT_QUALIFICATION_APIC_ACCESS_ACCESS_TYPE_MASK                                    = 0x0F                                             //col:5139
	VMX_EXIT_QUALIFICATION_APIC_ACCESS_ACCESS_TYPE                                     (_) = (((_) >> 12) & 0x0F)                             //col:5140
	VMX_EXIT_QUALIFICATION_TYPE_LINEAR_READ                                                = 0x00000000                                       //col:5141
	VMX_EXIT_QUALIFICATION_TYPE_LINEAR_WRITE                                               = 0x00000001                                       //col:5142
	VMX_EXIT_QUALIFICATION_TYPE_LINEAR_INSTRUCTION_FETCH                                   = 0x00000002                                       //col:5143
	VMX_EXIT_QUALIFICATION_TYPE_LINEAR_EVENT_DELIVERY                                      = 0x00000003                                       //col:5144
	VMX_EXIT_QUALIFICATION_TYPE_PHYSICAL_EVENT_DELIVERY                                    = 0x0000000A                                       //col:5145
	VMX_EXIT_QUALIFICATION_TYPE_PHYSICAL_INSTRUCTION_FETCH                                 = 0x0000000F                                       //col:5146
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_READ_ACCESS_BIT                                   = 0                                                //col:5147
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_READ_ACCESS_FLAG                                  = 0x01                                             //col:5148
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_READ_ACCESS_MASK                                  = 0x01                                             //col:5149
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_READ_ACCESS                                   (_) = (((_) >> 0) & 0x01)                              //col:5150
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_WRITE_ACCESS_BIT                                  = 1                                                //col:5151
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_WRITE_ACCESS_FLAG                                 = 0x02                                             //col:5152
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_WRITE_ACCESS_MASK                                 = 0x01                                             //col:5153
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_WRITE_ACCESS                                  (_) = (((_) >> 1) & 0x01)                              //col:5154
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EXECUTE_ACCESS_BIT                                = 2                                                //col:5155
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EXECUTE_ACCESS_FLAG                               = 0x04                                             //col:5156
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EXECUTE_ACCESS_MASK                               = 0x01                                             //col:5157
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EXECUTE_ACCESS                                (_) = (((_) >> 2) & 0x01)                              //col:5158
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_READABLE_BIT                                  = 3                                                //col:5159
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_READABLE_FLAG                                 = 0x08                                             //col:5160
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_READABLE_MASK                                 = 0x01                                             //col:5161
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_READABLE                                  (_) = (((_) >> 3) & 0x01)                              //col:5162
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_WRITEABLE_BIT                                 = 4                                                //col:5163
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_WRITEABLE_FLAG                                = 0x10                                             //col:5164
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_WRITEABLE_MASK                                = 0x01                                             //col:5165
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_WRITEABLE                                 (_) = (((_) >> 4) & 0x01)                              //col:5166
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_EXECUTABLE_BIT                                = 5                                                //col:5167
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_EXECUTABLE_FLAG                               = 0x20                                             //col:5168
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_EXECUTABLE_MASK                               = 0x01                                             //col:5169
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_EXECUTABLE                                (_) = (((_) >> 5) & 0x01)                              //col:5170
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_EXECUTABLE_FOR_USER_MODE_BIT                  = 6                                                //col:5171
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_EXECUTABLE_FOR_USER_MODE_FLAG                 = 0x40                                             //col:5172
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_EXECUTABLE_FOR_USER_MODE_MASK                 = 0x01                                             //col:5173
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EPT_EXECUTABLE_FOR_USER_MODE                  (_) = (((_) >> 6) & 0x01)                              //col:5174
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_VALID_GUEST_LINEAR_ADDRESS_BIT                    = 7                                                //col:5175
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_VALID_GUEST_LINEAR_ADDRESS_FLAG                   = 0x80                                             //col:5176
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_VALID_GUEST_LINEAR_ADDRESS_MASK                   = 0x01                                             //col:5177
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_VALID_GUEST_LINEAR_ADDRESS                    (_) = (((_) >> 7) & 0x01)                              //col:5178
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_CAUSED_BY_TRANSLATION_BIT                         = 8                                                //col:5179
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_CAUSED_BY_TRANSLATION_FLAG                        = 0x100                                            //col:5180
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_CAUSED_BY_TRANSLATION_MASK                        = 0x01                                             //col:5181
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_CAUSED_BY_TRANSLATION                         (_) = (((_) >> 8) & 0x01)                              //col:5182
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_USER_MODE_LINEAR_ADDRESS_BIT                      = 9                                                //col:5183
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_USER_MODE_LINEAR_ADDRESS_FLAG                     = 0x200                                            //col:5184
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_USER_MODE_LINEAR_ADDRESS_MASK                     = 0x01                                             //col:5185
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_USER_MODE_LINEAR_ADDRESS                      (_) = (((_) >> 9) & 0x01)                              //col:5186
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_READABLE_WRITABLE_PAGE_BIT                        = 10                                               //col:5187
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_READABLE_WRITABLE_PAGE_FLAG                       = 0x400                                            //col:5188
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_READABLE_WRITABLE_PAGE_MASK                       = 0x01                                             //col:5189
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_READABLE_WRITABLE_PAGE                        (_) = (((_) >> 10) & 0x01)                             //col:5190
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EXECUTE_DISABLE_PAGE_BIT                          = 11                                               //col:5191
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EXECUTE_DISABLE_PAGE_FLAG                         = 0x800                                            //col:5192
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EXECUTE_DISABLE_PAGE_MASK                         = 0x01                                             //col:5193
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_EXECUTE_DISABLE_PAGE                          (_) = (((_) >> 11) & 0x01)                             //col:5194
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_NMI_UNBLOCKING_BIT                                = 12                                               //col:5195
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_NMI_UNBLOCKING_FLAG                               = 0x1000                                           //col:5196
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_NMI_UNBLOCKING_MASK                               = 0x01                                             //col:5197
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_NMI_UNBLOCKING                                (_) = (((_) >> 12) & 0x01)                             //col:5198
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_SHADOW_STACK_ACCESS_BIT                           = 13                                               //col:5199
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_SHADOW_STACK_ACCESS_FLAG                          = 0x2000                                           //col:5200
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_SHADOW_STACK_ACCESS_MASK                          = 0x01                                             //col:5201
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_SHADOW_STACK_ACCESS                           (_) = (((_) >> 13) & 0x01)                             //col:5202
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_SUPERVISOR_SHADOW_STACK_BIT                       = 14                                               //col:5203
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_SUPERVISOR_SHADOW_STACK_FLAG                      = 0x4000                                           //col:5204
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_SUPERVISOR_SHADOW_STACK_MASK                      = 0x01                                             //col:5205
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_SUPERVISOR_SHADOW_STACK                       (_) = (((_) >> 14) & 0x01)                             //col:5206
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_GUEST_PAGING_VERIFICATION_BIT                     = 15                                               //col:5207
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_GUEST_PAGING_VERIFICATION_FLAG                    = 0x8000                                           //col:5208
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_GUEST_PAGING_VERIFICATION_MASK                    = 0x01                                             //col:5209
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_GUEST_PAGING_VERIFICATION                     (_) = (((_) >> 15) & 0x01)                             //col:5210
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_ASYNCHRONOUS_TO_INSTRUCTION_BIT                   = 16                                               //col:5211
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_ASYNCHRONOUS_TO_INSTRUCTION_FLAG                  = 0x10000                                          //col:5212
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_ASYNCHRONOUS_TO_INSTRUCTION_MASK                  = 0x01                                             //col:5213
	VMX_EXIT_QUALIFICATION_EPT_VIOLATION_ASYNCHRONOUS_TO_INSTRUCTION                   (_) = (((_) >> 16) & 0x01)                             //col:5214
	VMX_VMEXIT_INSTRUCTION_INFO_INS_OUTS_ADDRESS_SIZE_BIT                                  = 7                                                //col:5215
	VMX_VMEXIT_INSTRUCTION_INFO_INS_OUTS_ADDRESS_SIZE_FLAG                                 = 0x380                                            //col:5216
	VMX_VMEXIT_INSTRUCTION_INFO_INS_OUTS_ADDRESS_SIZE_MASK                                 = 0x07                                             //col:5217
	VMX_VMEXIT_INSTRUCTION_INFO_INS_OUTS_ADDRESS_SIZE                                  (_) = (((_) >> 7) & 0x07)                              //col:5218
	VMX_VMEXIT_INSTRUCTION_INFO_INS_OUTS_SEGMENT_REGISTER_BIT                              = 15                                               //col:5219
	VMX_VMEXIT_INSTRUCTION_INFO_INS_OUTS_SEGMENT_REGISTER_FLAG                             = 0x38000                                          //col:5220
	VMX_VMEXIT_INSTRUCTION_INFO_INS_OUTS_SEGMENT_REGISTER_MASK                             = 0x07                                             //col:5221
	VMX_VMEXIT_INSTRUCTION_INFO_INS_OUTS_SEGMENT_REGISTER                              (_) = (((_) >> 15) & 0x07)                             //col:5222
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_SCALING_BIT                                     = 0                                                //col:5223
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_SCALING_FLAG                                    = 0x03                                             //col:5224
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_SCALING_MASK                                    = 0x03                                             //col:5225
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_SCALING                                     (_) = (((_) >> 0) & 0x03)                              //col:5226
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_ADDRESS_SIZE_BIT                                = 7                                                //col:5227
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_ADDRESS_SIZE_FLAG                               = 0x380                                            //col:5228
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_ADDRESS_SIZE_MASK                               = 0x07                                             //col:5229
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_ADDRESS_SIZE                                (_) = (((_) >> 7) & 0x07)                              //col:5230
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_SEGMENT_REGISTER_BIT                            = 15                                               //col:5231
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_SEGMENT_REGISTER_FLAG                           = 0x38000                                          //col:5232
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_SEGMENT_REGISTER_MASK                           = 0x07                                             //col:5233
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_SEGMENT_REGISTER                            (_) = (((_) >> 15) & 0x07)                             //col:5234
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_GENERAL_PURPOSE_REGISTER_BIT                    = 18                                               //col:5235
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_GENERAL_PURPOSE_REGISTER_FLAG                   = 0x3C0000                                         //col:5236
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_GENERAL_PURPOSE_REGISTER_MASK                   = 0x0F                                             //col:5237
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_GENERAL_PURPOSE_REGISTER                    (_) = (((_) >> 18) & 0x0F)                             //col:5238
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_GENERAL_PURPOSE_REGISTER_INVALID_BIT            = 22                                               //col:5239
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_GENERAL_PURPOSE_REGISTER_INVALID_FLAG           = 0x400000                                         //col:5240
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_GENERAL_PURPOSE_REGISTER_INVALID_MASK           = 0x01                                             //col:5241
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_GENERAL_PURPOSE_REGISTER_INVALID            (_) = (((_) >> 22) & 0x01)                             //col:5242
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_BASE_REGISTER_BIT                               = 23                                               //col:5243
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_BASE_REGISTER_FLAG                              = 0x7800000                                        //col:5244
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_BASE_REGISTER_MASK                              = 0x0F                                             //col:5245
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_BASE_REGISTER                               (_) = (((_) >> 23) & 0x0F)                             //col:5246
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_BASE_REGISTER_INVALID_BIT                       = 27                                               //col:5247
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_BASE_REGISTER_INVALID_FLAG                      = 0x8000000                                        //col:5248
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_BASE_REGISTER_INVALID_MASK                      = 0x01                                             //col:5249
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_BASE_REGISTER_INVALID                       (_) = (((_) >> 27) & 0x01)                             //col:5250
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_REGISTER_2_BIT                                  = 28                                               //col:5251
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_REGISTER_2_FLAG                                 = 0xF0000000                                       //col:5252
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_REGISTER_2_MASK                                 = 0x0F                                             //col:5253
	VMX_VMEXIT_INSTRUCTION_INFO_INVALIDATE_REGISTER_2                                  (_) = (((_) >> 28) & 0x0F)                             //col:5254
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_SCALING_BIT                               = 0                                                //col:5255
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_SCALING_FLAG                              = 0x03                                             //col:5256
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_SCALING_MASK                              = 0x03                                             //col:5257
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_SCALING                               (_) = (((_) >> 0) & 0x03)                              //col:5258
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_ADDRESS_SIZE_BIT                          = 7                                                //col:5259
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_ADDRESS_SIZE_FLAG                         = 0x380                                            //col:5260
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_ADDRESS_SIZE_MASK                         = 0x07                                             //col:5261
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_ADDRESS_SIZE                          (_) = (((_) >> 7) & 0x07)                              //col:5262
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_OPERAND_SIZE_BIT                          = 11                                               //col:5263
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_OPERAND_SIZE_FLAG                         = 0x800                                            //col:5264
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_OPERAND_SIZE_MASK                         = 0x01                                             //col:5265
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_OPERAND_SIZE                          (_) = (((_) >> 11) & 0x01)                             //col:5266
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_SEGMENT_REGISTER_BIT                      = 15                                               //col:5267
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_SEGMENT_REGISTER_FLAG                     = 0x38000                                          //col:5268
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_SEGMENT_REGISTER_MASK                     = 0x07                                             //col:5269
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_SEGMENT_REGISTER                      (_) = (((_) >> 15) & 0x07)                             //col:5270
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_GENERAL_PURPOSE_REGISTER_BIT              = 18                                               //col:5271
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_GENERAL_PURPOSE_REGISTER_FLAG             = 0x3C0000                                         //col:5272
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_GENERAL_PURPOSE_REGISTER_MASK             = 0x0F                                             //col:5273
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_GENERAL_PURPOSE_REGISTER              (_) = (((_) >> 18) & 0x0F)                             //col:5274
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_GENERAL_PURPOSE_REGISTER_INVALID_BIT      = 22                                               //col:5275
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_GENERAL_PURPOSE_REGISTER_INVALID_FLAG     = 0x400000                                         //col:5276
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_GENERAL_PURPOSE_REGISTER_INVALID_MASK     = 0x01                                             //col:5277
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_GENERAL_PURPOSE_REGISTER_INVALID      (_) = (((_) >> 22) & 0x01)                             //col:5278
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_BASE_REGISTER_BIT                         = 23                                               //col:5279
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_BASE_REGISTER_FLAG                        = 0x7800000                                        //col:5280
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_BASE_REGISTER_MASK                        = 0x0F                                             //col:5281
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_BASE_REGISTER                         (_) = (((_) >> 23) & 0x0F)                             //col:5282
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_BASE_REGISTER_INVALID_BIT                 = 27                                               //col:5283
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_BASE_REGISTER_INVALID_FLAG                = 0x8000000                                        //col:5284
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_BASE_REGISTER_INVALID_MASK                = 0x01                                             //col:5285
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_BASE_REGISTER_INVALID                 (_) = (((_) >> 27) & 0x01)                             //col:5286
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_INSTRUCTION_BIT                           = 28                                               //col:5287
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_INSTRUCTION_FLAG                          = 0x30000000                                       //col:5288
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_INSTRUCTION_MASK                          = 0x03                                             //col:5289
	VMX_VMEXIT_INSTRUCTION_INFO_GDTR_IDTR_ACCESS_INSTRUCTION                           (_) = (((_) >> 28) & 0x03)                             //col:5290
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_SCALING_BIT                                 = 0                                                //col:5291
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_SCALING_FLAG                                = 0x03                                             //col:5292
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_SCALING_MASK                                = 0x03                                             //col:5293
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_SCALING                                 (_) = (((_) >> 0) & 0x03)                              //col:5294
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_REG_1_BIT                                   = 3                                                //col:5295
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_REG_1_FLAG                                  = 0x78                                             //col:5296
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_REG_1_MASK                                  = 0x0F                                             //col:5297
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_REG_1                                   (_) = (((_) >> 3) & 0x0F)                              //col:5298
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_ADDRESS_SIZE_BIT                            = 7                                                //col:5299
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_ADDRESS_SIZE_FLAG                           = 0x380                                            //col:5300
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_ADDRESS_SIZE_MASK                           = 0x07                                             //col:5301
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_ADDRESS_SIZE                            (_) = (((_) >> 7) & 0x07)                              //col:5302
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_MEMORY_REGISTER_BIT                         = 10                                               //col:5303
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_MEMORY_REGISTER_FLAG                        = 0x400                                            //col:5304
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_MEMORY_REGISTER_MASK                        = 0x01                                             //col:5305
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_MEMORY_REGISTER                         (_) = (((_) >> 10) & 0x01)                             //col:5306
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_SEGMENT_REGISTER_BIT                        = 15                                               //col:5307
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_SEGMENT_REGISTER_FLAG                       = 0x38000                                          //col:5308
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_SEGMENT_REGISTER_MASK                       = 0x07                                             //col:5309
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_SEGMENT_REGISTER                        (_) = (((_) >> 15) & 0x07)                             //col:5310
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_GENERAL_PURPOSE_REGISTER_BIT                = 18                                               //col:5311
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_GENERAL_PURPOSE_REGISTER_FLAG               = 0x3C0000                                         //col:5312
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_GENERAL_PURPOSE_REGISTER_MASK               = 0x0F                                             //col:5313
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_GENERAL_PURPOSE_REGISTER                (_) = (((_) >> 18) & 0x0F)                             //col:5314
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_GENERAL_PURPOSE_REGISTER_INVALID_BIT        = 22                                               //col:5315
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_GENERAL_PURPOSE_REGISTER_INVALID_FLAG       = 0x400000                                         //col:5316
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_GENERAL_PURPOSE_REGISTER_INVALID_MASK       = 0x01                                             //col:5317
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_GENERAL_PURPOSE_REGISTER_INVALID        (_) = (((_) >> 22) & 0x01)                             //col:5318
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_BASE_REGISTER_BIT                           = 23                                               //col:5319
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_BASE_REGISTER_FLAG                          = 0x7800000                                        //col:5320
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_BASE_REGISTER_MASK                          = 0x0F                                             //col:5321
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_BASE_REGISTER                           (_) = (((_) >> 23) & 0x0F)                             //col:5322
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_BASE_REGISTER_INVALID_BIT                   = 27                                               //col:5323
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_BASE_REGISTER_INVALID_FLAG                  = 0x8000000                                        //col:5324
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_BASE_REGISTER_INVALID_MASK                  = 0x01                                             //col:5325
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_BASE_REGISTER_INVALID                   (_) = (((_) >> 27) & 0x01)                             //col:5326
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_INSTRUCTION_BIT                             = 28                                               //col:5327
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_INSTRUCTION_FLAG                            = 0x30000000                                       //col:5328
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_INSTRUCTION_MASK                            = 0x03                                             //col:5329
	VMX_VMEXIT_INSTRUCTION_INFO_LDTR_TR_ACCESS_INSTRUCTION                             (_) = (((_) >> 28) & 0x03)                             //col:5330
	VMX_VMEXIT_INSTRUCTION_INFO_RDRAND_RDSEED_DESTINATION_REGISTER_BIT                     = 3                                                //col:5331
	VMX_VMEXIT_INSTRUCTION_INFO_RDRAND_RDSEED_DESTINATION_REGISTER_FLAG                    = 0x78                                             //col:5332
	VMX_VMEXIT_INSTRUCTION_INFO_RDRAND_RDSEED_DESTINATION_REGISTER_MASK                    = 0x0F                                             //col:5333
	VMX_VMEXIT_INSTRUCTION_INFO_RDRAND_RDSEED_DESTINATION_REGISTER                     (_) = (((_) >> 3) & 0x0F)                              //col:5334
	VMX_VMEXIT_INSTRUCTION_INFO_RDRAND_RDSEED_OPERAND_SIZE_BIT                             = 11                                               //col:5335
	VMX_VMEXIT_INSTRUCTION_INFO_RDRAND_RDSEED_OPERAND_SIZE_FLAG                            = 0x1800                                           //col:5336
	VMX_VMEXIT_INSTRUCTION_INFO_RDRAND_RDSEED_OPERAND_SIZE_MASK                            = 0x03                                             //col:5337
	VMX_VMEXIT_INSTRUCTION_INFO_RDRAND_RDSEED_OPERAND_SIZE                             (_) = (((_) >> 11) & 0x03)                             //col:5338
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_SCALING_BIT                                 = 0                                                //col:5339
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_SCALING_FLAG                                = 0x03                                             //col:5340
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_SCALING_MASK                                = 0x03                                             //col:5341
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_SCALING                                 (_) = (((_) >> 0) & 0x03)                              //col:5342
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_ADDRESS_SIZE_BIT                            = 7                                                //col:5343
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_ADDRESS_SIZE_FLAG                           = 0x380                                            //col:5344
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_ADDRESS_SIZE_MASK                           = 0x07                                             //col:5345
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_ADDRESS_SIZE                            (_) = (((_) >> 7) & 0x07)                              //col:5346
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_SEGMENT_REGISTER_BIT                        = 15                                               //col:5347
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_SEGMENT_REGISTER_FLAG                       = 0x38000                                          //col:5348
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_SEGMENT_REGISTER_MASK                       = 0x07                                             //col:5349
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_SEGMENT_REGISTER                        (_) = (((_) >> 15) & 0x07)                             //col:5350
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_GENERAL_PURPOSE_REGISTER_BIT                = 18                                               //col:5351
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_GENERAL_PURPOSE_REGISTER_FLAG               = 0x3C0000                                         //col:5352
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_GENERAL_PURPOSE_REGISTER_MASK               = 0x0F                                             //col:5353
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_GENERAL_PURPOSE_REGISTER                (_) = (((_) >> 18) & 0x0F)                             //col:5354
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_GENERAL_PURPOSE_REGISTER_INVALID_BIT        = 22                                               //col:5355
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_GENERAL_PURPOSE_REGISTER_INVALID_FLAG       = 0x400000                                         //col:5356
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_GENERAL_PURPOSE_REGISTER_INVALID_MASK       = 0x01                                             //col:5357
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_GENERAL_PURPOSE_REGISTER_INVALID        (_) = (((_) >> 22) & 0x01)                             //col:5358
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_BASE_REGISTER_BIT                           = 23                                               //col:5359
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_BASE_REGISTER_FLAG                          = 0x7800000                                        //col:5360
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_BASE_REGISTER_MASK                          = 0x0F                                             //col:5361
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_BASE_REGISTER                           (_) = (((_) >> 23) & 0x0F)                             //col:5362
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_BASE_REGISTER_INVALID_BIT                   = 27                                               //col:5363
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_BASE_REGISTER_INVALID_FLAG                  = 0x8000000                                        //col:5364
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_BASE_REGISTER_INVALID_MASK                  = 0x01                                             //col:5365
	VMX_VMEXIT_INSTRUCTION_INFO_VMX_AND_XSAVES_BASE_REGISTER_INVALID                   (_) = (((_) >> 27) & 0x01)                             //col:5366
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_SCALING_BIT                                 = 0                                                //col:5367
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_SCALING_FLAG                                = 0x03                                             //col:5368
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_SCALING_MASK                                = 0x03                                             //col:5369
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_SCALING                                 (_) = (((_) >> 0) & 0x03)                              //col:5370
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_REGISTER_1_BIT                              = 3                                                //col:5371
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_REGISTER_1_FLAG                             = 0x78                                             //col:5372
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_REGISTER_1_MASK                             = 0x0F                                             //col:5373
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_REGISTER_1                              (_) = (((_) >> 3) & 0x0F)                              //col:5374
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_ADDRESS_SIZE_BIT                            = 7                                                //col:5375
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_ADDRESS_SIZE_FLAG                           = 0x380                                            //col:5376
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_ADDRESS_SIZE_MASK                           = 0x07                                             //col:5377
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_ADDRESS_SIZE                            (_) = (((_) >> 7) & 0x07)                              //col:5378
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_MEMORY_REGISTER_BIT                         = 10                                               //col:5379
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_MEMORY_REGISTER_FLAG                        = 0x400                                            //col:5380
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_MEMORY_REGISTER_MASK                        = 0x01                                             //col:5381
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_MEMORY_REGISTER                         (_) = (((_) >> 10) & 0x01)                             //col:5382
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_SEGMENT_REGISTER_BIT                        = 15                                               //col:5383
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_SEGMENT_REGISTER_FLAG                       = 0x38000                                          //col:5384
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_SEGMENT_REGISTER_MASK                       = 0x07                                             //col:5385
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_SEGMENT_REGISTER                        (_) = (((_) >> 15) & 0x07)                             //col:5386
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_GENERAL_PURPOSE_REGISTER_BIT                = 18                                               //col:5387
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_GENERAL_PURPOSE_REGISTER_FLAG               = 0x3C0000                                         //col:5388
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_GENERAL_PURPOSE_REGISTER_MASK               = 0x0F                                             //col:5389
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_GENERAL_PURPOSE_REGISTER                (_) = (((_) >> 18) & 0x0F)                             //col:5390
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_GENERAL_PURPOSE_REGISTER_INVALID_BIT        = 22                                               //col:5391
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_GENERAL_PURPOSE_REGISTER_INVALID_FLAG       = 0x400000                                         //col:5392
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_GENERAL_PURPOSE_REGISTER_INVALID_MASK       = 0x01                                             //col:5393
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_GENERAL_PURPOSE_REGISTER_INVALID        (_) = (((_) >> 22) & 0x01)                             //col:5394
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_BASE_REGISTER_BIT                           = 23                                               //col:5395
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_BASE_REGISTER_FLAG                          = 0x7800000                                        //col:5396
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_BASE_REGISTER_MASK                          = 0x0F                                             //col:5397
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_BASE_REGISTER                           (_) = (((_) >> 23) & 0x0F)                             //col:5398
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_BASE_REGISTER_INVALID_BIT                   = 27                                               //col:5399
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_BASE_REGISTER_INVALID_FLAG                  = 0x8000000                                        //col:5400
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_BASE_REGISTER_INVALID_MASK                  = 0x01                                             //col:5401
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_BASE_REGISTER_INVALID                   (_) = (((_) >> 27) & 0x01)                             //col:5402
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_REGISTER_2_BIT                              = 28                                               //col:5403
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_REGISTER_2_FLAG                             = 0xF0000000                                       //col:5404
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_REGISTER_2_MASK                             = 0x0F                                             //col:5405
	VMX_VMEXIT_INSTRUCTION_INFO_VMREAD_VMWRITE_REGISTER_2                              (_) = (((_) >> 28) & 0x0F)                             //col:5406
	VMX_SEGMENT_ACCESS_RIGHTS_TYPE_BIT                                                     = 0                                                //col:5407
	VMX_SEGMENT_ACCESS_RIGHTS_TYPE_FLAG                                                    = 0x0F                                             //col:5408
	VMX_SEGMENT_ACCESS_RIGHTS_TYPE_MASK                                                    = 0x0F                                             //col:5409
	VMX_SEGMENT_ACCESS_RIGHTS_TYPE                                                     (_) = (((_) >> 0) & 0x0F)                              //col:5410
	VMX_SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_TYPE_BIT                                          = 4                                                //col:5411
	VMX_SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_TYPE_FLAG                                         = 0x10                                             //col:5412
	VMX_SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_TYPE_MASK                                         = 0x01                                             //col:5413
	VMX_SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_TYPE                                          (_) = (((_) >> 4) & 0x01)                              //col:5414
	VMX_SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_PRIVILEGE_LEVEL_BIT                               = 5                                                //col:5415
	VMX_SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_PRIVILEGE_LEVEL_FLAG                              = 0x60                                             //col:5416
	VMX_SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_PRIVILEGE_LEVEL_MASK                              = 0x03                                             //col:5417
	VMX_SEGMENT_ACCESS_RIGHTS_DESCRIPTOR_PRIVILEGE_LEVEL                               (_) = (((_) >> 5) & 0x03)                              //col:5418
	VMX_SEGMENT_ACCESS_RIGHTS_PRESENT_BIT                                                  = 7                                                //col:5419
	VMX_SEGMENT_ACCESS_RIGHTS_PRESENT_FLAG                                                 = 0x80                                             //col:5420
	VMX_SEGMENT_ACCESS_RIGHTS_PRESENT_MASK                                                 = 0x01                                             //col:5421
	VMX_SEGMENT_ACCESS_RIGHTS_PRESENT                                                  (_) = (((_) >> 7) & 0x01)                              //col:5422
	VMX_SEGMENT_ACCESS_RIGHTS_AVAILABLE_BIT_BIT                                            = 12                                               //col:5423
	VMX_SEGMENT_ACCESS_RIGHTS_AVAILABLE_BIT_FLAG                                           = 0x1000                                           //col:5424
	VMX_SEGMENT_ACCESS_RIGHTS_AVAILABLE_BIT_MASK                                           = 0x01                                             //col:5425
	VMX_SEGMENT_ACCESS_RIGHTS_AVAILABLE_BIT                                            (_) = (((_) >> 12) & 0x01)                             //col:5426
	VMX_SEGMENT_ACCESS_RIGHTS_LONG_MODE_BIT                                                = 13                                               //col:5427
	VMX_SEGMENT_ACCESS_RIGHTS_LONG_MODE_FLAG                                               = 0x2000                                           //col:5428
	VMX_SEGMENT_ACCESS_RIGHTS_LONG_MODE_MASK                                               = 0x01                                             //col:5429
	VMX_SEGMENT_ACCESS_RIGHTS_LONG_MODE                                                (_) = (((_) >> 13) & 0x01)                             //col:5430
	VMX_SEGMENT_ACCESS_RIGHTS_DEFAULT_BIG_BIT                                              = 14                                               //col:5431
	VMX_SEGMENT_ACCESS_RIGHTS_DEFAULT_BIG_FLAG                                             = 0x4000                                           //col:5432
	VMX_SEGMENT_ACCESS_RIGHTS_DEFAULT_BIG_MASK                                             = 0x01                                             //col:5433
	VMX_SEGMENT_ACCESS_RIGHTS_DEFAULT_BIG                                              (_) = (((_) >> 14) & 0x01)                             //col:5434
	VMX_SEGMENT_ACCESS_RIGHTS_GRANULARITY_BIT                                              = 15                                               //col:5435
	VMX_SEGMENT_ACCESS_RIGHTS_GRANULARITY_FLAG                                             = 0x8000                                           //col:5436
	VMX_SEGMENT_ACCESS_RIGHTS_GRANULARITY_MASK                                             = 0x01                                             //col:5437
	VMX_SEGMENT_ACCESS_RIGHTS_GRANULARITY                                              (_) = (((_) >> 15) & 0x01)                             //col:5438
	VMX_SEGMENT_ACCESS_RIGHTS_UNUSABLE_BIT                                                 = 16                                               //col:5439
	VMX_SEGMENT_ACCESS_RIGHTS_UNUSABLE_FLAG                                                = 0x10000                                          //col:5440
	VMX_SEGMENT_ACCESS_RIGHTS_UNUSABLE_MASK                                                = 0x01                                             //col:5441
	VMX_SEGMENT_ACCESS_RIGHTS_UNUSABLE                                                 (_) = (((_) >> 16) & 0x01)                             //col:5442
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_STI_BIT                                         = 0                                                //col:5443
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_STI_FLAG                                        = 0x01                                             //col:5444
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_STI_MASK                                        = 0x01                                             //col:5445
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_STI                                         (_) = (((_) >> 0) & 0x01)                              //col:5446
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_MOV_SS_BIT                                      = 1                                                //col:5447
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_MOV_SS_FLAG                                     = 0x02                                             //col:5448
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_MOV_SS_MASK                                     = 0x01                                             //col:5449
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_MOV_SS                                      (_) = (((_) >> 1) & 0x01)                              //col:5450
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_SMI_BIT                                         = 2                                                //col:5451
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_SMI_FLAG                                        = 0x04                                             //col:5452
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_SMI_MASK                                        = 0x01                                             //col:5453
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_SMI                                         (_) = (((_) >> 2) & 0x01)                              //col:5454
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_NMI_BIT                                         = 3                                                //col:5455
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_NMI_FLAG                                        = 0x08                                             //col:5456
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_NMI_MASK                                        = 0x01                                             //col:5457
	VMX_INTERRUPTIBILITY_STATE_BLOCKING_BY_NMI                                         (_) = (((_) >> 3) & 0x01)                              //col:5458
	VMX_INTERRUPTIBILITY_STATE_ENCLAVE_INTERRUPTION_BIT                                    = 4                                                //col:5459
	VMX_INTERRUPTIBILITY_STATE_ENCLAVE_INTERRUPTION_FLAG                                   = 0x10                                             //col:5460
	VMX_INTERRUPTIBILITY_STATE_ENCLAVE_INTERRUPTION_MASK                                   = 0x01                                             //col:5461
	VMX_INTERRUPTIBILITY_STATE_ENCLAVE_INTERRUPTION                                    (_) = (((_) >> 4) & 0x01)                              //col:5462
	VMX_PENDING_DEBUG_EXCEPTIONS_B0_BIT                                                    = 0                                                //col:5463
	VMX_PENDING_DEBUG_EXCEPTIONS_B0_FLAG                                                   = 0x01                                             //col:5464
	VMX_PENDING_DEBUG_EXCEPTIONS_B0_MASK                                                   = 0x01                                             //col:5465
	VMX_PENDING_DEBUG_EXCEPTIONS_B0                                                    (_) = (((_) >> 0) & 0x01)                              //col:5466
	VMX_PENDING_DEBUG_EXCEPTIONS_B1_BIT                                                    = 1                                                //col:5467
	VMX_PENDING_DEBUG_EXCEPTIONS_B1_FLAG                                                   = 0x02                                             //col:5468
	VMX_PENDING_DEBUG_EXCEPTIONS_B1_MASK                                                   = 0x01                                             //col:5469
	VMX_PENDING_DEBUG_EXCEPTIONS_B1                                                    (_) = (((_) >> 1) & 0x01)                              //col:5470
	VMX_PENDING_DEBUG_EXCEPTIONS_B2_BIT                                                    = 2                                                //col:5471
	VMX_PENDING_DEBUG_EXCEPTIONS_B2_FLAG                                                   = 0x04                                             //col:5472
	VMX_PENDING_DEBUG_EXCEPTIONS_B2_MASK                                                   = 0x01                                             //col:5473
	VMX_PENDING_DEBUG_EXCEPTIONS_B2                                                    (_) = (((_) >> 2) & 0x01)                              //col:5474
	VMX_PENDING_DEBUG_EXCEPTIONS_B3_BIT                                                    = 3                                                //col:5475
	VMX_PENDING_DEBUG_EXCEPTIONS_B3_FLAG                                                   = 0x08                                             //col:5476
	VMX_PENDING_DEBUG_EXCEPTIONS_B3_MASK                                                   = 0x01                                             //col:5477
	VMX_PENDING_DEBUG_EXCEPTIONS_B3                                                    (_) = (((_) >> 3) & 0x01)                              //col:5478
	VMX_PENDING_DEBUG_EXCEPTIONS_ENABLED_BREAKPOINT_BIT                                    = 12                                               //col:5479
	VMX_PENDING_DEBUG_EXCEPTIONS_ENABLED_BREAKPOINT_FLAG                                   = 0x1000                                           //col:5480
	VMX_PENDING_DEBUG_EXCEPTIONS_ENABLED_BREAKPOINT_MASK                                   = 0x01                                             //col:5481
	VMX_PENDING_DEBUG_EXCEPTIONS_ENABLED_BREAKPOINT                                    (_) = (((_) >> 12) & 0x01)                             //col:5482
	VMX_PENDING_DEBUG_EXCEPTIONS_BS_BIT                                                    = 14                                               //col:5483
	VMX_PENDING_DEBUG_EXCEPTIONS_BS_FLAG                                                   = 0x4000                                           //col:5484
	VMX_PENDING_DEBUG_EXCEPTIONS_BS_MASK                                                   = 0x01                                             //col:5485
	VMX_PENDING_DEBUG_EXCEPTIONS_BS                                                    (_) = (((_) >> 14) & 0x01)                             //col:5486
	VMX_PENDING_DEBUG_EXCEPTIONS_RTM_BIT                                                   = 16                                               //col:5487
	VMX_PENDING_DEBUG_EXCEPTIONS_RTM_FLAG                                                  = 0x10000                                          //col:5488
	VMX_PENDING_DEBUG_EXCEPTIONS_RTM_MASK                                                  = 0x01                                             //col:5489
	VMX_PENDING_DEBUG_EXCEPTIONS_RTM                                                   (_) = (((_) >> 16) & 0x01)                             //col:5490
	VMX_VMEXIT_REASON_BASIC_EXIT_REASON_BIT                                                = 0                                                //col:5491
	VMX_VMEXIT_REASON_BASIC_EXIT_REASON_FLAG                                               = 0xFFFF                                           //col:5492
	VMX_VMEXIT_REASON_BASIC_EXIT_REASON_MASK                                               = 0xFFFF                                           //col:5493
	VMX_VMEXIT_REASON_BASIC_EXIT_REASON                                                (_) = (((_) >> 0) & 0xFFFF)                            //col:5494
	VMX_VMEXIT_REASON_ALWAYS0_BIT                                                          = 16                                               //col:5495
	VMX_VMEXIT_REASON_ALWAYS0_FLAG                                                         = 0x10000                                          //col:5496
	VMX_VMEXIT_REASON_ALWAYS0_MASK                                                         = 0x01                                             //col:5497
	VMX_VMEXIT_REASON_ALWAYS0                                                          (_) = (((_) >> 16) & 0x01)                             //col:5498
	VMX_VMEXIT_REASON_RESERVED1_BIT                                                        = 17                                               //col:5499
	VMX_VMEXIT_REASON_RESERVED1_FLAG                                                       = 0x7FE0000                                        //col:5500
	VMX_VMEXIT_REASON_RESERVED1_MASK                                                       = 0x3FF                                            //col:5501
	VMX_VMEXIT_REASON_RESERVED1                                                        (_) = (((_) >> 17) & 0x3FF)                            //col:5502
	VMX_VMEXIT_REASON_ENCLAVE_MODE_BIT                                                     = 27                                               //col:5503
	VMX_VMEXIT_REASON_ENCLAVE_MODE_FLAG                                                    = 0x8000000                                        //col:5504
	VMX_VMEXIT_REASON_ENCLAVE_MODE_MASK                                                    = 0x01                                             //col:5505
	VMX_VMEXIT_REASON_ENCLAVE_MODE                                                     (_) = (((_) >> 27) & 0x01)                             //col:5506
	VMX_VMEXIT_REASON_PENDING_MTF_VM_EXIT_BIT                                              = 28                                               //col:5507
	VMX_VMEXIT_REASON_PENDING_MTF_VM_EXIT_FLAG                                             = 0x10000000                                       //col:5508
	VMX_VMEXIT_REASON_PENDING_MTF_VM_EXIT_MASK                                             = 0x01                                             //col:5509
	VMX_VMEXIT_REASON_PENDING_MTF_VM_EXIT                                              (_) = (((_) >> 28) & 0x01)                             //col:5510
	VMX_VMEXIT_REASON_VM_EXIT_FROM_VMX_ROOT_BIT                                            = 29                                               //col:5511
	VMX_VMEXIT_REASON_VM_EXIT_FROM_VMX_ROOT_FLAG                                           = 0x20000000                                       //col:5512
	VMX_VMEXIT_REASON_VM_EXIT_FROM_VMX_ROOT_MASK                                           = 0x01                                             //col:5513
	VMX_VMEXIT_REASON_VM_EXIT_FROM_VMX_ROOT                                            (_) = (((_) >> 29) & 0x01)                             //col:5514
	VMX_VMEXIT_REASON_RESERVED2_BIT                                                        = 30                                               //col:5515
	VMX_VMEXIT_REASON_RESERVED2_FLAG                                                       = 0x40000000                                       //col:5516
	VMX_VMEXIT_REASON_RESERVED2_MASK                                                       = 0x01                                             //col:5517
	VMX_VMEXIT_REASON_RESERVED2                                                        (_) = (((_) >> 30) & 0x01)                             //col:5518
	VMX_VMEXIT_REASON_VM_ENTRY_FAILURE_BIT                                                 = 31                                               //col:5519
	VMX_VMEXIT_REASON_VM_ENTRY_FAILURE_FLAG                                                = 0x80000000                                       //col:5520
	VMX_VMEXIT_REASON_VM_ENTRY_FAILURE_MASK                                                = 0x01                                             //col:5521
	VMX_VMEXIT_REASON_VM_ENTRY_FAILURE                                                 (_) = (((_) >> 31) & 0x01)                             //col:5522
	IO_BITMAP_A_MIN                                                                        = 0x00000000                                       //col:5523
	IO_BITMAP_A_MAX                                                                        = 0x00007FFF                                       //col:5524
	IO_BITMAP_B_MIN                                                                        = 0x00008000                                       //col:5525
	IO_BITMAP_B_MAX                                                                        = 0x0000FFFF                                       //col:5526
	MSR_ID_LOW_MIN                                                                         = 0x00000000                                       //col:5527
	MSR_ID_LOW_MAX                                                                         = 0x00001FFF                                       //col:5528
	MSR_ID_HIGH_MIN                                                                        = 0xC0000000                                       //col:5529
	MSR_ID_HIGH_MAX                                                                        = 0xC0001FFF                                       //col:5530
	EPT_POINTER_MEMORY_TYPE_BIT                                                            = 0                                                //col:5531
	EPT_POINTER_MEMORY_TYPE_FLAG                                                           = 0x07                                             //col:5532
	EPT_POINTER_MEMORY_TYPE_MASK                                                           = 0x07                                             //col:5533
	EPT_POINTER_MEMORY_TYPE                                                            (_) = (((_) >> 0) & 0x07)                              //col:5534
	EPT_POINTER_PAGE_WALK_LENGTH_BIT                                                       = 3                                                //col:5535
	EPT_POINTER_PAGE_WALK_LENGTH_FLAG                                                      = 0x38                                             //col:5536
	EPT_POINTER_PAGE_WALK_LENGTH_MASK                                                      = 0x07                                             //col:5537
	EPT_POINTER_PAGE_WALK_LENGTH                                                       (_) = (((_) >> 3) & 0x07)                              //col:5538
	EPT_PAGE_WALK_LENGTH_4                                                                 = 0x00000003                                       //col:5539
	EPT_POINTER_ENABLE_ACCESS_AND_DIRTY_FLAGS_BIT                                          = 6                                                //col:5540
	EPT_POINTER_ENABLE_ACCESS_AND_DIRTY_FLAGS_FLAG                                         = 0x40                                             //col:5541
	EPT_POINTER_ENABLE_ACCESS_AND_DIRTY_FLAGS_MASK                                         = 0x01                                             //col:5542
	EPT_POINTER_ENABLE_ACCESS_AND_DIRTY_FLAGS                                          (_) = (((_) >> 6) & 0x01)                              //col:5543
	EPT_POINTER_ENABLE_SUPERVISOR_SHADOW_STACK_PAGES_BIT                                   = 7                                                //col:5544
	EPT_POINTER_ENABLE_SUPERVISOR_SHADOW_STACK_PAGES_FLAG                                  = 0x80                                             //col:5545
	EPT_POINTER_ENABLE_SUPERVISOR_SHADOW_STACK_PAGES_MASK                                  = 0x01                                             //col:5546
	EPT_POINTER_ENABLE_SUPERVISOR_SHADOW_STACK_PAGES                                   (_) = (((_) >> 7) & 0x01)                              //col:5547
	EPT_POINTER_PAGE_FRAME_NUMBER_BIT                                                      = 12                                               //col:5548
	EPT_POINTER_PAGE_FRAME_NUMBER_FLAG                                                     = 0xFFFFFFFFF000                                   //col:5549
	EPT_POINTER_PAGE_FRAME_NUMBER_MASK                                                     = 0xFFFFFFFFF                                      //col:5550
	EPT_POINTER_PAGE_FRAME_NUMBER                                                      (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:5551
	EPT_PML4E_READ_ACCESS_BIT                                                              = 0                                                //col:5552
	EPT_PML4E_READ_ACCESS_FLAG                                                             = 0x01                                             //col:5553
	EPT_PML4E_READ_ACCESS_MASK                                                             = 0x01                                             //col:5554
	EPT_PML4E_READ_ACCESS                                                              (_) = (((_) >> 0) & 0x01)                              //col:5555
	EPT_PML4E_WRITE_ACCESS_BIT                                                             = 1                                                //col:5556
	EPT_PML4E_WRITE_ACCESS_FLAG                                                            = 0x02                                             //col:5557
	EPT_PML4E_WRITE_ACCESS_MASK                                                            = 0x01                                             //col:5558
	EPT_PML4E_WRITE_ACCESS                                                             (_) = (((_) >> 1) & 0x01)                              //col:5559
	EPT_PML4E_EXECUTE_ACCESS_BIT                                                           = 2                                                //col:5560
	EPT_PML4E_EXECUTE_ACCESS_FLAG                                                          = 0x04                                             //col:5561
	EPT_PML4E_EXECUTE_ACCESS_MASK                                                          = 0x01                                             //col:5562
	EPT_PML4E_EXECUTE_ACCESS                                                           (_) = (((_) >> 2) & 0x01)                              //col:5563
	EPT_PML4E_ACCESSED_BIT                                                                 = 8                                                //col:5564
	EPT_PML4E_ACCESSED_FLAG                                                                = 0x100                                            //col:5565
	EPT_PML4E_ACCESSED_MASK                                                                = 0x01                                             //col:5566
	EPT_PML4E_ACCESSED                                                                 (_) = (((_) >> 8) & 0x01)                              //col:5567
	EPT_PML4E_USER_MODE_EXECUTE_BIT                                                        = 10                                               //col:5568
	EPT_PML4E_USER_MODE_EXECUTE_FLAG                                                       = 0x400                                            //col:5569
	EPT_PML4E_USER_MODE_EXECUTE_MASK                                                       = 0x01                                             //col:5570
	EPT_PML4E_USER_MODE_EXECUTE                                                        (_) = (((_) >> 10) & 0x01)                             //col:5571
	EPT_PML4E_PAGE_FRAME_NUMBER_BIT                                                        = 12                                               //col:5572
	EPT_PML4E_PAGE_FRAME_NUMBER_FLAG                                                       = 0xFFFFFFFFF000                                   //col:5573
	EPT_PML4E_PAGE_FRAME_NUMBER_MASK                                                       = 0xFFFFFFFFF                                      //col:5574
	EPT_PML4E_PAGE_FRAME_NUMBER                                                        (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:5575
	EPT_PDPTE_1GB_READ_ACCESS_BIT                                                          = 0                                                //col:5576
	EPT_PDPTE_1GB_READ_ACCESS_FLAG                                                         = 0x01                                             //col:5577
	EPT_PDPTE_1GB_READ_ACCESS_MASK                                                         = 0x01                                             //col:5578
	EPT_PDPTE_1GB_READ_ACCESS                                                          (_) = (((_) >> 0) & 0x01)                              //col:5579
	EPT_PDPTE_1GB_WRITE_ACCESS_BIT                                                         = 1                                                //col:5580
	EPT_PDPTE_1GB_WRITE_ACCESS_FLAG                                                        = 0x02                                             //col:5581
	EPT_PDPTE_1GB_WRITE_ACCESS_MASK                                                        = 0x01                                             //col:5582
	EPT_PDPTE_1GB_WRITE_ACCESS                                                         (_) = (((_) >> 1) & 0x01)                              //col:5583
	EPT_PDPTE_1GB_EXECUTE_ACCESS_BIT                                                       = 2                                                //col:5584
	EPT_PDPTE_1GB_EXECUTE_ACCESS_FLAG                                                      = 0x04                                             //col:5585
	EPT_PDPTE_1GB_EXECUTE_ACCESS_MASK                                                      = 0x01                                             //col:5586
	EPT_PDPTE_1GB_EXECUTE_ACCESS                                                       (_) = (((_) >> 2) & 0x01)                              //col:5587
	EPT_PDPTE_1GB_MEMORY_TYPE_BIT                                                          = 3                                                //col:5588
	EPT_PDPTE_1GB_MEMORY_TYPE_FLAG                                                         = 0x38                                             //col:5589
	EPT_PDPTE_1GB_MEMORY_TYPE_MASK                                                         = 0x07                                             //col:5590
	EPT_PDPTE_1GB_MEMORY_TYPE                                                          (_) = (((_) >> 3) & 0x07)                              //col:5591
	EPT_PDPTE_1GB_IGNORE_PAT_BIT                                                           = 6                                                //col:5592
	EPT_PDPTE_1GB_IGNORE_PAT_FLAG                                                          = 0x40                                             //col:5593
	EPT_PDPTE_1GB_IGNORE_PAT_MASK                                                          = 0x01                                             //col:5594
	EPT_PDPTE_1GB_IGNORE_PAT                                                           (_) = (((_) >> 6) & 0x01)                              //col:5595
	EPT_PDPTE_1GB_LARGE_PAGE_BIT                                                           = 7                                                //col:5596
	EPT_PDPTE_1GB_LARGE_PAGE_FLAG                                                          = 0x80                                             //col:5597
	EPT_PDPTE_1GB_LARGE_PAGE_MASK                                                          = 0x01                                             //col:5598
	EPT_PDPTE_1GB_LARGE_PAGE                                                           (_) = (((_) >> 7) & 0x01)                              //col:5599
	EPT_PDPTE_1GB_ACCESSED_BIT                                                             = 8                                                //col:5600
	EPT_PDPTE_1GB_ACCESSED_FLAG                                                            = 0x100                                            //col:5601
	EPT_PDPTE_1GB_ACCESSED_MASK                                                            = 0x01                                             //col:5602
	EPT_PDPTE_1GB_ACCESSED                                                             (_) = (((_) >> 8) & 0x01)                              //col:5603
	EPT_PDPTE_1GB_DIRTY_BIT                                                                = 9                                                //col:5604
	EPT_PDPTE_1GB_DIRTY_FLAG                                                               = 0x200                                            //col:5605
	EPT_PDPTE_1GB_DIRTY_MASK                                                               = 0x01                                             //col:5606
	EPT_PDPTE_1GB_DIRTY                                                                (_) = (((_) >> 9) & 0x01)                              //col:5607
	EPT_PDPTE_1GB_USER_MODE_EXECUTE_BIT                                                    = 10                                               //col:5608
	EPT_PDPTE_1GB_USER_MODE_EXECUTE_FLAG                                                   = 0x400                                            //col:5609
	EPT_PDPTE_1GB_USER_MODE_EXECUTE_MASK                                                   = 0x01                                             //col:5610
	EPT_PDPTE_1GB_USER_MODE_EXECUTE                                                    (_) = (((_) >> 10) & 0x01)                             //col:5611
	EPT_PDPTE_1GB_PAGE_FRAME_NUMBER_BIT                                                    = 30                                               //col:5612
	EPT_PDPTE_1GB_PAGE_FRAME_NUMBER_FLAG                                                   = 0xFFFFC0000000                                   //col:5613
	EPT_PDPTE_1GB_PAGE_FRAME_NUMBER_MASK                                                   = 0x3FFFF                                          //col:5614
	EPT_PDPTE_1GB_PAGE_FRAME_NUMBER                                                    (_) = (((_) >> 30) & 0x3FFFF)                          //col:5615
	EPT_PDPTE_1GB_VERIFY_GUEST_PAGING_BIT                                                  = 57                                               //col:5616
	EPT_PDPTE_1GB_VERIFY_GUEST_PAGING_FLAG                                                 = 0x200000000000000                                //col:5617
	EPT_PDPTE_1GB_VERIFY_GUEST_PAGING_MASK                                                 = 0x01                                             //col:5618
	EPT_PDPTE_1GB_VERIFY_GUEST_PAGING                                                  (_) = (((_) >> 57) & 0x01)                             //col:5619
	EPT_PDPTE_1GB_PAGING_WRITE_ACCESS_BIT                                                  = 58                                               //col:5620
	EPT_PDPTE_1GB_PAGING_WRITE_ACCESS_FLAG                                                 = 0x400000000000000                                //col:5621
	EPT_PDPTE_1GB_PAGING_WRITE_ACCESS_MASK                                                 = 0x01                                             //col:5622
	EPT_PDPTE_1GB_PAGING_WRITE_ACCESS                                                  (_) = (((_) >> 58) & 0x01)                             //col:5623
	EPT_PDPTE_1GB_SUPERVISOR_SHADOW_STACK_BIT                                              = 60                                               //col:5624
	EPT_PDPTE_1GB_SUPERVISOR_SHADOW_STACK_FLAG                                             = 0x1000000000000000                               //col:5625
	EPT_PDPTE_1GB_SUPERVISOR_SHADOW_STACK_MASK                                             = 0x01                                             //col:5626
	EPT_PDPTE_1GB_SUPERVISOR_SHADOW_STACK                                              (_) = (((_) >> 60) & 0x01)                             //col:5627
	EPT_PDPTE_1GB_SUPPRESS_VE_BIT                                                          = 63                                               //col:5628
	EPT_PDPTE_1GB_SUPPRESS_VE_FLAG                                                         = 0x8000000000000000                               //col:5629
	EPT_PDPTE_1GB_SUPPRESS_VE_MASK                                                         = 0x01                                             //col:5630
	EPT_PDPTE_1GB_SUPPRESS_VE                                                          (_) = (((_) >> 63) & 0x01)                             //col:5631
	EPT_PDPTE_READ_ACCESS_BIT                                                              = 0                                                //col:5632
	EPT_PDPTE_READ_ACCESS_FLAG                                                             = 0x01                                             //col:5633
	EPT_PDPTE_READ_ACCESS_MASK                                                             = 0x01                                             //col:5634
	EPT_PDPTE_READ_ACCESS                                                              (_) = (((_) >> 0) & 0x01)                              //col:5635
	EPT_PDPTE_WRITE_ACCESS_BIT                                                             = 1                                                //col:5636
	EPT_PDPTE_WRITE_ACCESS_FLAG                                                            = 0x02                                             //col:5637
	EPT_PDPTE_WRITE_ACCESS_MASK                                                            = 0x01                                             //col:5638
	EPT_PDPTE_WRITE_ACCESS                                                             (_) = (((_) >> 1) & 0x01)                              //col:5639
	EPT_PDPTE_EXECUTE_ACCESS_BIT                                                           = 2                                                //col:5640
	EPT_PDPTE_EXECUTE_ACCESS_FLAG                                                          = 0x04                                             //col:5641
	EPT_PDPTE_EXECUTE_ACCESS_MASK                                                          = 0x01                                             //col:5642
	EPT_PDPTE_EXECUTE_ACCESS                                                           (_) = (((_) >> 2) & 0x01)                              //col:5643
	EPT_PDPTE_ACCESSED_BIT                                                                 = 8                                                //col:5644
	EPT_PDPTE_ACCESSED_FLAG                                                                = 0x100                                            //col:5645
	EPT_PDPTE_ACCESSED_MASK                                                                = 0x01                                             //col:5646
	EPT_PDPTE_ACCESSED                                                                 (_) = (((_) >> 8) & 0x01)                              //col:5647
	EPT_PDPTE_USER_MODE_EXECUTE_BIT                                                        = 10                                               //col:5648
	EPT_PDPTE_USER_MODE_EXECUTE_FLAG                                                       = 0x400                                            //col:5649
	EPT_PDPTE_USER_MODE_EXECUTE_MASK                                                       = 0x01                                             //col:5650
	EPT_PDPTE_USER_MODE_EXECUTE                                                        (_) = (((_) >> 10) & 0x01)                             //col:5651
	EPT_PDPTE_PAGE_FRAME_NUMBER_BIT                                                        = 12                                               //col:5652
	EPT_PDPTE_PAGE_FRAME_NUMBER_FLAG                                                       = 0xFFFFFFFFF000                                   //col:5653
	EPT_PDPTE_PAGE_FRAME_NUMBER_MASK                                                       = 0xFFFFFFFFF                                      //col:5654
	EPT_PDPTE_PAGE_FRAME_NUMBER                                                        (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:5655
	EPT_PDE_2MB_READ_ACCESS_BIT                                                            = 0                                                //col:5656
	EPT_PDE_2MB_READ_ACCESS_FLAG                                                           = 0x01                                             //col:5657
	EPT_PDE_2MB_READ_ACCESS_MASK                                                           = 0x01                                             //col:5658
	EPT_PDE_2MB_READ_ACCESS                                                            (_) = (((_) >> 0) & 0x01)                              //col:5659
	EPT_PDE_2MB_WRITE_ACCESS_BIT                                                           = 1                                                //col:5660
	EPT_PDE_2MB_WRITE_ACCESS_FLAG                                                          = 0x02                                             //col:5661
	EPT_PDE_2MB_WRITE_ACCESS_MASK                                                          = 0x01                                             //col:5662
	EPT_PDE_2MB_WRITE_ACCESS                                                           (_) = (((_) >> 1) & 0x01)                              //col:5663
	EPT_PDE_2MB_EXECUTE_ACCESS_BIT                                                         = 2                                                //col:5664
	EPT_PDE_2MB_EXECUTE_ACCESS_FLAG                                                        = 0x04                                             //col:5665
	EPT_PDE_2MB_EXECUTE_ACCESS_MASK                                                        = 0x01                                             //col:5666
	EPT_PDE_2MB_EXECUTE_ACCESS                                                         (_) = (((_) >> 2) & 0x01)                              //col:5667
	EPT_PDE_2MB_MEMORY_TYPE_BIT                                                            = 3                                                //col:5668
	EPT_PDE_2MB_MEMORY_TYPE_FLAG                                                           = 0x38                                             //col:5669
	EPT_PDE_2MB_MEMORY_TYPE_MASK                                                           = 0x07                                             //col:5670
	EPT_PDE_2MB_MEMORY_TYPE                                                            (_) = (((_) >> 3) & 0x07)                              //col:5671
	EPT_PDE_2MB_IGNORE_PAT_BIT                                                             = 6                                                //col:5672
	EPT_PDE_2MB_IGNORE_PAT_FLAG                                                            = 0x40                                             //col:5673
	EPT_PDE_2MB_IGNORE_PAT_MASK                                                            = 0x01                                             //col:5674
	EPT_PDE_2MB_IGNORE_PAT                                                             (_) = (((_) >> 6) & 0x01)                              //col:5675
	EPT_PDE_2MB_LARGE_PAGE_BIT                                                             = 7                                                //col:5676
	EPT_PDE_2MB_LARGE_PAGE_FLAG                                                            = 0x80                                             //col:5677
	EPT_PDE_2MB_LARGE_PAGE_MASK                                                            = 0x01                                             //col:5678
	EPT_PDE_2MB_LARGE_PAGE                                                             (_) = (((_) >> 7) & 0x01)                              //col:5679
	EPT_PDE_2MB_ACCESSED_BIT                                                               = 8                                                //col:5680
	EPT_PDE_2MB_ACCESSED_FLAG                                                              = 0x100                                            //col:5681
	EPT_PDE_2MB_ACCESSED_MASK                                                              = 0x01                                             //col:5682
	EPT_PDE_2MB_ACCESSED                                                               (_) = (((_) >> 8) & 0x01)                              //col:5683
	EPT_PDE_2MB_DIRTY_BIT                                                                  = 9                                                //col:5684
	EPT_PDE_2MB_DIRTY_FLAG                                                                 = 0x200                                            //col:5685
	EPT_PDE_2MB_DIRTY_MASK                                                                 = 0x01                                             //col:5686
	EPT_PDE_2MB_DIRTY                                                                  (_) = (((_) >> 9) & 0x01)                              //col:5687
	EPT_PDE_2MB_USER_MODE_EXECUTE_BIT                                                      = 10                                               //col:5688
	EPT_PDE_2MB_USER_MODE_EXECUTE_FLAG                                                     = 0x400                                            //col:5689
	EPT_PDE_2MB_USER_MODE_EXECUTE_MASK                                                     = 0x01                                             //col:5690
	EPT_PDE_2MB_USER_MODE_EXECUTE                                                      (_) = (((_) >> 10) & 0x01)                             //col:5691
	EPT_PDE_2MB_PAGE_FRAME_NUMBER_BIT                                                      = 21                                               //col:5692
	EPT_PDE_2MB_PAGE_FRAME_NUMBER_FLAG                                                     = 0xFFFFFFE00000                                   //col:5693
	EPT_PDE_2MB_PAGE_FRAME_NUMBER_MASK                                                     = 0x7FFFFFF                                        //col:5694
	EPT_PDE_2MB_PAGE_FRAME_NUMBER                                                      (_) = (((_) >> 21) & 0x7FFFFFF)                        //col:5695
	EPT_PDE_2MB_VERIFY_GUEST_PAGING_BIT                                                    = 57                                               //col:5696
	EPT_PDE_2MB_VERIFY_GUEST_PAGING_FLAG                                                   = 0x200000000000000                                //col:5697
	EPT_PDE_2MB_VERIFY_GUEST_PAGING_MASK                                                   = 0x01                                             //col:5698
	EPT_PDE_2MB_VERIFY_GUEST_PAGING                                                    (_) = (((_) >> 57) & 0x01)                             //col:5699
	EPT_PDE_2MB_PAGING_WRITE_ACCESS_BIT                                                    = 58                                               //col:5700
	EPT_PDE_2MB_PAGING_WRITE_ACCESS_FLAG                                                   = 0x400000000000000                                //col:5701
	EPT_PDE_2MB_PAGING_WRITE_ACCESS_MASK                                                   = 0x01                                             //col:5702
	EPT_PDE_2MB_PAGING_WRITE_ACCESS                                                    (_) = (((_) >> 58) & 0x01)                             //col:5703
	EPT_PDE_2MB_SUPERVISOR_SHADOW_STACK_BIT                                                = 60                                               //col:5704
	EPT_PDE_2MB_SUPERVISOR_SHADOW_STACK_FLAG                                               = 0x1000000000000000                               //col:5705
	EPT_PDE_2MB_SUPERVISOR_SHADOW_STACK_MASK                                               = 0x01                                             //col:5706
	EPT_PDE_2MB_SUPERVISOR_SHADOW_STACK                                                (_) = (((_) >> 60) & 0x01)                             //col:5707
	EPT_PDE_2MB_SUPPRESS_VE_BIT                                                            = 63                                               //col:5708
	EPT_PDE_2MB_SUPPRESS_VE_FLAG                                                           = 0x8000000000000000                               //col:5709
	EPT_PDE_2MB_SUPPRESS_VE_MASK                                                           = 0x01                                             //col:5710
	EPT_PDE_2MB_SUPPRESS_VE                                                            (_) = (((_) >> 63) & 0x01)                             //col:5711
	EPT_PDE_READ_ACCESS_BIT                                                                = 0                                                //col:5712
	EPT_PDE_READ_ACCESS_FLAG                                                               = 0x01                                             //col:5713
	EPT_PDE_READ_ACCESS_MASK                                                               = 0x01                                             //col:5714
	EPT_PDE_READ_ACCESS                                                                (_) = (((_) >> 0) & 0x01)                              //col:5715
	EPT_PDE_WRITE_ACCESS_BIT                                                               = 1                                                //col:5716
	EPT_PDE_WRITE_ACCESS_FLAG                                                              = 0x02                                             //col:5717
	EPT_PDE_WRITE_ACCESS_MASK                                                              = 0x01                                             //col:5718
	EPT_PDE_WRITE_ACCESS                                                               (_) = (((_) >> 1) & 0x01)                              //col:5719
	EPT_PDE_EXECUTE_ACCESS_BIT                                                             = 2                                                //col:5720
	EPT_PDE_EXECUTE_ACCESS_FLAG                                                            = 0x04                                             //col:5721
	EPT_PDE_EXECUTE_ACCESS_MASK                                                            = 0x01                                             //col:5722
	EPT_PDE_EXECUTE_ACCESS                                                             (_) = (((_) >> 2) & 0x01)                              //col:5723
	EPT_PDE_ACCESSED_BIT                                                                   = 8                                                //col:5724
	EPT_PDE_ACCESSED_FLAG                                                                  = 0x100                                            //col:5725
	EPT_PDE_ACCESSED_MASK                                                                  = 0x01                                             //col:5726
	EPT_PDE_ACCESSED                                                                   (_) = (((_) >> 8) & 0x01)                              //col:5727
	EPT_PDE_USER_MODE_EXECUTE_BIT                                                          = 10                                               //col:5728
	EPT_PDE_USER_MODE_EXECUTE_FLAG                                                         = 0x400                                            //col:5729
	EPT_PDE_USER_MODE_EXECUTE_MASK                                                         = 0x01                                             //col:5730
	EPT_PDE_USER_MODE_EXECUTE                                                          (_) = (((_) >> 10) & 0x01)                             //col:5731
	EPT_PDE_PAGE_FRAME_NUMBER_BIT                                                          = 12                                               //col:5732
	EPT_PDE_PAGE_FRAME_NUMBER_FLAG                                                         = 0xFFFFFFFFF000                                   //col:5733
	EPT_PDE_PAGE_FRAME_NUMBER_MASK                                                         = 0xFFFFFFFFF                                      //col:5734
	EPT_PDE_PAGE_FRAME_NUMBER                                                          (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:5735
	EPT_PTE_READ_ACCESS_BIT                                                                = 0                                                //col:5736
	EPT_PTE_READ_ACCESS_FLAG                                                               = 0x01                                             //col:5737
	EPT_PTE_READ_ACCESS_MASK                                                               = 0x01                                             //col:5738
	EPT_PTE_READ_ACCESS                                                                (_) = (((_) >> 0) & 0x01)                              //col:5739
	EPT_PTE_WRITE_ACCESS_BIT                                                               = 1                                                //col:5740
	EPT_PTE_WRITE_ACCESS_FLAG                                                              = 0x02                                             //col:5741
	EPT_PTE_WRITE_ACCESS_MASK                                                              = 0x01                                             //col:5742
	EPT_PTE_WRITE_ACCESS                                                               (_) = (((_) >> 1) & 0x01)                              //col:5743
	EPT_PTE_EXECUTE_ACCESS_BIT                                                             = 2                                                //col:5744
	EPT_PTE_EXECUTE_ACCESS_FLAG                                                            = 0x04                                             //col:5745
	EPT_PTE_EXECUTE_ACCESS_MASK                                                            = 0x01                                             //col:5746
	EPT_PTE_EXECUTE_ACCESS                                                             (_) = (((_) >> 2) & 0x01)                              //col:5747
	EPT_PTE_MEMORY_TYPE_BIT                                                                = 3                                                //col:5748
	EPT_PTE_MEMORY_TYPE_FLAG                                                               = 0x38                                             //col:5749
	EPT_PTE_MEMORY_TYPE_MASK                                                               = 0x07                                             //col:5750
	EPT_PTE_MEMORY_TYPE                                                                (_) = (((_) >> 3) & 0x07)                              //col:5751
	EPT_PTE_IGNORE_PAT_BIT                                                                 = 6                                                //col:5752
	EPT_PTE_IGNORE_PAT_FLAG                                                                = 0x40                                             //col:5753
	EPT_PTE_IGNORE_PAT_MASK                                                                = 0x01                                             //col:5754
	EPT_PTE_IGNORE_PAT                                                                 (_) = (((_) >> 6) & 0x01)                              //col:5755
	EPT_PTE_ACCESSED_BIT                                                                   = 8                                                //col:5756
	EPT_PTE_ACCESSED_FLAG                                                                  = 0x100                                            //col:5757
	EPT_PTE_ACCESSED_MASK                                                                  = 0x01                                             //col:5758
	EPT_PTE_ACCESSED                                                                   (_) = (((_) >> 8) & 0x01)                              //col:5759
	EPT_PTE_DIRTY_BIT                                                                      = 9                                                //col:5760
	EPT_PTE_DIRTY_FLAG                                                                     = 0x200                                            //col:5761
	EPT_PTE_DIRTY_MASK                                                                     = 0x01                                             //col:5762
	EPT_PTE_DIRTY                                                                      (_) = (((_) >> 9) & 0x01)                              //col:5763
	EPT_PTE_USER_MODE_EXECUTE_BIT                                                          = 10                                               //col:5764
	EPT_PTE_USER_MODE_EXECUTE_FLAG                                                         = 0x400                                            //col:5765
	EPT_PTE_USER_MODE_EXECUTE_MASK                                                         = 0x01                                             //col:5766
	EPT_PTE_USER_MODE_EXECUTE                                                          (_) = (((_) >> 10) & 0x01)                             //col:5767
	EPT_PTE_PAGE_FRAME_NUMBER_BIT                                                          = 12                                               //col:5768
	EPT_PTE_PAGE_FRAME_NUMBER_FLAG                                                         = 0xFFFFFFFFF000                                   //col:5769
	EPT_PTE_PAGE_FRAME_NUMBER_MASK                                                         = 0xFFFFFFFFF                                      //col:5770
	EPT_PTE_PAGE_FRAME_NUMBER                                                          (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:5771
	EPT_PTE_VERIFY_GUEST_PAGING_BIT                                                        = 57                                               //col:5772
	EPT_PTE_VERIFY_GUEST_PAGING_FLAG                                                       = 0x200000000000000                                //col:5773
	EPT_PTE_VERIFY_GUEST_PAGING_MASK                                                       = 0x01                                             //col:5774
	EPT_PTE_VERIFY_GUEST_PAGING                                                        (_) = (((_) >> 57) & 0x01)                             //col:5775
	EPT_PTE_PAGING_WRITE_ACCESS_BIT                                                        = 58                                               //col:5776
	EPT_PTE_PAGING_WRITE_ACCESS_FLAG                                                       = 0x400000000000000                                //col:5777
	EPT_PTE_PAGING_WRITE_ACCESS_MASK                                                       = 0x01                                             //col:5778
	EPT_PTE_PAGING_WRITE_ACCESS                                                        (_) = (((_) >> 58) & 0x01)                             //col:5779
	EPT_PTE_SUPERVISOR_SHADOW_STACK_BIT                                                    = 60                                               //col:5780
	EPT_PTE_SUPERVISOR_SHADOW_STACK_FLAG                                                   = 0x1000000000000000                               //col:5781
	EPT_PTE_SUPERVISOR_SHADOW_STACK_MASK                                                   = 0x01                                             //col:5782
	EPT_PTE_SUPERVISOR_SHADOW_STACK                                                    (_) = (((_) >> 60) & 0x01)                             //col:5783
	EPT_PTE_SUB_PAGE_WRITE_PERMISSIONS_BIT                                                 = 61                                               //col:5784
	EPT_PTE_SUB_PAGE_WRITE_PERMISSIONS_FLAG                                                = 0x2000000000000000                               //col:5785
	EPT_PTE_SUB_PAGE_WRITE_PERMISSIONS_MASK                                                = 0x01                                             //col:5786
	EPT_PTE_SUB_PAGE_WRITE_PERMISSIONS                                                 (_) = (((_) >> 61) & 0x01)                             //col:5787
	EPT_PTE_SUPPRESS_VE_BIT                                                                = 63                                               //col:5788
	EPT_PTE_SUPPRESS_VE_FLAG                                                               = 0x8000000000000000                               //col:5789
	EPT_PTE_SUPPRESS_VE_MASK                                                               = 0x01                                             //col:5790
	EPT_PTE_SUPPRESS_VE                                                                (_) = (((_) >> 63) & 0x01)                             //col:5791
	EPT_ENTRY_READ_ACCESS_BIT                                                              = 0                                                //col:5792
	EPT_ENTRY_READ_ACCESS_FLAG                                                             = 0x01                                             //col:5793
	EPT_ENTRY_READ_ACCESS_MASK                                                             = 0x01                                             //col:5794
	EPT_ENTRY_READ_ACCESS                                                              (_) = (((_) >> 0) & 0x01)                              //col:5795
	EPT_ENTRY_WRITE_ACCESS_BIT                                                             = 1                                                //col:5796
	EPT_ENTRY_WRITE_ACCESS_FLAG                                                            = 0x02                                             //col:5797
	EPT_ENTRY_WRITE_ACCESS_MASK                                                            = 0x01                                             //col:5798
	EPT_ENTRY_WRITE_ACCESS                                                             (_) = (((_) >> 1) & 0x01)                              //col:5799
	EPT_ENTRY_EXECUTE_ACCESS_BIT                                                           = 2                                                //col:5800
	EPT_ENTRY_EXECUTE_ACCESS_FLAG                                                          = 0x04                                             //col:5801
	EPT_ENTRY_EXECUTE_ACCESS_MASK                                                          = 0x01                                             //col:5802
	EPT_ENTRY_EXECUTE_ACCESS                                                           (_) = (((_) >> 2) & 0x01)                              //col:5803
	EPT_ENTRY_MEMORY_TYPE_BIT                                                              = 3                                                //col:5804
	EPT_ENTRY_MEMORY_TYPE_FLAG                                                             = 0x38                                             //col:5805
	EPT_ENTRY_MEMORY_TYPE_MASK                                                             = 0x07                                             //col:5806
	EPT_ENTRY_MEMORY_TYPE                                                              (_) = (((_) >> 3) & 0x07)                              //col:5807
	EPT_ENTRY_IGNORE_PAT_BIT                                                               = 6                                                //col:5808
	EPT_ENTRY_IGNORE_PAT_FLAG                                                              = 0x40                                             //col:5809
	EPT_ENTRY_IGNORE_PAT_MASK                                                              = 0x01                                             //col:5810
	EPT_ENTRY_IGNORE_PAT                                                               (_) = (((_) >> 6) & 0x01)                              //col:5811
	EPT_ENTRY_LARGE_PAGE_BIT                                                               = 7                                                //col:5812
	EPT_ENTRY_LARGE_PAGE_FLAG                                                              = 0x80                                             //col:5813
	EPT_ENTRY_LARGE_PAGE_MASK                                                              = 0x01                                             //col:5814
	EPT_ENTRY_LARGE_PAGE                                                               (_) = (((_) >> 7) & 0x01)                              //col:5815
	EPT_ENTRY_ACCESSED_BIT                                                                 = 8                                                //col:5816
	EPT_ENTRY_ACCESSED_FLAG                                                                = 0x100                                            //col:5817
	EPT_ENTRY_ACCESSED_MASK                                                                = 0x01                                             //col:5818
	EPT_ENTRY_ACCESSED                                                                 (_) = (((_) >> 8) & 0x01)                              //col:5819
	EPT_ENTRY_DIRTY_BIT                                                                    = 9                                                //col:5820
	EPT_ENTRY_DIRTY_FLAG                                                                   = 0x200                                            //col:5821
	EPT_ENTRY_DIRTY_MASK                                                                   = 0x01                                             //col:5822
	EPT_ENTRY_DIRTY                                                                    (_) = (((_) >> 9) & 0x01)                              //col:5823
	EPT_ENTRY_USER_MODE_EXECUTE_BIT                                                        = 10                                               //col:5824
	EPT_ENTRY_USER_MODE_EXECUTE_FLAG                                                       = 0x400                                            //col:5825
	EPT_ENTRY_USER_MODE_EXECUTE_MASK                                                       = 0x01                                             //col:5826
	EPT_ENTRY_USER_MODE_EXECUTE                                                        (_) = (((_) >> 10) & 0x01)                             //col:5827
	EPT_ENTRY_PAGE_FRAME_NUMBER_BIT                                                        = 12                                               //col:5828
	EPT_ENTRY_PAGE_FRAME_NUMBER_FLAG                                                       = 0xFFFFFFFFF000                                   //col:5829
	EPT_ENTRY_PAGE_FRAME_NUMBER_MASK                                                       = 0xFFFFFFFFF                                      //col:5830
	EPT_ENTRY_PAGE_FRAME_NUMBER                                                        (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:5831
	EPT_ENTRY_SUPPRESS_VE_BIT                                                              = 63                                               //col:5832
	EPT_ENTRY_SUPPRESS_VE_FLAG                                                             = 0x8000000000000000                               //col:5833
	EPT_ENTRY_SUPPRESS_VE_MASK                                                             = 0x01                                             //col:5834
	EPT_ENTRY_SUPPRESS_VE                                                              (_) = (((_) >> 63) & 0x01)                             //col:5835
	EPT_LEVEL_PML4E                                                                        = 0x00000003                                       //col:5836
	EPT_LEVEL_PDPTE                                                                        = 0x00000002                                       //col:5837
	EPT_LEVEL_PDE                                                                          = 0x00000001                                       //col:5838
	EPT_LEVEL_PTE                                                                          = 0x00000000                                       //col:5839
	EPT_PML4E_ENTRY_COUNT                                                                  = 0x00000200                                       //col:5840
	EPT_PDPTE_ENTRY_COUNT                                                                  = 0x00000200                                       //col:5841
	EPT_PDE_ENTRY_COUNT                                                                    = 0x00000200                                       //col:5842
	EPT_PTE_ENTRY_COUNT                                                                    = 0x00000200                                       //col:5843
	HLAT_POINTER_PAGE_LEVEL_WRITE_THROUGH_BIT                                              = 3                                                //col:5844
	HLAT_POINTER_PAGE_LEVEL_WRITE_THROUGH_FLAG                                             = 0x08                                             //col:5845
	HLAT_POINTER_PAGE_LEVEL_WRITE_THROUGH_MASK                                             = 0x01                                             //col:5846
	HLAT_POINTER_PAGE_LEVEL_WRITE_THROUGH                                              (_) = (((_) >> 3) & 0x01)                              //col:5847
	HLAT_POINTER_PAGE_LEVEL_CACHE_DISABLE_BIT                                              = 4                                                //col:5848
	HLAT_POINTER_PAGE_LEVEL_CACHE_DISABLE_FLAG                                             = 0x10                                             //col:5849
	HLAT_POINTER_PAGE_LEVEL_CACHE_DISABLE_MASK                                             = 0x01                                             //col:5850
	HLAT_POINTER_PAGE_LEVEL_CACHE_DISABLE                                              (_) = (((_) >> 4) & 0x01)                              //col:5851
	HLAT_POINTER_PAGE_FRAME_NUMBER_BIT                                                     = 12                                               //col:5852
	HLAT_POINTER_PAGE_FRAME_NUMBER_FLAG                                                    = 0xFFFFFFFFF000                                   //col:5853
	HLAT_POINTER_PAGE_FRAME_NUMBER_MASK                                                    = 0xFFFFFFFFF                                      //col:5854
	HLAT_POINTER_PAGE_FRAME_NUMBER                                                     (_) = (((_) >> 12) & 0xFFFFFFFFF)                      //col:5855
	VMCS_COMPONENT_ENCODING_ACCESS_TYPE_BIT                                                = 0                                                //col:5856
	VMCS_COMPONENT_ENCODING_ACCESS_TYPE_FLAG                                               = 0x01                                             //col:5857
	VMCS_COMPONENT_ENCODING_ACCESS_TYPE_MASK                                               = 0x01                                             //col:5858
	VMCS_COMPONENT_ENCODING_ACCESS_TYPE                                                (_) = (((_) >> 0) & 0x01)                              //col:5859
	VMCS_COMPONENT_ENCODING_INDEX_BIT                                                      = 1                                                //col:5860
	VMCS_COMPONENT_ENCODING_INDEX_FLAG                                                     = 0x3FE                                            //col:5861
	VMCS_COMPONENT_ENCODING_INDEX_MASK                                                     = 0x1FF                                            //col:5862
	VMCS_COMPONENT_ENCODING_INDEX                                                      (_) = (((_) >> 1) & 0x1FF)                             //col:5863
	VMCS_COMPONENT_ENCODING_TYPE_BIT                                                       = 10                                               //col:5864
	VMCS_COMPONENT_ENCODING_TYPE_FLAG                                                      = 0xC00                                            //col:5865
	VMCS_COMPONENT_ENCODING_TYPE_MASK                                                      = 0x03                                             //col:5866
	VMCS_COMPONENT_ENCODING_TYPE                                                       (_) = (((_) >> 10) & 0x03)                             //col:5867
	VMCS_COMPONENT_ENCODING_MUST_BE_ZERO_BIT                                               = 12                                               //col:5868
	VMCS_COMPONENT_ENCODING_MUST_BE_ZERO_FLAG                                              = 0x1000                                           //col:5869
	VMCS_COMPONENT_ENCODING_MUST_BE_ZERO_MASK                                              = 0x01                                             //col:5870
	VMCS_COMPONENT_ENCODING_MUST_BE_ZERO                                               (_) = (((_) >> 12) & 0x01)                             //col:5871
	VMCS_COMPONENT_ENCODING_WIDTH_BIT                                                      = 13                                               //col:5872
	VMCS_COMPONENT_ENCODING_WIDTH_FLAG                                                     = 0x6000                                           //col:5873
	VMCS_COMPONENT_ENCODING_WIDTH_MASK                                                     = 0x03                                             //col:5874
	VMCS_COMPONENT_ENCODING_WIDTH                                                      (_) = (((_) >> 13) & 0x03)                             //col:5875
	VMCS_CTRL_VIRTUAL_PROCESSOR_IDENTIFIER                                                 = 0x00000000                                       //col:5876
	VMCS_CTRL_POSTED_INTERRUPT_NOTIFICATION_VECTOR                                         = 0x00000002                                       //col:5877
	VMCS_CTRL_EPTP_INDEX                                                                   = 0x00000004                                       //col:5878
	VMCS_CTRL_HLAT_PREFIX_SIZE                                                             = 0x00000006                                       //col:5879
	VMCS_GUEST_ES_SELECTOR                                                                 = 0x00000800                                       //col:5880
	VMCS_GUEST_CS_SELECTOR                                                                 = 0x00000802                                       //col:5881
	VMCS_GUEST_SS_SELECTOR                                                                 = 0x00000804                                       //col:5882
	VMCS_GUEST_DS_SELECTOR                                                                 = 0x00000806                                       //col:5883
	VMCS_GUEST_FS_SELECTOR                                                                 = 0x00000808                                       //col:5884
	VMCS_GUEST_GS_SELECTOR                                                                 = 0x0000080A                                       //col:5885
	VMCS_GUEST_LDTR_SELECTOR                                                               = 0x0000080C                                       //col:5886
	VMCS_GUEST_TR_SELECTOR                                                                 = 0x0000080E                                       //col:5887
	VMCS_GUEST_INTERRUPT_STATUS                                                            = 0x00000810                                       //col:5888
	VMCS_GUEST_PML_INDEX                                                                   = 0x00000812                                       //col:5889
	VMCS_HOST_ES_SELECTOR                                                                  = 0x00000C00                                       //col:5890
	VMCS_HOST_CS_SELECTOR                                                                  = 0x00000C02                                       //col:5891
	VMCS_HOST_SS_SELECTOR                                                                  = 0x00000C04                                       //col:5892
	VMCS_HOST_DS_SELECTOR                                                                  = 0x00000C06                                       //col:5893
	VMCS_HOST_FS_SELECTOR                                                                  = 0x00000C08                                       //col:5894
	VMCS_HOST_GS_SELECTOR                                                                  = 0x00000C0A                                       //col:5895
	VMCS_HOST_TR_SELECTOR                                                                  = 0x00000C0C                                       //col:5896
	VMCS_CTRL_IO_BITMAP_A_ADDRESS                                                          = 0x00002000                                       //col:5897
	VMCS_CTRL_IO_BITMAP_B_ADDRESS                                                          = 0x00002002                                       //col:5898
	VMCS_CTRL_MSR_BITMAP_ADDRESS                                                           = 0x00002004                                       //col:5899
	VMCS_CTRL_VMEXIT_MSR_STORE_ADDRESS                                                     = 0x00002006                                       //col:5900
	VMCS_CTRL_VMEXIT_MSR_LOAD_ADDRESS                                                      = 0x00002008                                       //col:5901
	VMCS_CTRL_VMENTRY_MSR_LOAD_ADDRESS                                                     = 0x0000200A                                       //col:5902
	VMCS_CTRL_EXECUTIVE_VMCS_POINTER                                                       = 0x0000200C                                       //col:5903
	VMCS_CTRL_PML_ADDRESS                                                                  = 0x0000200E                                       //col:5904
	VMCS_CTRL_TSC_OFFSET                                                                   = 0x00002010                                       //col:5905
	VMCS_CTRL_VIRTUAL_APIC_ADDRESS                                                         = 0x00002012                                       //col:5906
	VMCS_CTRL_APIC_ACCESS_ADDRESS                                                          = 0x00002014                                       //col:5907
	VMCS_CTRL_POSTED_INTERRUPT_DESCRIPTOR_ADDRESS                                          = 0x00002016                                       //col:5908
	VMCS_CTRL_VMFUNC_CONTROLS                                                              = 0x00002018                                       //col:5909
	VMCS_CTRL_EPT_POINTER                                                                  = 0x0000201A                                       //col:5910
	VMCS_CTRL_EOI_EXIT_BITMAP_0                                                            = 0x0000201C                                       //col:5911
	VMCS_CTRL_EOI_EXIT_BITMAP_1                                                            = 0x0000201E                                       //col:5912
	VMCS_CTRL_EOI_EXIT_BITMAP_2                                                            = 0x00002020                                       //col:5913
	VMCS_CTRL_EOI_EXIT_BITMAP_3                                                            = 0x00002022                                       //col:5914
	VMCS_CTRL_EPT_POINTER_LIST_ADDRESS                                                     = 0x00002024                                       //col:5915
	VMCS_CTRL_VMREAD_BITMAP_ADDRESS                                                        = 0x00002026                                       //col:5916
	VMCS_CTRL_VMWRITE_BITMAP_ADDRESS                                                       = 0x00002028                                       //col:5917
	VMCS_CTRL_VIRTUALIZATION_EXCEPTION_INFORMATION_ADDRESS                                 = 0x0000202A                                       //col:5918
	VMCS_CTRL_XSS_EXITING_BITMAP                                                           = 0x0000202C                                       //col:5919
	VMCS_CTRL_ENCLS_EXITING_BITMAP                                                         = 0x0000202E                                       //col:5920
	VMCS_CTRL_SUB_PAGE_PERMISSION_TABLE_POINTER                                            = 0x00002030                                       //col:5921
	VMCS_CTRL_TSC_MULTIPLIER                                                               = 0x00002032                                       //col:5922
	VMCS_CTRL_TERTIARY_PROCESSOR_BASED_VM_EXECUTION_CONTROLS                               = 0x00002034                                       //col:5923
	VMCS_CTRL_ENCLV_EXITING_BITMAP                                                         = 0x00002036                                       //col:5924
	VMCS_CTRL_HLAT_POINTER                                                                 = 0x00002040                                       //col:5925
	VMCS_CTRL_SECONDARY_VMEXIT_CONTROLS                                                    = 0x00002044                                       //col:5926
	VMCS_GUEST_PHYSICAL_ADDRESS                                                            = 0x00002400                                       //col:5927
	VMCS_GUEST_VMCS_LINK_POINTER                                                           = 0x00002800                                       //col:5928
	VMCS_GUEST_DEBUGCTL                                                                    = 0x00002802                                       //col:5929
	VMCS_GUEST_PAT                                                                         = 0x00002804                                       //col:5930
	VMCS_GUEST_EFER                                                                        = 0x00002806                                       //col:5931
	VMCS_GUEST_PERF_GLOBAL_CTRL                                                            = 0x00002808                                       //col:5932
	VMCS_GUEST_PDPTE0                                                                      = 0x0000280A                                       //col:5933
	VMCS_GUEST_PDPTE1                                                                      = 0x0000280C                                       //col:5934
	VMCS_GUEST_PDPTE2                                                                      = 0x0000280E                                       //col:5935
	VMCS_GUEST_PDPTE3                                                                      = 0x00002810                                       //col:5936
	VMCS_GUEST_BNDCFGS                                                                     = 0x00002812                                       //col:5937
	VMCS_GUEST_RTIT_CTL                                                                    = 0x00002814                                       //col:5938
	VMCS_GUEST_LBR_CTL                                                                     = 0x00002816                                       //col:5939
	VMCS_GUEST_PKRS                                                                        = 0x00002818                                       //col:5940
	VMCS_HOST_PAT                                                                          = 0x00002C00                                       //col:5941
	VMCS_HOST_EFER                                                                         = 0x00002C02                                       //col:5942
	VMCS_HOST_PERF_GLOBAL_CTRL                                                             = 0x00002C04                                       //col:5943
	VMCS_HOST_PKRS                                                                         = 0x00002C06                                       //col:5944
	VMCS_CTRL_PIN_BASED_VM_EXECUTION_CONTROLS                                              = 0x00004000                                       //col:5945
	VMCS_CTRL_PROCESSOR_BASED_VM_EXECUTION_CONTROLS                                        = 0x00004002                                       //col:5946
	VMCS_CTRL_EXCEPTION_BITMAP                                                             = 0x00004004                                       //col:5947
	VMCS_CTRL_PAGEFAULT_ERROR_CODE_MASK                                                    = 0x00004006                                       //col:5948
	VMCS_CTRL_PAGEFAULT_ERROR_CODE_MATCH                                                   = 0x00004008                                       //col:5949
	VMCS_CTRL_CR3_TARGET_COUNT                                                             = 0x0000400A                                       //col:5950
	VMCS_CTRL_PRIMARY_VMEXIT_CONTROLS                                                      = 0x0000400C                                       //col:5951
	VMCS_CTRL_VMEXIT_MSR_STORE_COUNT                                                       = 0x0000400E                                       //col:5952
	VMCS_CTRL_VMEXIT_MSR_LOAD_COUNT                                                        = 0x00004010                                       //col:5953
	VMCS_CTRL_VMENTRY_CONTROLS                                                             = 0x00004012                                       //col:5954
	VMCS_CTRL_VMENTRY_MSR_LOAD_COUNT                                                       = 0x00004014                                       //col:5955
	VMCS_CTRL_VMENTRY_INTERRUPTION_INFORMATION_FIELD                                       = 0x00004016                                       //col:5956
	VMCS_CTRL_VMENTRY_EXCEPTION_ERROR_CODE                                                 = 0x00004018                                       //col:5957
	VMCS_CTRL_VMENTRY_INSTRUCTION_LENGTH                                                   = 0x0000401A                                       //col:5958
	VMCS_CTRL_TPR_THRESHOLD                                                                = 0x0000401C                                       //col:5959
	VMCS_CTRL_SECONDARY_PROCESSOR_BASED_VM_EXECUTION_CONTROLS                              = 0x0000401E                                       //col:5960
	VMCS_CTRL_PLE_GAP                                                                      = 0x00004020                                       //col:5961
	VMCS_CTRL_PLE_WINDOW                                                                   = 0x00004022                                       //col:5962
	VMCS_VM_INSTRUCTION_ERROR                                                              = 0x00004400                                       //col:5963
	VMCS_EXIT_REASON                                                                       = 0x00004402                                       //col:5964
	VMCS_VMEXIT_INTERRUPTION_INFORMATION                                                   = 0x00004404                                       //col:5965
	VMCS_VMEXIT_INTERRUPTION_ERROR_CODE                                                    = 0x00004406                                       //col:5966
	VMCS_IDT_VECTORING_INFORMATION                                                         = 0x00004408                                       //col:5967
	VMCS_IDT_VECTORING_ERROR_CODE                                                          = 0x0000440A                                       //col:5968
	VMCS_VMEXIT_INSTRUCTION_LENGTH                                                         = 0x0000440C                                       //col:5969
	VMCS_VMEXIT_INSTRUCTION_INFO                                                           = 0x0000440E                                       //col:5970
	VMCS_GUEST_ES_LIMIT                                                                    = 0x00004800                                       //col:5971
	VMCS_GUEST_CS_LIMIT                                                                    = 0x00004802                                       //col:5972
	VMCS_GUEST_SS_LIMIT                                                                    = 0x00004804                                       //col:5973
	VMCS_GUEST_DS_LIMIT                                                                    = 0x00004806                                       //col:5974
	VMCS_GUEST_FS_LIMIT                                                                    = 0x00004808                                       //col:5975
	VMCS_GUEST_GS_LIMIT                                                                    = 0x0000480A                                       //col:5976
	VMCS_GUEST_LDTR_LIMIT                                                                  = 0x0000480C                                       //col:5977
	VMCS_GUEST_TR_LIMIT                                                                    = 0x0000480E                                       //col:5978
	VMCS_GUEST_GDTR_LIMIT                                                                  = 0x00004810                                       //col:5979
	VMCS_GUEST_IDTR_LIMIT                                                                  = 0x00004812                                       //col:5980
	VMCS_GUEST_ES_ACCESS_RIGHTS                                                            = 0x00004814                                       //col:5981
	VMCS_GUEST_CS_ACCESS_RIGHTS                                                            = 0x00004816                                       //col:5982
	VMCS_GUEST_SS_ACCESS_RIGHTS                                                            = 0x00004818                                       //col:5983
	VMCS_GUEST_DS_ACCESS_RIGHTS                                                            = 0x0000481A                                       //col:5984
	VMCS_GUEST_FS_ACCESS_RIGHTS                                                            = 0x0000481C                                       //col:5985
	VMCS_GUEST_GS_ACCESS_RIGHTS                                                            = 0x0000481E                                       //col:5986
	VMCS_GUEST_LDTR_ACCESS_RIGHTS                                                          = 0x00004820                                       //col:5987
	VMCS_GUEST_TR_ACCESS_RIGHTS                                                            = 0x00004822                                       //col:5988
	VMCS_GUEST_INTERRUPTIBILITY_STATE                                                      = 0x00004824                                       //col:5989
	VMCS_GUEST_ACTIVITY_STATE                                                              = 0x00004826                                       //col:5990
	VMCS_GUEST_SMBASE                                                                      = 0x00004828                                       //col:5991
	VMCS_GUEST_SYSENTER_CS                                                                 = 0x0000482A                                       //col:5992
	VMCS_GUEST_VMX_PREEMPTION_TIMER_VALUE                                                  = 0x0000482E                                       //col:5993
	VMCS_HOST_SYSENTER_CS                                                                  = 0x00004C00                                       //col:5994
	VMCS_CTRL_CR0_GUEST_HOST_MASK                                                          = 0x00006000                                       //col:5995
	VMCS_CTRL_CR4_GUEST_HOST_MASK                                                          = 0x00006002                                       //col:5996
	VMCS_CTRL_CR0_READ_SHADOW                                                              = 0x00006004                                       //col:5997
	VMCS_CTRL_CR4_READ_SHADOW                                                              = 0x00006006                                       //col:5998
	VMCS_CTRL_CR3_TARGET_VALUE_0                                                           = 0x00006008                                       //col:5999
	VMCS_CTRL_CR3_TARGET_VALUE_1                                                           = 0x0000600A                                       //col:6000
	VMCS_CTRL_CR3_TARGET_VALUE_2                                                           = 0x0000600C                                       //col:6001
	VMCS_CTRL_CR3_TARGET_VALUE_3                                                           = 0x0000600E                                       //col:6002
	VMCS_EXIT_QUALIFICATION                                                                = 0x00006400                                       //col:6003
	VMCS_IO_RCX                                                                            = 0x00006402                                       //col:6004
	VMCS_IO_RSI                                                                            = 0x00006404                                       //col:6005
	VMCS_IO_RDI                                                                            = 0x00006406                                       //col:6006
	VMCS_IO_RIP                                                                            = 0x00006408                                       //col:6007
	VMCS_EXIT_GUEST_LINEAR_ADDRESS                                                         = 0x0000640A                                       //col:6008
	VMCS_GUEST_CR0                                                                         = 0x00006800                                       //col:6009
	VMCS_GUEST_CR3                                                                         = 0x00006802                                       //col:6010
	VMCS_GUEST_CR4                                                                         = 0x00006804                                       //col:6011
	VMCS_GUEST_ES_BASE                                                                     = 0x00006806                                       //col:6012
	VMCS_GUEST_CS_BASE                                                                     = 0x00006808                                       //col:6013
	VMCS_GUEST_SS_BASE                                                                     = 0x0000680A                                       //col:6014
	VMCS_GUEST_DS_BASE                                                                     = 0x0000680C                                       //col:6015
	VMCS_GUEST_FS_BASE                                                                     = 0x0000680E                                       //col:6016
	VMCS_GUEST_GS_BASE                                                                     = 0x00006810                                       //col:6017
	VMCS_GUEST_LDTR_BASE                                                                   = 0x00006812                                       //col:6018
	VMCS_GUEST_TR_BASE                                                                     = 0x00006814                                       //col:6019
	VMCS_GUEST_GDTR_BASE                                                                   = 0x00006816                                       //col:6020
	VMCS_GUEST_IDTR_BASE                                                                   = 0x00006818                                       //col:6021
	VMCS_GUEST_DR7                                                                         = 0x0000681A                                       //col:6022
	VMCS_GUEST_RSP                                                                         = 0x0000681C                                       //col:6023
	VMCS_GUEST_RIP                                                                         = 0x0000681E                                       //col:6024
	VMCS_GUEST_RFLAGS                                                                      = 0x00006820                                       //col:6025
	VMCS_GUEST_PENDING_DEBUG_EXCEPTIONS                                                    = 0x00006822                                       //col:6026
	VMCS_GUEST_SYSENTER_ESP                                                                = 0x00006824                                       //col:6027
	VMCS_GUEST_SYSENTER_EIP                                                                = 0x00006826                                       //col:6028
	VMCS_GUEST_S_CET                                                                       = 0x00006C28                                       //col:6029
	VMCS_GUEST_SSP                                                                         = 0x00006C2A                                       //col:6030
	VMCS_GUEST_INTERRUPT_SSP_TABLE_ADDR                                                    = 0x00006C2C                                       //col:6031
	VMCS_HOST_CR0                                                                          = 0x00006C00                                       //col:6032
	VMCS_HOST_CR3                                                                          = 0x00006C02                                       //col:6033
	VMCS_HOST_CR4                                                                          = 0x00006C04                                       //col:6034
	VMCS_HOST_FS_BASE                                                                      = 0x00006C06                                       //col:6035
	VMCS_HOST_GS_BASE                                                                      = 0x00006C08                                       //col:6036
	VMCS_HOST_TR_BASE                                                                      = 0x00006C0A                                       //col:6037
	VMCS_HOST_GDTR_BASE                                                                    = 0x00006C0C                                       //col:6038
	VMCS_HOST_IDTR_BASE                                                                    = 0x00006C0E                                       //col:6039
	VMCS_HOST_SYSENTER_ESP                                                                 = 0x00006C10                                       //col:6040
	VMCS_HOST_SYSENTER_EIP                                                                 = 0x00006C12                                       //col:6041
	VMCS_HOST_RSP                                                                          = 0x00006C14                                       //col:6042
	VMCS_HOST_RIP                                                                          = 0x00006C16                                       //col:6043
	VMCS_HOST_S_CET                                                                        = 0x00006C18                                       //col:6044
	VMCS_HOST_SSP                                                                          = 0x00006C1A                                       //col:6045
	VMCS_HOST_INTERRUPT_SSP_TABLE_ADDR                                                     = 0x00006C1C                                       //col:6046
	VMENTRY_INTERRUPT_INFORMATION_VECTOR_BIT                                               = 0                                                //col:6047
	VMENTRY_INTERRUPT_INFORMATION_VECTOR_FLAG                                              = 0xFF                                             //col:6048
	VMENTRY_INTERRUPT_INFORMATION_VECTOR_MASK                                              = 0xFF                                             //col:6049
	VMENTRY_INTERRUPT_INFORMATION_VECTOR                                               (_) = (((_) >> 0) & 0xFF)                              //col:6050
	VMENTRY_INTERRUPT_INFORMATION_INTERRUPTION_TYPE_BIT                                    = 8                                                //col:6051
	VMENTRY_INTERRUPT_INFORMATION_INTERRUPTION_TYPE_FLAG                                   = 0x700                                            //col:6052
	VMENTRY_INTERRUPT_INFORMATION_INTERRUPTION_TYPE_MASK                                   = 0x07                                             //col:6053
	VMENTRY_INTERRUPT_INFORMATION_INTERRUPTION_TYPE                                    (_) = (((_) >> 8) & 0x07)                              //col:6054
	VMENTRY_INTERRUPT_INFORMATION_DELIVER_ERROR_CODE_BIT                                   = 11                                               //col:6055
	VMENTRY_INTERRUPT_INFORMATION_DELIVER_ERROR_CODE_FLAG                                  = 0x800                                            //col:6056
	VMENTRY_INTERRUPT_INFORMATION_DELIVER_ERROR_CODE_MASK                                  = 0x01                                             //col:6057
	VMENTRY_INTERRUPT_INFORMATION_DELIVER_ERROR_CODE                                   (_) = (((_) >> 11) & 0x01)                             //col:6058
	VMENTRY_INTERRUPT_INFORMATION_VALID_BIT                                                = 31                                               //col:6059
	VMENTRY_INTERRUPT_INFORMATION_VALID_FLAG                                               = 0x80000000                                       //col:6060
	VMENTRY_INTERRUPT_INFORMATION_VALID_MASK                                               = 0x01                                             //col:6061
	VMENTRY_INTERRUPT_INFORMATION_VALID                                                (_) = (((_) >> 31) & 0x01)                             //col:6062
	VMEXIT_INTERRUPT_INFORMATION_VECTOR_BIT                                                = 0                                                //col:6063
	VMEXIT_INTERRUPT_INFORMATION_VECTOR_FLAG                                               = 0xFF                                             //col:6064
	VMEXIT_INTERRUPT_INFORMATION_VECTOR_MASK                                               = 0xFF                                             //col:6065
	VMEXIT_INTERRUPT_INFORMATION_VECTOR                                                (_) = (((_) >> 0) & 0xFF)                              //col:6066
	VMEXIT_INTERRUPT_INFORMATION_INTERRUPTION_TYPE_BIT                                     = 8                                                //col:6067
	VMEXIT_INTERRUPT_INFORMATION_INTERRUPTION_TYPE_FLAG                                    = 0x700                                            //col:6068
	VMEXIT_INTERRUPT_INFORMATION_INTERRUPTION_TYPE_MASK                                    = 0x07                                             //col:6069
	VMEXIT_INTERRUPT_INFORMATION_INTERRUPTION_TYPE                                     (_) = (((_) >> 8) & 0x07)                              //col:6070
	VMEXIT_INTERRUPT_INFORMATION_ERROR_CODE_VALID_BIT                                      = 11                                               //col:6071
	VMEXIT_INTERRUPT_INFORMATION_ERROR_CODE_VALID_FLAG                                     = 0x800                                            //col:6072
	VMEXIT_INTERRUPT_INFORMATION_ERROR_CODE_VALID_MASK                                     = 0x01                                             //col:6073
	VMEXIT_INTERRUPT_INFORMATION_ERROR_CODE_VALID                                      (_) = (((_) >> 11) & 0x01)                             //col:6074
	VMEXIT_INTERRUPT_INFORMATION_NMI_UNBLOCKING_BIT                                        = 12                                               //col:6075
	VMEXIT_INTERRUPT_INFORMATION_NMI_UNBLOCKING_FLAG                                       = 0x1000                                           //col:6076
	VMEXIT_INTERRUPT_INFORMATION_NMI_UNBLOCKING_MASK                                       = 0x01                                             //col:6077
	VMEXIT_INTERRUPT_INFORMATION_NMI_UNBLOCKING                                        (_) = (((_) >> 12) & 0x01)                             //col:6078
	VMEXIT_INTERRUPT_INFORMATION_VALID_BIT                                                 = 31                                               //col:6079
	VMEXIT_INTERRUPT_INFORMATION_VALID_FLAG                                                = 0x80000000                                       //col:6080
	VMEXIT_INTERRUPT_INFORMATION_VALID_MASK                                                = 0x01                                             //col:6081
	VMEXIT_INTERRUPT_INFORMATION_VALID                                                 (_) = (((_) >> 31) & 0x01)                             //col:6082
	APIC_BASE_ADDRESS                                                                      = 0xFEE00000                                       //col:6083
	APIC_ID                                                                                = 0x00000020                                       //col:6084
	APIC_VERSION                                                                           = 0x00000030                                       //col:6085
	APIC_TASK_PRIORITY                                                                     = 0x00000080                                       //col:6086
	APIC_ARBITRATION_PRIORITY                                                              = 0x00000090                                       //col:6087
	APIC_PROCESSOR_PRIORITY                                                                = 0x000000A0                                       //col:6088
	APIC_EOI                                                                               = 0x000000B0                                       //col:6089
	APIC_REMOTE_READ                                                                       = 0x000000C0                                       //col:6090
	APIC_LOGICAL_DESTINATION                                                               = 0x000000D0                                       //col:6091
	APIC_DESTINATION_FORMAT                                                                = 0x000000E0                                       //col:6092
	APIC_SPURIOUS_INTERRUPT_VECTOR                                                         = 0x000000F0                                       //col:6093
	APIC_IN_SERVICE_BITS_31_0                                                              = 0x00000100                                       //col:6094
	APIC_IN_SERVICE_BITS_63_32                                                             = 0x00000110                                       //col:6095
	APIC_IN_SERVICE_BITS_95_64                                                             = 0x00000120                                       //col:6096
	APIC_IN_SERVICE_BITS_127_96                                                            = 0x00000130                                       //col:6097
	APIC_IN_SERVICE_BITS_159_128                                                           = 0x00000140                                       //col:6098
	APIC_IN_SERVICE_BITS_191_160                                                           = 0x00000150                                       //col:6099
	APIC_IN_SERVICE_BITS_223_192                                                           = 0x00000160                                       //col:6100
	APIC_IN_SERVICE_BITS_255_224                                                           = 0x00000170                                       //col:6101
	APIC_TRIGGER_MODE_BITS_31_0                                                            = 0x00000180                                       //col:6102
	APIC_TRIGGER_MODE_BITS_63_32                                                           = 0x00000190                                       //col:6103
	APIC_TRIGGER_MODE_BITS_95_64                                                           = 0x000001A0                                       //col:6104
	APIC_TRIGGER_MODE_BITS_127_96                                                          = 0x000001B0                                       //col:6105
	APIC_TRIGGER_MODE_BITS_159_128                                                         = 0x000001C0                                       //col:6106
	APIC_TRIGGER_MODE_BITS_191_160                                                         = 0x000001D0                                       //col:6107
	APIC_TRIGGER_MODE_BITS_223_192                                                         = 0x000001E0                                       //col:6108
	APIC_TRIGGER_MODE_BITS_255_224                                                         = 0x000001F0                                       //col:6109
	APIC_INTERRUPT_REQUEST_BITS_31_0                                                       = 0x00000200                                       //col:6110
	APIC_INTERRUPT_REQUEST_BITS_63_32                                                      = 0x00000210                                       //col:6111
	APIC_INTERRUPT_REQUEST_BITS_95_64                                                      = 0x00000220                                       //col:6112
	APIC_INTERRUPT_REQUEST_BITS_127_96                                                     = 0x00000230                                       //col:6113
	APIC_INTERRUPT_REQUEST_BITS_159_128                                                    = 0x00000240                                       //col:6114
	APIC_INTERRUPT_REQUEST_BITS_191_160                                                    = 0x00000250                                       //col:6115
	APIC_INTERRUPT_REQUEST_BITS_223_192                                                    = 0x00000260                                       //col:6116
	APIC_INTERRUPT_REQUEST_BITS_255_224                                                    = 0x00000270                                       //col:6117
	APIC_ERROR_STATUS                                                                      = 0x00000280                                       //col:6118
	APIC_LVT_CORRECTED_MACHINE_CHECK_INTERRUPT                                             = 0x000002F0                                       //col:6119
	APIC_INTERRUPT_COMMAND_BITS_0_31                                                       = 0x00000300                                       //col:6120
	APIC_INTERRUPT_COMMAND_BITS_32_63                                                      = 0x00000310                                       //col:6121
	APIC_LVT_TIMER                                                                         = 0x00000320                                       //col:6122
	APIC_LVT_THERMAL_SENSOR                                                                = 0x00000330                                       //col:6123
	APIC_LVT_PERFORMANCE_MONITORING_COUNTERS                                               = 0x00000340                                       //col:6124
	APIC_LVT_LINT0                                                                         = 0x00000350                                       //col:6125
	APIC_LVT_LINT1                                                                         = 0x00000360                                       //col:6126
	APIC_LVT_ERROR                                                                         = 0x00000370                                       //col:6127
	APIC_INITIAL_COUNT                                                                     = 0x00000380                                       //col:6128
	APIC_CURRENT_COUNT                                                                     = 0x00000390                                       //col:6129
	APIC_DIVIDE_CONFIGURATION                                                              = 0x000003E0                                       //col:6130
	EFLAGS_CARRY_FLAG_BIT                                                                  = 0                                                //col:6131
	EFLAGS_CARRY_FLAG_FLAG                                                                 = 0x01                                             //col:6132
	EFLAGS_CARRY_FLAG_MASK                                                                 = 0x01                                             //col:6133
	EFLAGS_CARRY_FLAG                                                                  (_) = (((_) >> 0) & 0x01)                              //col:6134
	EFLAGS_READ_AS_1_BIT                                                                   = 1                                                //col:6135
	EFLAGS_READ_AS_1_FLAG                                                                  = 0x02                                             //col:6136
	EFLAGS_READ_AS_1_MASK                                                                  = 0x01                                             //col:6137
	EFLAGS_READ_AS_1                                                                   (_) = (((_) >> 1) & 0x01)                              //col:6138
	EFLAGS_PARITY_FLAG_BIT                                                                 = 2                                                //col:6139
	EFLAGS_PARITY_FLAG_FLAG                                                                = 0x04                                             //col:6140
	EFLAGS_PARITY_FLAG_MASK                                                                = 0x01                                             //col:6141
	EFLAGS_PARITY_FLAG                                                                 (_) = (((_) >> 2) & 0x01)                              //col:6142
	EFLAGS_AUXILIARY_CARRY_FLAG_BIT                                                        = 4                                                //col:6143
	EFLAGS_AUXILIARY_CARRY_FLAG_FLAG                                                       = 0x10                                             //col:6144
	EFLAGS_AUXILIARY_CARRY_FLAG_MASK                                                       = 0x01                                             //col:6145
	EFLAGS_AUXILIARY_CARRY_FLAG                                                        (_) = (((_) >> 4) & 0x01)                              //col:6146
	EFLAGS_ZERO_FLAG_BIT                                                                   = 6                                                //col:6147
	EFLAGS_ZERO_FLAG_FLAG                                                                  = 0x40                                             //col:6148
	EFLAGS_ZERO_FLAG_MASK                                                                  = 0x01                                             //col:6149
	EFLAGS_ZERO_FLAG                                                                   (_) = (((_) >> 6) & 0x01)                              //col:6150
	EFLAGS_SIGN_FLAG_BIT                                                                   = 7                                                //col:6151
	EFLAGS_SIGN_FLAG_FLAG                                                                  = 0x80                                             //col:6152
	EFLAGS_SIGN_FLAG_MASK                                                                  = 0x01                                             //col:6153
	EFLAGS_SIGN_FLAG                                                                   (_) = (((_) >> 7) & 0x01)                              //col:6154
	EFLAGS_TRAP_FLAG_BIT                                                                   = 8                                                //col:6155
	EFLAGS_TRAP_FLAG_FLAG                                                                  = 0x100                                            //col:6156
	EFLAGS_TRAP_FLAG_MASK                                                                  = 0x01                                             //col:6157
	EFLAGS_TRAP_FLAG                                                                   (_) = (((_) >> 8) & 0x01)                              //col:6158
	EFLAGS_INTERRUPT_ENABLE_FLAG_BIT                                                       = 9                                                //col:6159
	EFLAGS_INTERRUPT_ENABLE_FLAG_FLAG                                                      = 0x200                                            //col:6160
	EFLAGS_INTERRUPT_ENABLE_FLAG_MASK                                                      = 0x01                                             //col:6161
	EFLAGS_INTERRUPT_ENABLE_FLAG                                                       (_) = (((_) >> 9) & 0x01)                              //col:6162
	EFLAGS_DIRECTION_FLAG_BIT                                                              = 10                                               //col:6163
	EFLAGS_DIRECTION_FLAG_FLAG                                                             = 0x400                                            //col:6164
	EFLAGS_DIRECTION_FLAG_MASK                                                             = 0x01                                             //col:6165
	EFLAGS_DIRECTION_FLAG                                                              (_) = (((_) >> 10) & 0x01)                             //col:6166
	EFLAGS_OVERFLOW_FLAG_BIT                                                               = 11                                               //col:6167
	EFLAGS_OVERFLOW_FLAG_FLAG                                                              = 0x800                                            //col:6168
	EFLAGS_OVERFLOW_FLAG_MASK                                                              = 0x01                                             //col:6169
	EFLAGS_OVERFLOW_FLAG                                                               (_) = (((_) >> 11) & 0x01)                             //col:6170
	EFLAGS_IO_PRIVILEGE_LEVEL_BIT                                                          = 12                                               //col:6171
	EFLAGS_IO_PRIVILEGE_LEVEL_FLAG                                                         = 0x3000                                           //col:6172
	EFLAGS_IO_PRIVILEGE_LEVEL_MASK                                                         = 0x03                                             //col:6173
	EFLAGS_IO_PRIVILEGE_LEVEL                                                          (_) = (((_) >> 12) & 0x03)                             //col:6174
	EFLAGS_NESTED_TASK_FLAG_BIT                                                            = 14                                               //col:6175
	EFLAGS_NESTED_TASK_FLAG_FLAG                                                           = 0x4000                                           //col:6176
	EFLAGS_NESTED_TASK_FLAG_MASK                                                           = 0x01                                             //col:6177
	EFLAGS_NESTED_TASK_FLAG                                                            (_) = (((_) >> 14) & 0x01)                             //col:6178
	EFLAGS_RESUME_FLAG_BIT                                                                 = 16                                               //col:6179
	EFLAGS_RESUME_FLAG_FLAG                                                                = 0x10000                                          //col:6180
	EFLAGS_RESUME_FLAG_MASK                                                                = 0x01                                             //col:6181
	EFLAGS_RESUME_FLAG                                                                 (_) = (((_) >> 16) & 0x01)                             //col:6182
	EFLAGS_VIRTUAL_8086_MODE_FLAG_BIT                                                      = 17                                               //col:6183
	EFLAGS_VIRTUAL_8086_MODE_FLAG_FLAG                                                     = 0x20000                                          //col:6184
	EFLAGS_VIRTUAL_8086_MODE_FLAG_MASK                                                     = 0x01                                             //col:6185
	EFLAGS_VIRTUAL_8086_MODE_FLAG                                                      (_) = (((_) >> 17) & 0x01)                             //col:6186
	EFLAGS_ALIGNMENT_CHECK_FLAG_BIT                                                        = 18                                               //col:6187
	EFLAGS_ALIGNMENT_CHECK_FLAG_FLAG                                                       = 0x40000                                          //col:6188
	EFLAGS_ALIGNMENT_CHECK_FLAG_MASK                                                       = 0x01                                             //col:6189
	EFLAGS_ALIGNMENT_CHECK_FLAG                                                        (_) = (((_) >> 18) & 0x01)                             //col:6190
	EFLAGS_VIRTUAL_INTERRUPT_FLAG_BIT                                                      = 19                                               //col:6191
	EFLAGS_VIRTUAL_INTERRUPT_FLAG_FLAG                                                     = 0x80000                                          //col:6192
	EFLAGS_VIRTUAL_INTERRUPT_FLAG_MASK                                                     = 0x01                                             //col:6193
	EFLAGS_VIRTUAL_INTERRUPT_FLAG                                                      (_) = (((_) >> 19) & 0x01)                             //col:6194
	EFLAGS_VIRTUAL_INTERRUPT_PENDING_FLAG_BIT                                              = 20                                               //col:6195
	EFLAGS_VIRTUAL_INTERRUPT_PENDING_FLAG_FLAG                                             = 0x100000                                         //col:6196
	EFLAGS_VIRTUAL_INTERRUPT_PENDING_FLAG_MASK                                             = 0x01                                             //col:6197
	EFLAGS_VIRTUAL_INTERRUPT_PENDING_FLAG                                              (_) = (((_) >> 20) & 0x01)                             //col:6198
	EFLAGS_IDENTIFICATION_FLAG_BIT                                                         = 21                                               //col:6199
	EFLAGS_IDENTIFICATION_FLAG_FLAG                                                        = 0x200000                                         //col:6200
	EFLAGS_IDENTIFICATION_FLAG_MASK                                                        = 0x01                                             //col:6201
	EFLAGS_IDENTIFICATION_FLAG                                                         (_) = (((_) >> 21) & 0x01)                             //col:6202
	RFLAGS_CARRY_FLAG_BIT                                                                  = 0                                                //col:6203
	RFLAGS_CARRY_FLAG_FLAG                                                                 = 0x01                                             //col:6204
	RFLAGS_CARRY_FLAG_MASK                                                                 = 0x01                                             //col:6205
	RFLAGS_CARRY_FLAG                                                                  (_) = (((_) >> 0) & 0x01)                              //col:6206
	RFLAGS_READ_AS_1_BIT                                                                   = 1                                                //col:6207
	RFLAGS_READ_AS_1_FLAG                                                                  = 0x02                                             //col:6208
	RFLAGS_READ_AS_1_MASK                                                                  = 0x01                                             //col:6209
	RFLAGS_READ_AS_1                                                                   (_) = (((_) >> 1) & 0x01)                              //col:6210
	RFLAGS_PARITY_FLAG_BIT                                                                 = 2                                                //col:6211
	RFLAGS_PARITY_FLAG_FLAG                                                                = 0x04                                             //col:6212
	RFLAGS_PARITY_FLAG_MASK                                                                = 0x01                                             //col:6213
	RFLAGS_PARITY_FLAG                                                                 (_) = (((_) >> 2) & 0x01)                              //col:6214
	RFLAGS_AUXILIARY_CARRY_FLAG_BIT                                                        = 4                                                //col:6215
	RFLAGS_AUXILIARY_CARRY_FLAG_FLAG                                                       = 0x10                                             //col:6216
	RFLAGS_AUXILIARY_CARRY_FLAG_MASK                                                       = 0x01                                             //col:6217
	RFLAGS_AUXILIARY_CARRY_FLAG                                                        (_) = (((_) >> 4) & 0x01)                              //col:6218
	RFLAGS_ZERO_FLAG_BIT                                                                   = 6                                                //col:6219
	RFLAGS_ZERO_FLAG_FLAG                                                                  = 0x40                                             //col:6220
	RFLAGS_ZERO_FLAG_MASK                                                                  = 0x01                                             //col:6221
	RFLAGS_ZERO_FLAG                                                                   (_) = (((_) >> 6) & 0x01)                              //col:6222
	RFLAGS_SIGN_FLAG_BIT                                                                   = 7                                                //col:6223
	RFLAGS_SIGN_FLAG_FLAG                                                                  = 0x80                                             //col:6224
	RFLAGS_SIGN_FLAG_MASK                                                                  = 0x01                                             //col:6225
	RFLAGS_SIGN_FLAG                                                                   (_) = (((_) >> 7) & 0x01)                              //col:6226
	RFLAGS_TRAP_FLAG_BIT                                                                   = 8                                                //col:6227
	RFLAGS_TRAP_FLAG_FLAG                                                                  = 0x100                                            //col:6228
	RFLAGS_TRAP_FLAG_MASK                                                                  = 0x01                                             //col:6229
	RFLAGS_TRAP_FLAG                                                                   (_) = (((_) >> 8) & 0x01)                              //col:6230
	RFLAGS_INTERRUPT_ENABLE_FLAG_BIT                                                       = 9                                                //col:6231
	RFLAGS_INTERRUPT_ENABLE_FLAG_FLAG                                                      = 0x200                                            //col:6232
	RFLAGS_INTERRUPT_ENABLE_FLAG_MASK                                                      = 0x01                                             //col:6233
	RFLAGS_INTERRUPT_ENABLE_FLAG                                                       (_) = (((_) >> 9) & 0x01)                              //col:6234
	RFLAGS_DIRECTION_FLAG_BIT                                                              = 10                                               //col:6235
	RFLAGS_DIRECTION_FLAG_FLAG                                                             = 0x400                                            //col:6236
	RFLAGS_DIRECTION_FLAG_MASK                                                             = 0x01                                             //col:6237
	RFLAGS_DIRECTION_FLAG                                                              (_) = (((_) >> 10) & 0x01)                             //col:6238
	RFLAGS_OVERFLOW_FLAG_BIT                                                               = 11                                               //col:6239
	RFLAGS_OVERFLOW_FLAG_FLAG                                                              = 0x800                                            //col:6240
	RFLAGS_OVERFLOW_FLAG_MASK                                                              = 0x01                                             //col:6241
	RFLAGS_OVERFLOW_FLAG                                                               (_) = (((_) >> 11) & 0x01)                             //col:6242
	RFLAGS_IO_PRIVILEGE_LEVEL_BIT                                                          = 12                                               //col:6243
	RFLAGS_IO_PRIVILEGE_LEVEL_FLAG                                                         = 0x3000                                           //col:6244
	RFLAGS_IO_PRIVILEGE_LEVEL_MASK                                                         = 0x03                                             //col:6245
	RFLAGS_IO_PRIVILEGE_LEVEL                                                          (_) = (((_) >> 12) & 0x03)                             //col:6246
	RFLAGS_NESTED_TASK_FLAG_BIT                                                            = 14                                               //col:6247
	RFLAGS_NESTED_TASK_FLAG_FLAG                                                           = 0x4000                                           //col:6248
	RFLAGS_NESTED_TASK_FLAG_MASK                                                           = 0x01                                             //col:6249
	RFLAGS_NESTED_TASK_FLAG                                                            (_) = (((_) >> 14) & 0x01)                             //col:6250
	RFLAGS_RESUME_FLAG_BIT                                                                 = 16                                               //col:6251
	RFLAGS_RESUME_FLAG_FLAG                                                                = 0x10000                                          //col:6252
	RFLAGS_RESUME_FLAG_MASK                                                                = 0x01                                             //col:6253
	RFLAGS_RESUME_FLAG                                                                 (_) = (((_) >> 16) & 0x01)                             //col:6254
	RFLAGS_VIRTUAL_8086_MODE_FLAG_BIT                                                      = 17                                               //col:6255
	RFLAGS_VIRTUAL_8086_MODE_FLAG_FLAG                                                     = 0x20000                                          //col:6256
	RFLAGS_VIRTUAL_8086_MODE_FLAG_MASK                                                     = 0x01                                             //col:6257
	RFLAGS_VIRTUAL_8086_MODE_FLAG                                                      (_) = (((_) >> 17) & 0x01)                             //col:6258
	RFLAGS_ALIGNMENT_CHECK_FLAG_BIT                                                        = 18                                               //col:6259
	RFLAGS_ALIGNMENT_CHECK_FLAG_FLAG                                                       = 0x40000                                          //col:6260
	RFLAGS_ALIGNMENT_CHECK_FLAG_MASK                                                       = 0x01                                             //col:6261
	RFLAGS_ALIGNMENT_CHECK_FLAG                                                        (_) = (((_) >> 18) & 0x01)                             //col:6262
	RFLAGS_VIRTUAL_INTERRUPT_FLAG_BIT                                                      = 19                                               //col:6263
	RFLAGS_VIRTUAL_INTERRUPT_FLAG_FLAG                                                     = 0x80000                                          //col:6264
	RFLAGS_VIRTUAL_INTERRUPT_FLAG_MASK                                                     = 0x01                                             //col:6265
	RFLAGS_VIRTUAL_INTERRUPT_FLAG                                                      (_) = (((_) >> 19) & 0x01)                             //col:6266
	RFLAGS_VIRTUAL_INTERRUPT_PENDING_FLAG_BIT                                              = 20                                               //col:6267
	RFLAGS_VIRTUAL_INTERRUPT_PENDING_FLAG_FLAG                                             = 0x100000                                         //col:6268
	RFLAGS_VIRTUAL_INTERRUPT_PENDING_FLAG_MASK                                             = 0x01                                             //col:6269
	RFLAGS_VIRTUAL_INTERRUPT_PENDING_FLAG                                              (_) = (((_) >> 20) & 0x01)                             //col:6270
	RFLAGS_IDENTIFICATION_FLAG_BIT                                                         = 21                                               //col:6271
	RFLAGS_IDENTIFICATION_FLAG_FLAG                                                        = 0x200000                                         //col:6272
	RFLAGS_IDENTIFICATION_FLAG_MASK                                                        = 0x01                                             //col:6273
	RFLAGS_IDENTIFICATION_FLAG                                                         (_) = (((_) >> 21) & 0x01)                             //col:6274
	CONTROL_PROTECTION_EXCEPTION_CPEC_BIT                                                  = 0                                                //col:6275
	CONTROL_PROTECTION_EXCEPTION_CPEC_FLAG                                                 = 0x7FFF                                           //col:6276
	CONTROL_PROTECTION_EXCEPTION_CPEC_MASK                                                 = 0x7FFF                                           //col:6277
	CONTROL_PROTECTION_EXCEPTION_CPEC                                                  (_) = (((_) >> 0) & 0x7FFF)                            //col:6278
	CONTROL_PROTECTION_EXCEPTION_ENCL_BIT                                                  = 15                                               //col:6279
	CONTROL_PROTECTION_EXCEPTION_ENCL_FLAG                                                 = 0x8000                                           //col:6280
	CONTROL_PROTECTION_EXCEPTION_ENCL_MASK                                                 = 0x01                                             //col:6281
	CONTROL_PROTECTION_EXCEPTION_ENCL                                                  (_) = (((_) >> 15) & 0x01)                             //col:6282
	EXCEPTION_ERROR_CODE_EXTERNAL_EVENT_BIT                                                = 0                                                //col:6283
	EXCEPTION_ERROR_CODE_EXTERNAL_EVENT_FLAG                                               = 0x01                                             //col:6284
	EXCEPTION_ERROR_CODE_EXTERNAL_EVENT_MASK                                               = 0x01                                             //col:6285
	EXCEPTION_ERROR_CODE_EXTERNAL_EVENT                                                (_) = (((_) >> 0) & 0x01)                              //col:6286
	EXCEPTION_ERROR_CODE_DESCRIPTOR_LOCATION_BIT                                           = 1                                                //col:6287
	EXCEPTION_ERROR_CODE_DESCRIPTOR_LOCATION_FLAG                                          = 0x02                                             //col:6288
	EXCEPTION_ERROR_CODE_DESCRIPTOR_LOCATION_MASK                                          = 0x01                                             //col:6289
	EXCEPTION_ERROR_CODE_DESCRIPTOR_LOCATION                                           (_) = (((_) >> 1) & 0x01)                              //col:6290
	EXCEPTION_ERROR_CODE_GDT_LDT_BIT                                                       = 2                                                //col:6291
	EXCEPTION_ERROR_CODE_GDT_LDT_FLAG                                                      = 0x04                                             //col:6292
	EXCEPTION_ERROR_CODE_GDT_LDT_MASK                                                      = 0x01                                             //col:6293
	EXCEPTION_ERROR_CODE_GDT_LDT                                                       (_) = (((_) >> 2) & 0x01)                              //col:6294
	EXCEPTION_ERROR_CODE_INDEX_BIT                                                         = 3                                                //col:6295
	EXCEPTION_ERROR_CODE_INDEX_FLAG                                                        = 0xFFF8                                           //col:6296
	EXCEPTION_ERROR_CODE_INDEX_MASK                                                        = 0x1FFF                                           //col:6297
	EXCEPTION_ERROR_CODE_INDEX                                                         (_) = (((_) >> 3) & 0x1FFF)                            //col:6298
	PAGE_FAULT_EXCEPTION_PRESENT_BIT                                                       = 0                                                //col:6299
	PAGE_FAULT_EXCEPTION_PRESENT_FLAG                                                      = 0x01                                             //col:6300
	PAGE_FAULT_EXCEPTION_PRESENT_MASK                                                      = 0x01                                             //col:6301
	PAGE_FAULT_EXCEPTION_PRESENT                                                       (_) = (((_) >> 0) & 0x01)                              //col:6302
	PAGE_FAULT_EXCEPTION_WRITE_BIT                                                         = 1                                                //col:6303
	PAGE_FAULT_EXCEPTION_WRITE_FLAG                                                        = 0x02                                             //col:6304
	PAGE_FAULT_EXCEPTION_WRITE_MASK                                                        = 0x01                                             //col:6305
	PAGE_FAULT_EXCEPTION_WRITE                                                         (_) = (((_) >> 1) & 0x01)                              //col:6306
	PAGE_FAULT_EXCEPTION_USER_MODE_ACCESS_BIT                                              = 2                                                //col:6307
	PAGE_FAULT_EXCEPTION_USER_MODE_ACCESS_FLAG                                             = 0x04                                             //col:6308
	PAGE_FAULT_EXCEPTION_USER_MODE_ACCESS_MASK                                             = 0x01                                             //col:6309
	PAGE_FAULT_EXCEPTION_USER_MODE_ACCESS                                              (_) = (((_) >> 2) & 0x01)                              //col:6310
	PAGE_FAULT_EXCEPTION_RESERVED_BIT_VIOLATION_BIT                                        = 3                                                //col:6311
	PAGE_FAULT_EXCEPTION_RESERVED_BIT_VIOLATION_FLAG                                       = 0x08                                             //col:6312
	PAGE_FAULT_EXCEPTION_RESERVED_BIT_VIOLATION_MASK                                       = 0x01                                             //col:6313
	PAGE_FAULT_EXCEPTION_RESERVED_BIT_VIOLATION                                        (_) = (((_) >> 3) & 0x01)                              //col:6314
	PAGE_FAULT_EXCEPTION_EXECUTE_BIT                                                       = 4                                                //col:6315
	PAGE_FAULT_EXCEPTION_EXECUTE_FLAG                                                      = 0x10                                             //col:6316
	PAGE_FAULT_EXCEPTION_EXECUTE_MASK                                                      = 0x01                                             //col:6317
	PAGE_FAULT_EXCEPTION_EXECUTE                                                       (_) = (((_) >> 4) & 0x01)                              //col:6318
	PAGE_FAULT_EXCEPTION_PROTECTION_KEY_VIOLATION_BIT                                      = 5                                                //col:6319
	PAGE_FAULT_EXCEPTION_PROTECTION_KEY_VIOLATION_FLAG                                     = 0x20                                             //col:6320
	PAGE_FAULT_EXCEPTION_PROTECTION_KEY_VIOLATION_MASK                                     = 0x01                                             //col:6321
	PAGE_FAULT_EXCEPTION_PROTECTION_KEY_VIOLATION                                      (_) = (((_) >> 5) & 0x01)                              //col:6322
	PAGE_FAULT_EXCEPTION_SHADOW_STACK_BIT                                                  = 6                                                //col:6323
	PAGE_FAULT_EXCEPTION_SHADOW_STACK_FLAG                                                 = 0x40                                             //col:6324
	PAGE_FAULT_EXCEPTION_SHADOW_STACK_MASK                                                 = 0x01                                             //col:6325
	PAGE_FAULT_EXCEPTION_SHADOW_STACK                                                  (_) = (((_) >> 6) & 0x01)                              //col:6326
	PAGE_FAULT_EXCEPTION_HLAT_BIT                                                          = 7                                                //col:6327
	PAGE_FAULT_EXCEPTION_HLAT_FLAG                                                         = 0x80                                             //col:6328
	PAGE_FAULT_EXCEPTION_HLAT_MASK                                                         = 0x01                                             //col:6329
	PAGE_FAULT_EXCEPTION_HLAT                                                          (_) = (((_) >> 7) & 0x01)                              //col:6330
	PAGE_FAULT_EXCEPTION_SGX_BIT                                                           = 15                                               //col:6331
	PAGE_FAULT_EXCEPTION_SGX_FLAG                                                          = 0x8000                                           //col:6332
	PAGE_FAULT_EXCEPTION_SGX_MASK                                                          = 0x01                                             //col:6333
	PAGE_FAULT_EXCEPTION_SGX                                                           (_) = (((_) >> 15) & 0x01)                             //col:6334
	MEMORY_TYPE_UNCACHEABLE                                                                = 0x00000000                                       //col:6335
	MEMORY_TYPE_WRITE_COMBINING                                                            = 0x00000001                                       //col:6336
	MEMORY_TYPE_WRITE_THROUGH                                                              = 0x00000004                                       //col:6337
	MEMORY_TYPE_WRITE_PROTECTED                                                            = 0x00000005                                       //col:6338
	MEMORY_TYPE_WRITE_BACK                                                                 = 0x00000006                                       //col:6339
	MEMORY_TYPE_UNCACHEABLE_MINUS                                                          = 0x00000007                                       //col:6340
	MEMORY_TYPE_INVALID                                                                    = 0x000000FF                                       //col:6341
	VTD_Lower64_PRESENT_BIT                                                                = 0                                                //col:6342
	VTD_Lower64_PRESENT_FLAG                                                               = 0x01                                             //col:6343
	VTD_Lower64_PRESENT_MASK                                                               = 0x01                                             //col:6344
	VTD_Lower64_PRESENT                                                                (_) = (((_) >> 0) & 0x01)                              //col:6345
	VTD_Lower64_CONTEXT_TABLE_POINTER_BIT                                                  = 12                                               //col:6346
	VTD_Lower64_CONTEXT_TABLE_POINTER_FLAG                                                 = 0xFFFFFFFFFFFFF000                               //col:6347
	VTD_Lower64_CONTEXT_TABLE_POINTER_MASK                                                 = 0xFFFFFFFFFFFFF                                  //col:6348
	VTD_Lower64_CONTEXT_TABLE_POINTER                                                  (_) = (((_) >> 12) & 0xFFFFFFFFFFFFF)                  //col:6349
	VTD_Upper64_RESERVED_BIT                                                               = 0                                                //col:6350
	VTD_Upper64_RESERVED_FLAG                                                              = 0xFFFFFFFFFFFFFFFF                               //col:6351
	VTD_Upper64_RESERVED_MASK                                                              = 0xFFFFFFFFFFFFFFFF                               //col:6352
	VTD_Upper64_RESERVED                                                               (_) = (((_) >> 0) & 0xFFFFFFFFFFFFFFFF)                //col:6353
	VTD_Lower64_PRESENT_BIT                                                                = 0                                                //col:6354
	VTD_Lower64_PRESENT_FLAG                                                               = 0x01                                             //col:6355
	VTD_Lower64_PRESENT_MASK                                                               = 0x01                                             //col:6356
	VTD_Lower64_PRESENT                                                                (_) = (((_) >> 0) & 0x01)                              //col:6357
	VTD_Lower64_FAULT_PROCESSING_DISABLE_BIT                                               = 1                                                //col:6358
	VTD_Lower64_FAULT_PROCESSING_DISABLE_FLAG                                              = 0x02                                             //col:6359
	VTD_Lower64_FAULT_PROCESSING_DISABLE_MASK                                              = 0x01                                             //col:6360
	VTD_Lower64_FAULT_PROCESSING_DISABLE                                               (_) = (((_) >> 1) & 0x01)                              //col:6361
	VTD_Lower64_TRANSLATION_TYPE_BIT                                                       = 2                                                //col:6362
	VTD_Lower64_TRANSLATION_TYPE_FLAG                                                      = 0x0C                                             //col:6363
	VTD_Lower64_TRANSLATION_TYPE_MASK                                                      = 0x03                                             //col:6364
	VTD_Lower64_TRANSLATION_TYPE                                                       (_) = (((_) >> 2) & 0x03)                              //col:6365
	VTD_Lower64_SECOND_LEVEL_PAGE_TRANSLATION_POINTER_BIT                                  = 12                                               //col:6366
	VTD_Lower64_SECOND_LEVEL_PAGE_TRANSLATION_POINTER_FLAG                                 = 0xFFFFFFFFFFFFF000                               //col:6367
	VTD_Lower64_SECOND_LEVEL_PAGE_TRANSLATION_POINTER_MASK                                 = 0xFFFFFFFFFFFFF                                  //col:6368
	VTD_Lower64_SECOND_LEVEL_PAGE_TRANSLATION_POINTER                                  (_) = (((_) >> 12) & 0xFFFFFFFFFFFFF)                  //col:6369
	VTD_Upper64_ADDRESS_WIDTH_BIT                                                          = 0                                                //col:6370
	VTD_Upper64_ADDRESS_WIDTH_FLAG                                                         = 0x07                                             //col:6371
	VTD_Upper64_ADDRESS_WIDTH_MASK                                                         = 0x07                                             //col:6372
	VTD_Upper64_ADDRESS_WIDTH                                                          (_) = (((_) >> 0) & 0x07)                              //col:6373
	VTD_Upper64_IGNORED_BIT                                                                = 3                                                //col:6374
	VTD_Upper64_IGNORED_FLAG                                                               = 0x78                                             //col:6375
	VTD_Upper64_IGNORED_MASK                                                               = 0x0F                                             //col:6376
	VTD_Upper64_IGNORED                                                                (_) = (((_) >> 3) & 0x0F)                              //col:6377
	VTD_Upper64_DOMAIN_IDENTIFIER_BIT                                                      = 8                                                //col:6378
	VTD_Upper64_DOMAIN_IDENTIFIER_FLAG                                                     = 0x3FF00                                          //col:6379
	VTD_Upper64_DOMAIN_IDENTIFIER_MASK                                                     = 0x3FF                                            //col:6380
	VTD_Upper64_DOMAIN_IDENTIFIER                                                      (_) = (((_) >> 8) & 0x3FF)                             //col:6381
	VTD_ROOT_ENTRY_COUNT                                                                   = 0x00000100                                       //col:6382
	VTD_CONTEXT_ENTRY_COUNT                                                                = 0x00000100                                       //col:6383
	VTD_VERSION                                                                            = 0x00000000                                       //col:6384
	VTD_VERSION_MINOR_BIT                                                                  = 0                                                //col:6385
	VTD_VERSION_MINOR_FLAG                                                                 = 0x0F                                             //col:6386
	VTD_VERSION_MINOR_MASK                                                                 = 0x0F                                             //col:6387
	VTD_VERSION_MINOR                                                                  (_) = (((_) >> 0) & 0x0F)                              //col:6388
	VTD_VERSION_MAJOR_BIT                                                                  = 4                                                //col:6389
	VTD_VERSION_MAJOR_FLAG                                                                 = 0xF0                                             //col:6390
	VTD_VERSION_MAJOR_MASK                                                                 = 0x0F                                             //col:6391
	VTD_VERSION_MAJOR                                                                  (_) = (((_) >> 4) & 0x0F)                              //col:6392
	VTD_CAPABILITY                                                                         = 0x00000008                                       //col:6393
	VTD_CAPABILITY_NUMBER_OF_DOMAINS_SUPPORTED_BIT                                         = 0                                                //col:6394
	VTD_CAPABILITY_NUMBER_OF_DOMAINS_SUPPORTED_FLAG                                        = 0x07                                             //col:6395
	VTD_CAPABILITY_NUMBER_OF_DOMAINS_SUPPORTED_MASK                                        = 0x07                                             //col:6396
	VTD_CAPABILITY_NUMBER_OF_DOMAINS_SUPPORTED                                         (_) = (((_) >> 0) & 0x07)                              //col:6397
	VTD_CAPABILITY_ADVANCED_FAULT_LOGGING_BIT                                              = 3                                                //col:6398
	VTD_CAPABILITY_ADVANCED_FAULT_LOGGING_FLAG                                             = 0x08                                             //col:6399
	VTD_CAPABILITY_ADVANCED_FAULT_LOGGING_MASK                                             = 0x01                                             //col:6400
	VTD_CAPABILITY_ADVANCED_FAULT_LOGGING                                              (_) = (((_) >> 3) & 0x01)                              //col:6401
	VTD_CAPABILITY_REQUIRED_WRITE_BUFFER_FLUSHING_BIT                                      = 4                                                //col:6402
	VTD_CAPABILITY_REQUIRED_WRITE_BUFFER_FLUSHING_FLAG                                     = 0x10                                             //col:6403
	VTD_CAPABILITY_REQUIRED_WRITE_BUFFER_FLUSHING_MASK                                     = 0x01                                             //col:6404
	VTD_CAPABILITY_REQUIRED_WRITE_BUFFER_FLUSHING                                      (_) = (((_) >> 4) & 0x01)                              //col:6405
	VTD_CAPABILITY_PROTECTED_LOW_MEMORY_REGION_BIT                                         = 5                                                //col:6406
	VTD_CAPABILITY_PROTECTED_LOW_MEMORY_REGION_FLAG                                        = 0x20                                             //col:6407
	VTD_CAPABILITY_PROTECTED_LOW_MEMORY_REGION_MASK                                        = 0x01                                             //col:6408
	VTD_CAPABILITY_PROTECTED_LOW_MEMORY_REGION                                         (_) = (((_) >> 5) & 0x01)                              //col:6409
	VTD_CAPABILITY_PROTECTED_HIGH_MEMORY_REGION_BIT                                        = 6                                                //col:6410
	VTD_CAPABILITY_PROTECTED_HIGH_MEMORY_REGION_FLAG                                       = 0x40                                             //col:6411
	VTD_CAPABILITY_PROTECTED_HIGH_MEMORY_REGION_MASK                                       = 0x01                                             //col:6412
	VTD_CAPABILITY_PROTECTED_HIGH_MEMORY_REGION                                        (_) = (((_) >> 6) & 0x01)                              //col:6413
	VTD_CAPABILITY_CACHING_MODE_BIT                                                        = 7                                                //col:6414
	VTD_CAPABILITY_CACHING_MODE_FLAG                                                       = 0x80                                             //col:6415
	VTD_CAPABILITY_CACHING_MODE_MASK                                                       = 0x01                                             //col:6416
	VTD_CAPABILITY_CACHING_MODE                                                        (_) = (((_) >> 7) & 0x01)                              //col:6417
	VTD_CAPABILITY_SUPPORTED_ADJUSTED_GUEST_ADDRESS_WIDTHS_BIT                             = 8                                                //col:6418
	VTD_CAPABILITY_SUPPORTED_ADJUSTED_GUEST_ADDRESS_WIDTHS_FLAG                            = 0x1F00                                           //col:6419
	VTD_CAPABILITY_SUPPORTED_ADJUSTED_GUEST_ADDRESS_WIDTHS_MASK                            = 0x1F                                             //col:6420
	VTD_CAPABILITY_SUPPORTED_ADJUSTED_GUEST_ADDRESS_WIDTHS                             (_) = (((_) >> 8) & 0x1F)                              //col:6421
	VTD_CAPABILITY_MAXIMUM_GUEST_ADDRESS_WIDTH_BIT                                         = 16                                               //col:6422
	VTD_CAPABILITY_MAXIMUM_GUEST_ADDRESS_WIDTH_FLAG                                        = 0x3F0000                                         //col:6423
	VTD_CAPABILITY_MAXIMUM_GUEST_ADDRESS_WIDTH_MASK                                        = 0x3F                                             //col:6424
	VTD_CAPABILITY_MAXIMUM_GUEST_ADDRESS_WIDTH                                         (_) = (((_) >> 16) & 0x3F)                             //col:6425
	VTD_CAPABILITY_ZERO_LENGTH_READ_BIT                                                    = 22                                               //col:6426
	VTD_CAPABILITY_ZERO_LENGTH_READ_FLAG                                                   = 0x400000                                         //col:6427
	VTD_CAPABILITY_ZERO_LENGTH_READ_MASK                                                   = 0x01                                             //col:6428
	VTD_CAPABILITY_ZERO_LENGTH_READ                                                    (_) = (((_) >> 22) & 0x01)                             //col:6429
	VTD_CAPABILITY_DEPRECATED_BIT                                                          = 23                                               //col:6430
	VTD_CAPABILITY_DEPRECATED_FLAG                                                         = 0x800000                                         //col:6431
	VTD_CAPABILITY_DEPRECATED_MASK                                                         = 0x01                                             //col:6432
	VTD_CAPABILITY_DEPRECATED                                                          (_) = (((_) >> 23) & 0x01)                             //col:6433
	VTD_CAPABILITY_FAULT_RECORDING_REGISTER_OFFSET_BIT                                     = 24                                               //col:6434
	VTD_CAPABILITY_FAULT_RECORDING_REGISTER_OFFSET_FLAG                                    = 0x3FF000000                                      //col:6435
	VTD_CAPABILITY_FAULT_RECORDING_REGISTER_OFFSET_MASK                                    = 0x3FF                                            //col:6436
	VTD_CAPABILITY_FAULT_RECORDING_REGISTER_OFFSET                                     (_) = (((_) >> 24) & 0x3FF)                            //col:6437
	VTD_CAPABILITY_SECOND_LEVEL_LARGE_PAGE_SUPPORT_BIT                                     = 34                                               //col:6438
	VTD_CAPABILITY_SECOND_LEVEL_LARGE_PAGE_SUPPORT_FLAG                                    = 0x3C00000000                                     //col:6439
	VTD_CAPABILITY_SECOND_LEVEL_LARGE_PAGE_SUPPORT_MASK                                    = 0x0F                                             //col:6440
	VTD_CAPABILITY_SECOND_LEVEL_LARGE_PAGE_SUPPORT                                     (_) = (((_) >> 34) & 0x0F)                             //col:6441
	VTD_CAPABILITY_PAGE_SELECTIVE_INVALIDATION_BIT                                         = 39                                               //col:6442
	VTD_CAPABILITY_PAGE_SELECTIVE_INVALIDATION_FLAG                                        = 0x8000000000                                     //col:6443
	VTD_CAPABILITY_PAGE_SELECTIVE_INVALIDATION_MASK                                        = 0x01                                             //col:6444
	VTD_CAPABILITY_PAGE_SELECTIVE_INVALIDATION                                         (_) = (((_) >> 39) & 0x01)                             //col:6445
	VTD_CAPABILITY_NUMBER_OF_FAULT_RECORDING_REGISTERS_BIT                                 = 40                                               //col:6446
	VTD_CAPABILITY_NUMBER_OF_FAULT_RECORDING_REGISTERS_FLAG                                = 0xFF0000000000                                   //col:6447
	VTD_CAPABILITY_NUMBER_OF_FAULT_RECORDING_REGISTERS_MASK                                = 0xFF                                             //col:6448
	VTD_CAPABILITY_NUMBER_OF_FAULT_RECORDING_REGISTERS                                 (_) = (((_) >> 40) & 0xFF)                             //col:6449
	VTD_CAPABILITY_MAXIMUM_ADDRESS_MASK_VALUE_BIT                                          = 48                                               //col:6450
	VTD_CAPABILITY_MAXIMUM_ADDRESS_MASK_VALUE_FLAG                                         = 0x3F000000000000                                 //col:6451
	VTD_CAPABILITY_MAXIMUM_ADDRESS_MASK_VALUE_MASK                                         = 0x3F                                             //col:6452
	VTD_CAPABILITY_MAXIMUM_ADDRESS_MASK_VALUE                                          (_) = (((_) >> 48) & 0x3F)                             //col:6453
	VTD_CAPABILITY_WRITE_DRAINING_BIT                                                      = 54                                               //col:6454
	VTD_CAPABILITY_WRITE_DRAINING_FLAG                                                     = 0x40000000000000                                 //col:6455
	VTD_CAPABILITY_WRITE_DRAINING_MASK                                                     = 0x01                                             //col:6456
	VTD_CAPABILITY_WRITE_DRAINING                                                      (_) = (((_) >> 54) & 0x01)                             //col:6457
	VTD_CAPABILITY_READ_DRAINING_BIT                                                       = 55                                               //col:6458
	VTD_CAPABILITY_READ_DRAINING_FLAG                                                      = 0x80000000000000                                 //col:6459
	VTD_CAPABILITY_READ_DRAINING_MASK                                                      = 0x01                                             //col:6460
	VTD_CAPABILITY_READ_DRAINING                                                       (_) = (((_) >> 55) & 0x01)                             //col:6461
	VTD_CAPABILITY_FIRST_LEVEL_1GBYTE_PAGE_SUPPORT_BIT                                     = 56                                               //col:6462
	VTD_CAPABILITY_FIRST_LEVEL_1GBYTE_PAGE_SUPPORT_FLAG                                    = 0x100000000000000                                //col:6463
	VTD_CAPABILITY_FIRST_LEVEL_1GBYTE_PAGE_SUPPORT_MASK                                    = 0x01                                             //col:6464
	VTD_CAPABILITY_FIRST_LEVEL_1GBYTE_PAGE_SUPPORT                                     (_) = (((_) >> 56) & 0x01)                             //col:6465
	VTD_CAPABILITY_POSTED_INTERRUPTS_SUPPORT_BIT                                           = 59                                               //col:6466
	VTD_CAPABILITY_POSTED_INTERRUPTS_SUPPORT_FLAG                                          = 0x800000000000000                                //col:6467
	VTD_CAPABILITY_POSTED_INTERRUPTS_SUPPORT_MASK                                          = 0x01                                             //col:6468
	VTD_CAPABILITY_POSTED_INTERRUPTS_SUPPORT                                           (_) = (((_) >> 59) & 0x01)                             //col:6469
	VTD_CAPABILITY_FIRST_LEVEL_5LEVEL_PAGING_SUPPORT_BIT                                   = 60                                               //col:6470
	VTD_CAPABILITY_FIRST_LEVEL_5LEVEL_PAGING_SUPPORT_FLAG                                  = 0x1000000000000000                               //col:6471
	VTD_CAPABILITY_FIRST_LEVEL_5LEVEL_PAGING_SUPPORT_MASK                                  = 0x01                                             //col:6472
	VTD_CAPABILITY_FIRST_LEVEL_5LEVEL_PAGING_SUPPORT                                   (_) = (((_) >> 60) & 0x01)                             //col:6473
	VTD_CAPABILITY_ENHANCED_SET_INTERRUPT_REMAP_TABLE_POINTER_SUPPORT_BIT                  = 62                                               //col:6474
	VTD_CAPABILITY_ENHANCED_SET_INTERRUPT_REMAP_TABLE_POINTER_SUPPORT_FLAG                 = 0x4000000000000000                               //col:6475
	VTD_CAPABILITY_ENHANCED_SET_INTERRUPT_REMAP_TABLE_POINTER_SUPPORT_MASK                 = 0x01                                             //col:6476
	VTD_CAPABILITY_ENHANCED_SET_INTERRUPT_REMAP_TABLE_POINTER_SUPPORT                  (_) = (((_) >> 62) & 0x01)                             //col:6477
	VTD_CAPABILITY_ENHANCED_SET_ROOT_TABLE_POINTER_SUPPORT_BIT                             = 63                                               //col:6478
	VTD_CAPABILITY_ENHANCED_SET_ROOT_TABLE_POINTER_SUPPORT_FLAG                            = 0x8000000000000000                               //col:6479
	VTD_CAPABILITY_ENHANCED_SET_ROOT_TABLE_POINTER_SUPPORT_MASK                            = 0x01                                             //col:6480
	VTD_CAPABILITY_ENHANCED_SET_ROOT_TABLE_POINTER_SUPPORT                             (_) = (((_) >> 63) & 0x01)                             //col:6481
	VTD_EXTENDED_CAPABILITY                                                                = 0x00000010                                       //col:6482
	VTD_EXTENDED_CAPABILITY_PAGE_WALK_COHERENCY_BIT                                        = 0                                                //col:6483
	VTD_EXTENDED_CAPABILITY_PAGE_WALK_COHERENCY_FLAG                                       = 0x01                                             //col:6484
	VTD_EXTENDED_CAPABILITY_PAGE_WALK_COHERENCY_MASK                                       = 0x01                                             //col:6485
	VTD_EXTENDED_CAPABILITY_PAGE_WALK_COHERENCY                                        (_) = (((_) >> 0) & 0x01)                              //col:6486
	VTD_EXTENDED_CAPABILITY_QUEUED_INVALIDATION_SUPPORT_BIT                                = 1                                                //col:6487
	VTD_EXTENDED_CAPABILITY_QUEUED_INVALIDATION_SUPPORT_FLAG                               = 0x02                                             //col:6488
	VTD_EXTENDED_CAPABILITY_QUEUED_INVALIDATION_SUPPORT_MASK                               = 0x01                                             //col:6489
	VTD_EXTENDED_CAPABILITY_QUEUED_INVALIDATION_SUPPORT                                (_) = (((_) >> 1) & 0x01)                              //col:6490
	VTD_EXTENDED_CAPABILITY_DEVICE_TLB_SUPPORT_BIT                                         = 2                                                //col:6491
	VTD_EXTENDED_CAPABILITY_DEVICE_TLB_SUPPORT_FLAG                                        = 0x04                                             //col:6492
	VTD_EXTENDED_CAPABILITY_DEVICE_TLB_SUPPORT_MASK                                        = 0x01                                             //col:6493
	VTD_EXTENDED_CAPABILITY_DEVICE_TLB_SUPPORT                                         (_) = (((_) >> 2) & 0x01)                              //col:6494
	VTD_EXTENDED_CAPABILITY_INTERRUPT_REMAPPING_SUPPORT_BIT                                = 3                                                //col:6495
	VTD_EXTENDED_CAPABILITY_INTERRUPT_REMAPPING_SUPPORT_FLAG                               = 0x08                                             //col:6496
	VTD_EXTENDED_CAPABILITY_INTERRUPT_REMAPPING_SUPPORT_MASK                               = 0x01                                             //col:6497
	VTD_EXTENDED_CAPABILITY_INTERRUPT_REMAPPING_SUPPORT                                (_) = (((_) >> 3) & 0x01)                              //col:6498
	VTD_EXTENDED_CAPABILITY_EXTENDED_INTERRUPT_MODE_BIT                                    = 4                                                //col:6499
	VTD_EXTENDED_CAPABILITY_EXTENDED_INTERRUPT_MODE_FLAG                                   = 0x10                                             //col:6500
	VTD_EXTENDED_CAPABILITY_EXTENDED_INTERRUPT_MODE_MASK                                   = 0x01                                             //col:6501
	VTD_EXTENDED_CAPABILITY_EXTENDED_INTERRUPT_MODE                                    (_) = (((_) >> 4) & 0x01)                              //col:6502
	VTD_EXTENDED_CAPABILITY_DEPRECATED1_BIT                                                = 5                                                //col:6503
	VTD_EXTENDED_CAPABILITY_DEPRECATED1_FLAG                                               = 0x20                                             //col:6504
	VTD_EXTENDED_CAPABILITY_DEPRECATED1_MASK                                               = 0x01                                             //col:6505
	VTD_EXTENDED_CAPABILITY_DEPRECATED1                                                (_) = (((_) >> 5) & 0x01)                              //col:6506
	VTD_EXTENDED_CAPABILITY_PASS_THROUGH_BIT                                               = 6                                                //col:6507
	VTD_EXTENDED_CAPABILITY_PASS_THROUGH_FLAG                                              = 0x40                                             //col:6508
	VTD_EXTENDED_CAPABILITY_PASS_THROUGH_MASK                                              = 0x01                                             //col:6509
	VTD_EXTENDED_CAPABILITY_PASS_THROUGH                                               (_) = (((_) >> 6) & 0x01)                              //col:6510
	VTD_EXTENDED_CAPABILITY_SNOOP_CONTROL_BIT                                              = 7                                                //col:6511
	VTD_EXTENDED_CAPABILITY_SNOOP_CONTROL_FLAG                                             = 0x80                                             //col:6512
	VTD_EXTENDED_CAPABILITY_SNOOP_CONTROL_MASK                                             = 0x01                                             //col:6513
	VTD_EXTENDED_CAPABILITY_SNOOP_CONTROL                                              (_) = (((_) >> 7) & 0x01)                              //col:6514
	VTD_EXTENDED_CAPABILITY_IOTLB_REGISTER_OFFSET_BIT                                      = 8                                                //col:6515
	VTD_EXTENDED_CAPABILITY_IOTLB_REGISTER_OFFSET_FLAG                                     = 0x3FF00                                          //col:6516
	VTD_EXTENDED_CAPABILITY_IOTLB_REGISTER_OFFSET_MASK                                     = 0x3FF                                            //col:6517
	VTD_EXTENDED_CAPABILITY_IOTLB_REGISTER_OFFSET                                      (_) = (((_) >> 8) & 0x3FF)                             //col:6518
	VTD_EXTENDED_CAPABILITY_MAXIMUM_HANDLE_MASK_VALUE_BIT                                  = 20                                               //col:6519
	VTD_EXTENDED_CAPABILITY_MAXIMUM_HANDLE_MASK_VALUE_FLAG                                 = 0xF00000                                         //col:6520
	VTD_EXTENDED_CAPABILITY_MAXIMUM_HANDLE_MASK_VALUE_MASK                                 = 0x0F                                             //col:6521
	VTD_EXTENDED_CAPABILITY_MAXIMUM_HANDLE_MASK_VALUE                                  (_) = (((_) >> 20) & 0x0F)                             //col:6522
	VTD_EXTENDED_CAPABILITY_DEPRECATED2_BIT                                                = 24                                               //col:6523
	VTD_EXTENDED_CAPABILITY_DEPRECATED2_FLAG                                               = 0x1000000                                        //col:6524
	VTD_EXTENDED_CAPABILITY_DEPRECATED2_MASK                                               = 0x01                                             //col:6525
	VTD_EXTENDED_CAPABILITY_DEPRECATED2                                                (_) = (((_) >> 24) & 0x01)                             //col:6526
	VTD_EXTENDED_CAPABILITY_MEMORY_TYPE_SUPPORT_BIT                                        = 25                                               //col:6527
	VTD_EXTENDED_CAPABILITY_MEMORY_TYPE_SUPPORT_FLAG                                       = 0x2000000                                        //col:6528
	VTD_EXTENDED_CAPABILITY_MEMORY_TYPE_SUPPORT_MASK                                       = 0x01                                             //col:6529
	VTD_EXTENDED_CAPABILITY_MEMORY_TYPE_SUPPORT                                        (_) = (((_) >> 25) & 0x01)                             //col:6530
	VTD_EXTENDED_CAPABILITY_NESTED_TRANSLATION_SUPPORT_BIT                                 = 26                                               //col:6531
	VTD_EXTENDED_CAPABILITY_NESTED_TRANSLATION_SUPPORT_FLAG                                = 0x4000000                                        //col:6532
	VTD_EXTENDED_CAPABILITY_NESTED_TRANSLATION_SUPPORT_MASK                                = 0x01                                             //col:6533
	VTD_EXTENDED_CAPABILITY_NESTED_TRANSLATION_SUPPORT                                 (_) = (((_) >> 26) & 0x01)                             //col:6534
	VTD_EXTENDED_CAPABILITY_DEPRECATED3_BIT                                                = 28                                               //col:6535
	VTD_EXTENDED_CAPABILITY_DEPRECATED3_FLAG                                               = 0x10000000                                       //col:6536
	VTD_EXTENDED_CAPABILITY_DEPRECATED3_MASK                                               = 0x01                                             //col:6537
	VTD_EXTENDED_CAPABILITY_DEPRECATED3                                                (_) = (((_) >> 28) & 0x01)                             //col:6538
	VTD_EXTENDED_CAPABILITY_PAGE_REQUEST_SUPPORT_BIT                                       = 29                                               //col:6539
	VTD_EXTENDED_CAPABILITY_PAGE_REQUEST_SUPPORT_FLAG                                      = 0x20000000                                       //col:6540
	VTD_EXTENDED_CAPABILITY_PAGE_REQUEST_SUPPORT_MASK                                      = 0x01                                             //col:6541
	VTD_EXTENDED_CAPABILITY_PAGE_REQUEST_SUPPORT                                       (_) = (((_) >> 29) & 0x01)                             //col:6542
	VTD_EXTENDED_CAPABILITY_EXECUTE_REQUEST_SUPPORT_BIT                                    = 30                                               //col:6543
	VTD_EXTENDED_CAPABILITY_EXECUTE_REQUEST_SUPPORT_FLAG                                   = 0x40000000                                       //col:6544
	VTD_EXTENDED_CAPABILITY_EXECUTE_REQUEST_SUPPORT_MASK                                   = 0x01                                             //col:6545
	VTD_EXTENDED_CAPABILITY_EXECUTE_REQUEST_SUPPORT                                    (_) = (((_) >> 30) & 0x01)                             //col:6546
	VTD_EXTENDED_CAPABILITY_NO_WRITE_FLAG_SUPPORT_BIT                                      = 33                                               //col:6547
	VTD_EXTENDED_CAPABILITY_NO_WRITE_FLAG_SUPPORT_FLAG                                     = 0x200000000                                      //col:6548
	VTD_EXTENDED_CAPABILITY_NO_WRITE_FLAG_SUPPORT_MASK                                     = 0x01                                             //col:6549
	VTD_EXTENDED_CAPABILITY_NO_WRITE_FLAG_SUPPORT                                      (_) = (((_) >> 33) & 0x01)                             //col:6550
	VTD_EXTENDED_CAPABILITY_EXTENDED_ACCESSED_FLAG_SUPPORT_BIT                             = 34                                               //col:6551
	VTD_EXTENDED_CAPABILITY_EXTENDED_ACCESSED_FLAG_SUPPORT_FLAG                            = 0x400000000                                      //col:6552
	VTD_EXTENDED_CAPABILITY_EXTENDED_ACCESSED_FLAG_SUPPORT_MASK                            = 0x01                                             //col:6553
	VTD_EXTENDED_CAPABILITY_EXTENDED_ACCESSED_FLAG_SUPPORT                             (_) = (((_) >> 34) & 0x01)                             //col:6554
	VTD_EXTENDED_CAPABILITY_PASID_SIZE_SUPPORTED_BIT                                       = 35                                               //col:6555
	VTD_EXTENDED_CAPABILITY_PASID_SIZE_SUPPORTED_FLAG                                      = 0xF800000000                                     //col:6556
	VTD_EXTENDED_CAPABILITY_PASID_SIZE_SUPPORTED_MASK                                      = 0x1F                                             //col:6557
	VTD_EXTENDED_CAPABILITY_PASID_SIZE_SUPPORTED                                       (_) = (((_) >> 35) & 0x1F)                             //col:6558
	VTD_EXTENDED_CAPABILITY_PROCESS_ADDRESS_SPACE_ID_SUPPORT_BIT                           = 40                                               //col:6559
	VTD_EXTENDED_CAPABILITY_PROCESS_ADDRESS_SPACE_ID_SUPPORT_FLAG                          = 0x10000000000                                    //col:6560
	VTD_EXTENDED_CAPABILITY_PROCESS_ADDRESS_SPACE_ID_SUPPORT_MASK                          = 0x01                                             //col:6561
	VTD_EXTENDED_CAPABILITY_PROCESS_ADDRESS_SPACE_ID_SUPPORT                           (_) = (((_) >> 40) & 0x01)                             //col:6562
	VTD_EXTENDED_CAPABILITY_DEVICE_TLB_INVALIDATION_THROTTLE_BIT                           = 41                                               //col:6563
	VTD_EXTENDED_CAPABILITY_DEVICE_TLB_INVALIDATION_THROTTLE_FLAG                          = 0x20000000000                                    //col:6564
	VTD_EXTENDED_CAPABILITY_DEVICE_TLB_INVALIDATION_THROTTLE_MASK                          = 0x01                                             //col:6565
	VTD_EXTENDED_CAPABILITY_DEVICE_TLB_INVALIDATION_THROTTLE                           (_) = (((_) >> 41) & 0x01)                             //col:6566
	VTD_EXTENDED_CAPABILITY_PAGE_REQUEST_DRAIN_SUPPORT_BIT                                 = 42                                               //col:6567
	VTD_EXTENDED_CAPABILITY_PAGE_REQUEST_DRAIN_SUPPORT_FLAG                                = 0x40000000000                                    //col:6568
	VTD_EXTENDED_CAPABILITY_PAGE_REQUEST_DRAIN_SUPPORT_MASK                                = 0x01                                             //col:6569
	VTD_EXTENDED_CAPABILITY_PAGE_REQUEST_DRAIN_SUPPORT                                 (_) = (((_) >> 42) & 0x01)                             //col:6570
	VTD_EXTENDED_CAPABILITY_SCALABLE_MODE_TRANSLATION_SUPPORT_BIT                          = 43                                               //col:6571
	VTD_EXTENDED_CAPABILITY_SCALABLE_MODE_TRANSLATION_SUPPORT_FLAG                         = 0x80000000000                                    //col:6572
	VTD_EXTENDED_CAPABILITY_SCALABLE_MODE_TRANSLATION_SUPPORT_MASK                         = 0x01                                             //col:6573
	VTD_EXTENDED_CAPABILITY_SCALABLE_MODE_TRANSLATION_SUPPORT                          (_) = (((_) >> 43) & 0x01)                             //col:6574
	VTD_EXTENDED_CAPABILITY_VIRTUAL_COMMAND_SUPPORT_BIT                                    = 44                                               //col:6575
	VTD_EXTENDED_CAPABILITY_VIRTUAL_COMMAND_SUPPORT_FLAG                                   = 0x100000000000                                   //col:6576
	VTD_EXTENDED_CAPABILITY_VIRTUAL_COMMAND_SUPPORT_MASK                                   = 0x01                                             //col:6577
	VTD_EXTENDED_CAPABILITY_VIRTUAL_COMMAND_SUPPORT                                    (_) = (((_) >> 44) & 0x01)                             //col:6578
	VTD_EXTENDED_CAPABILITY_SECOND_LEVEL_ACCESSED_DIRTY_SUPPORT_BIT                        = 45                                               //col:6579
	VTD_EXTENDED_CAPABILITY_SECOND_LEVEL_ACCESSED_DIRTY_SUPPORT_FLAG                       = 0x200000000000                                   //col:6580
	VTD_EXTENDED_CAPABILITY_SECOND_LEVEL_ACCESSED_DIRTY_SUPPORT_MASK                       = 0x01                                             //col:6581
	VTD_EXTENDED_CAPABILITY_SECOND_LEVEL_ACCESSED_DIRTY_SUPPORT                        (_) = (((_) >> 45) & 0x01)                             //col:6582
	VTD_EXTENDED_CAPABILITY_SECOND_LEVEL_TRANSLATION_SUPPORT_BIT                           = 46                                               //col:6583
	VTD_EXTENDED_CAPABILITY_SECOND_LEVEL_TRANSLATION_SUPPORT_FLAG                          = 0x400000000000                                   //col:6584
	VTD_EXTENDED_CAPABILITY_SECOND_LEVEL_TRANSLATION_SUPPORT_MASK                          = 0x01                                             //col:6585
	VTD_EXTENDED_CAPABILITY_SECOND_LEVEL_TRANSLATION_SUPPORT                           (_) = (((_) >> 46) & 0x01)                             //col:6586
	VTD_EXTENDED_CAPABILITY_FIRST_LEVEL_TRANSLATION_SUPPORT_BIT                            = 47                                               //col:6587
	VTD_EXTENDED_CAPABILITY_FIRST_LEVEL_TRANSLATION_SUPPORT_FLAG                           = 0x800000000000                                   //col:6588
	VTD_EXTENDED_CAPABILITY_FIRST_LEVEL_TRANSLATION_SUPPORT_MASK                           = 0x01                                             //col:6589
	VTD_EXTENDED_CAPABILITY_FIRST_LEVEL_TRANSLATION_SUPPORT                            (_) = (((_) >> 47) & 0x01)                             //col:6590
	VTD_EXTENDED_CAPABILITY_SCALABLE_MODE_PAGE_WALK_COHERENCY_BIT                          = 48                                               //col:6591
	VTD_EXTENDED_CAPABILITY_SCALABLE_MODE_PAGE_WALK_COHERENCY_FLAG                         = 0x1000000000000                                  //col:6592
	VTD_EXTENDED_CAPABILITY_SCALABLE_MODE_PAGE_WALK_COHERENCY_MASK                         = 0x01                                             //col:6593
	VTD_EXTENDED_CAPABILITY_SCALABLE_MODE_PAGE_WALK_COHERENCY                          (_) = (((_) >> 48) & 0x01)                             //col:6594
	VTD_EXTENDED_CAPABILITY_RID_PASID_SUPPORT_BIT                                          = 49                                               //col:6595
	VTD_EXTENDED_CAPABILITY_RID_PASID_SUPPORT_FLAG                                         = 0x2000000000000                                  //col:6596
	VTD_EXTENDED_CAPABILITY_RID_PASID_SUPPORT_MASK                                         = 0x01                                             //col:6597
	VTD_EXTENDED_CAPABILITY_RID_PASID_SUPPORT                                          (_) = (((_) >> 49) & 0x01)                             //col:6598
	VTD_EXTENDED_CAPABILITY_ABORT_DMA_MODE_SUPPORT_BIT                                     = 52                                               //col:6599
	VTD_EXTENDED_CAPABILITY_ABORT_DMA_MODE_SUPPORT_FLAG                                    = 0x10000000000000                                 //col:6600
	VTD_EXTENDED_CAPABILITY_ABORT_DMA_MODE_SUPPORT_MASK                                    = 0x01                                             //col:6601
	VTD_EXTENDED_CAPABILITY_ABORT_DMA_MODE_SUPPORT                                     (_) = (((_) >> 52) & 0x01)                             //col:6602
	VTD_EXTENDED_CAPABILITY_RID_PRIV_SUPPORT_BIT                                           = 53                                               //col:6603
	VTD_EXTENDED_CAPABILITY_RID_PRIV_SUPPORT_FLAG                                          = 0x20000000000000                                 //col:6604
	VTD_EXTENDED_CAPABILITY_RID_PRIV_SUPPORT_MASK                                          = 0x01                                             //col:6605
	VTD_EXTENDED_CAPABILITY_RID_PRIV_SUPPORT                                           (_) = (((_) >> 53) & 0x01)                             //col:6606
	VTD_GLOBAL_COMMAND                                                                     = 0x00000018                                       //col:6607
	VTD_GLOBAL_COMMAND_COMPATIBILITY_FORMAT_INTERRUPT_BIT                                  = 23                                               //col:6608
	VTD_GLOBAL_COMMAND_COMPATIBILITY_FORMAT_INTERRUPT_FLAG                                 = 0x800000                                         //col:6609
	VTD_GLOBAL_COMMAND_COMPATIBILITY_FORMAT_INTERRUPT_MASK                                 = 0x01                                             //col:6610
	VTD_GLOBAL_COMMAND_COMPATIBILITY_FORMAT_INTERRUPT                                  (_) = (((_) >> 23) & 0x01)                             //col:6611
	VTD_GLOBAL_COMMAND_SET_INTERRUPT_REMAP_TABLE_POINTER_BIT                               = 24                                               //col:6612
	VTD_GLOBAL_COMMAND_SET_INTERRUPT_REMAP_TABLE_POINTER_FLAG                              = 0x1000000                                        //col:6613
	VTD_GLOBAL_COMMAND_SET_INTERRUPT_REMAP_TABLE_POINTER_MASK                              = 0x01                                             //col:6614
	VTD_GLOBAL_COMMAND_SET_INTERRUPT_REMAP_TABLE_POINTER                               (_) = (((_) >> 24) & 0x01)                             //col:6615
	VTD_GLOBAL_COMMAND_INTERRUPT_REMAPPING_ENABLE_BIT                                      = 25                                               //col:6616
	VTD_GLOBAL_COMMAND_INTERRUPT_REMAPPING_ENABLE_FLAG                                     = 0x2000000                                        //col:6617
	VTD_GLOBAL_COMMAND_INTERRUPT_REMAPPING_ENABLE_MASK                                     = 0x01                                             //col:6618
	VTD_GLOBAL_COMMAND_INTERRUPT_REMAPPING_ENABLE                                      (_) = (((_) >> 25) & 0x01)                             //col:6619
	VTD_GLOBAL_COMMAND_QUEUED_INVALIDATION_ENABLE_BIT                                      = 26                                               //col:6620
	VTD_GLOBAL_COMMAND_QUEUED_INVALIDATION_ENABLE_FLAG                                     = 0x4000000                                        //col:6621
	VTD_GLOBAL_COMMAND_QUEUED_INVALIDATION_ENABLE_MASK                                     = 0x01                                             //col:6622
	VTD_GLOBAL_COMMAND_QUEUED_INVALIDATION_ENABLE                                      (_) = (((_) >> 26) & 0x01)                             //col:6623
	VTD_GLOBAL_COMMAND_WRITE_BUFFER_FLUSH_BIT                                              = 27                                               //col:6624
	VTD_GLOBAL_COMMAND_WRITE_BUFFER_FLUSH_FLAG                                             = 0x8000000                                        //col:6625
	VTD_GLOBAL_COMMAND_WRITE_BUFFER_FLUSH_MASK                                             = 0x01                                             //col:6626
	VTD_GLOBAL_COMMAND_WRITE_BUFFER_FLUSH                                              (_) = (((_) >> 27) & 0x01)                             //col:6627
	VTD_GLOBAL_COMMAND_ENABLE_ADVANCED_FAULT_LOGGING_BIT                                   = 28                                               //col:6628
	VTD_GLOBAL_COMMAND_ENABLE_ADVANCED_FAULT_LOGGING_FLAG                                  = 0x10000000                                       //col:6629
	VTD_GLOBAL_COMMAND_ENABLE_ADVANCED_FAULT_LOGGING_MASK                                  = 0x01                                             //col:6630
	VTD_GLOBAL_COMMAND_ENABLE_ADVANCED_FAULT_LOGGING                                   (_) = (((_) >> 28) & 0x01)                             //col:6631
	VTD_GLOBAL_COMMAND_SET_FAULT_LOG_BIT                                                   = 29                                               //col:6632
	VTD_GLOBAL_COMMAND_SET_FAULT_LOG_FLAG                                                  = 0x20000000                                       //col:6633
	VTD_GLOBAL_COMMAND_SET_FAULT_LOG_MASK                                                  = 0x01                                             //col:6634
	VTD_GLOBAL_COMMAND_SET_FAULT_LOG                                                   (_) = (((_) >> 29) & 0x01)                             //col:6635
	VTD_GLOBAL_COMMAND_SET_ROOT_TABLE_POINTER_BIT                                          = 30                                               //col:6636
	VTD_GLOBAL_COMMAND_SET_ROOT_TABLE_POINTER_FLAG                                         = 0x40000000                                       //col:6637
	VTD_GLOBAL_COMMAND_SET_ROOT_TABLE_POINTER_MASK                                         = 0x01                                             //col:6638
	VTD_GLOBAL_COMMAND_SET_ROOT_TABLE_POINTER                                          (_) = (((_) >> 30) & 0x01)                             //col:6639
	VTD_GLOBAL_COMMAND_TRANSLATION_ENABLE_BIT                                              = 31                                               //col:6640
	VTD_GLOBAL_COMMAND_TRANSLATION_ENABLE_FLAG                                             = 0x80000000                                       //col:6641
	VTD_GLOBAL_COMMAND_TRANSLATION_ENABLE_MASK                                             = 0x01                                             //col:6642
	VTD_GLOBAL_COMMAND_TRANSLATION_ENABLE                                              (_) = (((_) >> 31) & 0x01)                             //col:6643
	VTD_GLOBAL_STATUS                                                                      = 0x0000001C                                       //col:6644
	VTD_GLOBAL_STATUS_COMPATIBILITY_FORMAT_INTERRUPT_STATUS_BIT                            = 23                                               //col:6645
	VTD_GLOBAL_STATUS_COMPATIBILITY_FORMAT_INTERRUPT_STATUS_FLAG                           = 0x800000                                         //col:6646
	VTD_GLOBAL_STATUS_COMPATIBILITY_FORMAT_INTERRUPT_STATUS_MASK                           = 0x01                                             //col:6647
	VTD_GLOBAL_STATUS_COMPATIBILITY_FORMAT_INTERRUPT_STATUS                            (_) = (((_) >> 23) & 0x01)                             //col:6648
	VTD_GLOBAL_STATUS_INTERRUPT_REMAPPING_TABLE_POINTER_STATUS_BIT                         = 24                                               //col:6649
	VTD_GLOBAL_STATUS_INTERRUPT_REMAPPING_TABLE_POINTER_STATUS_FLAG                        = 0x1000000                                        //col:6650
	VTD_GLOBAL_STATUS_INTERRUPT_REMAPPING_TABLE_POINTER_STATUS_MASK                        = 0x01                                             //col:6651
	VTD_GLOBAL_STATUS_INTERRUPT_REMAPPING_TABLE_POINTER_STATUS                         (_) = (((_) >> 24) & 0x01)                             //col:6652
	VTD_GLOBAL_STATUS_INTERRUPT_REMAPPING_ENABLE_STATUS_BIT                                = 25                                               //col:6653
	VTD_GLOBAL_STATUS_INTERRUPT_REMAPPING_ENABLE_STATUS_FLAG                               = 0x2000000                                        //col:6654
	VTD_GLOBAL_STATUS_INTERRUPT_REMAPPING_ENABLE_STATUS_MASK                               = 0x01                                             //col:6655
	VTD_GLOBAL_STATUS_INTERRUPT_REMAPPING_ENABLE_STATUS                                (_) = (((_) >> 25) & 0x01)                             //col:6656
	VTD_GLOBAL_STATUS_QUEUED_INVALIDATION_ENABLE_STATUS_BIT                                = 26                                               //col:6657
	VTD_GLOBAL_STATUS_QUEUED_INVALIDATION_ENABLE_STATUS_FLAG                               = 0x4000000                                        //col:6658
	VTD_GLOBAL_STATUS_QUEUED_INVALIDATION_ENABLE_STATUS_MASK                               = 0x01                                             //col:6659
	VTD_GLOBAL_STATUS_QUEUED_INVALIDATION_ENABLE_STATUS                                (_) = (((_) >> 26) & 0x01)                             //col:6660
	VTD_GLOBAL_STATUS_WRITE_BUFFER_FLUSH_STATUS_BIT                                        = 27                                               //col:6661
	VTD_GLOBAL_STATUS_WRITE_BUFFER_FLUSH_STATUS_FLAG                                       = 0x8000000                                        //col:6662
	VTD_GLOBAL_STATUS_WRITE_BUFFER_FLUSH_STATUS_MASK                                       = 0x01                                             //col:6663
	VTD_GLOBAL_STATUS_WRITE_BUFFER_FLUSH_STATUS                                        (_) = (((_) >> 27) & 0x01)                             //col:6664
	VTD_GLOBAL_STATUS_ADVANCED_FAULT_LOGGING_STATUS_BIT                                    = 28                                               //col:6665
	VTD_GLOBAL_STATUS_ADVANCED_FAULT_LOGGING_STATUS_FLAG                                   = 0x10000000                                       //col:6666
	VTD_GLOBAL_STATUS_ADVANCED_FAULT_LOGGING_STATUS_MASK                                   = 0x01                                             //col:6667
	VTD_GLOBAL_STATUS_ADVANCED_FAULT_LOGGING_STATUS                                    (_) = (((_) >> 28) & 0x01)                             //col:6668
	VTD_GLOBAL_STATUS_FAULT_LOG_STATUS_BIT                                                 = 29                                               //col:6669
	VTD_GLOBAL_STATUS_FAULT_LOG_STATUS_FLAG                                                = 0x20000000                                       //col:6670
	VTD_GLOBAL_STATUS_FAULT_LOG_STATUS_MASK                                                = 0x01                                             //col:6671
	VTD_GLOBAL_STATUS_FAULT_LOG_STATUS                                                 (_) = (((_) >> 29) & 0x01)                             //col:6672
	VTD_GLOBAL_STATUS_ROOT_TABLE_POINTER_STATUS_BIT                                        = 30                                               //col:6673
	VTD_GLOBAL_STATUS_ROOT_TABLE_POINTER_STATUS_FLAG                                       = 0x40000000                                       //col:6674
	VTD_GLOBAL_STATUS_ROOT_TABLE_POINTER_STATUS_MASK                                       = 0x01                                             //col:6675
	VTD_GLOBAL_STATUS_ROOT_TABLE_POINTER_STATUS                                        (_) = (((_) >> 30) & 0x01)                             //col:6676
	VTD_GLOBAL_STATUS_TRANSLATION_ENABLE_STATUS_BIT                                        = 31                                               //col:6677
	VTD_GLOBAL_STATUS_TRANSLATION_ENABLE_STATUS_FLAG                                       = 0x80000000                                       //col:6678
	VTD_GLOBAL_STATUS_TRANSLATION_ENABLE_STATUS_MASK                                       = 0x01                                             //col:6679
	VTD_GLOBAL_STATUS_TRANSLATION_ENABLE_STATUS                                        (_) = (((_) >> 31) & 0x01)                             //col:6680
	VTD_ROOT_TABLE_ADDRESS                                                                 = 0x00000020                                       //col:6681
	VTD_ROOT_TABLE_ADDRESS_TRANSLATION_TABLE_MODE_BIT                                      = 10                                               //col:6682
	VTD_ROOT_TABLE_ADDRESS_TRANSLATION_TABLE_MODE_FLAG                                     = 0xC00                                            //col:6683
	VTD_ROOT_TABLE_ADDRESS_TRANSLATION_TABLE_MODE_MASK                                     = 0x03                                             //col:6684
	VTD_ROOT_TABLE_ADDRESS_TRANSLATION_TABLE_MODE                                      (_) = (((_) >> 10) & 0x03)                             //col:6685
	VTD_ROOT_TABLE_ADDRESS_ROOT_TABLE_ADDRESS_BIT                                          = 12                                               //col:6686
	VTD_ROOT_TABLE_ADDRESS_ROOT_TABLE_ADDRESS_FLAG                                         = 0xFFFFFFFFFFFFF000                               //col:6687
	VTD_ROOT_TABLE_ADDRESS_ROOT_TABLE_ADDRESS_MASK                                         = 0xFFFFFFFFFFFFF                                  //col:6688
	VTD_ROOT_TABLE_ADDRESS_ROOT_TABLE_ADDRESS                                          (_) = (((_) >> 12) & 0xFFFFFFFFFFFFF)                  //col:6689
	VTD_CONTEXT_COMMAND                                                                    = 0x00000028                                       //col:6690
	VTD_CONTEXT_COMMAND_DOMAIN_ID_BIT                                                      = 0                                                //col:6691
	VTD_CONTEXT_COMMAND_DOMAIN_ID_FLAG                                                     = 0xFFFF                                           //col:6692
	VTD_CONTEXT_COMMAND_DOMAIN_ID_MASK                                                     = 0xFFFF                                           //col:6693
	VTD_CONTEXT_COMMAND_DOMAIN_ID                                                      (_) = (((_) >> 0) & 0xFFFF)                            //col:6694
	VTD_CONTEXT_COMMAND_SOURCE_ID_BIT                                                      = 16                                               //col:6695
	VTD_CONTEXT_COMMAND_SOURCE_ID_FLAG                                                     = 0xFFFF0000                                       //col:6696
	VTD_CONTEXT_COMMAND_SOURCE_ID_MASK                                                     = 0xFFFF                                           //col:6697
	VTD_CONTEXT_COMMAND_SOURCE_ID                                                      (_) = (((_) >> 16) & 0xFFFF)                           //col:6698
	VTD_CONTEXT_COMMAND_FUNCTION_MASK_BIT                                                  = 32                                               //col:6699
	VTD_CONTEXT_COMMAND_FUNCTION_MASK_FLAG                                                 = 0x300000000                                      //col:6700
	VTD_CONTEXT_COMMAND_FUNCTION_MASK_MASK                                                 = 0x03                                             //col:6701
	VTD_CONTEXT_COMMAND_FUNCTION_MASK                                                  (_) = (((_) >> 32) & 0x03)                             //col:6702
	VTD_CONTEXT_COMMAND_CONTEXT_ACTUAL_INVALIDATION_GRANULARITY_BIT                        = 59                                               //col:6703
	VTD_CONTEXT_COMMAND_CONTEXT_ACTUAL_INVALIDATION_GRANULARITY_FLAG                       = 0x1800000000000000                               //col:6704
	VTD_CONTEXT_COMMAND_CONTEXT_ACTUAL_INVALIDATION_GRANULARITY_MASK                       = 0x03                                             //col:6705
	VTD_CONTEXT_COMMAND_CONTEXT_ACTUAL_INVALIDATION_GRANULARITY                        (_) = (((_) >> 59) & 0x03)                             //col:6706
	VTD_CONTEXT_COMMAND_CONTEXT_INVALIDATION_REQUEST_GRANULARITY_BIT                       = 61                                               //col:6707
	VTD_CONTEXT_COMMAND_CONTEXT_INVALIDATION_REQUEST_GRANULARITY_FLAG                      = 0x6000000000000000                               //col:6708
	VTD_CONTEXT_COMMAND_CONTEXT_INVALIDATION_REQUEST_GRANULARITY_MASK                      = 0x03                                             //col:6709
	VTD_CONTEXT_COMMAND_CONTEXT_INVALIDATION_REQUEST_GRANULARITY                       (_) = (((_) >> 61) & 0x03)                             //col:6710
	VTD_CONTEXT_COMMAND_INVALIDATE_CONTEXT_CACHE_BIT                                       = 63                                               //col:6711
	VTD_CONTEXT_COMMAND_INVALIDATE_CONTEXT_CACHE_FLAG                                      = 0x8000000000000000                               //col:6712
	VTD_CONTEXT_COMMAND_INVALIDATE_CONTEXT_CACHE_MASK                                      = 0x01                                             //col:6713
	VTD_CONTEXT_COMMAND_INVALIDATE_CONTEXT_CACHE                                       (_) = (((_) >> 63) & 0x01)                             //col:6714
	VTD_INVALIDATE_ADDRESS                                                                 = 0x00000000                                       //col:6715
	VTD_INVALIDATE_ADDRESS_ADDRESS_MASK_BIT                                                = 0                                                //col:6716
	VTD_INVALIDATE_ADDRESS_ADDRESS_MASK_FLAG                                               = 0x3F                                             //col:6717
	VTD_INVALIDATE_ADDRESS_ADDRESS_MASK_MASK                                               = 0x3F                                             //col:6718
	VTD_INVALIDATE_ADDRESS_ADDRESS_MASK                                                (_) = (((_) >> 0) & 0x3F)                              //col:6719
	VTD_INVALIDATE_ADDRESS_INVALIDATION_HINT_BIT                                           = 6                                                //col:6720
	VTD_INVALIDATE_ADDRESS_INVALIDATION_HINT_FLAG                                          = 0x40                                             //col:6721
	VTD_INVALIDATE_ADDRESS_INVALIDATION_HINT_MASK                                          = 0x01                                             //col:6722
	VTD_INVALIDATE_ADDRESS_INVALIDATION_HINT                                           (_) = (((_) >> 6) & 0x01)                              //col:6723
	VTD_INVALIDATE_ADDRESS_PAGE_ADDRESS_BIT                                                = 12                                               //col:6724
	VTD_INVALIDATE_ADDRESS_PAGE_ADDRESS_FLAG                                               = 0xFFFFFFFFFFFFF000                               //col:6725
	VTD_INVALIDATE_ADDRESS_PAGE_ADDRESS_MASK                                               = 0xFFFFFFFFFFFFF                                  //col:6726
	VTD_INVALIDATE_ADDRESS_PAGE_ADDRESS                                                (_) = (((_) >> 12) & 0xFFFFFFFFFFFFF)                  //col:6727
	VTD_IOTLB_INVALIDATE                                                                   = 0x00000008                                       //col:6728
	VTD_IOTLB_INVALIDATE_DOMAIN_ID_BIT                                                     = 32                                               //col:6729
	VTD_IOTLB_INVALIDATE_DOMAIN_ID_FLAG                                                    = 0xFFFF00000000                                   //col:6730
	VTD_IOTLB_INVALIDATE_DOMAIN_ID_MASK                                                    = 0xFFFF                                           //col:6731
	VTD_IOTLB_INVALIDATE_DOMAIN_ID                                                     (_) = (((_) >> 32) & 0xFFFF)                           //col:6732
	VTD_IOTLB_INVALIDATE_DRAIN_WRITES_BIT                                                  = 48                                               //col:6733
	VTD_IOTLB_INVALIDATE_DRAIN_WRITES_FLAG                                                 = 0x1000000000000                                  //col:6734
	VTD_IOTLB_INVALIDATE_DRAIN_WRITES_MASK                                                 = 0x01                                             //col:6735
	VTD_IOTLB_INVALIDATE_DRAIN_WRITES                                                  (_) = (((_) >> 48) & 0x01)                             //col:6736
	VTD_IOTLB_INVALIDATE_DRAIN_READS_BIT                                                   = 49                                               //col:6737
	VTD_IOTLB_INVALIDATE_DRAIN_READS_FLAG                                                  = 0x2000000000000                                  //col:6738
	VTD_IOTLB_INVALIDATE_DRAIN_READS_MASK                                                  = 0x01                                             //col:6739
	VTD_IOTLB_INVALIDATE_DRAIN_READS                                                   (_) = (((_) >> 49) & 0x01)                             //col:6740
	VTD_IOTLB_INVALIDATE_IOTLB_ACTUAL_INVALIDATION_GRANULARITY_BIT                         = 57                                               //col:6741
	VTD_IOTLB_INVALIDATE_IOTLB_ACTUAL_INVALIDATION_GRANULARITY_FLAG                        = 0x600000000000000                                //col:6742
	VTD_IOTLB_INVALIDATE_IOTLB_ACTUAL_INVALIDATION_GRANULARITY_MASK                        = 0x03                                             //col:6743
	VTD_IOTLB_INVALIDATE_IOTLB_ACTUAL_INVALIDATION_GRANULARITY                         (_) = (((_) >> 57) & 0x03)                             //col:6744
	VTD_IOTLB_INVALIDATE_IOTLB_INVALIDATION_REQUEST_GRANULARITY_BIT                        = 60                                               //col:6745
	VTD_IOTLB_INVALIDATE_IOTLB_INVALIDATION_REQUEST_GRANULARITY_FLAG                       = 0x3000000000000000                               //col:6746
	VTD_IOTLB_INVALIDATE_IOTLB_INVALIDATION_REQUEST_GRANULARITY_MASK                       = 0x03                                             //col:6747
	VTD_IOTLB_INVALIDATE_IOTLB_INVALIDATION_REQUEST_GRANULARITY                        (_) = (((_) >> 60) & 0x03)                             //col:6748
	VTD_IOTLB_INVALIDATE_INVALIDATE_IOTLB_BIT                                              = 63                                               //col:6749
	VTD_IOTLB_INVALIDATE_INVALIDATE_IOTLB_FLAG                                             = 0x8000000000000000                               //col:6750
	VTD_IOTLB_INVALIDATE_INVALIDATE_IOTLB_MASK                                             = 0x01                                             //col:6751
	VTD_IOTLB_INVALIDATE_INVALIDATE_IOTLB                                              (_) = (((_) >> 63) & 0x01)                             //col:6752
	XCR0_X87_BIT                                                                           = 0                                                //col:6753
	XCR0_X87_FLAG                                                                          = 0x01                                             //col:6754
	XCR0_X87_MASK                                                                          = 0x01                                             //col:6755
	XCR0_X87                                                                           (_) = (((_) >> 0) & 0x01)                              //col:6756
	XCR0_SSE_BIT                                                                           = 1                                                //col:6757
	XCR0_SSE_FLAG                                                                          = 0x02                                             //col:6758
	XCR0_SSE_MASK                                                                          = 0x01                                             //col:6759
	XCR0_SSE                                                                           (_) = (((_) >> 1) & 0x01)                              //col:6760
	XCR0_AVX_BIT                                                                           = 2                                                //col:6761
	XCR0_AVX_FLAG                                                                          = 0x04                                             //col:6762
	XCR0_AVX_MASK                                                                          = 0x01                                             //col:6763
	XCR0_AVX                                                                           (_) = (((_) >> 2) & 0x01)                              //col:6764
	XCR0_BNDREG_BIT                                                                        = 3                                                //col:6765
	XCR0_BNDREG_FLAG                                                                       = 0x08                                             //col:6766
	XCR0_BNDREG_MASK                                                                       = 0x01                                             //col:6767
	XCR0_BNDREG                                                                        (_) = (((_) >> 3) & 0x01)                              //col:6768
	XCR0_BNDCSR_BIT                                                                        = 4                                                //col:6769
	XCR0_BNDCSR_FLAG                                                                       = 0x10                                             //col:6770
	XCR0_BNDCSR_MASK                                                                       = 0x01                                             //col:6771
	XCR0_BNDCSR                                                                        (_) = (((_) >> 4) & 0x01)                              //col:6772
	XCR0_OPMASK_BIT                                                                        = 5                                                //col:6773
	XCR0_OPMASK_FLAG                                                                       = 0x20                                             //col:6774
	XCR0_OPMASK_MASK                                                                       = 0x01                                             //col:6775
	XCR0_OPMASK                                                                        (_) = (((_) >> 5) & 0x01)                              //col:6776
	XCR0_ZMM_HI256_BIT                                                                     = 6                                                //col:6777
	XCR0_ZMM_HI256_FLAG                                                                    = 0x40                                             //col:6778
	XCR0_ZMM_HI256_MASK                                                                    = 0x01                                             //col:6779
	XCR0_ZMM_HI256                                                                     (_) = (((_) >> 6) & 0x01)                              //col:6780
	XCR0_ZMM_HI16_BIT                                                                      = 7                                                //col:6781
	XCR0_ZMM_HI16_FLAG                                                                     = 0x80                                             //col:6782
	XCR0_ZMM_HI16_MASK                                                                     = 0x01                                             //col:6783
	XCR0_ZMM_HI16                                                                      (_) = (((_) >> 7) & 0x01)                              //col:6784
	XCR0_PKRU_BIT                                                                          = 9                                                //col:6785
	XCR0_PKRU_FLAG                                                                         = 0x200                                            //col:6786
	XCR0_PKRU_MASK                                                                         = 0x01                                             //col:6787
	XCR0_PKRU                                                                          (_) = (((_) >> 9) & 0x01)                              //col:6788
)

const (
	typedef                      enum = 1          //col:1
	InvpcidIndividualAddress          = 0x00000000 //col:3
	InvpcidSingleContext              = 0x00000001 //col:4
	InvpcidAllContextWithGlobals      = 0x00000002 //col:5
	InvpcidAllContext                 = 0x00000003 //col:6
)

const (
	typedef        enum = 1          //col:8
	VmxActive           = 0x00000000 //col:10
	VmxHlt              = 0x00000001 //col:11
	VmxShutdown         = 0x00000002 //col:12
	VmxWaitForSipi      = 0x00000003 //col:13
)

const (
	typedef             enum = 1          //col:15
	InveptSingleContext      = 0x00000001 //col:17
	InveptAllContext         = 0x00000002 //col:18
)

const (
	typedef                              enum = 1          //col:20
	InvvpidIndividualAddress                  = 0x00000000 //col:22
	InvvpidSingleContext                      = 0x00000001 //col:23
	InvvpidAllContext                         = 0x00000002 //col:24
	InvvpidSingleContextRetainingGlobals      = 0x00000003 //col:25
)

const (
	typedef                     enum = 1          //col:27
	ExternalInterrupt                = 0x00000000 //col:29
	NonMaskableInterrupt             = 0x00000002 //col:30
	HardwareException                = 0x00000003 //col:31
	SoftwareInterrupt                = 0x00000004 //col:32
	PrivilegedSoftwareException      = 0x00000005 //col:33
	SoftwareException                = 0x00000006 //col:34
	OtherEvent                       = 0x00000007 //col:35
)

const (
	typedef                   enum = 1          //col:37
	DivideError                    = 0x00000000 //col:39
	Debug                          = 0x00000001 //col:40
	Nmi                            = 0x00000002 //col:41
	Breakpoint                     = 0x00000003 //col:42
	Overflow                       = 0x00000004 //col:43
	BoundRangeExceeded             = 0x00000005 //col:44
	InvalidOpcode                  = 0x00000006 //col:45
	DeviceNotAvailable             = 0x00000007 //col:46
	DoubleFault                    = 0x00000008 //col:47
	CoprocessorSegmentOverrun      = 0x00000009 //col:48
	InvalidTss                     = 0x0000000A //col:49
	SegmentNotPresent              = 0x0000000B //col:50
	StackSegmentFault              = 0x0000000C //col:51
	GeneralProtection              = 0x0000000D //col:52
	PageFault                      = 0x0000000E //col:53
	X87FloatingPointError          = 0x00000010 //col:54
	AlignmentCheck                 = 0x00000011 //col:55
	MachineCheck                   = 0x00000012 //col:56
	SimdFloatingPointError         = 0x00000013 //col:57
	VirtualizationException        = 0x00000014 //col:58
	ControlProtection              = 0x00000015 //col:59
)

type
struct {
TypedefStruct typedef struct //col:1
MaxCpuidInputValue uint32    //col:3
EbxValueGenu uint32          //col:4
EcxValueNtel uint32 //col:5
EdxValueInei uint32 //col:6
}
type
struct {
TypedefStruct typedef struct //col:8
Union union                  //col:10
Struct struct                //col:12
SteppingId uint32    //col:14
Model uint32         //col:15
FamilyId uint32      //col:16
ProcessorType uint32 //col:17
Reserved1 uint32        //col:18
ExtendedModelId uint32  //col:19
ExtendedFamilyId uint32 //col:20
Reserved2 uint32 //col:21
}
type
struct {
TypedefStruct typedef struct //col:115
Union union                  //col:117
Struct struct                //col:119
CacheTypeField uint32             //col:121
CacheLevel uint32                 //col:122
SelfInitializingCacheLevel uint32 //col:123
FullyAssociativeCache uint32      //col:124
Reserved1 uint32                                             //col:125
MaxAddressableIdsForLogicalProcessorsSharingThisCache uint32 //col:126
MaxAddressableIdsForProcessorCoresInPhysicalPackage uint32   //col:127
}
type
struct {
TypedefStruct typedef struct //col:161
Union union                  //col:163
Struct struct                //col:165
SmallestMonitorLineSize uint32 //col:167
Reserved1 uint32               //col:168
}
type
struct {
TypedefStruct typedef struct //col:207
Union union                  //col:209
Struct struct                //col:211
TemperatureSensorSupported uint32         //col:213
IntelTurboBoostTechnologyAvailable uint32 //col:214
ApicTimerAlwaysRunning uint32             //col:215
Reserved1 uint32                          //col:216
PowerLimitNotification uint32   //col:217
ClockModulationDuty uint32      //col:218
PackageThermalManagement uint32 //col:219
HwpBaseRegisters uint32  //col:220
HwpNotification uint32   //col:221
HwpActivityWindow uint32 //col:222
HwpEnergyPerformancePreference uint32 //col:223
HwpPackageLevelRequest uint32         //col:224
Reserved2 uint32                      //col:225
Hdc uint32                            //col:226
IntelTurboBoostMaxTechnology3Available uint32 //col:227
HwpCapabilities uint32                        //col:228
HwpPeciOverride uint32                        //col:229
FlexibleHwp uint32                    //col:230
FastAccessModeForHwpRequestMsr uint32 //col:231
Reserved3 uint32                      //col:232
IgnoringIdleLogicalProcessorHwpRequest uint32 //col:233
Reserved4 uint32                              //col:234
IntelThreadDirector uint32                    //col:235
Reserved5 uint32                              //col:236
}
type
struct {
TypedefStruct typedef struct //col:271
Union union                  //col:273
Struct struct                //col:275
NumberOfSubLeaves uint32 //col:277
}
type
struct {
TypedefStruct typedef struct //col:385
Union union                  //col:387
Struct struct                //col:389
Ia32PlatformDcaCap uint32 //col:391
}
type
struct {
TypedefStruct typedef struct //col:420
Union union                  //col:422
Struct struct                //col:424
VersionIdOfArchitecturalPerformanceMonitoring uint32            //col:426
NumberOfPerformanceMonitoringCounterPerLogicalProcessor: uint32 //col:427
BitWidthOfPerformanceMonitoringCounter uint32                   //col:428
EbxBitVectorLength uint32 //col:429
}
type
struct {
TypedefStruct typedef struct //col:469
Union union                  //col:471
Struct struct                //col:473
X2ApicIdToUniqueTopologyIdShift uint32 //col:475
Reserved1 uint32                       //col:476
}
type
struct {
TypedefStruct typedef struct //col:508
Union union                  //col:510
Struct struct                //col:512
X87State uint32 //col:514
SseState uint32 //col:515
AvxState uint32 //col:516
MpxState uint32 //col:517
Avx512State uint32     //col:518
UsedForIa32Xss1 uint32 //col:519
PkruState uint32       //col:520
Reserved1 uint32       //col:521
UsedForIa32Xss2 uint32 //col:522
Reserved2 uint32       //col:523
}
type
struct {
TypedefStruct typedef struct //col:552
Union union                  //col:554
Struct struct                //col:556
Reserved1 uint32                        //col:558
SupportsXsavecAndCompactedXrstor uint32 //col:559
SupportsXgetbvWithEcx1 uint32           //col:560
SupportsXsaveXrstorAndIa32Xss uint32    //col:561
Reserved2 uint32 //col:562
}
type
struct {
TypedefStruct typedef struct //col:601
Union union                  //col:603
Struct struct                //col:605
Ia32PlatformDcaCap uint32 //col:607
}
type
struct {
TypedefStruct typedef struct //col:638
Union union                  //col:640
Struct struct                //col:642
Reserved uint32 //col:644
}
type
struct {
TypedefStruct typedef struct //col:675
Union union                  //col:677
Struct struct                //col:679
Reserved uint32 //col:681
}
type
struct {
TypedefStruct typedef struct //col:713
Union union                  //col:715
Struct struct                //col:717
Ia32PlatformDcaCap uint32 //col:719
}
type
struct {
TypedefStruct typedef struct //col:752
Union union                  //col:754
Struct struct                //col:756
LengthOfCapacityBitMask uint32 //col:758
Reserved1 uint32               //col:759
}
type
struct {
TypedefStruct typedef struct //col:791
Union union                  //col:793
Struct struct                //col:795
LengthOfCapacityBitMask uint32 //col:797
Reserved1 uint32               //col:798
}
type
struct {
TypedefStruct typedef struct //col:828
Union union                  //col:830
Struct struct                //col:832
MaxMbaThrottlingValue uint32 //col:834
Reserved1 uint32             //col:835
}
type
struct {
TypedefStruct typedef struct //col:867
Union union                  //col:869
Struct struct                //col:871
Sgx1 uint32             //col:873
Sgx2 uint32             //col:874
Reserved1 uint32        //col:875
SgxEnclvAdvanced uint32 //col:876
SgxEnclsAdvanced uint32 //col:877
Reserved2 uint32        //col:878
}
type
struct {
TypedefStruct typedef struct //col:909
Union union                  //col:911
Struct struct                //col:913
ValidSecsAttributes0 uint32 //col:915
}
type
struct {
TypedefStruct typedef struct //col:944
Union union                  //col:946
Struct struct                //col:948
SubLeafType uint32 //col:950
Reserved1 uint32   //col:951
}
type
struct {
TypedefStruct typedef struct //col:980
Union union                  //col:982
Struct struct                //col:984
SubLeafType uint32             //col:986
Reserved1 uint32               //col:987
EpcBasePhysicalAddress1 uint32 //col:988
}
type
struct {
TypedefStruct typedef struct //col:1021
Union union                  //col:1023
Struct struct                //col:1025
MaxSubLeaf uint32 //col:1027
}
type
struct {
TypedefStruct typedef struct //col:1070
Union union                  //col:1072
Struct struct                //col:1074
NumberOfConfigurableAddressRangesForFiltering uint32 //col:1076
Reserved1 uint32                                     //col:1077
BitmapOfSupportedMtcPeriodEncodings uint32           //col:1078
}
type
struct {
TypedefStruct typedef struct //col:1108
Union union                  //col:1110
Struct struct                //col:1112
Denominator uint32 //col:1114
}
type
struct {
TypedefStruct typedef struct //col:1143
Union union                  //col:1145
Struct struct                //col:1147
ProcesorBaseFrequencyMhz uint32 //col:1149
Reserved1 uint32                //col:1150
}
type
struct {
TypedefStruct typedef struct //col:1181
Union union                  //col:1183
Struct struct                //col:1185
MaxSocIdIndex uint32 //col:1187
}
type
struct {
TypedefStruct typedef struct //col:1218
Union union                  //col:1220
Struct struct                //col:1222
SocVendorBrandString uint32 //col:1224
}
type
struct {
TypedefStruct typedef struct //col:1253
Union union                  //col:1255
Struct struct                //col:1257
Reserved uint32 //col:1259
}
type
struct {
TypedefStruct typedef struct //col:1288
Union union                  //col:1290
Struct struct                //col:1292
MaxSubLeaf uint32 //col:1294
}
type
struct {
TypedefStruct typedef struct //col:1335
Union union                  //col:1337
Struct struct                //col:1339
Reserved uint32 //col:1341
}
type
struct {
TypedefStruct typedef struct //col:1382
Union union                  //col:1384
Struct struct                //col:1386
MaxExtendedFunctions uint32 //col:1388
}
type
struct {
TypedefStruct typedef struct //col:1417
Union union                  //col:1419
Struct struct                //col:1421
Reserved uint32 //col:1423
}
type
struct {
TypedefStruct typedef struct //col:1466
Union union                  //col:1468
Struct struct                //col:1470
ProcessorBrandString1 uint32 //col:1472
}
type
struct {
TypedefStruct typedef struct //col:1501
Union union                  //col:1503
Struct struct                //col:1505
ProcessorBrandString5 uint32 //col:1507
}
type
struct {
TypedefStruct typedef struct //col:1536
Union union                  //col:1538
Struct struct                //col:1540
ProcessorBrandString9 uint32 //col:1542
}
type
struct {
TypedefStruct typedef struct //col:1571
Union union                  //col:1573
Struct struct                //col:1575
Reserved uint32 //col:1577
}
type
struct {
TypedefStruct typedef struct //col:1606
Union union                  //col:1608
Struct struct                //col:1610
Reserved uint32 //col:1612
}
type
struct {
TypedefStruct typedef struct //col:1644
Union union                  //col:1646
Struct struct                //col:1648
Reserved uint32 //col:1650
}
type
struct {
TypedefStruct typedef struct //col:1681
Union union                  //col:1683
Struct struct                //col:1685
NumberOfPhysicalAddressBits uint32 //col:1687
NumberOfLinearAddressBits uint32   //col:1688
Reserved1 uint32                   //col:1689
}
type
struct {
TypedefStruct typedef struct //col:1718
ThreadAdjust uint64          //col:1720
}
type
struct {
TypedefStruct typedef struct //col:1722
MsegHeaderRevision uint32    //col:1724
MonitorFeatures uint32       //col:1725
GdtrLimit uint32      //col:1726
GdtrBaseOffset uint32 //col:1727
CsSelector uint32     //col:1728
EipOffset uint32 //col:1729
EspOffset uint32 //col:1730
Cr3Offset uint32 //col:1731
}
type
struct {
TypedefStruct typedef struct //col:1733
C0Mcnt uint64                //col:1735
}
type
struct {
TypedefStruct typedef struct //col:1737
C0Acnt uint64                //col:1739
}
type
struct {
TypedefStruct typedef struct //col:1741
StallCycleCount uint64       //col:1743
}
type
struct {
TypedefStruct typedef struct //col:1745
Limit uint16                 //col:1747
BaseAddress uint32           //col:1748
}
type
struct {
TypedefStruct typedef struct //col:1750
Limit uint16                 //col:1752
BaseAddress uint64           //col:1753
}
type
struct {
TypedefStruct typedef struct //col:1755
SegmentLimitLow uint16       //col:1757
BaseAddressLow uint16        //col:1758
Union union              //col:1759
Struct struct            //col:1761
BaseAddressMiddle uint32 //col:1763
Type uint32              //col:1764
DescriptorType uint32           //col:1765
DescriptorPrivilegeLevel uint32 //col:1766
Present uint32                  //col:1767
SegmentLimitHigh uint32 //col:1768
System uint32           //col:1769
LongMode uint32         //col:1770
DefaultBig uint32      //col:1771
Granularity uint32     //col:1772
BaseAddressHigh uint32 //col:1773
}
type
struct {
TypedefStruct typedef struct //col:1778
SegmentLimitLow uint16       //col:1780
BaseAddressLow uint16        //col:1781
Union union              //col:1782
Struct struct            //col:1784
BaseAddressMiddle uint32 //col:1786
Type uint32              //col:1787
DescriptorType uint32           //col:1788
DescriptorPrivilegeLevel uint32 //col:1789
Present uint32                  //col:1790
SegmentLimitHigh uint32 //col:1791
System uint32           //col:1792
LongMode uint32         //col:1793
DefaultBig uint32      //col:1794
Granularity uint32     //col:1795
BaseAddressHigh uint32 //col:1796
}
type
struct {
TypedefStruct typedef struct //col:1803
OffsetLow uint16             //col:1805
SegmentSelector uint16       //col:1806
Union union                //col:1807
Struct struct              //col:1809
InterruptStackTable uint32 //col:1811
MustBeZero0 uint32         //col:1812
Type uint32                     //col:1813
MustBeZero1 uint32              //col:1814
DescriptorPrivilegeLevel uint32 //col:1815
Present uint32      //col:1816
OffsetMiddle uint32 //col:1817
}
type
struct {
TypedefStruct typedef struct //col:1824
Reserved0 uint32             //col:1826
Rsp0 uint64                  //col:1827
Rsp1 uint64      //col:1828
Rsp2 uint64      //col:1829
Reserved1 uint64 //col:1830
Ist1 uint64 //col:1831
Ist2 uint64 //col:1832
Ist3 uint64 //col:1833
Ist4 uint64 //col:1834
Ist5 uint64 //col:1835
Ist6 uint64 //col:1836
Ist7 uint64 //col:1837
Reserved2 uint64 //col:1838
Reserved3 uint16 //col:1839
IoMapBase uint16 //col:1840
}
type
struct {
TypedefStruct typedef struct //col:1842
Reason uint32                //col:1844
ExceptionMask uint32         //col:1845
Exit uint64                 //col:1846
GuestLinearAddress uint64   //col:1847
GuestPhysicalAddress uint64 //col:1848
CurrentEptpIndex uint16 //col:1849
}
type
struct {
TypedefStruct typedef struct //col:1851
IoA[4096] UINT8              //col:1853
IoB[4096] UINT8 //col:1854
}
type
struct {
TypedefStruct typedef struct //col:1856
RdmsrLow[1024] UINT8         //col:1858
RdmsrHigh[1024] UINT8 //col:1859
WrmsrLow[1024] UINT8  //col:1860
WrmsrHigh[1024] UINT8 //col:1861
}
type
struct {
TypedefStruct typedef struct //col:1863
EptPointer uint64            //col:1865
Reserved uint64              //col:1866
}
type
struct {
TypedefStruct typedef struct //col:1868
Vpid uint16                  //col:1870
Reserved1 uint16             //col:1871
Reserved2 uint32     //col:1872
LinearAddress uint64 //col:1873
}
type
struct {
TypedefStruct typedef struct //col:1875
Struct struct                //col:1877
RevisionId uint32            //col:1879
ShadowVmcsIndicator uint32 //col:1880
}
type
struct {
TypedefStruct typedef struct //col:1885
Struct struct                //col:1887
RevisionId uint32            //col:1889
MustBeZero uint32 //col:1890
}
type
struct {
TypedefStruct typedef struct //col:1894
Union union                  //col:1896
Struct struct                //col:1898
Present uint64             //col:1900
Reserved1 uint64           //col:1901
ContextTablePointer uint64 //col:1902
}
type
struct {
TypedefStruct typedef struct //col:1915
Union union                  //col:1917
Struct struct                //col:1919
Present uint64                //col:1921
FaultProcessingDisable uint64 //col:1922
TranslationType uint64        //col:1923
Reserved1 uint64              //col:1924
SecondLevelPageTranslationPointer uint64 //col:1925
}
