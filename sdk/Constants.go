package sdk

import "unsafe"

const (
	//BUILD_DAY_CH0                                                          = ((__DATE__[4]>='0')?(__DATE__[4]):'0')
	//BUILD_DAY_CH1                                                          = (__DATE__[5])
	//BUILD_HOUR_CH0                                                         = (__TIME__[0])
	//BUILD_HOUR_CH1                                                         = (__TIME__[1])
	//BUILD_MIN_CH0                                                          = (__TIME__[3])
	//BUILD_MIN_CH1                                                          = (__TIME__[4])
	//BUILD_MONTH_CH0                                                        = ((BUILD_MONTH_IS_OCT||BUILD_MONTH_IS_NOV||BUILD_MONTH_IS_DEC)?'1':'0')
	//BUILD_MONTH_CH1                                                        = ((BUILD_MONTH_IS_JAN)?'1':(BUILD_MONTH_IS_FEB)?'2':(BUILD_MONTH_IS_MAR)?'3':(BUILD_MONTH_IS_APR)?'4':(BUILD_MONTH_IS_MAY)?'5':(BUILD_MONTH_IS_JUN)?'6':(BUILD_MONTH_IS_JUL)?'7':(BUILD_MONTH_IS_AUG)?'8':(BUILD_MONTH_IS_SEP)?'9':(BUILD_MONTH_IS_OCT)?'0':(BUILD_MONTH_IS_NOV)?'1':(BUILD_MONTH_IS_DEC)?'2':'?')
	//BUILD_MONTH_IS_APR                                                     = (__DATE__[0]=='A'&&__DATE__[1]=='p')
	//BUILD_MONTH_IS_AUG                                                     = (__DATE__[0]=='A'&&__DATE__[1]=='u')
	//BUILD_MONTH_IS_DEC                                                     = (__DATE__[0]=='D')
	//BUILD_MONTH_IS_FEB                                                     = (__DATE__[0]=='F')
	//BUILD_MONTH_IS_JAN                                                     = (__DATE__[0]=='J'&&__DATE__[1]=='a'&&__DATE__[2]=='n')
	//BUILD_MONTH_IS_JUL                                                     = (__DATE__[0]=='J'&&__DATE__[1]=='u'&&__DATE__[2]=='l')
	//BUILD_MONTH_IS_JUN                                                     = (__DATE__[0]=='J'&&__DATE__[1]=='u'&&__DATE__[2]=='n')
	//BUILD_MONTH_IS_MAR                                                     = (__DATE__[0]=='M'&&__DATE__[1]=='a'&&__DATE__[2]=='r')
	//BUILD_MONTH_IS_MAY                                                     = (__DATE__[0]=='M'&&__DATE__[1]=='a'&&__DATE__[2]=='y')
	//BUILD_MONTH_IS_NOV                                                     = (__DATE__[0]=='N')
	//BUILD_MONTH_IS_OCT                                                     = (__DATE__[0]=='O')
	//BUILD_MONTH_IS_SEP                                                     = (__DATE__[0]=='S')
	//BUILD_SEC_CH0                                                          = (__TIME__[6])
	//BUILD_SEC_CH1                                                          = (__TIME__[7])
	//BUILD_YEAR_CH0                                                         = (__DATE__[7])
	//BUILD_YEAR_CH1                                                         = (__DATE__[8])
	//BUILD_YEAR_CH2                                                         = (__DATE__[9])
	//BUILD_YEAR_CH3                                                         = (__DATE__[10])
	COMMUNICATION_BUFFER_SIZE                             = PacketChunkSize + 0x100
	DEBUGGEE_BP_APPLY_TO_ALL_CORES                        = 0xffffffff
	DEBUGGEE_BP_APPLY_TO_ALL_PROCESSES                    = 0xffffffff
	DEBUGGEE_BP_APPLY_TO_ALL_THREADS                      = 0xffffffff
	DEBUGGEE_SHOW_ALL_REGISTERS                           = 0xffffffff
	DEBUGGER_DEBUGGEE_IS_RUNNING_NO_CORE                  = 0xffffffff
	DEBUGGER_EVENT_ALL_IO_PORTS                           = 0xffffffff
	DEBUGGER_EVENT_APPLY_TO_ALL_CORES                     = 0xffffffff
	DEBUGGER_EVENT_APPLY_TO_ALL_PROCESSES                 = 0xffffffff
	DEBUGGER_EVENT_EXCEPTIONS_ALL_FIRST_32_ENTRIES        = 0xffffffff
	DEBUGGER_EVENT_MSR_READ_OR_WRITE_ALL_MSRS             = 0xffffffff
	DEBUGGER_EVENT_SYSCALL_ALL_SYSRET_OR_SYSCALLS         = 0xffffffff
	DEBUGGER_MODIFY_EVENTS_APPLY_TO_ALL_TAG               = 0xffffffffffffffff
	DEBUGGER_READ_AND_WRITE_ON_MSR_APPLY_ALL_CORES        = 0xffffffff
	DEFAULT_PORT                                          = "50000"
	DISASSEMBLY_MAXIMUM_DISTANCE_FROM_OBJECT_NAME         = 0xffff
	DbgPrintLimitation                                    = 512
	DebuggerEventTagStartSeed                             = 0x1000000
	DebuggerOutputSourceMaximumRemoteSourceForSingleEvent = 0x5
	DebuggerOutputSourceTagStartSeed                      = 0x1
	DebuggerThreadDebuggingTagStartSeed                   = 0x1000000
	//HIBYTE                                                (w) = ((BYTE)(((WORD)(w) >> 8) & 0xFF))
	//HIWORD                                                (l) = ((WORD)(((DWORD)(l) >> 16) & 0xFFFF))
	INDICATOR_OF_HYPERDBG_PACKET = 0x4859504552444247
	//LOBYTE                                                (w) = ((BYTE)(w))
	//LOWORD                                                (l) = ((WORD)(l))
	//LogBufferSize                                             = MaximumPacketsCapacity * (PacketChunkSize + sizeof(BUFFER_HEADER))
	//LogBufferSizePriority                                     = MaximumPacketsCapacityPriority * (PacketChunkSize + sizeof(BUFFER_HEADER))
	MAXIMUM_BREAKPOINTS_WITHOUT_CONTINUE = 50
	MAXIMUM_CALL_INSTR_SIZE              = 7
	MAXIMUM_CHARACTER_FOR_OS_NAME        = 256
	MAXIMUM_GUID_AND_AGE_SIZE            = 60
	MAXIMUM_INSTR_SIZE                   = 16
	MAXIMUM_SUPPORTED_SYMBOLS            = 1000
	MAX_FUNCTION_NAME_LENGTH             = 32
	MAX_TEMP_COUNT                       = 128
	MAX_VAR_COUNT                        = 512
	//MaxSerialPacketSize                                       = UsermodeBufferSize + sizeof(DEBUGGER_REMOTE_PACKET) + SERIAL_END_OF_BUFFER_CHARS_COUNT
	MaximumPacketsCapacity                               = 1000
	MaximumPacketsCapacityPriority                       = 10
	MaximumSearchResults                                 = 0x1000
	OPERATION_COMMAND_FROM_DEBUGGER_CLOSE_AND_UNLOAD_VMM = 0x6 | OPERATION_MANDATORY_DEBUGGEE_BIT
	OPERATION_COMMAND_FROM_DEBUGGER_RELOAD_SYMBOL        = 0xd | OPERATION_MANDATORY_DEBUGGEE_BIT
	OPERATION_DEBUGGEE_ADD_ACTION_TO_EVENT               = 0x9 | OPERATION_MANDATORY_DEBUGGEE_BIT
	OPERATION_DEBUGGEE_CLEAR_EVENTS                      = 0xa | OPERATION_MANDATORY_DEBUGGEE_BIT
	OPERATION_DEBUGGEE_REGISTER_EVENT                    = 0x8 | OPERATION_MANDATORY_DEBUGGEE_BIT
	OPERATION_DEBUGGEE_USER_INPUT                        = 0x7 | OPERATION_MANDATORY_DEBUGGEE_BIT
	OPERATION_HYPERVISOR_DRIVER_END_OF_IRPS              = 0xc | OPERATION_MANDATORY_DEBUGGEE_BIT
	OPERATION_HYPERVISOR_DRIVER_IS_SUCCESSFULLY_LOADED   = 0xb | OPERATION_MANDATORY_DEBUGGEE_BIT
	OPERATION_LOG_ERROR_MESSAGE                          = 0x3
	OPERATION_LOG_INFO_MESSAGE                           = 0x1
	OPERATION_LOG_NON_IMMEDIATE_MESSAGE                  = 0x4
	OPERATION_LOG_WARNING_MESSAGE                        = 0x2
	OPERATION_LOG_WITH_TAG                               = 0x5
	OPERATION_MANDATORY_DEBUGGEE_BIT                     = (1 << 31)
	OPERATION_NOTIFICATION_FROM_USER_DEBUGGER_PAUSE      = 0xe | OPERATION_MANDATORY_DEBUGGEE_BIT
	PacketChunkSize                                      = 4096
	SERIAL_END_OF_BUFFER_CHARS_COUNT                     = 0x4
	SERIAL_END_OF_BUFFER_CHAR_1                          = 0x00
	SERIAL_END_OF_BUFFER_CHAR_2                          = 0x80
	SERIAL_END_OF_BUFFER_CHAR_3                          = 0xEE
	SERIAL_END_OF_BUFFER_CHAR_4                          = 0xFF
	TCP_END_OF_BUFFER_CHARS_COUNT                        = 0x4
	TCP_END_OF_BUFFER_CHAR_1                             = 0x10
	TCP_END_OF_BUFFER_CHAR_2                             = 0x20
	TCP_END_OF_BUFFER_CHAR_3                             = 0x33
	TCP_END_OF_BUFFER_CHAR_4                             = 0x44

	sizeofUINT32 = unsafe.Sizeof(0)
	//UsermodeBufferSize                                        = sizeof(UINT32) + PacketChunkSize + 1
	UsermodeBufferSize             = sizeofUINT32 + PacketChunkSize + 1
	VERSION_MAJOR                  = 0
	VERSION_MAJOR_INIT             = (VERSION_MAJOR + '0')
	VERSION_MINOR                  = 2
	VERSION_MINOR_INIT             = (VERSION_MINOR + '0')
	VERSION_PATCH                  = 0
	VERSION_PATCH_INIT             = (VERSION_PATCH + '0')
	X86_FLAGS_AC                   = (1 << 18)
	X86_FLAGS_AF                   = (1 << 4)
	X86_FLAGS_CF                   = (1 << 0)
	X86_FLAGS_DF                   = (1 << 10)
	X86_FLAGS_FIXED                = 0x00000002
	X86_FLAGS_ID                   = (1 << 21)
	X86_FLAGS_IF                   = (1 << 9)
	X86_FLAGS_IOPL_MASK            = (3 << 12)
	X86_FLAGS_IOPL_SHIFT           = (12)
	X86_FLAGS_IOPL_SHIFT_2ND_BIT   = (13)
	X86_FLAGS_NT                   = (1 << 14)
	X86_FLAGS_OF                   = (1 << 11)
	X86_FLAGS_PF                   = (1 << 2)
	X86_FLAGS_RESERVED             = 0xffc0802a
	X86_FLAGS_RESERVED_BITS        = 0xffc38028
	X86_FLAGS_RESERVED_ONES        = 0x2
	X86_FLAGS_RF                   = (1 << 16)
	X86_FLAGS_SF                   = (1 << 7)
	X86_FLAGS_STATUS_MASK          = (0xfff)
	X86_FLAGS_TF                   = (1 << 8)
	X86_FLAGS_VIF                  = (1 << 19)
	X86_FLAGS_VIP                  = (1 << 20)
	X86_FLAGS_VM                   = (1 << 17)
	X86_FLAGS_ZF                   = (1 << 6)
	_CPPRTTI                       = 1
	_CPPUNWIND                     = 1
	_HAS_CHAR16_T_LANGUAGE_SUPPORT = 1
	_INTEGRAL_MAX_BITS             = 64
	_MSC_BUILD                     = 1
	_MSC_EXTENSIONS                = 1
	_MSC_FULL_VER                  = 193231332
	_MSC_VER                       = 1932
	//_MSVC_LANG                                                = 201402L
	_M_AMD64                        = 100
	_M_X64                          = 100
	_NATIVE_NULLPTR_SUPPORTED       = 1
	_NATIVE_WCHAR_T_DEFINED         = 1
	_RVALUE_REFERENCES_SUPPORTED    = 1
	_RVALUE_REFERENCES_V2_SUPPORTED = 1
	_WCHAR_T_DEFINED                = 1
	_WIN32                          = 1
	_WIN64                          = 1
	__ATOMIC_ACQUIRE                = 2
	__ATOMIC_ACQ_REL                = 4
	__ATOMIC_CONSUME                = 1
	__ATOMIC_RELAXED                = 0
	__ATOMIC_RELEASE                = 3
	__ATOMIC_SEQ_CST                = 5
	__BIGGEST_ALIGNMENT__           = 16
	__BOOL_DEFINED                  = 1
	//__BYTE_ORDER__                                                         = __ORDER_LITTLE_ENDIAN__
	//__CHAR16_TYPE__ = unsignedshort
	//__CHAR32_TYPE__ = unsignedint
	__CHAR_BIT__                      = 8
	__CLANG_ATOMIC_BOOL_LOCK_FREE     = 2
	__CLANG_ATOMIC_CHAR16_T_LOCK_FREE = 2
	__CLANG_ATOMIC_CHAR32_T_LOCK_FREE = 2
	__CLANG_ATOMIC_CHAR_LOCK_FREE     = 2
	__CLANG_ATOMIC_INT_LOCK_FREE      = 2
	__CLANG_ATOMIC_LLONG_LOCK_FREE    = 2
	__CLANG_ATOMIC_LONG_LOCK_FREE     = 2
	__CLANG_ATOMIC_POINTER_LOCK_FREE  = 2
	__CLANG_ATOMIC_SHORT_LOCK_FREE    = 2
	__CLANG_ATOMIC_WCHAR_T_LOCK_FREE  = 2
	__CONSTANT_CFSTRINGS__            = 1
	__DBL_DECIMAL_DIG__               = 17
	__DBL_DENORM_MIN__                = 4.9406564584124654e-324
	__DBL_DIG__                       = 15
	__DBL_EPSILON__                   = 2.2204460492503131e-16
	__DBL_HAS_DENORM__                = 1
	__DBL_HAS_INFINITY__              = 1
	__DBL_HAS_QUIET_NAN__             = 1
	__DBL_MANT_DIG__                  = 53
	__DBL_MAX_10_EXP__                = 308
	__DBL_MAX_EXP__                   = 1024
	__DBL_MAX__                       = 1.7976931348623157e+308
	//__DBL_MIN_10_EXP__ = (
	//-307
	//)
	//__DBL_MIN_EXP__                                                        = (-1021)
	//__DBL_MIN__ = 2.2250738585072014e-308
	//__DECIMAL_DIG__ = __LDBL_DECIMAL_DIG__
	//__DEPRECATED = 1
	//__FINITE_MATH_ONLY__ = 0
	//__FLT_DECIMAL_DIG__ = 9
	//__FLT_DENORM_MIN__ = 1.40129846e-45F
	//__FLT_DIG__ = 6
	//__FLT_EPSILON__ = 1.19209290e-7F
	//__FLT_EVAL_METHOD__ = 0
	//__FLT_HAS_DENORM__ = 1
	//__FLT_HAS_INFINITY__ = 1
	//__FLT_HAS_QUIET_NAN__ = 1
	//__FLT_MANT_DIG__ = 24
	//__FLT_MAX_10_EXP__ = 38
	//__FLT_MAX_EXP__ = 128
	//__FLT_MAX__ = 3.40282347e+38F
	//__FLT_MIN_10_EXP__ = (-37)
	//__FLT_MIN_EXP__ = (-125)
	//__FLT_MIN__ = 1.17549435e-38F
	//__FLT_RADIX__ = 2
	//__FXSR__ = 1
	//__GCC_ASM_FLAG_OUTPUTS__ = 1
	//__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 = 1
	//__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 = 1
	//__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 = 1
	//__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 = 1
	//__INT16_C_SUFFIX__ =
	//__INT16_FMTd__ = "hd"
	//__INT16_FMTi__ = "hi"
	//__INT16_MAX__ = 32767
	//__INT16_TYPE__ = short
	//__INT32_C_SUFFIX__ =
	//__INT32_FMTd__ = "d"
	//__INT32_FMTi__ = "i"
	//__INT32_MAX__ = 2147483647
	//__INT32_TYPE__ = int
	//__INT64_C_SUFFIX__ = LL
	//__INT64_FMTd__ = "lld"
	//__INT64_FMTi__ = "lli"
	//__INT64_MAX__ = 9223372036854775807LL
	//__INT64_TYPE__ = longlongint
	//__INT8_C_SUFFIX__ =
	//__INT8_FMTd__                                                          = "hhd"
	//__INT8_FMTi__ = "hhi"
	//__INT8_MAX__ = 127
	//__INT8_TYPE__ = signedchar
	//__INTMAX_C_SUFFIX__ = LL
	//__INTMAX_FMTd__                                                        = "lld"
	//__INTMAX_FMTi__ = "lli"
	//__INTMAX_MAX__ = 9223372036854775807LL
	//__INTMAX_TYPE__ = longlongint
	//__INTMAX_WIDTH__ = 64
	//__INTPTR_FMTd__ = "lld"
	//__INTPTR_FMTi__ = "lli"
	//__INTPTR_MAX__ = 9223372036854775807LL
	//__INTPTR_TYPE__ = longlongint
	//__INTPTR_WIDTH__ = 64
	//__INT_FAST16_FMTd__ = "hd"
	//__INT_FAST16_FMTi__ = "hi"
	//__INT_FAST16_MAX__                                                     = 32767
	//__INT_FAST16_TYPE__ = short
	//__INT_FAST32_FMTd__ = "d"
	//__INT_FAST32_FMTi__ = "i"
	//__INT_FAST32_MAX__ = 2147483647
	//__INT_FAST32_TYPE__                                                    = int
	//__INT_FAST64_FMTd__ = "lld"
	//__INT_FAST64_FMTi__ = "lli"
	//__INT_FAST64_MAX__ = 9223372036854775807LL
	//__INT_FAST64_TYPE__ = longlongint
	//__INT_FAST8_FMTd__ = "hhd"
	//__INT_FAST8_FMTi__ = "hhi"
	//__INT_FAST8_MAX__ = 127
	//__INT_FAST8_TYPE__ = signedchar
	//__INT_LEAST16_FMTd__ = "hd"
	//__INT_LEAST16_FMTi__ = "hi"
	//__INT_LEAST16_MAX__ = 32767
	//__INT_LEAST16_TYPE__ = short
	//__INT_LEAST32_FMTd__ = "d"
	//__INT_LEAST32_FMTi__ = "i"
	//__INT_LEAST32_MAX__ = 2147483647
	//__INT_LEAST32_TYPE__ = int
	//__INT_LEAST64_FMTd__ = "lld"
	//__INT_LEAST64_FMTi__ = "lli"
	//__INT_LEAST64_MAX__ = 9223372036854775807LL
	//__INT_LEAST64_TYPE__ = longlongint
	//__INT_LEAST8_FMTd__ = "hhd"
	//__INT_LEAST8_FMTi__                                                    = "hhi"
	//__INT_LEAST8_MAX__ = 127
	//__INT_LEAST8_TYPE__ = signedchar
	//__INT_MAX__ = 2147483647
	//__LDBL_DECIMAL_DIG__ = 17
	//__LDBL_DENORM_MIN__                                                    = 4.9406564584124654e-324L
	//__LDBL_DIG__ = 15
	//__LDBL_EPSILON__ = 2.2204460492503131e-16L
	//__LDBL_HAS_DENORM__ = 1
	//__LDBL_HAS_INFINITY__ = 1
	//__LDBL_HAS_QUIET_NAN__ = 1
	//__LDBL_MANT_DIG__ = 53
	//__LDBL_MAX_10_EXP__                                                    = 308
	//__LDBL_MAX_EXP__ = 1024
	//__LDBL_MAX__ = 1.7976931348623157e+308L
	//__LDBL_MIN_10_EXP__ = (-307)
	//__LDBL_MIN_EXP__                                                       = (-1021)
	//__LDBL_MIN__ = 2.2250738585072014e-308L
	//__LITTLE_ENDIAN__ = 1
	//__LONG_LONG_MAX__ = 9223372036854775807LL
	//__LONG_MAX__ = 2147483647L
	//__MMX__ = 1
	//__NO_INLINE__                                                          = 1
	//__NO_MATH_INLINES = 1
	//__OBJC_BOOL_IS_BOOL = 0
	//__OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES = 3
	//__OPENCL_MEMORY_SCOPE_DEVICE = 2
	//__OPENCL_MEMORY_SCOPE_SUB_GROUP                                        = 4
	//__OPENCL_MEMORY_SCOPE_WORK_GROUP = 1
	//__OPENCL_MEMORY_SCOPE_WORK_ITEM = 0
	//__ORDER_BIG_ENDIAN__ = 4321
	//__ORDER_LITTLE_ENDIAN__ = 1234
	//__ORDER_PDP_ENDIAN__                                                   = 3412
	//__PIC__ = 2
	//__POINTER_WIDTH__ = 64
	//__PRAGMA_REDEFINE_EXTNAME = 1
	//__PTRDIFF_FMTd__ = "lld"
	//__PTRDIFF_FMTi__                                                       = "lli"
	//__PTRDIFF_MAX__ = 9223372036854775807LL
	//__PTRDIFF_TYPE__ = longlongint
	//__PTRDIFF_WIDTH__ = 64
	//__REGISTER_PREFIX__ =
	//__SCHAR_MAX__ = 127
	//__SEG_FS = 1
	//__SEG_GS = 1
	//__SHRT_MAX__ = 32767
	//__SIG_ATOMIC_MAX__ = 2147483647
	//__SIG_ATOMIC_WIDTH__ = 32
	//__SIZEOF_DOUBLE__ = 8
	//__SIZEOF_FLOAT__ = 4
	//__SIZEOF_INT128__ = 16
	//__SIZEOF_INT__ = 4
	//__SIZEOF_LONG_DOUBLE__ = 8
	//__SIZEOF_LONG_LONG__ = 8
	//__SIZEOF_LONG__ = 4
	//__SIZEOF_POINTER__ = 8
	//__SIZEOF_PTRDIFF_T__ = 8
	//__SIZEOF_SHORT__ = 2
	//__SIZEOF_SIZE_T__ = 8
	//__SIZEOF_WCHAR_T__ = 2
	//__SIZEOF_WINT_T__ = 2
	//__SIZE_FMTX__ = "llX"
	//__SIZE_FMTo__ = "llo"
	//__SIZE_FMTu__ = "llu"
	//__SIZE_FMTx__ = "llx"
	//__SIZE_MAX__ = 18446744073709551615ULL
	//__SIZE_TYPE__ = longlongunsignedint
	//__SIZE_WIDTH__                                                         = 64
	//__SSE2_MATH__ = 1
	//__SSE2__ = 1
	//__SSE_MATH__ = 1
	//__SSE__ = 1
	//__STDCPP_DEFAULT_NEW_ALIGNMENT__                                       = 16ULL
	//__STDCPP_THREADS__ = 1
	//__STDC_HOSTED__ = 1
	//__STDC_UTF_16__ = 1
	//__STDC_UTF_32__ = 1
	//__UINT16_C_SUFFIX__ =
	//__UINT16_FMTX__ = "hX"
	//__UINT16_FMTo__ = "ho"
	//__UINT16_FMTu__ = "hu"
	//__UINT16_FMTx__ = "hx"
	//__UINT16_MAX__ = 65535
	//__UINT16_TYPE__ = unsignedshort
	//__UINT32_C_SUFFIX__ = U
	//__UINT32_FMTX__ = "X"
	//__UINT32_FMTo__ = "o"
	//__UINT32_FMTu__ = "u"
	//__UINT32_FMTx__ = "x"
	//__UINT32_MAX__ = 4294967295U
	//__UINT32_TYPE__ = unsignedint
	//__UINT64_C_SUFFIX__ = ULL
	//__UINT64_FMTX__                                                        = "llX"
	//__UINT64_FMTo__ = "llo"
	//__UINT64_FMTu__ = "llu"
	//__UINT64_FMTx__ = "llx"
	//__UINT64_MAX__ = 18446744073709551615ULL
	//__UINT64_TYPE__ = longlongunsignedint
	//__UINT8_C_SUFFIX__ =
	//__UINT8_FMTX__ = "hhX"
	//__UINT8_FMTo__ = "hho"
	//__UINT8_FMTu__ = "hhu"
	//__UINT8_FMTx__ = "hhx"
	//__UINT8_MAX__ = 255
	//__UINT8_TYPE__ = unsignedchar
	//__UINTMAX_C_SUFFIX__ = ULL
	//__UINTMAX_FMTX__ = "llX"
	//__UINTMAX_FMTo__ = "llo"
	//__UINTMAX_FMTu__ = "llu"
	//__UINTMAX_FMTx__ = "llx"
	//__UINTMAX_MAX__ = 18446744073709551615ULL
	//__UINTMAX_TYPE__ = longlongunsignedint
	//__UINTMAX_WIDTH__                                                      = 64
	//__UINTPTR_FMTX__ = "llX"
	//__UINTPTR_FMTo__ = "llo"
	//__UINTPTR_FMTu__ = "llu"
	//__UINTPTR_FMTx__ = "llx"
	//__UINTPTR_MAX__                                                        = 18446744073709551615ULL
	//__UINTPTR_TYPE__ = longlongunsignedint
	//__UINTPTR_WIDTH__ = 64
	//__UINT_FAST16_FMTX__ = "hX"
	//__UINT_FAST16_FMTo__ = "ho"
	//__UINT_FAST16_FMTu__ = "hu"
	//__UINT_FAST16_FMTx__ = "hx"
	//__UINT_FAST16_MAX__ = 65535
	//__UINT_FAST16_TYPE__ = unsignedshort
	//__UINT_FAST32_FMTX__ = "X"
	//__UINT_FAST32_FMTo__ = "o"
	//__UINT_FAST32_FMTu__ = "u"
	//__UINT_FAST32_FMTx__ = "x"
	//__UINT_FAST32_MAX__ = 4294967295U
	//__UINT_FAST32_TYPE__ = unsignedint
	//__UINT_FAST64_FMTX__ = "llX"
	//__UINT_FAST64_FMTo__ = "llo"
	//__UINT_FAST64_FMTu__                                                   = "llu"
	//__UINT_FAST64_FMTx__ = "llx"
	//__UINT_FAST64_MAX__ = 18446744073709551615ULL
	//__UINT_FAST64_TYPE__ = longlongunsignedint
	//__UINT_FAST8_FMTX__ = "hhX"
	//__UINT_FAST8_FMTo__ = "hho"
	//__UINT_FAST8_FMTu__ = "hhu"
	//__UINT_FAST8_FMTx__ = "hhx"
	//__UINT_FAST8_MAX__ = 255
	//__UINT_FAST8_TYPE__ = unsignedchar
	//__UINT_LEAST16_FMTX__ = "hX"
	//__UINT_LEAST16_FMTo__ = "ho"
	//__UINT_LEAST16_FMTu__ = "hu"
	//__UINT_LEAST16_FMTx__ = "hx"
	//__UINT_LEAST16_MAX__ = 65535
	//__UINT_LEAST16_TYPE__ = unsignedshort
	//__UINT_LEAST32_FMTX__ = "X"
	//__UINT_LEAST32_FMTo__ = "o"
	//__UINT_LEAST32_FMTu__ = "u"
	//__UINT_LEAST32_FMTx__ = "x"
	//__UINT_LEAST32_MAX__ = 4294967295U
	//__UINT_LEAST32_TYPE__ = unsignedint
	//__UINT_LEAST64_FMTX__                                                  = "llX"
	//__UINT_LEAST64_FMTo__ = "llo"
	//__UINT_LEAST64_FMTu__ = "llu"
	//__UINT_LEAST64_FMTx__ = "llx"
	//__UINT_LEAST64_MAX__ = 18446744073709551615ULL
	//__UINT_LEAST64_TYPE__ = longlongunsignedint
	//__UINT_LEAST8_FMTX__ = "hhX"
	//__UINT_LEAST8_FMTo__ = "hho"
	//__UINT_LEAST8_FMTu__ = "hhu"
	//__UINT_LEAST8_FMTx__ = "hhx"
	//__UINT_LEAST8_MAX__ = 255
	//__UINT_LEAST8_TYPE__ = unsignedchar
	//__USER_LABEL_PREFIX__ =
	//__VERSION__ = "Clang13.0.1"
	//__WCHAR_MAX__ = 65535
	//__WCHAR_TYPE__ = unsignedshort
	//__WCHAR_UNSIGNED__ = 1
	//__WCHAR_WIDTH__ = 16
	//__WINT_MAX__ = 65535
	//__WINT_TYPE__ = unsignedshort
	//__WINT_UNSIGNED__ = 1
	//__WINT_WIDTH__ = 16
	//__amd64 = 1
	//__amd64__ = 1
	//__clang__ = 1
	//__clang_literal_encoding__ = "UTF-8"
	//__clang_major__ = 13
	//__clang_minor__ = 0
	//__clang_patchlevel__ = 1
	//__clang_version__ = "13.0.1"
	//__clang_wide_literal_encoding__ = "UTF-16"
	//__code_model_small__ = 1
	//__cplusplus = 201402L
	//__cpp_aggregate_nsdmi = 201304L
	//__cpp_alias_templates = 200704L
	//__cpp_attributes = 200809L
	//__cpp_binary_literals = 201304L
	//__cpp_constexpr = 201304L
	//__cpp_constexpr_in_decltype = 201711L
	//__cpp_decltype = 200707L
	//__cpp_decltype_auto = 201304L
	//__cpp_delegating_constructors = 200604L
	//__cpp_digit_separators = 201309L
	//__cpp_exceptions = 199711L
	//__cpp_generic_lambdas = 201304L
	//__cpp_impl_destroying_delete = 201806L
	//__cpp_inheriting_constructors = 201511L
	//__cpp_init_captures = 201304L
	//__cpp_initializer_lists = 200806L
	//__cpp_lambdas = 200907L
	//__cpp_nsdmi = 200809L
	//__cpp_range_based_for = 200907
	//__cpp_raw_strings = 200710L
	//__cpp_ref_qualifiers = 200710L
	//__cpp_return_type_deduction = 201304L
	//__cpp_rtti = 199711L
	//__cpp_rvalue_references = 200610L
	//__cpp_static_assert = 200410
	//__cpp_threadsafe_static_init = 200806L
	//__cpp_unicode_characters                                               = 200704L
	//__cpp_unicode_literals = 200710L
	//__cpp_user_defined_literals                                            = 200809L
	//__cpp_variable_templates = 201304L
	//__cpp_variadic_templates                                               = 200704L
	//__k8 = 1
	//__k8__ = 1
	//__llvm__ = 1
	//__pic__ = 2
	//__seg_fs = __attribute__((address_space(257)))
	//__seg_gs = __attribute__((address_space(256)))
	//__tune_k8__ = 1
	//__x86_64 = 1
	//__x86_64__ = 1
)
