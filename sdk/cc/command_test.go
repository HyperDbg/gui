package cc

import (
	"encoding/json"
	"strconv"
	"testing"

	"github.com/ddkwork/golibrary/mylog"
	"github.com/ddkwork/golibrary/stream"
)

type Command struct {
	Name        string   `json:"Name"`
	Description string   `json:"Description"`
	Syntax      []string `json:"Syntax"`
	Examples    []string `json:"Examples"`
	Notes       string   `json:"Notes"`
}

type Commands struct {
	Debugging []Command
	Extension []Command
	Hwdbg     []Command
	Meta      []Command
}

func TestUnmarshalCommandJson(t *testing.T) {
	type AutoGenerated []struct {
		Name        string   `json:"Name"`
		Description string   `json:"Description"`
		Syntax      []string `json:"Syntax"`
		Examples    []string `json:"Examples"`
		Notes       []any    `json:"Notes"`
		FullName    string   `json:"FullName"`
	}
	var generated []AutoGenerated
	mylog.Check(json.Unmarshal(stream.NewBuffer("bugFixed.json").Bytes(), &generated))
	// mylog.Struct(generated)
	g := stream.NewGeneratedFile()
	g.P("package sdk")
	for _, autoGenerated := range generated {
		for _, s := range autoGenerated {
			g.P("func ", s.FullName, "() {")
			g.P("Interpreter(StringToBytePointer(", strconv.Quote(s.Name), ")) ")
			g.P("}")
			g.P()
		}
	}
	stream.WriteGoFile("tmp/generated.go", g.Bytes())
	println(g.String())
}
