{
  "commands": [
    {
      "Name": "!vmcall",
      "Description": "monitors execution of VMCALL instruction.",
      "Syntax": [
        "!vmcall [pid ProcessId (hex)] [core CoreId (hex)] [imm IsImmediate (yesno)] [sc EnableShortCircuiting (onoff)] [stage CallingStage (prepostall)] [buffer PreAllocatedBuffer (hex)] [script { Script (string) }] [condition { Condition (hex) }] [code { Code (hex) }] [output {OutputName (string)}]"
      ],
      "Examples": [
        "!vmcall",
        "!vmcall pid 400",
        "!vmcall core 2 pid 400"
      ],
      "Notes": [],
      "FullName": "MonitorVmcallExecution"
    },
    {
      "Name": "!hw_clk",
      "Description": "performs actions related to hwdbg hardware debugging events for each clock cycle.",
      "Syntax": [
        "!hw_clk  [script { Script (string) }]"
      ],
      "Examples": [
        "!hw_clk script { @hw_pin1 = 0; }"
      ],
      "Notes": [],
      "FullName": "HardwareClockDebugging"
    },
    {
      "Name": ".attach",
      "Description": "attaches to debug a thread in VMI Mode.",
      "Syntax": [
        ".attach [pid ProcessId (hex)]"
      ],
      "Examples": [
        ".attach pid b60"
      ],
      "Notes": [],
      "FullName": "AttachDebugThread"
    },
    {
      "Name": ".cls",
      "Description": "clears the screen.",
      "Syntax": [
        ".cls"
      ],
      "Examples": [],
      "Notes": [],
      "FullName": "ClearScreen"
    },
    {
      "Name": ".connect",
      "Description": "connects to a remote or local machine to start debugging.",
      "Syntax": [
        ".connect [local]",
        ".connect [Ip (string)] [Port (decimal)]"
      ],
      "Examples": [
        ".connect local",
        ".connect 192.168.1.5 50000"
      ],
      "Notes": [],
      "FullName": "ConnectToMachine"
    },
    {
      "Name": ".debug",
      "Description": "debugs a target machine or makes this machine a debuggee.",
      "Syntax": [
        ".debug [remote] [serial|namedpipe] [Baudrate (decimal)] [Address (string)]",
        ".debug [prepare] [serial] [Baudrate (decimal)] [Address (string)]",
        ".debug [close]"
      ],
      "Examples": [
        ".debug remote serial 115200 com2",
        ".debug remote namedpipe \\\\\\.\\pipe\\HyperDbgPipe",
        ".debug prepare serial 115200 com1",
        ".debug prepare serial 115200 com2",
        ".debug close"
      ],
      "Notes": [
        "valid baud rates (decimal): 110, 300, 600, 1200, 2400, 4800, 9600, 14400, 19200, 38400, 56000, 57600, 115200, 128000, 256000",
        "valid COM ports: COM1, COM2, COM3, COM4"
      ],
      "FullName": "DebugMachine"
    },
    {
      "Name": ".detach",
      "Description": "detaches from debugging a user-mode process.",
      "Syntax": [
        ".detach"
      ],
      "Examples": [],
      "Notes": [],
      "FullName": "DetachDebugging"
    },
    {
      "Name": ".disconnect",
      "Description": "disconnects from a debugging session (it won't unload the modules).",
      "Syntax": [
        ".disconnect"
      ],
      "Examples": [],
      "Notes": [],
      "FullName": "DisconnectSession"
    },
    {
      "Name": ".dump",
      "Description": "saves memory context into a file.",
      "Syntax": [
        ".dump [FromAddress (hex)] [ToAddress (hex)] [pid ProcessId (hex)] [path Path (string)]"
      ],
      "Examples": [
        ".dump 401000 40b000 path c:\\\\rev\\\\dump1.dmp",
        ".dump 401000 40b000 pid 1c0 path c:\\\\rev\\\\desktop\\\\dump2.dmp",
        ".dump fffff801deadb000 fffff801deade054 path c:\\\\rev\\\\dump3.dmp",
        ".dump fffff801deadb000 fffff801deade054 path c:\\\\rev\\\\dump4.dmp",
        ".dump 00007ff8349f2000 00007ff8349f8000 path c:\\\\rev\\\\dump5.dmp",
        ".dump @rax+@rcx @rax+@rcx+1000 path c:\\\\rev\\\\dump6.dmp",
        "!dump 1000 2100 path c:\\\\rev\\\\dump7.dmp"
      ],
      "Notes": [
        "If you want to dump physical memory then add '!' at the start of the command"
      ],
      "FullName": "SaveMemoryContext"
    }
  ]
}