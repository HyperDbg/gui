package sdk

import (
	"strings"

	"golang.org/x/exp/constraints"
)

// Code generated by GeneratedFile enum - DO NOT EDIT.

type CommandsKind byte

const (
	DebuggingKind CommandsKind = iota
	ExtensionKind
	HwdbgKind
	MetaKind
	InvalidCommandsKind
)

func ConvertInteger2CommandsKind[T constraints.Integer](v T) CommandsKind {
	return CommandsKind(v)
}

func (k CommandsKind) AssertKind(kinds string) CommandsKind {
	for _, kind := range k.Kinds() {
		if strings.ToLower(kinds) == strings.ToLower(kind.String()) {
			return kind
		}
	}
	return InvalidCommandsKind
}

func (k CommandsKind) String() string {
	switch k {
	case DebuggingKind:
		return "Debugging"
	case ExtensionKind:
		return "Extension"
	case HwdbgKind:
		return "Hwdbg"
	case MetaKind:
		return "Meta"
	default:
		return "InvalidCommandsKind"
	}
}

func (k CommandsKind) Keys() []string {
	return []string{
		"Debugging",
		"Extension",
		"Hwdbg",
		"Meta",
	}
}

func (k CommandsKind) Kinds() []CommandsKind {
	return []CommandsKind{
		DebuggingKind,
		ExtensionKind,
		HwdbgKind,
		MetaKind,
	}
}

func (k CommandsKind) SvgFileName() string {
	switch k {
	case DebuggingKind:
		return "Debugging"
	case ExtensionKind:
		return "Extension"
	case HwdbgKind:
		return "Hwdbg"
	case MetaKind:
		return "Meta"
	default:
		return "InvalidCommandsKind"
	}
}
