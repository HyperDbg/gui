package sdk

import (
	"strings"

	"golang.org/x/exp/constraints"
)

// Code generated by GeneratedFile types - DO NOT EDIT.

type CommandsType uint8

const (
	DebuggingType CommandsType = iota
	ExtensionType
	HwdbgType
	MetaType
)

func (t CommandsType) Valid() bool {
	return t >= DebuggingType && t <= MetaType
}

func CommandsTypeBy[T constraints.Integer](v T) CommandsType {
	return CommandsType(v)
}

func (t CommandsType) AssertBy(name string) CommandsType {
	name = strings.TrimSuffix(name, "Type")
	for _, n := range t.EnumTypes() {
		if strings.ToLower(name) == strings.ToLower(n.String()) {
			return n
		}
	}
	panic("InvalidType")
}

func (t CommandsType) String() string {
	switch t {
	case DebuggingType:
		return "Debugging"
	case ExtensionType:
		return "Extension"
	case HwdbgType:
		return "Hwdbg"
	case MetaType:
		return "Meta"
	default:
		panic("InvalidType")
	}
}

func (t CommandsType) Tooltip() string {
	switch t {
	case DebuggingType:
		return "debugging"
	case ExtensionType:
		return "extension"
	case HwdbgType:
		return "hwdbg"
	case MetaType:
		return "meta"
	default:
		panic("InvalidType")
	}
}

func (t CommandsType) Names() []string {
	return []string{
		"Debugging",
		"Extension",
		"Hwdbg",
		"Meta",
	}
}

func (t CommandsType) EnumTypes() []CommandsType {
	return []CommandsType{
		DebuggingType,
		ExtensionType,
		HwdbgType,
		MetaType,
	}
}

func (t CommandsType) SvgFileName() string {
	return t.String() + ".svg"
}
